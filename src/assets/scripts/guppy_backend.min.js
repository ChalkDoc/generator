(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.GuppyBackend = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function e(t,r,a){function n(l,o){if(!r[l]){if(!t[l]){var u=typeof require=="function"&&require;if(!o&&u)return u(l,!0);if(i)return i(l,!0);var s=new Error("Cannot find module '"+l+"'");throw s.code="MODULE_NOT_FOUND",s}var f=r[l]={exports:{}};t[l][0].call(f.exports,function(e){var r=t[l][1][e];return n(r?r:e)},f,f.exports,e,t,r,a)}return r[l].exports}var i=typeof require=="function"&&require;for(var l=0;l<a.length;l++)n(a[l]);return n}({1:[function(e,t,r){"use strict";var a=e("./src/ParseError");var n=h(a);var i=e("./src/Settings");var l=h(i);var o=e("./src/buildTree");var u=h(o);var s=e("./src/parseTree");var f=h(s);var d=e("./src/utils");var c=h(d);function h(e){return e&&e.__esModule?e:{default:e}}var v=function e(t,r,a){c.default.clearNode(r);var n=new l.default(a);var i=(0,f.default)(t,n);var o=(0,u.default)(i,t,n).toNode();r.appendChild(o)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");v=function e(){throw new n.default("KaTeX doesn't work in quirks mode.")}}}var p=function e(t,r){var a=new l.default(r);var n=(0,f.default)(t,a);return(0,u.default)(n,t,a).toMarkup()};var m=function e(t,r){var a=new l.default(r);return(0,f.default)(t,a)};t.exports={render:v,renderToString:p,__parse:m,ParseError:n.default}},{"./src/ParseError":84,"./src/Settings":87,"./src/buildTree":94,"./src/parseTree":115,"./src/utils":121}],2:[function(e,t,r){t.exports={default:e("core-js/library/fn/array/from"),__esModule:true}},{"core-js/library/fn/array/from":12}],3:[function(e,t,r){t.exports={default:e("core-js/library/fn/get-iterator"),__esModule:true}},{"core-js/library/fn/get-iterator":13}],4:[function(e,t,r){t.exports={default:e("core-js/library/fn/is-iterable"),__esModule:true}},{"core-js/library/fn/is-iterable":14}],5:[function(e,t,r){t.exports={default:e("core-js/library/fn/json/stringify"),__esModule:true}},{"core-js/library/fn/json/stringify":15}],6:[function(e,t,r){t.exports={default:e("core-js/library/fn/object/define-property"),__esModule:true}},{"core-js/library/fn/object/define-property":16}],7:[function(e,t,r){t.exports={default:e("core-js/library/fn/object/freeze"),__esModule:true}},{"core-js/library/fn/object/freeze":17}],8:[function(e,t,r){"use strict";r.__esModule=true;r.default=function(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}},{}],9:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/object/define-property");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}r.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||false;a.configurable=true;if("value"in a)a.writable=true;(0,n.default)(e,a.key,a)}}return function(t,r,a){if(r)e(t.prototype,r);if(a)e(t,a);return t}}()},{"../core-js/object/define-property":6}],10:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/is-iterable");var n=o(a);var i=e("../core-js/get-iterator");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}r.default=function(){function e(e,t){var r=[];var a=true;var n=false;var i=undefined;try{for(var o=(0,l.default)(e),u;!(a=(u=o.next()).done);a=true){r.push(u.value);if(t&&r.length===t)break}}catch(e){n=true;i=e}finally{try{if(!a&&o["return"])o["return"]()}finally{if(n)throw i}}return r}return function(t,r){if(Array.isArray(t)){return t}else if((0,n.default)(Object(t))){return e(t,r)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}()},{"../core-js/get-iterator":3,"../core-js/is-iterable":4}],11:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/array/from");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}r.default=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++){r[t]=e[t]}return r}else{return(0,n.default)(e)}}},{"../core-js/array/from":2}],12:[function(e,t,r){e("../../modules/es6.string.iterator");e("../../modules/es6.array.from");t.exports=e("../../modules/_core").Array.from},{"../../modules/_core":24,"../../modules/es6.array.from":73,"../../modules/es6.string.iterator":77}],13:[function(e,t,r){e("../modules/web.dom.iterable");e("../modules/es6.string.iterator");t.exports=e("../modules/core.get-iterator")},{"../modules/core.get-iterator":71,"../modules/es6.string.iterator":77,"../modules/web.dom.iterable":78}],14:[function(e,t,r){e("../modules/web.dom.iterable");e("../modules/es6.string.iterator");t.exports=e("../modules/core.is-iterable")},{"../modules/core.is-iterable":72,"../modules/es6.string.iterator":77,"../modules/web.dom.iterable":78}],15:[function(e,t,r){var a=e("../../modules/_core"),n=a.JSON||(a.JSON={stringify:JSON.stringify});t.exports=function e(t){return n.stringify.apply(n,arguments)}},{"../../modules/_core":24}],16:[function(e,t,r){e("../../modules/es6.object.define-property");var a=e("../../modules/_core").Object;t.exports=function e(t,r,n){return a.defineProperty(t,r,n)}},{"../../modules/_core":24,"../../modules/es6.object.define-property":75}],17:[function(e,t,r){e("../../modules/es6.object.freeze");t.exports=e("../../modules/_core").Object.freeze},{"../../modules/_core":24,"../../modules/es6.object.freeze":76}],18:[function(e,t,r){t.exports=function(e){if(typeof e!="function")throw TypeError(e+" is not a function!");return e}},{}],19:[function(e,t,r){t.exports=function(){}},{}],20:[function(e,t,r){var a=e("./_is-object");t.exports=function(e){if(!a(e))throw TypeError(e+" is not an object!");return e}},{"./_is-object":40}],21:[function(e,t,r){var a=e("./_to-iobject"),n=e("./_to-length"),i=e("./_to-index");t.exports=function(e){return function(t,r,l){var o=a(t),u=n(o.length),s=i(l,u),f;if(e&&r!=r)while(u>s){f=o[s++];if(f!=f)return true}else for(;u>s;s++)if(e||s in o){if(o[s]===r)return e||s||0}return!e&&-1}}},{"./_to-index":62,"./_to-iobject":64,"./_to-length":65}],22:[function(e,t,r){var a=e("./_cof"),n=e("./_wks")("toStringTag"),i=a(function(){return arguments}())=="Arguments";var l=function(e,t){try{return e[t]}catch(e){}};t.exports=function(e){var t,r,o;return e===undefined?"Undefined":e===null?"Null":typeof(r=l(t=Object(e),n))=="string"?r:i?a(t):(o=a(t))=="Object"&&typeof t.callee=="function"?"Arguments":o}},{"./_cof":23,"./_wks":69}],23:[function(e,t,r){var a={}.toString;t.exports=function(e){return a.call(e).slice(8,-1)}},{}],24:[function(e,t,r){var a=t.exports={version:"2.4.0"};if(typeof __e=="number")__e=a},{}],25:[function(e,t,r){"use strict";var a=e("./_object-dp"),n=e("./_property-desc");t.exports=function(e,t,r){if(t in e)a.f(e,t,n(0,r));else e[t]=r}},{"./_object-dp":50,"./_property-desc":56}],26:[function(e,t,r){var a=e("./_a-function");t.exports=function(e,t,r){a(e);if(t===undefined)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,a){return e.call(t,r,a)};case 3:return function(r,a,n){return e.call(t,r,a,n)}}return function(){return e.apply(t,arguments)}}},{"./_a-function":18}],27:[function(e,t,r){t.exports=function(e){if(e==undefined)throw TypeError("Can't call method on  "+e);return e}},{}],28:[function(e,t,r){t.exports=!e("./_fails")(function(){return Object.defineProperty({},"a",{get:function(){return 7}}).a!=7})},{"./_fails":32}],29:[function(e,t,r){var a=e("./_is-object"),n=e("./_global").document,i=a(n)&&a(n.createElement);t.exports=function(e){return i?n.createElement(e):{}}},{"./_global":33,"./_is-object":40}],30:[function(e,t,r){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},{}],31:[function(e,t,r){var a=e("./_global"),n=e("./_core"),i=e("./_ctx"),l=e("./_hide"),o="prototype";var u=function(e,t,r){var s=e&u.F,f=e&u.G,d=e&u.S,c=e&u.P,h=e&u.B,v=e&u.W,p=f?n:n[t]||(n[t]={}),m=p[o],g=f?a:d?a[t]:(a[t]||{})[o],b,y,x;if(f)r=t;for(b in r){y=!s&&g&&g[b]!==undefined;if(y&&b in p)continue;x=y?g[b]:r[b];p[b]=f&&typeof g[b]!="function"?r[b]:h&&y?i(x,a):v&&g[b]==x?function(e){var t=function(t,r,a){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,a)}return e.apply(this,arguments)};t[o]=e[o];return t}(x):c&&typeof x=="function"?i(Function.call,x):x;if(c){(p.virtual||(p.virtual={}))[b]=x;if(e&u.R&&m&&!m[b])l(m,b,x)}}};u.F=1;u.G=2;u.S=4;u.P=8;u.B=16;u.W=32;u.U=64;u.R=128;t.exports=u},{"./_core":24,"./_ctx":26,"./_global":33,"./_hide":35}],32:[function(e,t,r){t.exports=function(e){try{return!!e()}catch(e){return true}}},{}],33:[function(e,t,r){var a=t.exports=typeof window!="undefined"&&window.Math==Math?window:typeof self!="undefined"&&self.Math==Math?self:Function("return this")();if(typeof __g=="number")__g=a},{}],34:[function(e,t,r){var a={}.hasOwnProperty;t.exports=function(e,t){return a.call(e,t)}},{}],35:[function(e,t,r){var a=e("./_object-dp"),n=e("./_property-desc");t.exports=e("./_descriptors")?function(e,t,r){return a.f(e,t,n(1,r))}:function(e,t,r){e[t]=r;return e}},{"./_descriptors":28,"./_object-dp":50,"./_property-desc":56}],36:[function(e,t,r){t.exports=e("./_global").document&&document.documentElement},{"./_global":33}],37:[function(e,t,r){t.exports=!e("./_descriptors")&&!e("./_fails")(function(){return Object.defineProperty(e("./_dom-create")("div"),"a",{get:function(){return 7}}).a!=7})},{"./_descriptors":28,"./_dom-create":29,"./_fails":32}],38:[function(e,t,r){var a=e("./_cof");t.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return a(e)=="String"?e.split(""):Object(e)}},{"./_cof":23}],39:[function(e,t,r){var a=e("./_iterators"),n=e("./_wks")("iterator"),i=Array.prototype;t.exports=function(e){return e!==undefined&&(a.Array===e||i[n]===e)}},{"./_iterators":46,"./_wks":69}],40:[function(e,t,r){t.exports=function(e){return typeof e==="object"?e!==null:typeof e==="function"}},{}],41:[function(e,t,r){var a=e("./_an-object");t.exports=function(e,t,r,n){try{return n?t(a(r)[0],r[1]):t(r)}catch(t){var i=e["return"];if(i!==undefined)a(i.call(e));throw t}}},{"./_an-object":20}],42:[function(e,t,r){"use strict";var a=e("./_object-create"),n=e("./_property-desc"),i=e("./_set-to-string-tag"),l={};e("./_hide")(l,e("./_wks")("iterator"),function(){return this});t.exports=function(e,t,r){e.prototype=a(l,{next:n(1,r)});i(e,t+" Iterator")}},{"./_hide":35,"./_object-create":49,"./_property-desc":56,"./_set-to-string-tag":58,"./_wks":69}],43:[function(e,t,r){"use strict";var a=e("./_library"),n=e("./_export"),i=e("./_redefine"),l=e("./_hide"),o=e("./_has"),u=e("./_iterators"),s=e("./_iter-create"),f=e("./_set-to-string-tag"),d=e("./_object-gpo"),c=e("./_wks")("iterator"),h=!([].keys&&"next"in[].keys()),v="@@iterator",p="keys",m="values";var g=function(){return this};t.exports=function(e,t,r,b,y,x,w){s(r,t,b);var k=function(e){if(!h&&e in z)return z[e];switch(e){case p:return function t(){return new r(this,e)};case m:return function t(){return new r(this,e)}}return function t(){return new r(this,e)}};var M=t+" Iterator",_=y==m,S=false,z=e.prototype,T=z[c]||z[v]||y&&z[y],C=T||k(y),A=y?!_?C:k("entries"):undefined,N=t=="Array"?z.entries||T:T,O,j,L;if(N){L=d(N.call(new e));if(L!==Object.prototype){f(L,M,true);if(!a&&!o(L,c))l(L,c,g)}}if(_&&T&&T.name!==m){S=true;C=function e(){return T.call(this)}}if((!a||w)&&(h||S||!z[c])){l(z,c,C)}u[t]=C;u[M]=g;if(y){O={values:_?C:k(m),keys:x?C:k(p),entries:A};if(w)for(j in O){if(!(j in z))i(z,j,O[j])}else n(n.P+n.F*(h||S),t,O)}return O}},{"./_export":31,"./_has":34,"./_hide":35,"./_iter-create":42,"./_iterators":46,"./_library":47,"./_object-gpo":52,"./_redefine":57,"./_set-to-string-tag":58,"./_wks":69}],44:[function(e,t,r){var a=e("./_wks")("iterator"),n=false;try{var i=[7][a]();i["return"]=function(){n=true};Array.from(i,function(){throw 2})}catch(e){}t.exports=function(e,t){if(!t&&!n)return false;var r=false;try{var i=[7],l=i[a]();l.next=function(){return{done:r=true}};i[a]=function(){return l};e(i)}catch(e){}return r}},{"./_wks":69}],45:[function(e,t,r){t.exports=function(e,t){return{value:t,done:!!e}}},{}],46:[function(e,t,r){t.exports={}},{}],47:[function(e,t,r){t.exports=true},{}],48:[function(e,t,r){var a=e("./_uid")("meta"),n=e("./_is-object"),i=e("./_has"),l=e("./_object-dp").f,o=0;var u=Object.isExtensible||function(){return true};var s=!e("./_fails")(function(){return u(Object.preventExtensions({}))});var f=function(e){l(e,a,{value:{i:"O"+ ++o,w:{}}})};var d=function(e,t){if(!n(e))return typeof e=="symbol"?e:(typeof e=="string"?"S":"P")+e;if(!i(e,a)){if(!u(e))return"F";if(!t)return"E";f(e)}return e[a].i};var c=function(e,t){if(!i(e,a)){if(!u(e))return true;if(!t)return false;f(e)}return e[a].w};var h=function(e){if(s&&v.NEED&&u(e)&&!i(e,a))f(e);return e};var v=t.exports={KEY:a,NEED:false,fastKey:d,getWeak:c,onFreeze:h}},{"./_fails":32,"./_has":34,"./_is-object":40,"./_object-dp":50,"./_uid":68}],49:[function(e,t,r){var a=e("./_an-object"),n=e("./_object-dps"),i=e("./_enum-bug-keys"),l=e("./_shared-key")("IE_PROTO"),o=function(){},u="prototype";var s=function(){var t=e("./_dom-create")("iframe"),r=i.length,a="<",n=">",l;t.style.display="none";e("./_html").appendChild(t);t.src="javascript:";l=t.contentWindow.document;l.open();l.write(a+"script"+n+"document.F=Object"+a+"/script"+n);l.close();s=l.F;while(r--)delete s[u][i[r]];return s()};t.exports=Object.create||function e(t,r){var i;if(t!==null){o[u]=a(t);i=new o;o[u]=null;i[l]=t}else i=s();return r===undefined?i:n(i,r)}},{"./_an-object":20,"./_dom-create":29,"./_enum-bug-keys":30,"./_html":36,"./_object-dps":51,"./_shared-key":59}],50:[function(e,t,r){var a=e("./_an-object"),n=e("./_ie8-dom-define"),i=e("./_to-primitive"),l=Object.defineProperty;r.f=e("./_descriptors")?Object.defineProperty:function e(t,r,o){a(t);r=i(r,true);a(o);if(n)try{return l(t,r,o)}catch(e){}if("get"in o||"set"in o)throw TypeError("Accessors not supported!");if("value"in o)t[r]=o.value;return t}},{"./_an-object":20,"./_descriptors":28,"./_ie8-dom-define":37,"./_to-primitive":67}],51:[function(e,t,r){var a=e("./_object-dp"),n=e("./_an-object"),i=e("./_object-keys");t.exports=e("./_descriptors")?Object.defineProperties:function e(t,r){n(t);var l=i(r),o=l.length,u=0,s;while(o>u)a.f(t,s=l[u++],r[s]);return t}},{"./_an-object":20,"./_descriptors":28,"./_object-dp":50,"./_object-keys":54}],52:[function(e,t,r){var a=e("./_has"),n=e("./_to-object"),i=e("./_shared-key")("IE_PROTO"),l=Object.prototype;t.exports=Object.getPrototypeOf||function(e){e=n(e);if(a(e,i))return e[i];if(typeof e.constructor=="function"&&e instanceof e.constructor){return e.constructor.prototype}return e instanceof Object?l:null}},{"./_has":34,"./_shared-key":59,"./_to-object":66}],53:[function(e,t,r){var a=e("./_has"),n=e("./_to-iobject"),i=e("./_array-includes")(false),l=e("./_shared-key")("IE_PROTO");t.exports=function(e,t){var r=n(e),o=0,u=[],s;for(s in r)if(s!=l)a(r,s)&&u.push(s);while(t.length>o)if(a(r,s=t[o++])){~i(u,s)||u.push(s)}return u}},{"./_array-includes":21,"./_has":34,"./_shared-key":59,"./_to-iobject":64}],54:[function(e,t,r){var a=e("./_object-keys-internal"),n=e("./_enum-bug-keys");t.exports=Object.keys||function e(t){return a(t,n)}},{"./_enum-bug-keys":30,"./_object-keys-internal":53}],55:[function(e,t,r){var a=e("./_export"),n=e("./_core"),i=e("./_fails");t.exports=function(e,t){var r=(n.Object||{})[e]||Object[e],l={};l[e]=t(r);a(a.S+a.F*i(function(){r(1)}),"Object",l)}},{"./_core":24,"./_export":31,"./_fails":32}],56:[function(e,t,r){t.exports=function(e,t){return{enumerable:!(e&1),configurable:!(e&2),writable:!(e&4),value:t}}},{}],57:[function(e,t,r){t.exports=e("./_hide")},{"./_hide":35}],58:[function(e,t,r){var a=e("./_object-dp").f,n=e("./_has"),i=e("./_wks")("toStringTag");t.exports=function(e,t,r){if(e&&!n(e=r?e:e.prototype,i))a(e,i,{configurable:true,value:t})}},{"./_has":34,"./_object-dp":50,"./_wks":69}],59:[function(e,t,r){var a=e("./_shared")("keys"),n=e("./_uid");t.exports=function(e){return a[e]||(a[e]=n(e))}},{"./_shared":60,"./_uid":68}],60:[function(e,t,r){var a=e("./_global"),n="__core-js_shared__",i=a[n]||(a[n]={});t.exports=function(e){return i[e]||(i[e]={})}},{"./_global":33}],61:[function(e,t,r){var a=e("./_to-integer"),n=e("./_defined");t.exports=function(e){return function(t,r){var i=String(n(t)),l=a(r),o=i.length,u,s;if(l<0||l>=o)return e?"":undefined;u=i.charCodeAt(l);return u<55296||u>56319||l+1===o||(s=i.charCodeAt(l+1))<56320||s>57343?e?i.charAt(l):u:e?i.slice(l,l+2):(u-55296<<10)+(s-56320)+65536}}},{"./_defined":27,"./_to-integer":63}],62:[function(e,t,r){var a=e("./_to-integer"),n=Math.max,i=Math.min;t.exports=function(e,t){e=a(e);return e<0?n(e+t,0):i(e,t)}},{"./_to-integer":63}],63:[function(e,t,r){var a=Math.ceil,n=Math.floor;t.exports=function(e){return isNaN(e=+e)?0:(e>0?n:a)(e)}},{}],64:[function(e,t,r){var a=e("./_iobject"),n=e("./_defined");t.exports=function(e){return a(n(e))}},{"./_defined":27,"./_iobject":38}],65:[function(e,t,r){var a=e("./_to-integer"),n=Math.min;t.exports=function(e){return e>0?n(a(e),9007199254740991):0}},{"./_to-integer":63}],66:[function(e,t,r){var a=e("./_defined");t.exports=function(e){return Object(a(e))}},{"./_defined":27}],67:[function(e,t,r){var a=e("./_is-object");t.exports=function(e,t){if(!a(e))return e;var r,n;if(t&&typeof(r=e.toString)=="function"&&!a(n=r.call(e)))return n;if(typeof(r=e.valueOf)=="function"&&!a(n=r.call(e)))return n;if(!t&&typeof(r=e.toString)=="function"&&!a(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")}},{"./_is-object":40}],68:[function(e,t,r){var a=0,n=Math.random();t.exports=function(e){return"Symbol(".concat(e===undefined?"":e,")_",(++a+n).toString(36))}},{}],69:[function(e,t,r){var a=e("./_shared")("wks"),n=e("./_uid"),i=e("./_global").Symbol,l=typeof i=="function";var o=t.exports=function(e){return a[e]||(a[e]=l&&i[e]||(l?i:n)("Symbol."+e))};o.store=a},{"./_global":33,"./_shared":60,"./_uid":68}],70:[function(e,t,r){var a=e("./_classof"),n=e("./_wks")("iterator"),i=e("./_iterators");t.exports=e("./_core").getIteratorMethod=function(e){if(e!=undefined)return e[n]||e["@@iterator"]||i[a(e)]}},{"./_classof":22,"./_core":24,"./_iterators":46,"./_wks":69}],71:[function(e,t,r){var a=e("./_an-object"),n=e("./core.get-iterator-method");t.exports=e("./_core").getIterator=function(e){var t=n(e);if(typeof t!="function")throw TypeError(e+" is not iterable!");return a(t.call(e))}},{"./_an-object":20,"./_core":24,"./core.get-iterator-method":70}],72:[function(e,t,r){var a=e("./_classof"),n=e("./_wks")("iterator"),i=e("./_iterators");t.exports=e("./_core").isIterable=function(e){var t=Object(e);return t[n]!==undefined||"@@iterator"in t||i.hasOwnProperty(a(t))}},{"./_classof":22,"./_core":24,"./_iterators":46,"./_wks":69}],73:[function(e,t,r){"use strict";var a=e("./_ctx"),n=e("./_export"),i=e("./_to-object"),l=e("./_iter-call"),o=e("./_is-array-iter"),u=e("./_to-length"),s=e("./_create-property"),f=e("./core.get-iterator-method");n(n.S+n.F*!e("./_iter-detect")(function(e){Array.from(e)}),"Array",{from:function e(t){var r=i(t),n=typeof this=="function"?this:Array,d=arguments.length,c=d>1?arguments[1]:undefined,h=c!==undefined,v=0,p=f(r),m,g,b,y;if(h)c=a(c,d>2?arguments[2]:undefined,2);if(p!=undefined&&!(n==Array&&o(p))){for(y=p.call(r),g=new n;!(b=y.next()).done;v++){s(g,v,h?l(y,c,[b.value,v],true):b.value)}}else{m=u(r.length);for(g=new n(m);m>v;v++){s(g,v,h?c(r[v],v):r[v])}}g.length=v;return g}})},{"./_create-property":25,"./_ctx":26,"./_export":31,"./_is-array-iter":39,"./_iter-call":41,"./_iter-detect":44,"./_to-length":65,"./_to-object":66,"./core.get-iterator-method":70}],74:[function(e,t,r){"use strict";var a=e("./_add-to-unscopables"),n=e("./_iter-step"),i=e("./_iterators"),l=e("./_to-iobject");t.exports=e("./_iter-define")(Array,"Array",function(e,t){this._t=l(e);this._i=0;this._k=t},function(){var e=this._t,t=this._k,r=this._i++;if(!e||r>=e.length){this._t=undefined;return n(1)}if(t=="keys")return n(0,r);if(t=="values")return n(0,e[r]);return n(0,[r,e[r]])},"values");i.Arguments=i.Array;a("keys");a("values");a("entries")},{"./_add-to-unscopables":19,"./_iter-define":43,"./_iter-step":45,"./_iterators":46,"./_to-iobject":64}],75:[function(e,t,r){var a=e("./_export");a(a.S+a.F*!e("./_descriptors"),"Object",{defineProperty:e("./_object-dp").f})},{"./_descriptors":28,"./_export":31,"./_object-dp":50}],76:[function(e,t,r){var a=e("./_is-object"),n=e("./_meta").onFreeze;e("./_object-sap")("freeze",function(e){return function t(r){return e&&a(r)?e(n(r)):r}})},{"./_is-object":40,"./_meta":48,"./_object-sap":55}],77:[function(e,t,r){"use strict";var a=e("./_string-at")(true);e("./_iter-define")(String,"String",function(e){this._t=String(e);this._i=0},function(){var e=this._t,t=this._i,r;if(t>=e.length)return{value:undefined,done:true};r=a(e,t);this._i+=r.length;return{value:r,done:false}})},{"./_iter-define":43,"./_string-at":61}],78:[function(e,t,r){e("./es6.array.iterator");var a=e("./_global"),n=e("./_hide"),i=e("./_iterators"),l=e("./_wks")("toStringTag");for(var o=["NodeList","DOMTokenList","MediaList","StyleSheetList","CSSRuleList"],u=0;u<5;u++){var s=o[u],f=a[s],d=f&&f.prototype;if(d&&!d[l])n(d,l,s);i[s]=i.Array}},{"./_global":33,"./_hide":35,"./_iterators":46,"./_wks":69,"./es6.array.iterator":74}],79:[function(e,t,r){function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function n(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var n=a(e);n.lastIndex=r;var i=n.exec(t);if(i[i.length-1]==null){i.length=i.length-1;return i}else{return null}}t.exports=n},{}],80:[function(e,t,r){"use strict";var a=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty;var i=Object.prototype.propertyIsEnumerable;function l(e){if(e===null||e===undefined){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(e)}function o(){try{if(!Object.assign){return false}var e=new String("abc");e[5]="de";if(Object.getOwnPropertyNames(e)[0]==="5"){return false}var t={};for(var r=0;r<10;r++){t["_"+String.fromCharCode(r)]=r}var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(a.join("")!=="0123456789"){return false}var n={};"abcdefghijklmnopqrst".split("").forEach(function(e){n[e]=e});if(Object.keys(Object.assign({},n)).join("")!=="abcdefghijklmnopqrst"){return false}return true}catch(e){return false}}t.exports=o()?Object.assign:function(e,t){var r;var o=l(e);var u;for(var s=1;s<arguments.length;s++){r=Object(arguments[s]);for(var f in r){if(n.call(r,f)){o[f]=r[f]}}if(a){u=a(r);for(var d=0;d<u.length;d++){if(i.call(r,u[d])){o[u[d]]=r[u[d]]}}}}return o}},{}],81:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.controlWordRegex=undefined;var a=e("babel-runtime/helpers/classCallCheck");var n=v(a);var i=e("babel-runtime/helpers/createClass");var l=v(i);var o=e("match-at");var u=v(o);var s=e("./ParseError");var f=v(s);var d=e("./SourceLocation");var c=v(d);var h=e("./Token");function v(e){return e&&e.__esModule?e:{default:e}}var p="%[^\n]*[\n]";var m="\\\\[a-zA-Z@]+";var g="\\\\[^\ud800-\udfff]";var b=new RegExp("([ \r\n\t]+)|"+("("+p+"|")+"[!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\verb\\*([^]).*?\\3"+"|\\\\verb([^*a-zA-Z]).*?\\4"+("|"+m)+("|"+g)+")");var y=r.controlWordRegex=new RegExp("^"+m);var x=new RegExp("^"+p);var w=function(){function e(t){(0,n.default)(this,e);this.input=t;this.pos=0}(0,l.default)(e,[{key:"lex",value:function e(){var t=this.input;var r=this.pos;if(r===t.length){return new h.Token("EOF",new c.default(this,r,r))}var a=(0,u.default)(b,t,r);if(a===null){throw new f.default("Unexpected character: '"+t[r]+"'",new h.Token(t[r],new c.default(this,r,r+1)))}var n=a[2]||" ";var i=this.pos;this.pos+=a[0].length;var l=this.pos;if(x.test(n)){return this.lex()}else{return new h.Token(n,new c.default(this,i,l))}}}]);return e}();r.default=w},{"./ParseError":84,"./SourceLocation":88,"./Token":90,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"match-at":79}],82:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/toConsumableArray");var n=b(a);var i=e("babel-runtime/helpers/classCallCheck");var l=b(i);var o=e("babel-runtime/helpers/createClass");var u=b(o);var s=e("./Lexer");var f=b(s);var d=e("./Token");var c=e("./macros");var h=b(c);var v=e("./ParseError");var p=b(v);var m=e("object-assign");var g=b(m);function b(e){return e&&e.__esModule?e:{default:e}}var y=function(){function e(t,r){(0,l.default)(this,e);this.lexer=new f.default(t);this.macros=(0,g.default)({},h.default,r);this.stack=[]}(0,u.default)(e,[{key:"future",value:function e(){if(this.stack.length===0){this.pushToken(this.lexer.lex())}return this.stack[this.stack.length-1]}},{key:"popToken",value:function e(){this.future();return this.stack.pop()}},{key:"consumeSpaces",value:function e(){for(;;){var t=this.future();if(t.text===" "){this.stack.pop()}else{break}}}},{key:"expandOnce",value:function e(){var t;var r=this.popToken();var a=r.text;var i=a.charAt(0)==="\\";if(i&&s.controlWordRegex.test(a)){this.consumeSpaces()}if(!(i&&this.macros.hasOwnProperty(a))){this.pushToken(r);return r}var l=this._getExpansion(a),o=l.tokens,u=l.numArgs;var f=o;if(u){var d=[];for(var c=0;c<u;++c){this.consumeSpaces();var h=this.popToken();if(h.text==="{"){var v=[];var m=1;while(m!==0){var g=this.popToken();v.push(g);if(g.text==="{"){++m}else if(g.text==="}"){--m}else if(g.text==="EOF"){throw new p.default("End of input in macro argument",h)}}v.pop();v.reverse();d[c]=v}else if(h.text==="EOF"){throw new p.default("End of input expecting macro argument",r)}else{d[c]=[h]}}f=f.slice();for(var b=f.length-1;b>=0;--b){var y=f[b];if(y.text==="#"){if(b===0){throw new p.default("Incomplete placeholder at end of macro body",y)}y=f[--b];if(y.text==="#"){f.splice(b+1,1)}else if(/^[1-9]$/.test(y.text)){var x;(x=f).splice.apply(x,[b,2].concat((0,n.default)(d[+y.text-1])))}else{throw new p.default("Not a valid argument number",y)}}}}(t=this.stack).push.apply(t,(0,n.default)(f));return f}},{key:"expandAfterFuture",value:function e(){this.expandOnce();return this.future()}},{key:"expandNextToken",value:function e(){for(;;){var t=this.expandOnce();if(t instanceof d.Token){if(t.text==="\\relax"){this.stack.pop()}else{return this.stack.pop()}}}throw new Error}},{key:"_getExpansion",value:function e(t){var r=this.macros[t];var a=typeof r==="function"?r(this):r;if(typeof a==="string"){var n=0;if(a.indexOf("#")!==-1){var i=a.replace(/##/g,"");while(i.indexOf("#"+(n+1))!==-1){++n}}var l=new f.default(a);var o=[];var u=l.lex();while(u.text!=="EOF"){o.push(u);u=l.lex()}o.reverse();var s={tokens:o,numArgs:n};if(typeof r!=="function"){this.macros[t]=s}return s}return a}},{key:"pushToken",value:function e(t){this.stack.push(t)}}]);return e}();r.default=y},{"./Lexer":81,"./ParseError":84,"./Token":90,"./macros":113,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"babel-runtime/helpers/toConsumableArray":11,"object-assign":80}],83:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=s(a);var i=e("babel-runtime/helpers/createClass");var l=s(i);var o=e("./fontMetrics");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var d=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];var c=function e(t,r){return r.size<2?t:f[t-1][r.size-1]};var h=function(){function e(t){(0,n.default)(this,e);this.style=t.style;this.color=t.color;this.size=t.size||e.BASESIZE;this.textSize=t.textSize||this.size;this.phantom=!!t.phantom;this.font=t.font;this.sizeMultiplier=d[this.size-1];this.maxSize=t.maxSize;this._fontMetrics=undefined}(0,l.default)(e,[{key:"extend",value:function t(r){var a={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,maxSize:this.maxSize};for(var n in r){if(r.hasOwnProperty(n)){a[n]=r[n]}}return new e(a)}},{key:"havingStyle",value:function e(t){if(this.style===t){return this}else{return this.extend({style:t,size:c(this.textSize,t)})}}},{key:"havingCrampedStyle",value:function e(){return this.havingStyle(this.style.cramp())}},{key:"havingSize",value:function e(t){if(this.size===t&&this.textSize===t){return this}else{return this.extend({style:this.style.text(),size:t,textSize:t})}}},{key:"havingBaseStyle",value:function t(r){r=r||this.style.text();var a=c(e.BASESIZE,r);if(this.size===a&&this.textSize===e.BASESIZE&&this.style===r){return this}else{return this.extend({style:r,size:a})}}},{key:"withColor",value:function e(t){return this.extend({color:t})}},{key:"withPhantom",value:function e(){return this.extend({phantom:true})}},{key:"withFont",value:function e(t){return this.extend({font:t||this.font})}},{key:"sizingClasses",value:function e(t){if(t.size!==this.size){return["sizing","reset-size"+t.size,"size"+this.size]}else{return[]}}},{key:"baseSizingClasses",value:function t(){if(this.size!==e.BASESIZE){return["sizing","reset-size"+this.size,"size"+e.BASESIZE]}else{return[]}}},{key:"fontMetrics",value:function e(){if(!this._fontMetrics){this._fontMetrics=u.default.getFontMetrics(this.size)}return this._fontMetrics}},{key:"getColor",value:function t(){if(this.phantom){return"transparent"}else if(this.color!=null&&e.colorMap.hasOwnProperty(this.color)){return e.colorMap[this.color]}else{return this.color}}}]);return e}();h.BASESIZE=6;h.colorMap={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};r.default=h},{"./fontMetrics":101,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],84:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=u(a);var i=e("./ParseNode");var l=u(i);var o=e("./Token");function u(e){return e&&e.__esModule?e:{default:e}}var s=function e(t,r){(0,n.default)(this,e);var a="KaTeX parse error: "+t;var i=void 0;var l=r&&r.loc;if(l&&l.start<=l.end){var o=l.lexer.input;i=l.start;var u=l.end;if(i===o.length){
a+=" at end of input: "}else{a+=" at position "+(i+1)+": "}var s=o.slice(i,u).replace(/[^]/g,"$&\u0332");var f=void 0;if(i>15){f="\u2026"+o.slice(i-15,i)}else{f=o.slice(0,i)}var d=void 0;if(u+15<o.length){d=o.slice(u,u+15)+"\u2026"}else{d=o.slice(u)}a+=f+s+d}var c=new Error(a);c.name="ParseError";c.__proto__=e.prototype;c.position=i;return c};s.prototype.__proto__=Error.prototype;r.default=s},{"./ParseNode":85,"./Token":90,"babel-runtime/helpers/classCallCheck":8}],85:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=u(a);var i=e("./Token");var l=e("./SourceLocation");var o=u(l);function u(e){return e&&e.__esModule?e:{default:e}}var s=function e(t,r,a,i,l){(0,n.default)(this,e);this.type=t;this.value=r;this.mode=a;this.loc=o.default.range(i,l)};r.default=s},{"./SourceLocation":88,"./Token":90,"babel-runtime/helpers/classCallCheck":8}],86:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=M(a);var i=e("babel-runtime/helpers/createClass");var l=M(i);var o=e("./functions");var u=M(o);var s=e("./environments");var f=M(s);var d=e("./MacroExpander");var c=M(d);var h=e("./symbols");var v=M(h);var p=e("./utils");var m=M(p);var g=e("./units");var b=e("./unicodeRegexes");var y=e("./ParseNode");var x=M(y);var w=e("./ParseError");var k=M(w);function M(e){return e&&e.__esModule?e:{default:e}}function _(e,t){return{type:"arg",result:e,token:t}}function S(e){return{type:"fn",result:e.text,token:e}}function z(e){return{type:"$",result:"$",token:e}}function T(e){if(e.type==="$"){throw new k.default("Unexpected $",e.token)}return e}var C=function(){function e(t,r){(0,n.default)(this,e);this.gullet=new c.default(t,r.macros);if(r.colorIsTextColor){this.gullet.macros["\\color"]="\\textcolor"}this.settings=r;this.leftrightDepth=0}(0,l.default)(e,[{key:"expect",value:function e(t,r){if(this.nextToken.text!==t){throw new k.default("Expected '"+t+"', got '"+this.nextToken.text+"'",this.nextToken)}if(r!==false){this.consume()}}},{key:"consume",value:function e(){this.nextToken=this.gullet.expandNextToken()}},{key:"switchMode",value:function e(t){this.mode=t}},{key:"parse",value:function e(){this.mode="math";this.consume();var e=this.parseInput();return e}},{key:"parseInput",value:function e(){var t=this.parseExpression(false);this.expect("EOF",false);return t}},{key:"parseExpression",value:function t(r,a){var n=[];while(true){if(this.mode==="math"){this.consumeSpaces()}var i=this.nextToken;if(e.endOfExpression.indexOf(i.text)!==-1){break}if(a&&i.text===a){break}if(r&&u.default[i.text]&&u.default[i.text].infix){break}var l=this.parseAtom(a);if(!l){if(!this.settings.throwOnError&&i.text[0]==="\\"){var o=this.handleUnsupportedCmd();n.push(o);continue}break}n.push(l)}return this.handleInfixNodes(n)}},{key:"handleInfixNodes",value:function e(t){var r=-1;var a=void 0;for(var n=0;n<t.length;n++){var i=t[n];if(i.type==="infix"){if(r!==-1){throw new k.default("only one infix operator per group",i.value.token)}r=n;a=i.value.replaceWith}}if(r!==-1){var l=void 0;var o=void 0;var u=t.slice(0,r);var s=t.slice(r+1);if(u.length===1&&u[0].type==="ordgroup"){l=u[0]}else{l=new x.default("ordgroup",u,this.mode)}if(s.length===1&&s[0].type==="ordgroup"){o=s[0]}else{o=new x.default("ordgroup",s,this.mode)}var f=this.callFunction(a,[l,o],[]);return[new x.default(f.type,f,this.mode)]}else{return t}}},{key:"handleSupSubscript",value:function t(r){var a=this.nextToken;var n=a.text;this.consume();this.consumeSpaces();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new k.default("Expected group after '"+n+"'",a)}}var l=T(i);if(l.type==="fn"){var o=u.default[i.result].greediness;if(o>e.SUPSUB_GREEDINESS){return this.parseGivenFunction(i)}else{throw new k.default("Got function '"+i.result+"' with no arguments "+"as "+r,a)}}else{return i.result}}},{key:"handleUnsupportedCmd",value:function e(){var t=this.nextToken.text;var r=[];for(var a=0;a<t.length;a++){r.push(new x.default("textord",t[a],"text"))}var n=new x.default("text",{body:r,type:"text"},this.mode);var i=new x.default("color",{color:this.settings.errorColor,value:[n],type:"color"},this.mode);this.consume();return i}},{key:"parseAtom",value:function e(t){var r=this.parseImplicitGroup(t);if(this.mode==="text"){return r}var a=void 0;var n=void 0;while(true){this.consumeSpaces();var i=this.nextToken;if(i.text==="\\limits"||i.text==="\\nolimits"){if(!r||r.type!=="op"){throw new k.default("Limit controls must follow a math operator",i)}else{var l=i.text==="\\limits";r.value.limits=l;r.value.alwaysHandleSupSub=true}this.consume()}else if(i.text==="^"){if(a){throw new k.default("Double superscript",i)}a=this.handleSupSubscript("superscript")}else if(i.text==="_"){if(n){throw new k.default("Double subscript",i)}n=this.handleSupSubscript("subscript")}else if(i.text==="'"){if(a){throw new k.default("Double superscript",i)}var o=new x.default("textord","\\prime",this.mode);var u=[o];this.consume();while(this.nextToken.text==="'"){u.push(o);this.consume()}if(this.nextToken.text==="^"){u.push(this.handleSupSubscript("superscript"))}a=new x.default("ordgroup",u,this.mode)}else{break}}if(a||n){return new x.default("supsub",{base:r,sup:a,sub:n},this.mode)}else{return r}}},{key:"parseImplicitGroup",value:function t(r){var a=this.parseSymbol();if(a==null){return this.parseFunction()}var n=a.result;if(n==="\\left"){var i=this.parseGivenFunction(a);++this.leftrightDepth;var l=this.parseExpression(false);--this.leftrightDepth;this.expect("\\right",false);var o=this.parseFunction();return new x.default("leftright",{body:l,left:i.value.value,right:o.value.value},this.mode)}else if(n==="\\begin"){var u=this.parseGivenFunction(a);var s=u.value.name;if(!f.default.has(s)){throw new k.default("No such environment: "+s,u.value.nameGroup)}var d=f.default.get(s);var c=this.parseArguments("\\begin{"+s+"}",d),h=c.args,v=c.optArgs;var p={mode:this.mode,envName:s,parser:this};var g=d.handler(p,h,v);this.expect("\\end",false);var b=this.nextToken;var y=this.parseFunction();if(y.value.name!==s){throw new k.default("Mismatch: \\begin{"+s+"} matched "+"by \\end{"+y.value.name+"}",b)}g.position=y.position;return g}else if(m.default.contains(e.sizeFuncs,n)){this.consumeSpaces();var w=this.parseExpression(false,r);return new x.default("sizing",{size:m.default.indexOf(e.sizeFuncs,n)+1,value:w},this.mode)}else if(m.default.contains(e.styleFuncs,n)){this.consumeSpaces();var M=this.parseExpression(true,r);return new x.default("styling",{style:n.slice(1,n.length-5),value:M},this.mode)}else if(n in e.oldFontFuncs){var _=e.oldFontFuncs[n];this.consumeSpaces();var S=this.parseExpression(true,r);if(_.slice(0,4)==="text"){return new x.default("text",{style:_,body:new x.default("ordgroup",S,this.mode)},this.mode)}else{return new x.default("font",{font:_,body:new x.default("ordgroup",S,this.mode)},this.mode)}}else if(n==="\\color"){var z=this.parseColorGroup(false);if(!z){throw new k.default("\\color not followed by color")}var T=this.parseExpression(true,r);return new x.default("color",{type:"color",color:z.result.value,value:T},this.mode)}else if(n==="$"){if(this.mode==="math"){throw new k.default("$ within math mode")}this.consume();var C=this.mode;this.switchMode("math");var A=this.parseExpression(false,"$");this.expect("$",true);this.switchMode(C);return new x.default("styling",{style:"text",value:A},"math")}else{return this.parseGivenFunction(a)}}},{key:"parseFunction",value:function e(){var t=this.parseGroup();return t?this.parseGivenFunction(t):null}},{key:"parseGivenFunction",value:function e(t){t=T(t);if(t.type==="fn"){var r=t.result;var a=u.default[r];if(this.mode==="text"&&!a.allowedInText){throw new k.default("Can't use function '"+r+"' in text mode",t.token)}else if(this.mode==="math"&&a.allowedInMath===false){throw new k.default("Can't use function '"+r+"' in math mode",t.token)}var n=this.parseArguments(r,a),i=n.args,l=n.optArgs;var o=t.token;var s=this.callFunction(r,i,l,o);return new x.default(s.type,s,this.mode)}else{return t.result}}},{key:"callFunction",value:function e(t,r,a,n){var i={funcName:t,parser:this,token:n};return u.default[t].handler(i,r,a)}},{key:"parseArguments",value:function e(t,r){var a=r.numArgs+r.numOptionalArgs;if(a===0){return{args:[],optArgs:[]}}var n=r.greediness;var i=[];var l=[];for(var o=0;o<a;o++){var s=r.argTypes&&r.argTypes[o];var f=o<r.numOptionalArgs;if(o>0&&!f){this.consumeSpaces()}if(o===0&&!f&&this.mode==="math"){this.consumeSpaces()}var d=this.nextToken;var c=s?this.parseGroupOfType(s,f):this.parseGroup(f);if(!c){if(f){l.push(null);continue}if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){c=_(this.handleUnsupportedCmd(),d)}else{throw new k.default("Expected group after '"+t+"'",d)}}var h=void 0;c=T(c);if(c.type==="fn"){var v=u.default[c.result].greediness;if(v>n){h=this.parseGivenFunction(c)}else{throw new k.default("Got function '"+c.result+"' as "+"argument to '"+t+"'",d)}}else{h=c.result}(f?l:i).push(h)}return{args:i,optArgs:l}}},{key:"parseGroupOfType",value:function e(t,r){var a=this.mode;if(t==="original"){t=a}if(t==="color"){return this.parseColorGroup(r)}if(t==="size"){return this.parseSizeGroup(r)}if(t==="string"){var n=this.parseStringGroup("string",r);return new _(n.text,false)}this.switchMode(t);var i=this.parseGroup(r);this.switchMode(a);return i}},{key:"consumeSpaces",value:function e(){while(this.nextToken.text===" "){this.consume()}}},{key:"parseStringGroup",value:function e(t,r){if(r&&this.nextToken.text!=="["){return null}var a=this.mode;this.mode="text";this.expect(r?"[":"{");var n="";var i=this.nextToken;var l=i;while(this.nextToken.text!==(r?"]":"}")){if(this.nextToken.text==="EOF"){throw new k.default("Unexpected end of input in "+t,i.range(this.nextToken,n))}l=this.nextToken;n+=l.text;this.consume()}this.mode=a;this.expect(r?"]":"}");return i.range(l,n)}},{key:"parseRegexGroup",value:function e(t,r){var a=this.mode;this.mode="text";var n=this.nextToken;var i=n;var l="";while(this.nextToken.text!=="EOF"&&t.test(l+this.nextToken.text)){i=this.nextToken;l+=i.text;this.consume()}if(l===""){throw new k.default("Invalid "+r+": '"+n.text+"'",n)}this.mode=a;return n.range(i,l)}},{key:"parseColorGroup",value:function e(t){var r=this.parseStringGroup("color",t);if(!r){return null}var a=/^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(r.text);if(!a){throw new k.default("Invalid color: '"+r.text+"'",r)}return _(new x.default("color",a[0],this.mode),r)}},{key:"parseSizeGroup",value:function e(t){var r=void 0;if(!t&&this.nextToken.text!=="{"){r=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{r=this.parseStringGroup("size",t)}if(!r){return null}var a=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(r.text);if(!a){throw new k.default("Invalid size: '"+r.text+"'",r)}var n={number:+(a[1]+a[2]),unit:a[3]};if(!(0,g.validUnit)(n)){throw new k.default("Invalid unit: '"+n.unit+"'",r)}return _(new x.default("size",n,this.mode),r)}},{key:"parseGroup",value:function e(t){var r=this.nextToken;if(this.nextToken.text===(t?"[":"{")){this.consume();var a=this.parseExpression(false,t?"]":"}");var n=this.nextToken;this.expect(t?"]":"}");if(this.mode==="text"){this.formLigatures(a)}return _(new x.default("ordgroup",a,this.mode,r,n),r.range(n,r.text))}else{return t?null:this.parseSymbol()}}},{key:"formLigatures",value:function e(t){var r=t.length-1;for(var a=0;a<r;++a){var n=t[a];var i=n.value;if(i==="-"&&t[a+1].value==="-"){if(a+1<r&&t[a+2].value==="-"){t.splice(a,3,new x.default("textord","---","text",n,t[a+2]));r-=2}else{t.splice(a,2,new x.default("textord","--","text",n,t[a+1]));r-=1}}if((i==="'"||i==="`")&&t[a+1].value===i){t.splice(a,2,new x.default("textord",i+i,"text",n,t[a+1]));r-=1}}}},{key:"parseSymbol",value:function e(){var t=this.nextToken;if(u.default[t.text]){this.consume();return S(t)}else if(v.default[this.mode][t.text]){this.consume();return _(new x.default(v.default[this.mode][t.text].group,t.text,this.mode,t),t)}else if(this.mode==="text"&&b.cjkRegex.test(t.text)){this.consume();return _(new x.default("textord",t.text,this.mode,t),t)}else if(t.text==="$"){return z(t)}else if(/^\\verb[^a-zA-Z]/.test(t.text)){this.consume();var r=t.text.slice(5);var a=r.charAt(0)==="*";if(a){r=r.slice(1)}if(r.length<2||r.charAt(0)!==r.slice(-1)){throw new k.default("\\verb assertion failed --\n                    please report what input caused this bug")}r=r.slice(1,-1);return _(new x.default("verb",{body:r,star:a},"text"),t)}else{return null}}}]);return e}();C.endOfExpression=["}","\\end","\\right","&","\\\\","\\cr"];C.SUPSUB_GREEDINESS=1;C.sizeFuncs=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];C.styleFuncs=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];C.oldFontFuncs={"\\rm":"mathrm","\\sf":"mathsf","\\tt":"mathtt","\\bf":"mathbf","\\it":"mathit"};r.default=C},{"./MacroExpander":82,"./ParseError":84,"./ParseNode":85,"./environments":99,"./functions":103,"./symbols":118,"./unicodeRegexes":119,"./units":120,"./utils":121,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],87:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=o(a);var i=e("./utils");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u=function e(t){(0,n.default)(this,e);t=t||{};this.displayMode=l.default.deflt(t.displayMode,false);this.throwOnError=l.default.deflt(t.throwOnError,true);this.errorColor=l.default.deflt(t.errorColor,"#cc0000");this.macros=t.macros||{};this.colorIsTextColor=l.default.deflt(t.colorIsTextColor,false);this.maxSize=Math.max(0,l.default.deflt(t.maxSize,Infinity))};r.default=u},{"./utils":121,"babel-runtime/helpers/classCallCheck":8}],88:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/core-js/object/freeze");var n=s(a);var i=e("babel-runtime/helpers/classCallCheck");var l=s(i);var o=e("babel-runtime/helpers/createClass");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=function(){function e(t,r,a){(0,l.default)(this,e);this.lexer=t;this.start=r;this.end=a;(0,n.default)(this)}(0,u.default)(e,null,[{key:"range",value:function t(r,a){if(!a){return r&&r.loc}else if(!r||!r.loc||!a.loc||r.loc.lexer!==a.loc.lexer){return null}else{return new e(r.loc.lexer,r.loc.start,a.loc.end)}}}]);return e}();r.default=f},{"babel-runtime/core-js/object/freeze":7,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],89:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=o(a);var i=e("babel-runtime/helpers/createClass");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,r,a){(0,n.default)(this,e);this.id=t;this.size=r;this.cramped=a}(0,l.default)(e,[{key:"sup",value:function e(){return g[b[this.id]]}},{key:"sub",value:function e(){return g[y[this.id]]}},{key:"fracNum",value:function e(){return g[x[this.id]]}},{key:"fracDen",value:function e(){return g[w[this.id]]}},{key:"cramp",value:function e(){return g[k[this.id]]}},{key:"text",value:function e(){return g[M[this.id]]}},{key:"isTight",value:function e(){return this.size>=2}}]);return e}();var s=0;var f=1;var d=2;var c=3;var h=4;var v=5;var p=6;var m=7;var g=[new u(s,0,false),new u(f,0,true),new u(d,1,false),new u(c,1,true),new u(h,2,false),new u(v,2,true),new u(p,3,false),new u(m,3,true)];var b=[h,v,h,v,p,m,p,m];var y=[v,v,v,v,m,m,m,m];var x=[d,c,h,v,p,m,p,m];var w=[c,c,v,v,m,m,m,m];var k=[f,f,c,c,v,v,m,m];var M=[s,f,d,c,d,c,d,c];r.default={DISPLAY:g[s],TEXT:g[d],SCRIPT:g[h],SCRIPTSCRIPT:g[p]}},{"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],90:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.Token=undefined;var a=e("babel-runtime/helpers/classCallCheck");var n=s(a);var i=e("babel-runtime/helpers/createClass");var l=s(i);var o=e("./SourceLocation");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=r.Token=function(){function e(t,r){(0,n.default)(this,e);this.text=t;this.loc=r}(0,l.default)(e,[{key:"range",value:function t(r,a){return new e(a,u.default.range(this,r))}}]);return e}()},{"./SourceLocation":88,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],91:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./domTree");var n=d(a);var i=e("./fontMetrics");var l=d(i);var o=e("./symbols");var u=d(o);var s=e("./utils");var f=d(s);function d(e){return e&&e.__esModule?e:{default:e}}var c=["\\imath","\\jmath","\\pounds"];var h=function e(t,r,a){if(u.default[a][t]&&u.default[a][t].replace){t=u.default[a][t].replace}return{value:t,metrics:l.default.getCharacterMetrics(t,r)}};var v=function e(t,r,a,i,l){var o=h(t,r,a);var u=o.metrics;t=o.value;var s=void 0;if(u){var f=u.italic;if(a==="text"){f=0}s=new n.default.symbolNode(t,u.height,u.depth,f,u.skew,l)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+t+"' in style '"+r+"'");s=new n.default.symbolNode(t,0,0,0,0,l)}if(i){s.maxFontSize=i.sizeMultiplier;if(i.style.isTight()){s.classes.push("mtight")}if(i.getColor()){s.style.color=i.getColor()}}return s};var p=function e(t,r,a,n){if(t==="\\"||u.default[r][t].font==="main"){return v(t,"Main-Regular",r,a,n)}else{return v(t,"AMS-Regular",r,a,n.concat(["amsrm"]))}};var m=function e(t,r,a,n,i){if(i==="mathord"){var l=g(t,r,a,n);return v(t,l.fontName,r,a,n.concat([l.fontClass]))}else if(i==="textord"){var o=u.default[r][t]&&u.default[r][t].font;if(o==="ams"){return v(t,"AMS-Regular",r,a,n.concat(["amsrm"]))}else{return v(t,"Main-Regular",r,a,n.concat(["mathrm"]))}}else{throw new Error("unexpected type: "+i+" in mathDefault")}};var g=function e(t,r,a,n){if(/[0-9]/.test(t.charAt(0))||f.default.contains(c,t)){return{fontName:"Main-Italic",fontClass:"mainit"}}else{return{fontName:"Math-Italic",fontClass:"mathit"}}};var b=function e(t,r,a){var n=t.mode;var i=t.value;var l=["mord"];var o=r.font;if(o){var u=void 0;if(o==="mathit"||f.default.contains(c,i)){u=g(i,n,r,l)}else{u=T[o]}if(h(i,u.fontName,n).metrics){return v(i,u.fontName,n,r,l.concat([u.fontClass||o]))}else{return m(i,n,r,l,a)}}else{return m(i,n,r,l,a)}};var y=function e(t){for(var r=0;r<t.length-1;r++){if(t[r].tryCombine(t[r+1])){t.splice(r+1,1);r--}}return t};var x=function e(t){var r=0;var a=0;var n=0;if(t.children){for(var i=0;i<t.children.length;i++){if(t.children[i].height>r){r=t.children[i].height}if(t.children[i].depth>a){a=t.children[i].depth}if(t.children[i].maxFontSize>n){n=t.children[i].maxFontSize}}}t.height=r;t.depth=a;t.maxFontSize=n};var w=function e(t,r,a){var i=new n.default.span(t,r,a);x(i);return i};var k=function e(t,r){t.children=r.concat(t.children);x(t)};var M=function e(t,r){var a=new n.default.documentFragment(t,r);x(a);return a};var _=function e(t,r){var a=t.positionType,i=t.positionData,l=t.children;var o=void 0;var u=void 0;var s=void 0;if(a==="individualShift"){var f=l;l=[f[0]];o=-f[0].shift-f[0].elem.depth;u=o;for(s=1;s<f.length;s++){var d=-f[s].shift-u-f[s].elem.depth;var c=d-(f[s-1].elem.height+f[s-1].elem.depth);u=u+d;l.push({type:"kern",size:c});l.push(f[s])}}else if(a==="top"){var h=i;for(s=0;s<l.length;s++){if(l[s].type==="kern"){h-=l[s].size}else{h-=l[s].elem.height+l[s].elem.depth}}o=h}else if(a==="bottom"){o=-i}else if(a==="shift"){o=-l[0].elem.depth-i}else if(a==="firstBaseline"){o=-l[0].elem.depth}else{o=0}var v=0;for(s=0;s<l.length;s++){if(l[s].type==="elem"){var p=l[s].elem;v=Math.max(v,p.maxFontSize,p.height)}}v+=2;var m=w(["pstrut"],[]);m.style.height=v+"em";var g=[];var b=o;var y=o;u=o;for(s=0;s<l.length;s++){if(l[s].type==="kern"){u+=l[s].size}else{var x=l[s].elem;var k=w([],[m,x]);k.style.top=-v-u-x.depth+"em";if(l[s].marginLeft){k.style.marginLeft=l[s].marginLeft}if(l[s].marginRight){k.style.marginRight=l[s].marginRight}g.push(k);u+=x.height+x.depth}b=Math.min(b,u);y=Math.max(y,u)}var M=w(["vlist"],g);M.style.height=y+"em";var _=void 0;if(b<0){var S=w(["vlist"],[]);S.style.height=-b+"em";var z=w(["vlist-s"],[new n.default.symbolNode("\u200b")]);_=[w(["vlist-r"],[M,z]),w(["vlist-r"],[S])]}else{_=[w(["vlist-r"],[M])]}var T=w(["vlist-t"],_);if(_.length===2){T.classes.push("vlist-t2")}T.height=y;T.depth=-b;return T};var S=function e(t,r){var a=t.value.body;if(t.value.star){a=a.replace(/ /g,"\u2423")}else{a=a.replace(/ /g,"\xa0")}return a};var z={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var T={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};r.default={fontMap:T,makeSymbol:v,mathsym:p,makeSpan:w,makeFragment:M,makeVList:_,makeOrd:b,makeVerb:S,tryCombineChars:y,prependChildren:k,spacingFunctions:z}},{"./domTree":98,"./fontMetrics":101,"./symbols":118,"./utils":121}],92:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.buildGroup=r.makeLineSpan=r.groupTypes=r.makeNullDelimiter=r.buildExpression=r.spliceSpaces=undefined;var a=e("babel-runtime/core-js/json/stringify");var n=x(a);r.default=B;var i=e("./ParseError");var l=x(i);var o=e("./Style");var u=x(o);var s=e("./buildCommon");var f=x(s);var d=e("./delimiter");var c=x(d);var h=e("./domTree");var v=x(h);var p=e("./units");var m=e("./utils");var g=x(m);var b=e("./stretchy");var y=x(b);function x(e){return e&&e.__esModule?e:{default:e}}var w=f.default.makeSpan;var k=function e(t){return t instanceof v.default.span&&t.classes[0]==="mspace"};var M=function e(t){return t&&t.classes[0]==="mbin"};var _=function e(t,r){if(t){return g.default.contains(["mbin","mopen","mrel","mop","mpunct"],t.classes[0])}else{return r}};var S=function e(t,r){if(t){return g.default.contains(["mrel","mclose","mpunct"],t.classes[0])}else{return r}};var z=r.spliceSpaces=function e(t,r){var a=r;while(a<t.length&&k(t[a])){a++}if(a===r){return null}else{return t.splice(r,a-r)}};var T=r.buildExpression=function e(t,r,a){var n=[];for(var i=0;i<t.length;i++){var l=t[i];var o=P(l,r);if(o instanceof v.default.documentFragment){Array.prototype.push.apply(n,o.children)}else{n.push(o)}}for(var u=0;u<n.length;u++){var s=z(n,u);if(s){if(u<n.length){if(n[u]instanceof v.default.symbolNode){n[u]=w([].concat(n[u].classes),[n[u]])}f.default.prependChildren(n[u],s)}else{Array.prototype.push.apply(n,s);break}}}for(var d=0;d<n.length;d++){var c=1;var h=1;while(n[d-c]&&n[d-c].classes[0]==="cursor"){c++}while(n[d+h]&&n[d+h].classes[0]==="cursor"){h++}if(M(n[d])&&(_(n[d-c],a)||S(n[d+h],a))){n[d].classes[0]="mord"}}for(var p=0;p<n.length;p++){if(n[p].value==="\u0338"&&p+1<n.length){var m=n.slice(p,p+2);m[0].classes=["mainrm"];m[0].style.position="absolute";m[0].style.right="0";var g=n[p+1].classes;var b=w(g,m);if(g.indexOf("mord")!==-1){b.style.paddingLeft="0.277771em"}b.style.position="relative";n.splice(p,2,b)}}return n};var C=function e(t){if(t instanceof v.default.documentFragment){if(t.children.length){return e(t.children[t.children.length-1])}}else{if(g.default.contains(["mord","mop","mbin","mrel","mopen","mclose","mpunct","minner"],t.classes[0])){return t.classes[0]}}return null};var A=function e(t,r){if(!t.value.base){return false}else{var a=t.value.base;if(a.type==="op"){return a.value.limits&&(r.style.size===u.default.DISPLAY.size||a.value.alwaysHandleSupSub)}else if(a.type==="accent"){return O(a.value.base)}else if(a.type==="horizBrace"){var n=t.value.sub?false:true;return n===a.value.isOver}else{return null}}};var N=function e(t){if(!t){return false}else if(t.type==="ordgroup"){if(t.value.length===1){return e(t.value[0])}else{return t}}else if(t.type==="color"){if(t.value.value.length===1){return e(t.value.value[0])}else{return t}}else if(t.type==="font"){return e(t.value.body)}else{return t}};var O=function e(t){var r=N(t);return r.type==="mathord"||r.type==="textord"||r.type==="bin"||r.type==="rel"||r.type==="inner"||r.type==="open"||r.type==="close"||r.type==="punct"};var j=r.makeNullDelimiter=function e(t,r){var a=["nulldelimiter"].concat(t.baseSizingClasses());return w(r.concat(a))};var L=r.groupTypes={};L.mathord=function(e,t){return f.default.makeOrd(e,t,"mathord")};L.textord=function(e,t){return f.default.makeOrd(e,t,"textord")};L.bin=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mbin"])};L.rel=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mrel"])};L.open=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mopen"])};L.close=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mclose"])};L.inner=function(e,t){return f.default.mathsym(e.value,e.mode,t,["minner"])};L.punct=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mpunct"])};L.ordgroup=function(e,t){return w(["mord"],T(e.value,t,true),t)};L.text=function(e,t){var r=t.withFont(e.value.font);var a=T(e.value.body,r,true);f.default.tryCombineChars(a);return w(["mord","text"],a,r)};L.xmlClass=function(e,t,r){var a=T(e.value.value,t,r);return new f.default.makeFragment(a,[e.value.cl])};L.color=function(e,t){var r=T(e.value.value,t.withColor(e.value.color),false);return new f.default.makeFragment(r)};L.supsub=function(e,t){if(A(e,t)){return L[e.value.base.type](e,t)}var r=P(e.value.base,t);var a=void 0;var n=void 0;var i=t.fontMetrics();var l=void 0;var o=0;var s=0;if(e.value.sup){l=t.havingStyle(t.style.sup());a=P(e.value.sup,l,t);if(!O(e.value.base)){o=r.height-l.fontMetrics().supDrop*l.sizeMultiplier/t.sizeMultiplier}}if(e.value.sub){l=t.havingStyle(t.style.sub());n=P(e.value.sub,l,t);if(!O(e.value.base)){s=r.depth+l.fontMetrics().subDrop*l.sizeMultiplier/t.sizeMultiplier}}var d=void 0;if(t.style===u.default.DISPLAY){d=i.sup1}else if(t.style.cramped){d=i.sup3}else{d=i.sup2}var c=t.sizeMultiplier;var h=.5/i.ptPerEm/c+"em";var p=void 0;if(!e.value.sup){s=Math.max(s,i.sub1,n.height-.8*i.xHeight);var m=[{type:"elem",elem:n,marginRight:h}];if(r instanceof v.default.symbolNode){m[0].marginLeft=-r.italic+"em"}p=f.default.makeVList({positionType:"shift",positionData:s,children:m},t)}else if(!e.value.sub){o=Math.max(o,d,a.depth+.25*i.xHeight);p=f.default.makeVList({positionType:"shift",positionData:-o,children:[{type:"elem",elem:a,marginRight:h}]},t)}else{o=Math.max(o,d,a.depth+.25*i.xHeight);s=Math.max(s,i.sub2);var g=i.defaultRuleThickness;if(o-a.depth-(n.height-s)<4*g){s=4*g-(o-a.depth)+n.height;var b=.8*i.xHeight-(o-a.depth);if(b>0){o+=b;s-=b}}var y=[{type:"elem",elem:n,shift:s,marginRight:h},{type:"elem",elem:a,shift:-o,marginRight:h}];if(r instanceof v.default.symbolNode){y[0].marginLeft=-r.italic+"em"}p=f.default.makeVList({positionType:"individualShift",children:y},t)}var x=C(r)||"mord";return w([x],[r,w(["msupsub"],[p])],t)};L.spacing=function(e,t){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){if(e.mode==="text"){return f.default.makeOrd(e,t,"textord")}else{return w(["mspace"],[f.default.mathsym(e.value,e.mode,t)],t)}}else{return w(["mspace",f.default.spacingFunctions[e.value].className],[],t)}};var E=r.makeLineSpan=function e(t,r,a){var n=w([t],[],r);n.height=a||r.fontMetrics().defaultRuleThickness;n.style.borderBottomWidth=n.height+"em";n.maxFontSize=1;return n};L.overline=function(e,t){var r=P(e.value.body,t.havingCrampedStyle());var a=E("overline-line",t);var n=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*a.height},{type:"elem",elem:a},{type:"kern",size:a.height}]},t);return w(["mord","overline"],[n],t)};L.underline=function(e,t){var r=P(e.value.body,t);var a=E("underline-line",t);var n=f.default.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:a.height},{type:"elem",elem:a},{type:"kern",size:3*a.height},{type:"elem",elem:r}]},t);return w(["mord","underline"],[n],t)};L.sqrt=function(e,t){var r=P(e.value.body,t.havingCrampedStyle());if(r.height===0){r.height=t.fontMetrics().xHeight}if(r instanceof v.default.documentFragment){r=w([],[r],t)}var a=t.fontMetrics();var n=a.defaultRuleThickness;var i=n;if(t.style.id<u.default.TEXT.id){i=t.fontMetrics().xHeight}var l=n+i/4;var o=(r.height+r.depth+l+n)*t.sizeMultiplier;var s=c.default.customSizedDelim("\\surd",o,false,t,e.mode);var d=t.fontMetrics().sqrtRuleThickness*s.sizeMultiplier;var h=s.height-d;if(h>r.height+r.depth+l){l=(l+h-r.height-r.depth)/2}var p=s.height-r.height-l-d;r.style.paddingLeft=s.advanceWidth+"em";var m=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:-(r.height+p)},{type:"elem",elem:s},{type:"kern",size:d}]},t);m.children[0].children[0].classes.push("svg-align");if(!e.value.index){return w(["mord","sqrt"],[m],t)}else{var g=t.havingStyle(u.default.SCRIPTSCRIPT);var b=P(e.value.index,g,t);var y=.6*(m.height-m.depth);var x=f.default.makeVList({positionType:"shift",positionData:-y,children:[{type:"elem",elem:b}]},t);var k=w(["root"],[x]);return w(["mord","sqrt"],[k,m],t)}};function q(e,t,r){var a=T(e,t,false);var n=t.sizeMultiplier/r.sizeMultiplier;for(var i=0;i<a.length;i++){var l=g.default.indexOf(a[i].classes,"sizing");if(l<0){Array.prototype.push.apply(a[i].classes,t.sizingClasses(r))}else if(a[i].classes[l+1]==="reset-size"+t.size){a[i].classes[l+1]="reset-size"+r.size}a[i].height*=n;a[i].depth*=n}return f.default.makeFragment(a)}L.sizing=function(e,t){var r=t.havingSize(e.value.size);return q(e.value.value,r,t)};L.styling=function(e,t){var r={display:u.default.DISPLAY,text:u.default.TEXT,script:u.default.SCRIPT,scriptscript:u.default.SCRIPTSCRIPT};var a=r[e.value.style];var n=t.havingStyle(a);return q(e.value.value,n,t)};L.font=function(e,t){var r=e.value.font;return P(e.value.body,t.withFont(r))};L.verb=function(e,t){var r=f.default.makeVerb(e,t);var a=[];var n=t.havingStyle(t.style.text());for(var i=0;i<r.length;i++){if(r[i]==="\xa0"){var l=w(["mord","rule"],[],n);l.style.marginLeft="0.525em";a.push(l)}else{a.push(f.default.makeSymbol(r[i],"Typewriter-Regular",e.mode,n,["mathtt"]))}}f.default.tryCombineChars(a);return w(["mord","text"].concat(n.sizingClasses(t)),a,n)};L.cursor=function(e,t,r){var a=w(["cursor"],[],t);var n=0;var i=(0,p.calculateSize)(e.value.height,t);if(e.value.shift){n=(0,p.calculateSize)(e.value.shift,t)}n/=t.sizeMultiplier;i/=t.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=n+"em";a.style.height=i+"em";a.width=1;a.height=i+n;a.depth=-n;e.value.previous=r;return a};L.rule=function(e,t,r){var a=w(["mord","rule"],[],t);var n=0;if(e.value.shift){n=(0,p.calculateSize)(e.value.shift,t)}var i=(0,p.calculateSize)(e.value.width,t);var l=(0,p.calculateSize)(e.value.height,t);a.style.borderRightWidth=i+"em";a.style.borderTopWidth=l+"em";a.style.bottom=n+"em";a.width=i;a.height=l+n;a.depth=-n;a.maxFontSize=l*1.125*t.sizeMultiplier;return a};L.kern=function(e,t){var r=w(["mord","rule"],[],t);if(e.value.dimension){var a=(0,p.calculateSize)(e.value.dimension,t);r.style.marginLeft=a+"em"}return r};L.accent=function(e,t){var r=e.value.base;var a=void 0;if(e.type==="supsub"){var n=e;e=n.value.base;r=e.value.base;n.value.base=r;a=P(n,t);
}var i=P(r,t.havingCrampedStyle());var l=e.value.isShifty&&O(r);var o=0;if(l){var u=N(r);var s=P(u,t.havingCrampedStyle());o=s.skew}var d=Math.min(i.height,t.fontMetrics().xHeight);var c=void 0;if(!e.value.isStretchy){var h=f.default.makeSymbol(e.value.label,"Main-Regular",e.mode,t);h.italic=0;var v=null;if(e.value.label==="\\vec"){v="accent-vec"}else if(e.value.label==="\\H"){v="accent-hungarian"}c=w([],[h]);c=w(["accent-body",v],[c]);c.style.marginLeft=2*o+"em";c=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"kern",size:-d},{type:"elem",elem:c}]},t)}else{c=y.default.svgSpan(e,t);c=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"elem",elem:c}]},t);var p=c.children[0].children[0].children[1];p.classes.push("svg-align");if(o>0){p.style.width="calc(100% - "+2*o+"em)";p.style.marginLeft=2*o+"em"}}var m=w(["mord","accent"],[c],t);if(a){a.children[0]=m;a.height=Math.max(m.height,a.height);a.classes[0]="mord";return a}else{return m}};L.horizBrace=function(e,t){var r=t.style;var a=e.type==="supsub";var n=void 0;var i=void 0;if(a){if(e.value.sup){i=t.havingStyle(r.sup());n=P(e.value.sup,i,t)}else{i=t.havingStyle(r.sub());n=P(e.value.sub,i,t)}e=e.value.base}var l=P(e.value.base,t.havingBaseStyle(u.default.DISPLAY));var o=y.default.svgSpan(e,t);var s=void 0;if(e.value.isOver){s=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:l},{type:"kern",size:.1},{type:"elem",elem:o}]},t);s.children[0].children[0].children[1].classes.push("svg-align")}else{s=f.default.makeVList({positionType:"bottom",positionData:l.depth+.1+o.height,children:[{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:l}]},t);s.children[0].children[0].children[0].classes.push("svg-align")}if(a){var d=w(["mord",e.value.isOver?"mover":"munder"],[s],t);if(e.value.isOver){s=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:d},{type:"kern",size:.2},{type:"elem",elem:n}]},t)}else{s=f.default.makeVList({positionType:"bottom",positionData:d.depth+.2+n.height,children:[{type:"elem",elem:n},{type:"kern",size:.2},{type:"elem",elem:d}]},t)}}return w(["mord",e.value.isOver?"mover":"munder"],[s],t)};L.accentUnder=function(e,t){var r=P(e.value.base,t);var a=y.default.svgSpan(e,t);var n=/tilde/.test(e.value.label)?.12:0;var i=f.default.makeVList({positionType:"bottom",positionData:a.height+n,children:[{type:"elem",elem:a},{type:"kern",size:n},{type:"elem",elem:r}]},t);i.children[0].children[0].children[0].classes.push("svg-align");return w(["mord","accentunder"],[i],t)};L.enclose=function(e,t){var r=P(e.value.body,t);var a=e.value.label.substr(1);var n=t.sizeMultiplier;var i=void 0;var l=0;var o=/color/.test(a);if(a==="sout"){i=w(["stretchy","sout"]);i.height=t.fontMetrics().defaultRuleThickness/n;l=-.5*t.fontMetrics().xHeight}else{r.classes.push(/cancel/.test(a)?"cancel-pad":"boxpad");var u=0;if(/box/.test(a)){u=a==="colorbox"?.3:.34}else{u=O(e.value.body)?.2:0}i=y.default.encloseSpan(r,a,u,t);l=r.depth+u;if(o){i.style.backgroundColor=e.value.backgroundColor.value;if(a==="fcolorbox"){i.style.borderColor=e.value.borderColor.value}}}var s=void 0;if(o){s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:l},{type:"elem",elem:r,shift:0}]},t)}else{s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:0},{type:"elem",elem:i,shift:l}]},t)}if(/cancel/.test(a)){s.children[0].children[0].children[1].classes.push("svg-align");return w(["mord","cancel-lap"],[s],t)}else{return w(["mord"],[s],t)}};L.xArrow=function(e,t){var r=t.style;var a=t.havingStyle(r.sup());var n=P(e.value.body,a,t);n.classes.push("x-arrow-pad");var i=void 0;if(e.value.below){a=t.havingStyle(r.sub());i=P(e.value.below,a,t);i.classes.push("x-arrow-pad")}var l=y.default.svgSpan(e,t);var o=-t.fontMetrics().axisHeight+.5*l.height;var u=-t.fontMetrics().axisHeight-.5*l.height-.111;var s=void 0;if(e.value.below){var d=-t.fontMetrics().axisHeight+i.height+.5*l.height+.111;s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:n,shift:u},{type:"elem",elem:l,shift:o},{type:"elem",elem:i,shift:d}]},t)}else{s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:n,shift:u},{type:"elem",elem:l,shift:o}]},t)}s.children[0].children[0].children[1].classes.push("svg-align");return w(["mrel","x-arrow"],[s],t)};L.mclass=function(e,t){var r=T(e.value.value,t,true);return w([e.value.mclass],r,t)};L.raisebox=function(e,t){var r=L.sizing({value:{value:[{type:"text",value:{body:e.value.value,font:"mathrm"}}],size:6}},t);var a=(0,p.calculateSize)(e.value.dy.value,t);return f.default.makeVList({positionType:"shift",positionData:-a,children:[{type:"elem",elem:r}]},t)};var P=r.buildGroup=function e(t,r,a){if(!t){return w()}if(L[t.type]){var n=L[t.type](t,r);if(a&&r.size!==a.size){n=w(r.sizingClasses(a),[n],r);var i=r.sizeMultiplier/a.sizeMultiplier;n.height*=i;n.depth*=i}return n}else{throw new l.default("Got group of unknown type: '"+t.type+"'")}};function B(e,t){e=JSON.parse((0,n.default)(e));var r=T(e,t,true);var a=w(["base"],r,t);var i=w(["strut"]);var l=w(["strut","bottom"]);i.style.height=a.height+"em";l.style.height=a.height+a.depth+"em";l.style.verticalAlign=-a.depth+"em";var o=w(["katex-html"],[i,l,a]);o.setAttribute("aria-hidden","true");return o}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./delimiter":97,"./domTree":98,"./stretchy":116,"./units":120,"./utils":121,"babel-runtime/core-js/json/stringify":5}],93:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.buildGroup=r.buildExpression=r.groupTypes=r.makeText=undefined;r.default=z;var a=e("./buildCommon");var n=y(a);var i=e("./fontMetrics");var l=y(i);var o=e("./mathMLTree");var u=y(o);var s=e("./ParseError");var f=y(s);var d=e("./Style");var c=y(d);var h=e("./symbols");var v=y(h);var p=e("./utils");var m=y(p);var g=e("./stretchy");var b=y(g);function y(e){return e&&e.__esModule?e:{default:e}}var x=r.makeText=function e(t,r){if(v.default[r][t]&&v.default[r][t].replace){t=v.default[r][t].replace}return new u.default.TextNode(t)};var w=function e(t,r){var a=r.font;if(!a){return null}var i=t.mode;if(a==="mathit"){return"italic"}var o=t.value;if(m.default.contains(["\\imath","\\jmath"],o)){return null}if(v.default[i][o]&&v.default[i][o].replace){o=v.default[i][o].replace}var u=n.default.fontMap[a].fontName;if(l.default.getCharacterMetrics(o,u)){return n.default.fontMap[r.font].variant}return null};var k=r.groupTypes={};var M={mi:"italic",mn:"normal",mtext:"normal"};k.mathord=function(e,t){var r=new u.default.MathNode("mi",[x(e.value,e.mode)]);var a=w(e,t)||"italic";if(a!==M[r.type]){r.setAttribute("mathvariant",a)}return r};k.textord=function(e,t){var r=x(e.value,e.mode);var a=w(e,t)||"normal";var n=void 0;if(e.mode==="text"){n=new u.default.MathNode("mtext",[r])}else if(/[0-9]/.test(e.value)){n=new u.default.MathNode("mn",[r])}else if(e.value==="\\prime"){n=new u.default.MathNode("mo",[r])}else{n=new u.default.MathNode("mi",[r])}if(a!==M[n.type]){n.setAttribute("mathvariant",a)}return n};k.bin=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.rel=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.open=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.close=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.inner=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.punct=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);t.setAttribute("separator","true");return t};k.ordgroup=function(e,t){var r=_(e.value,t);var a=new u.default.MathNode("mrow",r);return a};k.text=function(e,t){var r=e.value.body;var a=[];var n=null;for(var i=0;i<r.length;i++){var l=S(r[i],t);if(l.type==="mtext"&&n!=null){Array.prototype.push.apply(n.children,l.children)}else{a.push(l);if(l.type==="mtext"){n=l}}}if(a.length===1){return a[0]}else{return new u.default.MathNode("mrow",a)}};k.color=function(e,t){var r=_(e.value.value,t);var a=new u.default.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};k.xmlClass=function(e,t){var r=_(e.value.value,t);var a=new u.default.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};k.supsub=function(e,t){var r=false;var a=void 0;var n=void 0;if(e.value.base){if(e.value.base.value.type==="horizBrace"){n=e.value.sup?true:false;if(n===e.value.base.value.isOver){r=true;a=e.value.base.value.isOver}}}var i=true;var l=[S(e.value.base,t,i)];if(e.value.sub){l.push(S(e.value.sub,t,i))}if(e.value.sup){l.push(S(e.value.sup,t,i))}var o=void 0;if(r){o=a?"mover":"munder"}else if(!e.value.sub){o="msup"}else if(!e.value.sup){o="msub"}else{var s=e.value.base;if(s&&s.value.limits&&t.style===c.default.DISPLAY){o="munderover"}else{o="msubsup"}}var f=new u.default.MathNode(o,l);return f};k.sqrt=function(e,t){var r=void 0;if(e.value.index){r=new u.default.MathNode("mroot",[S(e.value.body,t),S(e.value.index,t)])}else{r=new u.default.MathNode("msqrt",[S(e.value.body,t)])}return r};k.accent=function(e,t){var r=void 0;if(e.value.isStretchy){r=b.default.mathMLnode(e.value.label)}else{r=new u.default.MathNode("mo",[x(e.value.label,e.mode)])}var a=new u.default.MathNode("mover",[S(e.value.base,t),r]);a.setAttribute("accent","true");return a};k.spacing=function(e){var t=void 0;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new u.default.MathNode("mtext",[new u.default.TextNode("\xa0")])}else{t=new u.default.MathNode("mspace");t.setAttribute("width",n.default.spacingFunctions[e.value].size)}return t};k.cursor=function(e){var t=new u.default.MathNode("mtext",[new u.default.TextNode("|")]);return t};k.font=function(e,t){var r=e.value.font;return S(e.value.body,t.withFont(r))};k.styling=function(e,t){var r={display:c.default.DISPLAY,text:c.default.TEXT,script:c.default.SCRIPT,scriptscript:c.default.SCRIPTSCRIPT};var a=r[e.value.style];var n=t.havingStyle(a);var i=_(e.value.value,n);var l=new u.default.MathNode("mstyle",i);var o={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var s=o[e.value.style];l.setAttribute("scriptlevel",s[0]);l.setAttribute("displaystyle",s[1]);return l};k.sizing=function(e,t){var r=t.havingSize(e.value.size);var a=_(e.value.value,r);var n=new u.default.MathNode("mstyle",a);n.setAttribute("mathsize",r.sizeMultiplier+"em");return n};k.verb=function(e,t){var r=new u.default.TextNode(n.default.makeVerb(e,t));var a=new u.default.MathNode("mtext",[r]);a.setAttribute("mathvariant",n.default.fontMap["mathtt"].variant);return a};k.overline=function(e,t){var r=new u.default.MathNode("mo",[new u.default.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new u.default.MathNode("mover",[S(e.value.body,t),r]);a.setAttribute("accent","true");return a};k.underline=function(e,t){var r=new u.default.MathNode("mo",[new u.default.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new u.default.MathNode("munder",[S(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};k.accentUnder=function(e,t){var r=b.default.mathMLnode(e.value.label);var a=new u.default.MathNode("munder",[S(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};k.enclose=function(e,t){var r=new u.default.MathNode("menclose",[S(e.value.body,t)]);switch(e.value.label){case"\\cancel":r.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":r.setAttribute("notation","downdiagonalstrike");break;case"\\sout":r.setAttribute("notation","horizontalstrike");break;case"\\fbox":r.setAttribute("notation","box");break;case"\\colorbox":r.setAttribute("mathbackground",e.value.backgroundColor.value);break;case"\\fcolorbox":r.setAttribute("mathbackground",e.value.backgroundColor.value);r.setAttribute("notation","box");break;default:r.setAttribute("notation","updiagonalstrike downdiagonalstrike")}return r};k.horizBrace=function(e,t){var r=b.default.mathMLnode(e.value.label);return new u.default.MathNode(e.value.isOver?"mover":"munder",[S(e.value.base,t),r])};k.xArrow=function(e,t){var r=b.default.mathMLnode(e.value.label);var a=void 0;var n=void 0;if(e.value.body){var i=S(e.value.body,t);if(e.value.below){n=S(e.value.below,t);a=new u.default.MathNode("munderover",[r,n,i])}else{a=new u.default.MathNode("mover",[r,i])}}else if(e.value.below){n=S(e.value.below,t);a=new u.default.MathNode("munder",[r,n])}else{a=new u.default.MathNode("mover",[r])}return a};k.rule=function(e){var t=new u.default.MathNode("mrow");return t};k.kern=function(e){var t=new u.default.MathNode("mrow");return t};k.mclass=function(e,t){var r=_(e.value.value,t);return new u.default.MathNode("mstyle",r)};k.raisebox=function(e,t){var r=new u.default.MathNode("mpadded",[S(e.value.body,t)]);var a=e.value.dy.value.number+e.value.dy.value.unit;r.setAttribute("voffset",a);return r};var _=r.buildExpression=function e(t,r){var a=[];for(var n=0;n<t.length;n++){var i=t[n];a.push(S(i,r))}return a};var S=r.buildGroup=function e(t,r){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!t){return new u.default.MathNode("mrow")}if(k[t.type]){var n=k[t.type](t,r);if(a){if(n.type==="mrow"&&n.children.length===1){return n.children[0]}}return n}else{throw new f.default("Got group of unknown type: '"+t.type+"'")}};function z(e,t,r){var a=_(e,r);var i=new u.default.MathNode("mrow",a);var l=new u.default.MathNode("annotation",[new u.default.TextNode(t)]);l.setAttribute("encoding","application/x-tex");var o=new u.default.MathNode("semantics",[i,l]);var s=new u.default.MathNode("math",[o]);return n.default.makeSpan(["katex-mathml"],[s])}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./fontMetrics":101,"./mathMLTree":114,"./stretchy":116,"./symbols":118,"./utils":121}],94:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./buildHTML");var n=p(a);var i=e("./buildMathML");var l=p(i);var o=e("./buildCommon");var u=p(o);var s=e("./Options");var f=p(s);var d=e("./Settings");var c=p(d);var h=e("./Style");var v=p(h);function p(e){return e&&e.__esModule?e:{default:e}}var m=function e(t,r,a){a=a||new c.default({});var i=v.default.TEXT;if(a.displayMode){i=v.default.DISPLAY}var o=new f.default({style:i,maxSize:a.maxSize});var s=(0,l.default)(t,r,o);var d=(0,n.default)(t,o);var h=u.default.makeSpan(["katex"],[s,d]);if(a.displayMode){return u.default.makeSpan(["katex-display"],[h])}else{return h}};r.default=m},{"./Options":83,"./Settings":87,"./Style":89,"./buildCommon":91,"./buildHTML":92,"./buildMathML":93}],95:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r._environments=undefined;r.default=d;var a=e("./buildHTML");var n=e("./buildMathML");var i=e("./Options");var l=s(i);var o=e("./ParseNode");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=r._environments={};function d(e){var t=e.type,r=e.names,i=e.props,l=e.handler,o=e.htmlBuilder,u=e.mathmlBuilder;var s={numArgs:i.numArgs||0,greediness:1,allowedInText:false,numOptionalArgs:0,handler:l};for(var d=0;d<r.length;++d){f[r[d]]=s}if(o){a.groupTypes[t]=o}if(u){n.groupTypes[t]=u}}},{"./Options":83,"./ParseNode":85,"./buildHTML":92,"./buildMathML":93}],96:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.ordargument=r._functions=undefined;r.default=l;var a=e("./buildHTML");var n=e("./buildMathML");var i=r._functions={};function l(e){var t=e.type,r=e.names,l=e.props,o=e.handler,u=e.htmlBuilder,s=e.mathmlBuilder;var f={numArgs:l.numArgs,argTypes:l.argTypes,greediness:l.greediness===undefined?1:l.greediness,allowedInText:!!l.allowedInText,allowedInMath:l.allowedInMath===undefined?true:l.allowedInMath,numOptionalArgs:l.numOptionalArgs||0,infix:!!l.infix,handler:o};for(var d=0;d<r.length;++d){i[r[d]]=f}if(t){if(u){a.groupTypes[t]=u}if(s){n.groupTypes[t]=s}}}var o=r.ordargument=function e(t){if(t.type==="ordgroup"){return t.value}else{return[t]}}},{"./buildHTML":92,"./buildMathML":93}],97:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./ParseError");var n=g(a);var i=e("./Style");var l=g(i);var o=e("./domTree");var u=g(o);var s=e("./buildCommon");var f=g(s);var d=e("./fontMetrics");var c=g(d);var h=e("./symbols");var v=g(h);var p=e("./utils");var m=g(p);function g(e){return e&&e.__esModule?e:{default:e}}var b=function e(t,r){if(v.default.math[t]&&v.default.math[t].replace){return c.default.getCharacterMetrics(v.default.math[t].replace,r)}else{return c.default.getCharacterMetrics(t,r)}};var y=function e(t,r,a,n){var i=a.havingBaseStyle(r);var l=f.default.makeSpan((n||[]).concat(i.sizingClasses(a)),[t],a);l.delimSizeMultiplier=i.sizeMultiplier/a.sizeMultiplier;l.height*=l.delimSizeMultiplier;l.depth*=l.delimSizeMultiplier;l.maxFontSize=i.sizeMultiplier;return l};var x=function e(t,r,a){var n=r.havingBaseStyle(a);var i=(1-r.sizeMultiplier/n.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=i+"em";t.height-=i;t.depth+=i};var w=function e(t,r,a,n,i,l){var o=f.default.makeSymbol(t,"Main-Regular",i,n);var u=y(o,r,n,l);if(a){x(u,n,r)}return u};var k=function e(t,r,a,n){return f.default.makeSymbol(t,"Size"+r+"-Regular",a,n)};var M=function e(t,r,a,n,i,o){var u=k(t,r,i,n);var s=y(f.default.makeSpan(["delimsizing","size"+r],[u],n),l.default.TEXT,n,o);if(a){x(s,n,l.default.TEXT)}return s};var _=function e(t,r,a){var n=void 0;if(r==="Size1-Regular"){n="delim-size1"}else if(r==="Size4-Regular"){n="delim-size4"}var i=f.default.makeSpan(["delimsizinginner",n],[f.default.makeSpan([],[f.default.makeSymbol(t,r,a)])]);return{type:"elem",elem:i}};var S=function e(t,r,a,n,i,o){var u=void 0;var s=void 0;var d=void 0;var c=void 0;u=d=c=t;s=null;var h="Size1-Regular";if(t==="\\uparrow"){d=c="\u23d0"}else if(t==="\\Uparrow"){d=c="\u2016"}else if(t==="\\downarrow"){u=d="\u23d0"}else if(t==="\\Downarrow"){u=d="\u2016"}else if(t==="\\updownarrow"){u="\\uparrow";d="\u23d0";c="\\downarrow"}else if(t==="\\Updownarrow"){u="\\Uparrow";d="\u2016";c="\\Downarrow"}else if(t==="["||t==="\\lbrack"){u="\u23a1";d="\u23a2";c="\u23a3";h="Size4-Regular"}else if(t==="]"||t==="\\rbrack"){u="\u23a4";d="\u23a5";c="\u23a6";h="Size4-Regular"}else if(t==="\\lfloor"){d=u="\u23a2";c="\u23a3";h="Size4-Regular"}else if(t==="\\lceil"){u="\u23a1";d=c="\u23a2";h="Size4-Regular"}else if(t==="\\rfloor"){d=u="\u23a5";c="\u23a6";h="Size4-Regular"}else if(t==="\\rceil"){u="\u23a4";d=c="\u23a5";h="Size4-Regular"}else if(t==="("){u="\u239b";d="\u239c";c="\u239d";h="Size4-Regular"}else if(t===")"){u="\u239e";d="\u239f";c="\u23a0";h="Size4-Regular"}else if(t==="\\{"||t==="\\lbrace"){u="\u23a7";s="\u23a8";c="\u23a9";d="\u23aa";h="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){u="\u23ab";s="\u23ac";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\lgroup"){u="\u23a7";c="\u23a9";d="\u23aa";h="Size4-Regular"}else if(t==="\\rgroup"){u="\u23ab";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\lmoustache"){u="\u23a7";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\rmoustache"){u="\u23ab";c="\u23a9";d="\u23aa";h="Size4-Regular"}var v=b(u,h);var p=v.height+v.depth;var m=b(d,h);var g=m.height+m.depth;var x=b(c,h);var w=x.height+x.depth;var k=0;var M=1;if(s!==null){var S=b(s,h);k=S.height+S.depth;M=2}var z=p+w+k;var T=Math.ceil((r-z)/(M*g));var C=z+T*M*g;var A=n.fontMetrics().axisHeight;if(a){A*=n.sizeMultiplier}var N=C/2-A;var O=[];O.push(_(c,h,i));if(s===null){for(var j=0;j<T;j++){O.push(_(d,h,i))}}else{for(var L=0;L<T;L++){O.push(_(d,h,i))}O.push(_(s,h,i));for(var E=0;E<T;E++){O.push(_(d,h,i))}}O.push(_(u,h,i));var q=n.havingBaseStyle(l.default.TEXT);var P=f.default.makeVList({positionType:"bottom",positionData:N,children:O},q);return y(f.default.makeSpan(["delimsizing","mult"],[P],q),l.default.TEXT,n,o)};var z=function e(t,r,a,n){var i=void 0;if(t==="sqrtTall"){var l=a-54;i="M702 0H400000v40H742v"+l+"l-4 4-4 4c-.667.667\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 0H400000v40H742z"}var o=new u.default.pathNode(t,i);var s=[["width","400em"],["height",r+"em"]];s.push(["viewBox","0 0 400000 "+a]);s.push(["preserveAspectRatio","xMinYMin slice"]);var d=new u.default.svgNode([o],s);return f.default.makeSpan(["hide-tail"],[d],n)};var T=function e(t,r,a){var n=void 0;var i=a.sizeMultiplier;var l=void 0;var o=void 0;if(r.type==="small"){o=1e3;var u=a.havingBaseStyle(r.style);i=u.sizeMultiplier/a.sizeMultiplier;l=1*i;n=z("sqrtMain",l,o,a);n.style.minWidth="0.853em";n.advanceWidth=.833*i}else if(r.type==="large"){o=1e3*O[r.size];l=O[r.size]/i;n=z("sqrtSize"+r.size,l,o,a);n.style.minWidth="1.02em";n.advanceWidth=1/i}else{l=t/i;o=Math.floor(1e3*t);n=z("sqrtTall",l,o,a);n.style.minWidth="0.742em";n.advanceWidth=1.056/i}n.height=l;n.style.height=l+"em";n.sizeMultiplier=i;return n};var C=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var A=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var N=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var O=[0,1.2,1.8,2.4,3];var j=function e(t,r,a,i,l){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}if(m.default.contains(C,t)||m.default.contains(N,t)){return M(t,r,false,a,i,l)}else if(m.default.contains(A,t)){return S(t,O[r],false,a,i,l)}else{throw new n.default("Illegal delimiter: '"+t+"'")}};var L=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var E=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"stack"}];var q=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var P=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}};var B=function e(t,r,a,n){var i=Math.min(2,3-n.style.size);for(var l=i;l<a.length;l++){if(a[l].type==="stack"){break}var o=b(t,P(a[l]));var u=o.height+o.depth;if(a[l].type==="small"){var s=n.havingBaseStyle(a[l].style);u*=s.sizeMultiplier}if(u>r){return a[l]}}return a[a.length-1]};var R=function e(t,r,a,n,i,l){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}var o=void 0;if(m.default.contains(N,t)){o=L}else if(m.default.contains(C,t)){o=q}else{o=E}var u=B(t,r,o,n);if(t==="\\surd"){return T(r,u,n)}else{if(u.type==="small"){return w(t,u.style,a,n,i,l)}else if(u.type==="large"){return M(t,u.size,a,n,i,l)}else if(u.type==="stack"){return S(t,r,a,n,i,l)}}};var D=function e(t,r,a,n,i,l){var o=n.fontMetrics().axisHeight*n.sizeMultiplier;var u=901;var s=5/n.fontMetrics().ptPerEm;var f=Math.max(r-o,a+o);var d=Math.max(f/500*u,2*f-s);return R(t,d,true,n,i,l)};r.default={sizedDelim:j,customSizedDelim:R,leftRightDelim:D}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./domTree":98,"./fontMetrics":101,"./symbols":118,"./utils":121}],98:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/slicedToArray");var n=v(a);var i=e("babel-runtime/helpers/classCallCheck");var l=v(i);var o=e("babel-runtime/helpers/createClass");var u=v(o);var s=e("./unicodeRegexes");var f=e("./utils");var d=v(f);var c=e("./svgGeometry");var h=v(c);function v(e){return e&&e.__esModule?e:{default:e}}var p=function e(t){t=t.slice();for(var r=t.length-1;r>=0;r--){if(!t[r]){t.splice(r,1)}}return t.join(" ")};var m=function(){function e(t,r,a){(0,l.default)(this,e);this.classes=t||[];this.children=r||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(a){if(a.style.isTight()){this.classes.push("mtight")}if(a.getColor()){this.style.color=a.getColor()}}}(0,u.default)(e,[{key:"setAttribute",value:function e(t,r){this.attributes[t]=r}},{key:"tryCombine",value:function e(t){return false}},{key:"toNode",value:function e(){var t=document.createElement("span");t.className=p(this.classes);for(var r in this.style){if(Object.prototype.hasOwnProperty.call(this.style,r)){t.style[r]=this.style[r]}}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){t.setAttribute(a,this.attributes[a])}}for(var n=0;n<this.children.length;n++){t.appendChild(this.children[n].toNode())}return t}},{key:"toMarkup",value:function e(){var t="<span";if(this.classes.length){t+=' class="';t+=d.default.escape(p(this.classes));t+='"'}var r="";for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=d.default.hyphenate(a)+":"+this.style[a]+";"}}if(r){t+=' style="'+d.default.escape(r)+'"'}for(var n in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,n)){t+=" "+n+'="';t+=d.default.escape(this.attributes[n]);t+='"'}}t+=">";for(var i=0;i<this.children.length;i++){t+=this.children[i].toMarkup()}t+="</span>";return t}}]);return e}();var g=function(){function e(t,r){(0,l.default)(this,e);this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;if(r){for(var a=0;a<this.children.length;a++){for(var n=0;n<r.length;n++){this.children[a].classes.push(r[n])}}}this.classes=r||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t=document.createDocumentFragment();for(var r=0;r<this.children.length;r++){t.appendChild(this.children[r].toNode())}return t}},{key:"toMarkup",value:function e(){var t="";for(var r=0;r<this.children.length;r++){t+=this.children[r].toMarkup()}return t}}]);return e}();var b={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};var y=function(){function e(t,r,a,n,i,o,u){(0,l.default)(this,e);this.value=t||"";this.height=r||0;this.depth=a||0;this.italic=n||0;this.skew=i||0;this.classes=o||[];this.style=u||{};this.maxFontSize=0;if(s.cjkRegex.test(t)){if(s.hangulRegex.test(t)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=b[this.value]}}(0,u.default)(e,[{key:"tryCombine",value:function t(r){if(!r||!(r instanceof e)||this.italic>0||p(this.classes)!==p(r.classes)||this.skew!==r.skew||this.maxFontSize!==r.maxFontSize){return false}for(var a in this.style){if(this.style.hasOwnProperty(a)&&this.style[a]!==r.style[a]){return false}}for(var n in r.style){if(r.style.hasOwnProperty(n)&&this.style[n]!==r.style[n]){return false}}this.value+=r.value;this.height=Math.max(this.height,r.height);this.depth=Math.max(this.depth,r.depth);this.italic=r.italic;return true}},{key:"toNode",value:function e(){var t=document.createTextNode(this.value);var r=null;if(this.italic>0){r=document.createElement("span");r.style.marginRight=this.italic+"em"}if(this.classes.length>0){r=r||document.createElement("span");r.className=p(this.classes)}for(var a in this.style){if(this.style.hasOwnProperty(a)){r=r||document.createElement("span");r.style[a]=this.style[a]}}if(r){r.appendChild(t);return r}else{return t}}},{key:"toMarkup",value:function e(){var t=false;var r="<span";if(this.classes.length){t=true;r+=' class="';r+=d.default.escape(p(this.classes));r+='"'}var a="";if(this.italic>0){a+="margin-right:"+this.italic+"em;"}for(var n in this.style){if(this.style.hasOwnProperty(n)){a+=d.default.hyphenate(n)+":"+this.style[n]+";"}}if(a){t=true;r+=' style="'+d.default.escape(a)+'"'}var i=d.default.escape(this.value);if(t){r+=">";r+=i;r+="</span>";return r}else{return i}}}]);return e}();var x=function(){function e(t,r){(0,l.default)(this,e);this.children=t||[];this.attributes=r||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"svg");for(var a=0;a<this.attributes.length;a++){var i=(0,n.default)(this.attributes[a],2),l=i[0],o=i[1];r.setAttribute(l,o)}for(var u=0;u<this.children.length;u++){r.appendChild(this.children[u].toNode())}return r}},{key:"toMarkup",value:function e(){var t="<svg";for(var r=0;r<this.attributes.length;r++){var a=(0,n.default)(this.attributes[r],2),i=a[0],l=a[1];t+=" "+i+"='"+l+"'"}t+=">";for(var o=0;o<this.children.length;o++){t+=this.children[o].toMarkup()}t+="</svg>";return t}}]);return e}();var w=function(){function e(t,r){(0,l.default)(this,e);this.pathName=t;this.alternate=r}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"path");if(this.pathName!=="sqrtTall"){r.setAttribute("d",h.default.path[this.pathName])}else{r.setAttribute("d",this.alternate)}return r}},{key:"toMarkup",value:function e(){if(this.pathName!=="sqrtTall"){return"<path d='"+h.default.path[this.pathName]+"'/>"}else{return"<path d='"+this.alternate+"'/>"}}}]);return e}();var k=function(){function e(t){(0,l.default)(this,e);this.attributes=t||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"line");for(var a=0;a<this.attributes.length;a++){var i=(0,n.default)(this.attributes[a],2),l=i[0],o=i[1];r.setAttribute(l,o)}return r}},{key:"toMarkup",value:function e(){var t="<line";for(var r=0;r<this.attributes.length;r++){var a=(0,n.default)(this.attributes[r],2),i=a[0],l=a[1];t+=" "+i+"='"+l+"'"}t+="/>";return t}}]);return e}();r.default={span:m,documentFragment:g,symbolNode:y,svgNode:x,pathNode:w,lineNode:k}},{"./svgGeometry":117,"./unicodeRegexes":119,"./utils":121,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"babel-runtime/helpers/slicedToArray":10}],99:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./defineEnvironment");e("./environments/array.js");var n={has:function e(t){return a._environments.hasOwnProperty(t)},get:function e(t){return a._environments[t]}};r.default=n},{"./defineEnvironment":95,"./environments/array.js":100}],100:[function(e,t,r){"use strict";var a=e("../buildCommon");var n=w(a);var i=e("../defineEnvironment");var l=w(i);var o=e("../mathMLTree");var u=w(o);var s=e("../ParseError");var f=w(s);var d=e("../ParseNode");var c=w(d);var h=e("../units");var v=e("../utils");var p=w(v);var m=e("../buildHTML");var g=x(m);var b=e("../buildMathML");var y=x(b);function x(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function w(e){return e&&e.__esModule?e:{default:e}}function k(e,t,r){var a=[];var n=[a];var i=[];while(true){var l=e.parseExpression(false,null);l=new c.default("ordgroup",l,e.mode);if(r){l=new c.default("styling",{style:r,value:[l]},e.mode)}a.push(l);var o=e.nextToken.text;if(o==="&"){e.consume()}else if(o==="\\end"){var u=n[n.length-1];if(n.length>1&&u.length===1&&u[0].value.value[0].value.length===0){n.pop()}break}else if(o==="\\\\"||o==="\\cr"){var s=e.parseFunction();i.push(s.value.size);a=[];n.push(a)}else{throw new f.default("Expected & or \\\\ or \\end",e.nextToken)}}t.body=n;t.rowGaps=i;return new c.default(t.type,t,e.mode)}function M(e){if(e.substr(0,1)==="d"){return"display"}else{return"text"}}var _=function e(t,r){var a=void 0;var i=void 0;var l=t.value.body.length;var o=0;var u=new Array(l);var s=1/r.fontMetrics().ptPerEm;var d=5*s;var c=12*s;var v=3*s;var m=p.default.deflt(t.value.arraystretch,1);var b=m*c;var y=.7*b;var x=.3*b;var w=0;for(a=0;a<t.value.body.length;++a){var k=t.value.body[a];var M=y;var _=x;if(o<k.length){o=k.length}var S=new Array(k.length);for(i=0;i<k.length;++i){
var z=g.buildGroup(k[i],r);if(_<z.depth){_=z.depth}if(M<z.height){M=z.height}S[i]=z}var T=0;if(t.value.rowGaps[a]){T=(0,h.calculateSize)(t.value.rowGaps[a].value,r);if(T>0){T+=x;if(_<T){_=T}T=0}}if(t.value.addJot){_+=v}S.height=M;S.depth=_;w+=M;S.pos=w;w+=_+T;u[a]=S}var C=w/2+r.fontMetrics().axisHeight;var A=t.value.cols||[];var N=[];var O=void 0;var j=void 0;for(i=0,j=0;i<o||j<A.length;++i,++j){var L=A[j]||{};var E=true;while(L.type==="separator"){if(!E){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=r.fontMetrics().doubleRuleSep+"em";N.push(O)}if(L.separator==="|"){var q=n.default.makeSpan(["vertical-separator"],[]);q.style.height=w+"em";q.style.verticalAlign=-(w-C)+"em";N.push(q)}else{throw new f.default("Invalid separator type: "+L.separator)}j++;L=A[j]||{};E=false}if(i>=o){continue}var P=void 0;if(i>0||t.value.hskipBeforeAndAfter){P=p.default.deflt(L.pregap,d);if(P!==0){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=P+"em";N.push(O)}}var B=[];for(a=0;a<l;++a){var R=u[a];var D=R[i];if(!D){continue}var F=R.pos-C;D.depth=R.depth;D.height=R.height;B.push({type:"elem",elem:D,shift:F})}B=n.default.makeVList({positionType:"individualShift",children:B},r);B=n.default.makeSpan(["col-align-"+(L.align||"c")],[B]);N.push(B);if(i<o-1||t.value.hskipBeforeAndAfter){P=p.default.deflt(L.postgap,d);if(P!==0){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=P+"em";N.push(O)}}}u=n.default.makeSpan(["mtable"],N);return n.default.makeSpan(["mord"],[u],r)};var S=function e(t,r){return new u.default.MathNode("mtable",t.value.body.map(function(e){return new u.default.MathNode("mtr",e.map(function(e){return new u.default.MathNode("mtd",[y.buildGroup(e,r)])}))}))};var z=function e(t,r){var a={type:"array",cols:[],addJot:true};a=k(t.parser,a,"display");var n=void 0;var i=0;var l=new c.default("ordgroup",[],t.mode);if(r[0]&&r[0].value){var o="";for(var u=0;u<r[0].value.length;u++){o+=r[0].value[u].value}n=Number(o);i=n*2}var s=!i;a.value.body.forEach(function(e){for(var t=1;t<e.length;t+=2){var r=e[t].value.value[0];r.value.unshift(l)}if(!s){var a=e.length/2;if(n<a){throw new f.default("Too many math in a row: "+("expected "+n+", but got "+a),e)}}else if(i<e.length){i=e.length}});for(var d=0;d<i;++d){var h="r";var v=0;if(d%2===1){h="l"}else if(d>0&&s){v=1}a.value.cols[d]={type:"align",align:h,pregap:v,postgap:0}}return a};(0,l.default)({type:"array",names:["array","darray"],props:{numArgs:1},handler:function e(t,r){var a=r[0];a=a.value.map?a.value:[a];var n=a.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new f.default("Unknown column alignment: "+e.value,e)});var i={type:"array",cols:n,hskipBeforeAndAfter:true};i=k(t.parser,i,M(t.envName));return i},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],props:{numArgs:0},handler:function e(t){var r={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[t.envName];var a={type:"array",hskipBeforeAndAfter:false};a=k(t.parser,a,M(t.envName));if(r){a=new c.default("leftright",{body:[a],left:r[0],right:r[1]},t.mode)}return a},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["cases","dcases"],props:{numArgs:0},handler:function e(t){var r={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};r=k(t.parser,r,M(t.envName));r=new c.default("leftright",{body:[r],left:"\\{",right:"."},t.mode);return r},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["aligned"],props:{numArgs:0},handler:z,htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["gathered"],props:{numArgs:0},handler:function e(t){var r={type:"array",cols:[{type:"align",align:"c"}],addJot:true};r=k(t.parser,r,"display");return r},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["alignedat"],props:{numArgs:1},handler:z,htmlBuilder:_,mathmlBuilder:S})},{"../ParseError":84,"../ParseNode":85,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineEnvironment":95,"../mathMLTree":114,"../units":120,"../utils":121}],101:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./unicodeRegexes");var n=e("./fontMetricsData");var i=l(n);function l(e){return e&&e.__esModule?e:{default:e}}var o={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2]};var u={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var s=function e(t,r){var n=t.charCodeAt(0);if(t[0]in u){n=u[t[0]].charCodeAt(0)}else if(a.cjkRegex.test(t[0])){n="M".charCodeAt(0)}var l=i.default[r][""+n];if(l){return{depth:l[0],height:l[1],italic:l[2],skew:l[3],width:l[4]}}};var f={};var d=function e(t){var r=void 0;if(t>=5){r=0}else if(t>=3){r=1}else{r=2}if(!f[r]){var a=f[r]={cssEmPerMu:o.quad[r]/18};for(var n in o){if(o.hasOwnProperty(n)){a[n]=o[n][r]}}}return f[r]};r.default={getFontMetrics:d,getCharacterMetrics:s}},{"./fontMetricsData":102,"./unicodeRegexes":119}],102:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],
961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8216:[0,.61111,0,0],8217:[0,.61111,0,0],8242:[0,.61111,0,0],9251:[.11111,.21944,0,0]}};r.default=a},{}],103:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./utils");var n=d(a);var i=e("./ParseError");var l=d(i);var o=e("./ParseNode");var u=d(o);var s=e("./defineFunction");var f=d(s);e("./functions/katex");e("./functions/phantom");e("./functions/mod");e("./functions/op");e("./functions/operatorname");e("./functions/genfrac");e("./functions/lap");e("./functions/smash");e("./functions/delimsizing");function d(e){return e&&e.__esModule?e:{default:e}}var c=s._functions;r.default=c;var h=function e(t,r,a){(0,f.default)({names:t,props:r,handler:a})};h(["\\sqrt"],{numArgs:1,numOptionalArgs:1},function(e,t,r){var a=r[0];var n=t[0];return{type:"sqrt",body:n,index:a}});var v={"\\text":undefined,"\\textrm":"mathrm","\\textsf":"mathsf","\\texttt":"mathtt","\\textnormal":"mathrm","\\textbf":"mathbf","\\textit":"textit"};h(["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit"],{numArgs:1,argTypes:["text"],greediness:2,allowedInText:true},function(e,t){var r=t[0];return{type:"text",body:(0,s.ordargument)(r),font:v[e.funcName]}});h(["\\xmlClass"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var n=void 0;if(a.type==="ordgroup"){n=a.value}else{n=[a]}return{type:"xmlClass",cl:r,value:n}});h(["\\textcolor"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];return{type:"color",color:r.value,value:(0,s.ordargument)(a)}});h(["\\color"],{numArgs:1,allowedInText:true,greediness:3,argTypes:["color"]},null);h(["\\colorbox"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","text"]},function(e,t){var r=t[0];var a=t[1];return{type:"enclose",label:e.funcName,backgroundColor:r,body:a}});h(["\\fcolorbox"],{numArgs:3,allowedInText:true,greediness:3,argTypes:["color","color","text"]},function(e,t){var r=t[0];var a=t[1];var n=t[2];return{type:"enclose",label:e.funcName,backgroundColor:a,borderColor:r,body:n}});h(["\\overline"],{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});h(["\\underline"],{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});h(["\\rule"],{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t,r){var a=r[0];var n=t[0];var i=t[1];return{type:"rule",shift:a&&a.value,width:n.value,height:i.value}});h(["\\cursor"],{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t,r){var a=r[0];var n=t[0];return{type:"cursor",shift:a&&a.value,height:n.value}});h(["\\kern","\\mkern"],{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});h(["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],{numArgs:1},function(e,t){var r=t[0];return{type:"mclass",mclass:"m"+e.funcName.substr(5),value:(0,s.ordargument)(r)}});h(["\\stackrel"],{numArgs:2},function(e,t){var r=t[0];var a=t[1];var n=new u.default("op",{type:"op",limits:true,alwaysHandleSupSub:true,symbol:false,value:(0,s.ordargument)(a)},a.mode);var i=new u.default("supsub",{base:n,sup:r,sub:null},r.mode);return{type:"mclass",mclass:"mrel",value:[i]}});var p={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};h(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];return{type:"color",color:"katex-"+e.funcName.slice(1),value:(0,s.ordargument)(r)}});h(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});h(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});h(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});h(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],{numArgs:0},null);h(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],{numArgs:0},null);h(["\\rm","\\sf","\\tt","\\bf","\\it"],{numArgs:0},null);h(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in p){a=p[a]}return{type:"font",font:a.slice(1),body:r}});h(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],{numArgs:1},function(e,t){var r=t[0];var a=!n.default.contains(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],e.funcName);var i=!a||n.default.contains(["\\widehat","\\widetilde"],e.funcName);return{type:"accent",label:e.funcName,isStretchy:a,isShifty:i,base:r}});h(["\\'","\\`","\\^","\\~","\\=","\\u","\\.",'\\"',"\\r","\\H","\\v"],{numArgs:1,allowedInText:true,allowedInMath:false},function(e,t){var r=t[0];return{type:"accent",label:e.funcName,isStretchy:false,isShifty:true,base:r}});h(["\\overbrace","\\underbrace"],{numArgs:1},function(e,t){var r=t[0];return{type:"horizBrace",label:e.funcName,isOver:/^\\over/.test(e.funcName),base:r}});h(["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\undertilde"],{numArgs:1},function(e,t){var r=t[0];return{type:"accentUnder",label:e.funcName,base:r}});h(["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xLongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xLongequal","\\xtofrom"],{numArgs:1,numOptionalArgs:1},function(e,t,r){var a=r[0];var n=t[0];return{type:"xArrow",label:e.funcName,body:n,below:a}});h(["\\cancel","\\bcancel","\\xcancel","\\sout","\\fbox"],{numArgs:1},function(e,t){var r=t[0];return{type:"enclose",label:e.funcName,body:r}});h(["\\over","\\choose","\\atop"],{numArgs:0,infix:true},function(e){var t=void 0;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});h(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t,r){var a=r[0];return{type:"cr",size:a}});h(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new l.default("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}});h(["\\raisebox"],{numArgs:2,argTypes:["size","text"],allowedInText:true},function(e,t){var r=t[0];var a=t[1];return{type:"raisebox",dy:r,body:a,value:(0,s.ordargument)(a)}});h(["\\verb"],{numArgs:0,allowedInText:true},function(e){throw new l.default("\\verb ended by end of line instead of matching delimiter")})},{"./ParseError":84,"./ParseNode":85,"./defineFunction":96,"./functions/delimsizing":104,"./functions/genfrac":105,"./functions/katex":106,"./functions/lap":107,"./functions/mod":108,"./functions/op":109,"./functions/operatorname":110,"./functions/phantom":111,"./functions/smash":112,"./utils":121}],104:[function(e,t,r){"use strict";var a=e("../buildCommon");var n=x(a);var i=e("../defineFunction");var l=x(i);var o=e("../delimiter");var u=x(o);var s=e("../mathMLTree");var f=x(s);var d=e("../ParseError");var c=x(d);var h=e("../utils");var v=x(h);var p=e("../buildHTML");var m=y(p);var g=e("../buildMathML");var b=y(g);function y(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function x(e){return e&&e.__esModule?e:{default:e}}var w={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var k=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function M(e,t){if(v.default.contains(k,e.value)){return e}else{throw new c.default("Invalid delimiter: '"+e.value+"' after '"+t.funcName+"'",e)}}(0,l.default)({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);return{type:"delimsizing",size:w[t.funcName].size,mclass:w[t.funcName].mclass,value:a.value}},htmlBuilder:function e(t,r){var a=t.value.value;if(a==="."){return n.default.makeSpan([t.value.mclass])}return u.default.sizedDelim(a,t.value.size,r,t.mode,[t.value.mclass])},mathmlBuilder:function e(t){var r=[];if(t.value.value!=="."){r.push(b.makeText(t.value.value,t.mode))}var a=new f.default.MathNode("mo",r);if(t.value.mclass==="mopen"||t.value.mclass==="mclose"){a.setAttribute("fence","true")}else{a.setAttribute("fence","false")}return a}});(0,l.default)({type:"leftright",names:["\\left","\\right"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);return{type:"leftright",value:a.value}},htmlBuilder:function e(t,r){var a=m.buildExpression(t.value.body,r,true);var i=0;var l=0;var o=false;for(var s=0;s<a.length;s++){if(a[s].isMiddle){o=true}else{i=Math.max(a[s].height,i);l=Math.max(a[s].depth,l)}}i*=r.sizeMultiplier;l*=r.sizeMultiplier;var f=void 0;if(t.value.left==="."){f=m.makeNullDelimiter(r,["mopen"])}else{f=u.default.leftRightDelim(t.value.left,i,l,r,t.mode,["mopen"])}a.unshift(f);if(o){for(var d=1;d<a.length;d++){var c=a[d];if(c.isMiddle){a[d]=u.default.leftRightDelim(c.isMiddle.value,i,l,c.isMiddle.options,t.mode,[]);var h=m.spliceSpaces(c.children,0);if(h){n.default.prependChildren(a[d],h)}}}}var v=void 0;if(t.value.right==="."){v=m.makeNullDelimiter(r,["mclose"])}else{v=u.default.leftRightDelim(t.value.right,i,l,r,t.mode,["mclose"])}a.push(v);return n.default.makeSpan(["minner"],a,r)},mathmlBuilder:function e(t,r){var a=b.buildExpression(t.value.body,r);if(t.value.left!=="."){var n=new f.default.MathNode("mo",[b.makeText(t.value.left,t.mode)]);n.setAttribute("fence","true");a.unshift(n)}if(t.value.right!=="."){var i=new f.default.MathNode("mo",[b.makeText(t.value.right,t.mode)]);i.setAttribute("fence","true");a.push(i)}var l=new f.default.MathNode("mrow",a);return l}});(0,l.default)({type:"middle",names:["\\middle"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);if(!t.parser.leftrightDepth){throw new c.default("\\middle without preceding \\left",a)}return{type:"middle",value:a.value}},htmlBuilder:function e(t,r){var a=void 0;if(t.value.value==="."){a=m.makeNullDelimiter(r,[])}else{a=u.default.sizedDelim(t.value.value,1,r,t.mode,[]);a.isMiddle={value:t.value.value,options:r}}return a},mathmlBuilder:function e(t,r){var a=new f.default.MathNode("mo",[b.makeText(t.value.middle,t.mode)]);a.setAttribute("fence","true");return a}})},{"../ParseError":84,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../delimiter":97,"../mathMLTree":114,"../utils":121}],105:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=b(a);var i=e("../buildCommon");var l=b(i);var o=e("../delimiter");var u=b(o);var s=e("../mathMLTree");var f=b(s);var d=e("../Style");var c=b(d);var h=e("../buildHTML");var v=g(h);var p=e("../buildMathML");var m=g(p);function g(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function b(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac"],props:{numArgs:2,greediness:2},handler:function e(t,r){var a=r[0];var n=r[1];var i=void 0;var l=null;var o=null;var u="auto";switch(t.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;l="(";o=")";break;default:throw new Error("Unrecognized genfrac command")}switch(t.funcName){case"\\dfrac":case"\\dbinom":u="display";break;case"\\tfrac":case"\\tbinom":u="text";break}return{type:"genfrac",numer:a,denom:n,hasBarLine:i,leftDelim:l,rightDelim:o,size:u}},htmlBuilder:function e(t,r){var a=r.style;if(t.value.size==="display"){a=c.default.DISPLAY}else if(t.value.size==="text"){a=c.default.TEXT}var n=a.fracNum();var i=a.fracDen();var o=void 0;o=r.havingStyle(n);var s=v.buildGroup(t.value.numer,o,r);o=r.havingStyle(i);var f=v.buildGroup(t.value.denom,o,r);var d=void 0;var h=void 0;var p=void 0;if(t.value.hasBarLine){d=v.makeLineSpan("frac-line",r);h=d.height;p=d.height}else{d=null;h=0;p=r.fontMetrics().defaultRuleThickness}var m=void 0;var g=void 0;var b=void 0;if(a.size===c.default.DISPLAY.size){m=r.fontMetrics().num1;if(h>0){g=3*p}else{g=7*p}b=r.fontMetrics().denom1}else{if(h>0){m=r.fontMetrics().num2;g=p}else{m=r.fontMetrics().num3;g=3*p}b=r.fontMetrics().denom2}var y=void 0;if(h===0){var x=m-s.depth-(f.height-b);if(x<g){m+=.5*(g-x);b+=.5*(g-x)}y=l.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:f,shift:b},{type:"elem",elem:s,shift:-m}]},r)}else{var w=r.fontMetrics().axisHeight;if(m-s.depth-(w+.5*h)<g){m+=g-(m-s.depth-(w+.5*h))}if(w-.5*h-(f.height-b)<g){b+=g-(w-.5*h-(f.height-b))}var k=-(w-.5*h);y=l.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:f,shift:b},{type:"elem",elem:d,shift:k},{type:"elem",elem:s,shift:-m}]},r)}o=r.havingStyle(a);y.height*=o.sizeMultiplier/r.sizeMultiplier;y.depth*=o.sizeMultiplier/r.sizeMultiplier;var M=void 0;if(a.size===c.default.DISPLAY.size){M=r.fontMetrics().delim1}else{M=r.fontMetrics().delim2}var _=void 0;var S=void 0;if(t.value.leftDelim==null){_=v.makeNullDelimiter(r,["mopen"])}else{_=u.default.customSizedDelim(t.value.leftDelim,M,true,r.havingStyle(a),t.mode,["mopen"])}if(t.value.rightDelim==null){S=v.makeNullDelimiter(r,["mclose"])}else{S=u.default.customSizedDelim(t.value.rightDelim,M,true,r.havingStyle(a),t.mode,["mclose"])}return l.default.makeSpan(["mord"].concat(o.sizingClasses(r)),[_,l.default.makeSpan(["mfrac"],[y]),S],r)},mathmlBuilder:function e(t,r){var a=new f.default.MathNode("mfrac",[m.buildGroup(t.value.numer,r),m.buildGroup(t.value.denom,r)]);if(!t.value.hasBarLine){a.setAttribute("linethickness","0px")}if(t.value.leftDelim!=null||t.value.rightDelim!=null){var n=[];if(t.value.leftDelim!=null){var i=new f.default.MathNode("mo",[new f.default.TextNode(t.value.leftDelim)]);i.setAttribute("fence","true");n.push(i)}n.push(a);if(t.value.rightDelim!=null){var l=new f.default.MathNode("mo",[new f.default.TextNode(t.value.rightDelim)]);l.setAttribute("fence","true");n.push(l)}var o=new f.default.MathNode("mrow",n);return o}return a}})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../delimiter":97,"../mathMLTree":114}],106:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=s(a);var i=e("../buildCommon");var l=s(i);var o=e("../mathMLTree");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"katex",names:["\\KaTeX"],props:{numArgs:0,allowedInText:true},handler:function e(t,r){return{type:"katex"}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["k"],[l.default.mathsym("K",t.mode)],r);var n=l.default.makeSpan(["a"],[l.default.mathsym("A",t.mode)],r);n.height=(n.height+.2)*.75;n.depth=(n.height-.2)*.75;var i=l.default.makeSpan(["t"],[l.default.mathsym("T",t.mode)],r);var o=l.default.makeSpan(["e"],[l.default.mathsym("E",t.mode)],r);o.height=o.height-.2155;o.depth=o.depth+.2155;var u=l.default.makeSpan(["x"],[l.default.mathsym("X",t.mode)],r);return l.default.makeSpan(["mord","katex-logo"],[a,n,i,o,u],r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mtext",[new u.default.TextNode("KaTeX")]);return a}})},{"../buildCommon":91,"../defineFunction":96,"../mathMLTree":114}],107:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{
numArgs:1,allowedInText:true},handler:function e(t,r){var a=r[0];return{type:"lap",alignment:t.funcName.slice(5),body:a}},htmlBuilder:function e(t,r){var a=void 0;if(t.value.alignment==="clap"){a=l.default.makeSpan([],[f.buildGroup(t.value.body,r)]);a=l.default.makeSpan(["inner"],[a],r)}else{a=l.default.makeSpan(["inner"],[f.buildGroup(t.value.body,r)])}var n=l.default.makeSpan(["fix"],[]);return l.default.makeSpan(["mord",t.value.alignment],[a,n],r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mpadded",[c.buildGroup(t.value.body,r)]);if(t.value.alignment!=="rlap"){var n=t.value.alignment==="llap"?"-1":"-0.5";a.setAttribute("lspace",n+"width")}a.setAttribute("width","0px");return a}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],108:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=m(a);var i=e("../buildCommon");var l=m(i);var o=e("../mathMLTree");var u=m(o);var s=e("../Style");var f=m(s);var d=e("../buildHTML");var c=p(d);var h=e("../buildMathML");var v=p(h);function p(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function m(e){return e&&e.__esModule?e:{default:e}}var g=function e(t,r){var a=[];if(t.value.modType==="bmod"){if(!r.style.isTight()){a.push(l.default.makeSpan(["mspace","negativemediumspace"],[],r))}a.push(l.default.makeSpan(["mspace","thickspace"],[],r))}else if(r.style.size===f.default.DISPLAY.size){a.push(l.default.makeSpan(["mspace","quad"],[],r))}else if(t.value.modType==="mod"){a.push(l.default.makeSpan(["mspace","twelvemuspace"],[],r))}else{a.push(l.default.makeSpan(["mspace","eightmuspace"],[],r))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(l.default.mathsym("(",t.mode))}if(t.value.modType!=="pod"){var n=[l.default.mathsym("m",t.mode),l.default.mathsym("o",t.mode),l.default.mathsym("d",t.mode)];if(t.value.modType==="bmod"){a.push(l.default.makeSpan(["mbin"],n,r));a.push(l.default.makeSpan(["mspace","thickspace"],[],r));if(!r.style.isTight()){a.push(l.default.makeSpan(["mspace","negativemediumspace"],[],r))}}else{Array.prototype.push.apply(a,n);a.push(l.default.makeSpan(["mspace","sixmuspace"],[],r))}}if(t.value.value){Array.prototype.push.apply(a,c.buildExpression(t.value.value,r,false))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(l.default.mathsym(")",t.mode))}return l.default.makeFragment(a)};var b=function e(t,r){var a=[];if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(new u.default.MathNode("mo",[v.makeText("(",t.mode)]))}if(t.value.modType!=="pod"){a.push(new u.default.MathNode("mo",[v.makeText("mod",t.mode)]))}if(t.value.value){var n=new u.default.MathNode("mspace");n.setAttribute("width","0.333333em");a.push(n);a=a.concat(v.buildExpression(t.value.value,r))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(new u.default.MathNode("mo",[v.makeText(")",t.mode)]))}return new u.default.MathNode("mo",a)};(0,n.default)({type:"mod",names:["\\bmod"],props:{numArgs:0},handler:function e(t,r){return{type:"mod",modType:"bmod",value:null}},htmlBuilder:g,mathmlBuilder:b});(0,n.default)({type:"mod",names:["\\pod","\\pmod","\\mod"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"mod",modType:t.funcName.substr(1),value:(0,a.ordargument)(n)}},htmlBuilder:g,mathmlBuilder:b})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],109:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=x(a);var i=e("../buildCommon");var l=x(i);var o=e("../domTree");var u=x(o);var s=e("../mathMLTree");var f=x(s);var d=e("../utils");var c=x(d);var h=e("../Style");var v=x(h);var p=e("../buildHTML");var m=y(p);var g=e("../buildMathML");var b=y(g);function y(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function x(e){return e&&e.__esModule?e:{default:e}}var w=function e(t,r){var a=void 0;var n=void 0;var i=false;if(t.type==="supsub"){a=t.value.sup;n=t.value.sub;t=t.value.base;i=true}var o=r.style;var s=["\\smallint"];var f=false;if(o.size===v.default.DISPLAY.size&&t.value.symbol&&!c.default.contains(s,t.value.body)){f=true}var d=void 0;if(t.value.symbol){var h=f?"Size2-Regular":"Size1-Regular";d=l.default.makeSymbol(t.value.body,h,"math",r,["mop","op-symbol",f?"large-op":"small-op"])}else if(t.value.value){var p=m.buildExpression(t.value.value,r,true);if(p.length===1&&p[0]instanceof u.default.symbolNode){d=p[0];d.classes[0]="mop"}else{d=l.default.makeSpan(["mop"],p,r)}}else{var g=[];for(var b=1;b<t.value.body.length;b++){g.push(l.default.mathsym(t.value.body[b],t.mode))}d=l.default.makeSpan(["mop"],g,r)}var y=0;var x=0;if(d instanceof u.default.symbolNode){y=(d.height-d.depth)/2-r.fontMetrics().axisHeight;x=d.italic}if(i){d=l.default.makeSpan([],[d]);var w=void 0;var k=void 0;var M={height:0,depth:0};var _=void 0;var S=void 0;if(a){S=r.havingStyle(o.sup());w=m.buildGroup(a,S,r);k=Math.max(r.fontMetrics().bigOpSpacing1,r.fontMetrics().bigOpSpacing3-w.depth)}if(n){S=r.havingStyle(o.sub());M=m.buildGroup(n,S,r);_=Math.max(r.fontMetrics().bigOpSpacing2,r.fontMetrics().bigOpSpacing4-M.height)}var z=void 0;var T=void 0;var C=void 0;if(!a){T=d.height-y;z=l.default.makeVList({positionType:"top",positionData:T,children:[{type:"kern",size:r.fontMetrics().bigOpSpacing5},{type:"elem",elem:M,marginLeft:-x+"em"},{type:"kern",size:_},{type:"elem",elem:d}]},r)}else if(!n){C=d.depth+y;z=l.default.makeVList({positionType:"bottom",positionData:C,children:[{type:"elem",elem:d},{type:"kern",size:k},{type:"elem",elem:w,marginLeft:x+"em"},{type:"kern",size:r.fontMetrics().bigOpSpacing5}]},r)}else if(!a&&!n){return d}else{C=r.fontMetrics().bigOpSpacing5+M.height+M.depth+_+d.depth+y;z=l.default.makeVList({positionType:"bottom",positionData:C,children:[{type:"kern",size:r.fontMetrics().bigOpSpacing5},{type:"elem",elem:M,marginLeft:-x+"em"},{type:"kern",size:_},{type:"elem",elem:d},{type:"kern",size:k},{type:"elem",elem:w,marginLeft:x+"em"},{type:"kern",size:r.fontMetrics().bigOpSpacing5}]},r)}return l.default.makeSpan(["mop","op-limits"],[z],r)}else{if(y){d.style.position="relative";d.style.top=y+"em"}return d}};var k=function e(t,r){var a=void 0;if(t.value.symbol){a=new f.default.MathNode("mo",[b.makeText(t.value.body,t.mode)])}else if(t.value.value){a=new f.default.MathNode("mo",b.buildExpression(t.value.value,r))}else{a=new f.default.MathNode("mi",[new f.default.TextNode(t.value.body.slice(1))])}return a};(0,n.default)({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],props:{numArgs:0},handler:function e(t,r){return{type:"op",limits:true,symbol:true,body:t.funcName}},htmlBuilder:w,mathmlBuilder:k});(0,n.default)({type:"op",names:["\\mathop"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"op",limits:false,symbol:false,value:(0,a.ordargument)(n)}},htmlBuilder:w,mathmlBuilder:k})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../domTree":98,"../mathMLTree":114,"../utils":121}],110:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=m(a);var i=e("../buildCommon");var l=m(i);var o=e("../mathMLTree");var u=m(o);var s=e("../domTree");var f=m(s);var d=e("../buildHTML");var c=p(d);var h=e("../buildMathML");var v=p(h);function p(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function m(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"operatorname",names:["\\operatorname"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"operatorname",value:(0,a.ordargument)(n)}},htmlBuilder:function e(t,r){var a=[];if(t.value.value.length>0){var n="";var i="";var o=c.buildExpression(t.value.value,r,true);for(var u=0;u<o.length;u++){n=o[u].value;n=n.replace(/\u2212/,"-");n=n.replace(/\u2217/,"*");i=/[\u0391-\u03D7]/.test(n)?"math":"text";a.push(l.default.mathsym(n,i))}}return l.default.makeSpan(["mop"],a,r)},mathmlBuilder:function e(t,r){var a=[];if(t.value.value.length>0){var n=v.buildExpression(t.value.value,r);var i="";for(var l=0;l<n.length;l++){i+=n[l].children[0].text}i=i.replace(/\u2212/g,"-");i=i.replace(/\u2217/g,"*");a=[new u.default.TextNode(i)]}var o=new u.default.MathNode("mi",a);o.setAttribute("mathvariant","normal");var s=new u.default.MathNode("mo",[v.makeText("&ApplyFunction;","text")]);return new f.default.documentFragment([o,s])}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../domTree":98,"../mathMLTree":114}],111:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"phantom",names:["\\phantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"phantom",value:(0,a.ordargument)(n)}},htmlBuilder:function e(t,r){var a=f.buildExpression(t.value.value,r.withPhantom(),false);return new l.default.makeFragment(a)},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);return new u.default.MathNode("mphantom",a)}});(0,n.default)({type:"hphantom",names:["\\hphantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"hphantom",value:(0,a.ordargument)(n),body:n}},htmlBuilder:function e(t,r){var a=l.default.makeSpan([],[f.buildGroup(t.value.body,r.withPhantom())]);a.height=0;a.depth=0;if(a.children){for(var n=0;n<a.children.length;n++){a.children[n].height=0;a.children[n].depth=0}}a=l.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:a}]},r);return a},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);var n=new u.default.MathNode("mphantom",a);n.setAttribute("height","0px");return n}});(0,n.default)({type:"vphantom",names:["\\vphantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"vphantom",value:(0,a.ordargument)(n),body:n}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["inner"],[f.buildGroup(t.value.body,r.withPhantom())]);var n=l.default.makeSpan(["fix"],[]);return l.default.makeSpan(["mord","rlap"],[a,n],r)},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);var n=new u.default.MathNode("mphantom",a);n.setAttribute("width","0px");return n}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],112:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:true},handler:function e(t,r,a){var n=false;var i=false;var l=a[0];if(l){var o="";for(var u=0;u<l.value.length;++u){o=l.value[u].value;if(o==="t"){n=true}else if(o==="b"){i=true}else{n=false;i=false;break}}}else{n=true;i=true}var s=r[0];return{type:"smash",body:s,smashHeight:n,smashDepth:i}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["mord"],[f.buildGroup(t.value.body,r)]);if(!t.value.smashHeight&&!t.value.smashDepth){return a}if(t.value.smashHeight){a.height=0;if(a.children){for(var n=0;n<a.children.length;n++){a.children[n].height=0}}}if(t.value.smashDepth){a.depth=0;if(a.children){for(var i=0;i<a.children.length;i++){a.children[i].depth=0}}}return l.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:a}]},r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mpadded",[c.buildGroup(t.value.body,r)]);if(t.value.smashHeight){a.setAttribute("height","0px")}if(t.value.smashDepth){a.setAttribute("depth","0px")}return a}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],113:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./symbols");var n=u(a);var i=e("./utils");var l=u(i);var o=e("./Token");function u(e){return e&&e.__esModule?e:{default:e}}var s={};r.default=s;function f(e,t){s[e]=t}f("\\bgroup","{");f("\\egroup","}");f("\\begingroup","{");f("\\endgroup","}");f("\\mkern","\\kern");f("\\llap","\\mathllap{\\textrm{#1}}");f("\\rlap","\\mathrlap{\\textrm{#1}}");f("\\clap","\\mathclap{\\textrm{#1}}");f("\\overset","\\mathop{#2}\\limits^{#1}");f("\\underset","\\mathop{#2}\\limits_{#1}");f("\\boxed","\\fbox{\\displaystyle{#1}}");f("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;");f("\\implies","\\DOTSB\\;\\Longrightarrow\\;");f("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var d={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\implies":"\\dotsb","\\impliedby":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\iff":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\bmod":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};f("\\dots",function(e){var t="\\dotso";var r=e.expandAfterFuture().text;if(r in d){t=d[r]}else if(r.substr(0,4)==="\\not"){t="\\dotsb"}else if(r in n.default.math){if(l.default.contains(["bin","rel"],n.default.math[r].group)){t="\\dotsb"}}return t});var c={")":true,"]":true,"\\rbrack":true,"\\}":true,"\\rbrace":true,"\\rangle":true,"\\rceil":true,"\\rfloor":true,"\\rgroup":true,"\\rmoustache":true,"\\right":true,"\\bigr":true,"\\biggr":true,"\\Bigr":true,"\\Biggr":true,$:true,";":true,".":true,",":true};f("\\dotso",function(e){var t=e.future().text;if(t in c){return"\\ldots\\,"}else{return"\\ldots"}});f("\\dotsc",function(e){var t=e.future().text;if(t in c&&t!==","){return"\\ldots\\,"}else{return"\\ldots"}});f("\\cdots",function(e){var t=e.future().text;if(t in c){return"\\@cdots\\,"}else{return"\\@cdots"}});f("\\dotsb","\\cdots");f("\\dotsm","\\cdots");f("\\dotsi","\\!\\cdots");f("\\dotsx","\\ldots\\,");f("\\DOTSI","\\relax");f("\\DOTSB","\\relax");f("\\DOTSX","\\relax");f("\\thinspace","\\,");f("\\medspace","\\:");f("\\thickspace","\\;");f("\\hspace","\\kern{#1}");f("\\ordinarycolon",":");f("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");f("\\dblcolon","\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon");f("\\coloneqq","\\vcentcolon\\mathrel{\\mkern-1.2mu}=");f("\\Coloneqq","\\dblcolon\\mathrel{\\mkern-1.2mu}=");f("\\coloneq","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");f("\\Coloneq","\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");f("\\eqqcolon","=\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\Eqqcolon","=\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\Eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\colonapprox","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx");f("\\Colonapprox","\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx");f("\\colonsim","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim");f("\\Colonsim","\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim");f("\\ratio","\\vcentcolon");f("\\coloncolon","\\dblcolon");f("\\colonequals","\\coloneqq");f("\\coloncolonequals","\\Coloneqq");f("\\equalscolon","\\eqqcolon");f("\\equalscoloncolon","\\Eqqcolon");f("\\colonminus","\\coloneq");f("\\coloncolonminus","\\Coloneq");f("\\minuscolon","\\eqcolon");f("\\minuscoloncolon","\\Eqcolon");f("\\coloncolonapprox","\\Colonapprox");f("\\coloncolonsim","\\Colonsim");f("\\simcolon","\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\simcoloncolon","\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\approxcolon","\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\approxcoloncolon","\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon")},{"./Token":90,"./symbols":118,"./utils":121}],114:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/core-js/get-iterator");var n=d(a);var i=e("babel-runtime/helpers/classCallCheck");var l=d(i);var o=e("babel-runtime/helpers/createClass");var u=d(o);var s=e("./utils");var f=d(s);function d(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,r){(0,l.default)(this,e);this.type=t;this.attributes={};this.children=r||[]}(0,u.default)(e,[{key:"setAttribute",value:function e(t,r){this.attributes[t]=r}},{key:"toNode",value:function e(){var t=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t.setAttribute(r,this.attributes[r])}}var a=true;var i=false;var l=undefined;try{for(var o=(0,n.default)(this.children),u;!(a=(u=o.next()).done);a=true){var s=u.value;t.appendChild(s.toNode())}}catch(e){i=true;l=e}finally{try{if(!a&&o.return){o.return()}}finally{if(i){throw l}}}return t}},{key:"toMarkup",value:function e(){var t="<"+this.type;for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t+=" "+r+'="';t+=f.default.escape(this.attributes[r]);t+='"'}}t+=">";for(var a=0;a<this.children.length;a++){t+=this.children[a].toMarkup()}t+="</"+this.type+">";return t}}]);return e}();var h=function(){function e(t){(0,l.default)(this,e);this.text=t}(0,u.default)(e,[{key:"toNode",value:function e(){return document.createTextNode(this.text)}},{key:"toMarkup",value:function e(){return f.default.escape(this.text)}}]);return e}();r.default={MathNode:c,TextNode:h}},{"./utils":121,"babel-runtime/core-js/get-iterator":3,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],115:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./Parser");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}var l=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var a=new n.default(t,r);return a.parse()};r.default=l},{"./Parser":86}],116:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/slicedToArray");var n=h(a);var i=e("./domTree");var l=h(i);var o=e("./buildCommon");var u=h(o);var s=e("./mathMLTree");var f=h(s);var d=e("./utils");var c=h(d);function h(e){return e&&e.__esModule?e:{default:e}}var v={widehat:"^",widetilde:"~",undertilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23b5",overbrace:"\u23de",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xLongequal:"=",xtofrom:"\u21c4"};var p=function e(t){var r=new f.default.MathNode("mo",[new f.default.TextNode(v[t.substr(1)])]);r.setAttribute("stretchy","true");return r};var m={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xLongequal:[["longequal"],.888,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528]};var g=function e(t){if(t.type==="ordgroup"){return t.value.length}else{return 1}};var b=function e(t,r){var a=t.value.label.substr(1);var i=[];var o=void 0;var s=4e5;var f=0;var d=0;var h=void 0;var v=void 0;var p=void 0;var b=void 0;var y=void 0;if(c.default.contains(["widehat","widetilde","undertilde"],a)){var x=g(t.value.base);var w=void 0;if(x>5){w=a==="widehat"?420:312;s=a==="widehat"?2364:2340;o=a==="widehat"?.42:.34;p=(a==="widehat"?"widehat":"tilde")+"4"}else{var k=[1,1,2,2,3,3][x];if(a==="widehat"){s=[0,1062,2364,2364,2364][k];w=[0,239,300,360,420][k];o=[0,.24,.3,.3,.36,.42][k];p="widehat"+k}else{s=[0,600,1033,2339,2340][k];w=[0,260,286,306,312][k];o=[0,.26,.286,.3,.306,.34][k];p="tilde"+k}}h=new l.default.pathNode(p);i.push(["width","100%"]);i.push(["height",o+"em"]);i.push(["viewBox","0 0 "+s+" "+w]);i.push(["preserveAspectRatio","none"]);b=new l.default.svgNode([h],i);y=u.default.makeSpan([],[b],r)}else{var M=void 0;var _=void 0;var S=[];var z=(0,n.default)(m[a],4);v=z[0];d=z[1];f=z[2];_=z[3];var T=v.length;if(1>T||T>3){throw new Error("Correct katexImagesData or update code below to support\n                "+T+" children.")}o=f/1e3;for(var C=0;C<T;C++){h=new l.default.pathNode(v[C]);i=[["width","400em"],["height",o+"em"]];i.push(["viewBox","0 0 "+s+" "+f]);if(T===2){M=["halfarrow-left","halfarrow-right"][C];_=["xMinYMin","xMaxYMin"][C]}else if(T===3){M=["brace-left","brace-center","brace-right"][C];_=["xMinYMin","xMidYMin","xMaxYMin"][C]}i.push(["preserveAspectRatio",_+" slice"]);b=new l.default.svgNode([h],i);if(T===1){S.push(u.default.makeSpan(["hide-tail"],[b],r))}else{var A=u.default.makeSpan([M],[b],r);A.style.height=o+"em";S.push(A)}}y=T===1?S[0]:u.default.makeSpan(["stretchy"],S,r)}y.height=o;y.style.height=o+"em";if(d>0){y.style.minWidth=d+"em"}return y};var y=function e(t,r,a,n){var i=void 0;var o=t.height+t.depth+2*a;if(/(fbox)|(color)/.test(r)){i=u.default.makeSpan(["stretchy",r],[],n);if(r==="fbox"&&n.color){i.style.borderColor=n.getColor()}}else{var s=[["x1","0"]];var f=[];if(r!=="cancel"){s.push(["y1","0"]);s.push(["x2","100%"]);s.push(["y2","100%"]);s.push(["stroke-width","0.046em"]);f.push(new l.default.lineNode(s))}if(r==="xcancel"){s=[["x1","0"]]}if(r!=="bcancel"){s.push(["y1","100%"]);s.push(["x2","100%"]);s.push(["y2","0"]);s.push(["stroke-width","0.046em"]);f.push(new l.default.lineNode(s))}s=[["width","100%"],["height",o+"em"]];var d=new l.default.svgNode(f,s);i=u.default.makeSpan([],[d],n)}i.height=o;i.style.height=o+"em";return i};r.default={encloseSpan:y,mathMLnode:p,svgSpan:b}},{"./buildCommon":91,"./domTree":98,"./mathMLTree":114,"./utils":121,"babel-runtime/helpers/slicedToArray":10}],117:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={sqrtMain:"M95 622c-2.667 0-7.167-2.667-13.5\n-8S72 604 72 600c0-2 .333-3.333 1-4 1.333-2.667 23.833-20.667 67.5-54s\n65.833-50.333 66.5-51c1.333-1.333 3-2 5-2 4.667 0 8.667 3.333 12 10l173\n378c.667 0 35.333-71 104-213s137.5-285 206.5-429S812 17.333 812 14c5.333\n-9.333 12-14 20-14h399166v40H845.272L620 507 385 993c-2.667 4.667-9 7-19\n7-6 0-10-1-12-3L160 575l-65 47zM834 0h399166v40H845z",sqrtSize1:"M263 601c.667 0 18 39.667 52 119s68.167\n 158.667 102.5 238 51.833 119.333 52.5 120C810 373.333 980.667 17.667 982 11\nc4.667-7.333 11-11 19-11h398999v40H1012.333L741 607c-38.667 80.667-84 175-136\n 283s-89.167 185.333-111.5 232-33.833 70.333-34.5 71c-4.667 4.667-12.333 7-23\n 7l-12-1-109-253c-72.667-168-109.333-252-110-252-10.667 8-22 16.667-34 26-22\n 17.333-33.333 26-34 26l-26-26 76-59 76-60zM1001 0h398999v40H1012z",sqrtSize2:"M1001 0h398999v40H1013.084S929.667 308 749\n 880s-277 876.333-289 913c-4.667 4.667-12.667 7-24 7h-12c-1.333-3.333-3.667\n-11.667-7-25-35.333-125.333-106.667-373.333-214-744-10 12-21 25-33 39l-32 39\nc-6-5.333-15-14-27-26l25-30c26.667-32.667 52-63 76-91l52-60 208 722c56-175.333\n 126.333-397.333 211-666s153.833-488.167 207.5-658.5C944.167 129.167 975 32.667\n 983 10c4-6.667 10-10 18-10zm0 0h398999v40H1013z",sqrtSize3:"M424 2398c-1.333-.667-38.5-172-111.5-514 S202.667 1370.667 202\n 1370c0-2-10.667 14.333-32 49-4.667 7.333-9.833 15.667-15.5 25s-9.833 16-12.5\n 20l-5 7c-4-3.333-8.333-7.667-13-13l-13-13 76-122 77-121 209 968c0-2 84.667\n-361.667 254-1079C896.333 373.667 981.667 13.333 983 10c4-6.667 10-10 18-10\nh398999v40H1014.622S927.332 418.667 742 1206c-185.333 787.333-279.333 1182.333\n-282 1185-2 6-10 9-24 9-8 0-12-.667-12-2zM1001 0h398999v40H1014z",sqrtSize4:"M473 2713C812.333 913.667 982.333 13 983 11c3.333-7.333 9.333\n-11 18-11h399110v40H1017.698S927.168 518 741.5 1506C555.833 2494 462 2989 460\n 2991c-2 6-10 9-24 9-8 0-12-.667-12-2s-5.333-32-16-92c-50.667-293.333-119.667\n-693.333-207-1200 0-1.333-5.333 8.667-16 30l-32 64-16 33-26-26 76-153 77-151\nc.667.667 35.667 202 105 604 67.333 400.667 102 602.667 104 606z\nM1001 0h398999v40H1017z",doubleleftarrow:"M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",doublerightarrow:"M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",leftarrow:"M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",leftbrace:"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",leftbraceunder:"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",leftgroup:"M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",leftgroupunder:"M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",leftharpoon:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",leftharpoonplus:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",leftharpoondown:"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",leftharpoondownplus:"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",lefthook:"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",leftlinesegment:"M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",leftmapsto:"M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",leftToFrom:"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",longequal:"M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",midbrace:"M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",midbraceunder:"M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
rightarrow:"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",rightbrace:"M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",rightbraceunder:"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",rightgroup:"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",rightgroupunder:"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",rightharpoon:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",rightharpoonplus:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",rightharpoondown:"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",rightharpoondownplus:"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",righthook:"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",rightlinesegment:"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",rightToFrom:"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",twoheadleftarrow:"M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",twoheadrightarrow:"M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",tilde1:"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",tilde2:"M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",tilde3:"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",tilde4:"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",widehat1:"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",widehat2:"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat3:"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat4:"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z"};r.default={path:a}},{}],118:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={math:{},text:{}};r.default=a;function n(e,t,r,n,i,l){a[e][i]={font:t,group:r,replace:n};if(l&&n){a[e][n]=a[e][i]}}var i="math";var l="text";var o="main";var u="ams";var s="accent";var f="bin";var d="close";var c="inner";var h="mathord";var v="op";var p="open";var m="punct";var g="rel";var b="spacing";var y="textord";n(i,o,g,"\u2261","\\equiv",true);n(i,o,g,"\u227a","\\prec",true);n(i,o,g,"\u227b","\\succ",true);n(i,o,g,"\u223c","\\sim",true);n(i,o,g,"\u22a5","\\perp");n(i,o,g,"\u2aaf","\\preceq",true);n(i,o,g,"\u2ab0","\\succeq",true);n(i,o,g,"\u2243","\\simeq",true);n(i,o,g,"\u2223","\\mid");n(i,o,g,"\u226a","\\ll");n(i,o,g,"\u226b","\\gg",true);n(i,o,g,"\u224d","\\asymp",true);n(i,o,g,"\u2225","\\parallel");n(i,o,g,"\u22c8","\\bowtie",true);n(i,o,g,"\u2323","\\smile",true);n(i,o,g,"\u2291","\\sqsubseteq",true);n(i,o,g,"\u2292","\\sqsupseteq",true);n(i,o,g,"\u2250","\\doteq",true);n(i,o,g,"\u2322","\\frown",true);n(i,o,g,"\u220b","\\ni",true);n(i,o,g,"\u221d","\\propto",true);n(i,o,g,"\u22a2","\\vdash",true);n(i,o,g,"\u22a3","\\dashv",true);n(i,o,g,"\u220b","\\owns");n(i,o,m,".","\\ldotp");n(i,o,m,"\u22c5","\\cdotp");n(i,o,y,"#","\\#");n(l,o,y,"#","\\#");n(i,o,y,"&","\\&");n(l,o,y,"&","\\&");n(i,o,y,"\u2135","\\aleph");n(i,o,y,"\u2200","\\forall");n(i,o,y,"\u210f","\\hbar");n(i,o,y,"\u2203","\\exists");n(i,o,y,"\u2207","\\nabla");n(i,o,y,"\u266d","\\flat");n(i,o,y,"\u2113","\\ell");n(i,o,y,"\u266e","\\natural");n(i,o,y,"\u2663","\\clubsuit");n(i,o,y,"\u2118","\\wp");n(i,o,y,"\u266f","\\sharp");n(i,o,y,"\u2662","\\diamondsuit");n(i,o,y,"\u211c","\\Re");n(i,o,y,"\u2661","\\heartsuit");n(i,o,y,"\u2111","\\Im");n(i,o,y,"\u2660","\\spadesuit");n(i,o,y,"\u2020","\\dag");n(l,o,y,"\u2020","\\dag");n(l,o,y,"\u2020","\\textdagger");n(i,o,y,"\u2021","\\ddag");n(l,o,y,"\u2021","\\ddag");n(l,o,y,"\u2020","\\textdaggerdbl");n(i,o,d,"\u23b1","\\rmoustache");n(i,o,p,"\u23b0","\\lmoustache");n(i,o,d,"\u27ef","\\rgroup");n(i,o,p,"\u27ee","\\lgroup");n(i,o,f,"\u2213","\\mp");n(i,o,f,"\u2296","\\ominus");n(i,o,f,"\u228e","\\uplus");n(i,o,f,"\u2293","\\sqcap");n(i,o,f,"\u2217","\\ast");n(i,o,f,"\u2294","\\sqcup");n(i,o,f,"\u25ef","\\bigcirc");n(i,o,f,"\u2219","\\bullet");n(i,o,f,"\u2021","\\ddagger");n(i,o,f,"\u2240","\\wr");n(i,o,f,"\u2a3f","\\amalg");n(i,o,f,"&","\\And");n(i,o,g,"\u27f5","\\longleftarrow");n(i,o,g,"\u21d0","\\Leftarrow");n(i,o,g,"\u27f8","\\Longleftarrow");n(i,o,g,"\u27f6","\\longrightarrow");n(i,o,g,"\u21d2","\\Rightarrow");n(i,o,g,"\u27f9","\\Longrightarrow");n(i,o,g,"\u2194","\\leftrightarrow");n(i,o,g,"\u27f7","\\longleftrightarrow");n(i,o,g,"\u21d4","\\Leftrightarrow");n(i,o,g,"\u27fa","\\Longleftrightarrow");n(i,o,g,"\u21a6","\\mapsto");n(i,o,g,"\u27fc","\\longmapsto");n(i,o,g,"\u2197","\\nearrow");n(i,o,g,"\u21a9","\\hookleftarrow");n(i,o,g,"\u21aa","\\hookrightarrow");n(i,o,g,"\u2198","\\searrow");n(i,o,g,"\u21bc","\\leftharpoonup");n(i,o,g,"\u21c0","\\rightharpoonup");n(i,o,g,"\u2199","\\swarrow");n(i,o,g,"\u21bd","\\leftharpoondown");n(i,o,g,"\u21c1","\\rightharpoondown");n(i,o,g,"\u2196","\\nwarrow");n(i,o,g,"\u21cc","\\rightleftharpoons");n(i,u,g,"\u226e","\\nless");n(i,u,g,"\ue010","\\nleqslant");n(i,u,g,"\ue011","\\nleqq");n(i,u,g,"\u2a87","\\lneq");n(i,u,g,"\u2268","\\lneqq");n(i,u,g,"\ue00c","\\lvertneqq");n(i,u,g,"\u22e6","\\lnsim");n(i,u,g,"\u2a89","\\lnapprox");n(i,u,g,"\u2280","\\nprec");n(i,u,g,"\u22e0","\\npreceq");n(i,u,g,"\u22e8","\\precnsim");n(i,u,g,"\u2ab9","\\precnapprox");n(i,u,g,"\u2241","\\nsim");n(i,u,g,"\ue006","\\nshortmid");n(i,u,g,"\u2224","\\nmid");n(i,u,g,"\u22ac","\\nvdash");n(i,u,g,"\u22ad","\\nvDash");n(i,u,g,"\u22ea","\\ntriangleleft");n(i,u,g,"\u22ec","\\ntrianglelefteq");n(i,u,g,"\u228a","\\subsetneq");n(i,u,g,"\ue01a","\\varsubsetneq");n(i,u,g,"\u2acb","\\subsetneqq");n(i,u,g,"\ue017","\\varsubsetneqq");n(i,u,g,"\u226f","\\ngtr");n(i,u,g,"\ue00f","\\ngeqslant");n(i,u,g,"\ue00e","\\ngeqq");n(i,u,g,"\u2a88","\\gneq");n(i,u,g,"\u2269","\\gneqq");n(i,u,g,"\ue00d","\\gvertneqq");n(i,u,g,"\u22e7","\\gnsim");n(i,u,g,"\u2a8a","\\gnapprox");n(i,u,g,"\u2281","\\nsucc");n(i,u,g,"\u22e1","\\nsucceq");n(i,u,g,"\u22e9","\\succnsim");n(i,u,g,"\u2aba","\\succnapprox");n(i,u,g,"\u2246","\\ncong");n(i,u,g,"\ue007","\\nshortparallel");n(i,u,g,"\u2226","\\nparallel");n(i,u,g,"\u22af","\\nVDash");n(i,u,g,"\u22eb","\\ntriangleright");n(i,u,g,"\u22ed","\\ntrianglerighteq");n(i,u,g,"\ue018","\\nsupseteqq");n(i,u,g,"\u228b","\\supsetneq");n(i,u,g,"\ue01b","\\varsupsetneq");n(i,u,g,"\u2acc","\\supsetneqq");n(i,u,g,"\ue019","\\varsupsetneqq");n(i,u,g,"\u22ae","\\nVdash");n(i,u,g,"\u2ab5","\\precneqq");n(i,u,g,"\u2ab6","\\succneqq");n(i,u,g,"\ue016","\\nsubseteqq");n(i,u,f,"\u22b4","\\unlhd");n(i,u,f,"\u22b5","\\unrhd");n(i,u,g,"\u219a","\\nleftarrow");n(i,u,g,"\u219b","\\nrightarrow");n(i,u,g,"\u21cd","\\nLeftarrow");n(i,u,g,"\u21cf","\\nRightarrow");n(i,u,g,"\u21ae","\\nleftrightarrow");n(i,u,g,"\u21ce","\\nLeftrightarrow");n(i,u,g,"\u25b3","\\vartriangle");n(i,u,y,"\u210f","\\hslash");n(i,u,y,"\u25bd","\\triangledown");n(i,u,y,"\u25ca","\\lozenge");n(i,u,y,"\u24c8","\\circledS");n(i,u,y,"\xae","\\circledR");n(l,u,y,"\xae","\\circledR");n(i,u,y,"\u2221","\\measuredangle");n(i,u,y,"\u2204","\\nexists");n(i,u,y,"\u2127","\\mho");n(i,u,y,"\u2132","\\Finv");n(i,u,y,"\u2141","\\Game");n(i,u,y,"k","\\Bbbk");n(i,u,y,"\u2035","\\backprime");n(i,u,y,"\u25b2","\\blacktriangle");n(i,u,y,"\u25bc","\\blacktriangledown");n(i,u,y,"\u25a0","\\blacksquare");n(i,u,y,"\u29eb","\\blacklozenge");n(i,u,y,"\u2605","\\bigstar");n(i,u,y,"\u2222","\\sphericalangle");n(i,u,y,"\u2201","\\complement");n(i,u,y,"\xf0","\\eth");n(i,u,y,"\u2571","\\diagup");n(i,u,y,"\u2572","\\diagdown");n(i,u,y,"\u25a1","\\square");n(i,u,y,"\u25a1","\\Box");n(i,u,y,"\u25ca","\\Diamond");n(i,u,y,"\xa5","\\yen");n(i,u,y,"\u2713","\\checkmark");n(l,u,y,"\u2713","\\checkmark");n(i,u,y,"\u2136","\\beth");n(i,u,y,"\u2138","\\daleth");n(i,u,y,"\u2137","\\gimel");n(i,u,y,"\u03dd","\\digamma");n(i,u,y,"\u03f0","\\varkappa");n(i,u,p,"\u250c","\\ulcorner");n(i,u,d,"\u2510","\\urcorner");n(i,u,p,"\u2514","\\llcorner");n(i,u,d,"\u2518","\\lrcorner");n(i,u,g,"\u2266","\\leqq",true);n(i,u,g,"\u2a7d","\\leqslant");n(i,u,g,"\u2a95","\\eqslantless",true);n(i,u,g,"\u2272","\\lesssim");n(i,u,g,"\u2a85","\\lessapprox");n(i,u,g,"\u224a","\\approxeq",true);n(i,u,f,"\u22d6","\\lessdot");n(i,u,g,"\u22d8","\\lll");n(i,u,g,"\u2276","\\lessgtr");n(i,u,g,"\u22da","\\lesseqgtr");n(i,u,g,"\u2a8b","\\lesseqqgtr");n(i,u,g,"\u2251","\\doteqdot");n(i,u,g,"\u2253","\\risingdotseq",true);n(i,u,g,"\u2252","\\fallingdotseq",true);n(i,u,g,"\u223d","\\backsim",true);n(i,u,g,"\u22cd","\\backsimeq",true);n(i,u,g,"\u2ac5","\\subseteqq",true);n(i,u,g,"\u22d0","\\Subset",true);n(i,u,g,"\u228f","\\sqsubset",true);n(i,u,g,"\u227c","\\preccurlyeq",true);n(i,u,g,"\u22de","\\curlyeqprec",true);n(i,u,g,"\u227e","\\precsim",true);n(i,u,g,"\u2ab7","\\precapprox",true);n(i,u,g,"\u22b2","\\vartriangleleft");n(i,u,g,"\u22b4","\\trianglelefteq");n(i,u,g,"\u22a8","\\vDash");n(i,u,g,"\u22aa","\\Vvdash",true);n(i,u,g,"\u2323","\\smallsmile");n(i,u,g,"\u2322","\\smallfrown");n(i,u,g,"\u224f","\\bumpeq",true);n(i,u,g,"\u224e","\\Bumpeq",true);n(i,u,g,"\u2267","\\geqq",true);n(i,u,g,"\u2a7e","\\geqslant",true);n(i,u,g,"\u2a96","\\eqslantgtr",true);n(i,u,g,"\u2273","\\gtrsim",true);n(i,u,g,"\u2a86","\\gtrapprox",true);n(i,u,f,"\u22d7","\\gtrdot");n(i,u,g,"\u22d9","\\ggg",true);n(i,u,g,"\u2277","\\gtrless",true);n(i,u,g,"\u22db","\\gtreqless",true);n(i,u,g,"\u2a8c","\\gtreqqless",true);n(i,u,g,"\u2256","\\eqcirc",true);n(i,u,g,"\u2257","\\circeq",true);n(i,u,g,"\u225c","\\triangleq",true);n(i,u,g,"\u223c","\\thicksim");n(i,u,g,"\u2248","\\thickapprox");n(i,u,g,"\u2ac6","\\supseteqq",true);n(i,u,g,"\u22d1","\\Supset",true);n(i,u,g,"\u2290","\\sqsupset",true);n(i,u,g,"\u227d","\\succcurlyeq",true);n(i,u,g,"\u22df","\\curlyeqsucc",true);n(i,u,g,"\u227f","\\succsim",true);n(i,u,g,"\u2ab8","\\succapprox",true);n(i,u,g,"\u22b3","\\vartriangleright");n(i,u,g,"\u22b5","\\trianglerighteq");n(i,u,g,"\u22a9","\\Vdash",true);n(i,u,g,"\u2223","\\shortmid");n(i,u,g,"\u2225","\\shortparallel");n(i,u,g,"\u226c","\\between",true);n(i,u,g,"\u22d4","\\pitchfork",true);n(i,u,g,"\u221d","\\varpropto");n(i,u,g,"\u25c0","\\blacktriangleleft");n(i,u,g,"\u2234","\\therefore");n(i,u,g,"\u220d","\\backepsilon");n(i,u,g,"\u25b6","\\blacktriangleright");n(i,u,g,"\u2235","\\because");n(i,u,g,"\u22d8","\\llless");n(i,u,g,"\u22d9","\\gggtr");n(i,u,f,"\u22b2","\\lhd");n(i,u,f,"\u22b3","\\rhd");n(i,u,g,"\u2242","\\eqsim",true);n(i,o,g,"\u22c8","\\Join");n(i,u,g,"\u2251","\\Doteq",true);n(i,u,f,"\u2214","\\dotplus");n(i,u,f,"\u2216","\\smallsetminus");n(i,u,f,"\u22d2","\\Cap");n(i,u,f,"\u22d3","\\Cup");n(i,u,f,"\u2a5e","\\doublebarwedge");n(i,u,f,"\u229f","\\boxminus");n(i,u,f,"\u229e","\\boxplus");n(i,u,f,"\u22c7","\\divideontimes");n(i,u,f,"\u22c9","\\ltimes");n(i,u,f,"\u22ca","\\rtimes");n(i,u,f,"\u22cb","\\leftthreetimes");n(i,u,f,"\u22cc","\\rightthreetimes");n(i,u,f,"\u22cf","\\curlywedge");n(i,u,f,"\u22ce","\\curlyvee");n(i,u,f,"\u229d","\\circleddash");n(i,u,f,"\u229b","\\circledast");n(i,u,f,"\u22c5","\\centerdot");n(i,u,f,"\u22ba","\\intercal");n(i,u,f,"\u22d2","\\doublecap");n(i,u,f,"\u22d3","\\doublecup");n(i,u,f,"\u22a0","\\boxtimes");n(i,u,g,"\u21e2","\\dashrightarrow");n(i,u,g,"\u21e0","\\dashleftarrow");n(i,u,g,"\u21c7","\\leftleftarrows");n(i,u,g,"\u21c6","\\leftrightarrows");n(i,u,g,"\u21da","\\Lleftarrow");n(i,u,g,"\u219e","\\twoheadleftarrow");n(i,u,g,"\u21a2","\\leftarrowtail");n(i,u,g,"\u21ab","\\looparrowleft");n(i,u,g,"\u21cb","\\leftrightharpoons");n(i,u,g,"\u21b6","\\curvearrowleft");n(i,u,g,"\u21ba","\\circlearrowleft");n(i,u,g,"\u21b0","\\Lsh");n(i,u,g,"\u21c8","\\upuparrows");n(i,u,g,"\u21bf","\\upharpoonleft");n(i,u,g,"\u21c3","\\downharpoonleft");n(i,u,g,"\u22b8","\\multimap",true);n(i,u,g,"\u21ad","\\leftrightsquigarrow");n(i,u,g,"\u21c9","\\rightrightarrows");n(i,u,g,"\u21c4","\\rightleftarrows");n(i,u,g,"\u21a0","\\twoheadrightarrow");n(i,u,g,"\u21a3","\\rightarrowtail");n(i,u,g,"\u21ac","\\looparrowright");n(i,u,g,"\u21b7","\\curvearrowright");n(i,u,g,"\u21bb","\\circlearrowright");n(i,u,g,"\u21b1","\\Rsh");n(i,u,g,"\u21ca","\\downdownarrows");n(i,u,g,"\u21be","\\upharpoonright");n(i,u,g,"\u21c2","\\downharpoonright");n(i,u,g,"\u21dd","\\rightsquigarrow");n(i,u,g,"\u21dd","\\leadsto");n(i,u,g,"\u21db","\\Rrightarrow");n(i,u,g,"\u21be","\\restriction");n(i,o,y,"\u2018","`");n(i,o,y,"$","\\$");n(l,o,y,"$","\\$");n(l,o,y,"$","\\textdollar");n(i,o,y,"%","\\%");n(l,o,y,"%","\\%");n(i,o,y,"_","\\_");n(l,o,y,"_","\\_");n(l,o,y,"_","\\textunderscore");n(i,o,y,"\u2220","\\angle");n(i,o,y,"\u221e","\\infty");n(i,o,y,"\u2032","\\prime");n(i,o,y,"\u25b3","\\triangle");n(i,o,y,"\u0393","\\Gamma",true);n(i,o,y,"\u0394","\\Delta",true);n(i,o,y,"\u0398","\\Theta",true);n(i,o,y,"\u039b","\\Lambda",true);n(i,o,y,"\u039e","\\Xi",true);n(i,o,y,"\u03a0","\\Pi",true);n(i,o,y,"\u03a3","\\Sigma",true);n(i,o,y,"\u03a5","\\Upsilon",true);n(i,o,y,"\u03a6","\\Phi",true);n(i,o,y,"\u03a8","\\Psi",true);n(i,o,y,"\u03a9","\\Omega",true);n(i,o,y,"\xac","\\neg");n(i,o,y,"\xac","\\lnot");n(i,o,y,"\u22a4","\\top");n(i,o,y,"\u22a5","\\bot");n(i,o,y,"\u2205","\\emptyset");n(i,u,y,"\u2205","\\varnothing");n(i,o,h,"\u03b1","\\alpha",true);n(i,o,h,"\u03b2","\\beta",true);n(i,o,h,"\u03b3","\\gamma",true);n(i,o,h,"\u03b4","\\delta",true);n(i,o,h,"\u03f5","\\epsilon",true);n(i,o,h,"\u03b6","\\zeta",true);n(i,o,h,"\u03b7","\\eta",true);n(i,o,h,"\u03b8","\\theta",true);n(i,o,h,"\u03b9","\\iota",true);n(i,o,h,"\u03ba","\\kappa",true);n(i,o,h,"\u03bb","\\lambda",true);n(i,o,h,"\u03bc","\\mu",true);n(i,o,h,"\u03bd","\\nu",true);n(i,o,h,"\u03be","\\xi",true);n(i,o,h,"\u03bf","\\omicron",true);n(i,o,h,"\u03c0","\\pi",true);n(i,o,h,"\u03c1","\\rho",true);n(i,o,h,"\u03c3","\\sigma",true);n(i,o,h,"\u03c4","\\tau",true);n(i,o,h,"\u03c5","\\upsilon",true);n(i,o,h,"\u03d5","\\phi",true);n(i,o,h,"\u03c7","\\chi",true);n(i,o,h,"\u03c8","\\psi",true);n(i,o,h,"\u03c9","\\omega",true);n(i,o,h,"\u03b5","\\varepsilon",true);n(i,o,h,"\u03d1","\\vartheta",true);n(i,o,h,"\u03d6","\\varpi",true);n(i,o,h,"\u03f1","\\varrho",true);n(i,o,h,"\u03c2","\\varsigma",true);n(i,o,h,"\u03c6","\\varphi",true);n(i,o,f,"\u2217","*");n(i,o,f,"+","+");n(i,o,f,"\u2212","-");n(i,o,f,"\u22c5","\\cdot");n(i,o,f,"\u2218","\\circ");n(i,o,f,"\xf7","\\div");n(i,o,f,"\xb1","\\pm");n(i,o,f,"\xd7","\\times");n(i,o,f,"\u2229","\\cap");n(i,o,f,"\u222a","\\cup");n(i,o,f,"\u2216","\\setminus");n(i,o,f,"\u2227","\\land");n(i,o,f,"\u2228","\\lor");n(i,o,f,"\u2227","\\wedge");n(i,o,f,"\u2228","\\vee");n(i,o,y,"\u221a","\\surd");n(i,o,p,"(","(");n(i,o,p,"[","[");n(i,o,p,"\u27e8","\\langle");n(i,o,p,"\u2223","\\lvert");n(i,o,p,"\u2225","\\lVert");n(i,o,d,")",")");n(i,o,d,"]","]");n(i,o,d,"?","?");n(i,o,d,"!","!");n(i,o,d,"\u27e9","\\rangle");n(i,o,d,"\u2223","\\rvert");n(i,o,d,"\u2225","\\rVert");n(i,o,g,"=","=");n(i,o,g,"<","<");n(i,o,g,">",">");n(i,o,g,":",":");n(i,o,g,"\u2248","\\approx",true);n(i,o,g,"\u2245","\\cong",true);n(i,o,g,"\u2265","\\ge");n(i,o,g,"\u2265","\\geq",true);n(i,o,g,"\u2190","\\gets");n(i,o,g,">","\\gt");n(i,o,g,"\u2208","\\in",true);n(i,o,g,"\u2209","\\notin");n(i,o,g,"\u0338","\\not");n(i,o,g,"\u2282","\\subset",true);n(i,o,g,"\u2283","\\supset",true);n(i,o,g,"\u2286","\\subseteq",true);n(i,o,g,"\u2287","\\supseteq",true);n(i,u,g,"\u2288","\\nsubseteq");n(i,u,g,"\u2289","\\nsupseteq");n(i,o,g,"\u22a8","\\models");n(i,o,g,"\u2190","\\leftarrow");n(i,o,g,"\u2264","\\le");n(i,o,g,"\u2264","\\leq",true);n(i,o,g,"<","\\lt");n(i,o,g,"\u2260","\\ne");n(i,o,g,"\u2260","\\neq");n(i,o,g,"\u2192","\\rightarrow");n(i,o,g,"\u2192","\\to");n(i,u,g,"\u2271","\\ngeq");n(i,u,g,"\u2270","\\nleq");n(i,o,b,null,"\\!");n(i,o,b,"\xa0","\\ ");n(i,o,b,"\xa0","~");n(i,o,b,null,"\\,");n(i,o,b,null,"\\:");n(i,o,b,null,"\\;");n(i,o,b,null,"\\enspace");n(i,o,b,null,"\\qquad");n(i,o,b,null,"\\quad");n(i,o,b,"\xa0","\\space");n(i,o,m,",",",");n(i,o,m,";",";");n(i,o,m,":","\\colon");n(i,u,f,"\u22bc","\\barwedge");n(i,u,f,"\u22bb","\\veebar");n(i,o,f,"\u2299","\\odot");n(i,o,f,"\u2295","\\oplus");n(i,o,f,"\u2297","\\otimes");n(i,o,y,"\u2202","\\partial");n(i,o,f,"\u2298","\\oslash");n(i,u,f,"\u229a","\\circledcirc");n(i,u,f,"\u22a1","\\boxdot");n(i,o,f,"\u25b3","\\bigtriangleup");n(i,o,f,"\u25bd","\\bigtriangledown");n(i,o,f,"\u2020","\\dagger");n(i,o,f,"\u22c4","\\diamond");n(i,o,f,"\u22c6","\\star");n(i,o,f,"\u25c3","\\triangleleft");n(i,o,f,"\u25b9","\\triangleright");n(i,o,p,"{","\\{");n(l,o,y,"{","\\{");n(l,o,y,"{","\\textbraceleft");n(i,o,d,"}","\\}");n(l,o,y,"}","\\}");n(l,o,y,"}","\\textbraceright");n(i,o,p,"{","\\lbrace");n(i,o,d,"}","\\rbrace");n(i,o,p,"[","\\lbrack");n(i,o,d,"]","\\rbrack");n(l,o,y,"<","\\textless");n(l,o,y,">","\\textgreater");n(i,o,p,"\u230a","\\lfloor");n(i,o,d,"\u230b","\\rfloor");n(i,o,p,"\u2308","\\lceil");n(i,o,d,"\u2309","\\rceil");n(i,o,y,"\\","\\backslash");n(i,o,y,"\u2223","|");n(i,o,y,"\u2223","\\vert");n(l,o,y,"|","\\textbar");n(i,o,y,"\u2225","\\|");n(i,o,y,"\u2225","\\Vert");n(l,o,y,"\u2225","\\textbardbl");n(i,o,g,"\u2191","\\uparrow");n(i,o,g,"\u21d1","\\Uparrow");n(i,o,g,"\u2193","\\downarrow");n(i,o,g,"\u21d3","\\Downarrow");n(i,o,g,"\u2195","\\updownarrow");n(i,o,g,"\u21d5","\\Updownarrow");n(i,o,v,"\u2210","\\coprod");n(i,o,v,"\u22c1","\\bigvee");n(i,o,v,"\u22c0","\\bigwedge");n(i,o,v,"\u2a04","\\biguplus");n(i,o,v,"\u22c2","\\bigcap");n(i,o,v,"\u22c3","\\bigcup");n(i,o,v,"\u222b","\\int");n(i,o,v,"\u222b","\\intop");n(i,o,v,"\u222c","\\iint");n(i,o,v,"\u222d","\\iiint");n(i,o,v,"\u220f","\\prod");n(i,o,v,"\u2211","\\sum");n(i,o,v,"\u2a02","\\bigotimes");n(i,o,v,"\u2a01","\\bigoplus");n(i,o,v,"\u2a00","\\bigodot");n(i,o,v,"\u222e","\\oint");n(i,o,v,"\u2a06","\\bigsqcup");n(i,o,v,"\u222b","\\smallint");n(l,o,c,"\u2026","\\textellipsis");n(i,o,c,"\u2026","\\mathellipsis");n(l,o,c,"\u2026","\\ldots",true);n(i,o,c,"\u2026","\\ldots",true);n(i,o,c,"\u22ef","\\@cdots",true);n(i,o,c,"\u22f1","\\ddots",true);n(i,o,y,"\u22ee","\\vdots",true);n(i,o,s,"\xb4","\\acute");n(i,o,s,"`","\\grave");n(i,o,s,"\xa8","\\ddot");n(i,o,s,"~","\\tilde");n(i,o,s,"\xaf","\\bar");n(i,o,s,"\u02d8","\\breve");n(i,o,s,"\u02c7","\\check");n(i,o,s,"^","\\hat");n(i,o,s,"\u20d7","\\vec");n(i,o,s,"\u02d9","\\dot");n(i,o,h,"\u0131","\\imath");n(i,o,h,"\u0237","\\jmath");n(l,o,s,"\u02ca","\\'");n(l,o,s,"\u02cb","\\`");n(l,o,s,"\u02c6","\\^");n(l,o,s,"\u02dc","\\~");n(l,o,s,"\u02c9","\\=");n(l,o,s,"\u02d8","\\u");n(l,o,s,"\u02d9","\\.");n(l,o,s,"\u02da","\\r");n(l,o,s,"\u02c7","\\v");n(l,o,s,"\xa8",'\\"');n(l,o,s,"\u030b","\\H");n(l,o,y,"\u2013","--");n(l,o,y,"\u2013","\\textendash");n(l,o,y,"\u2014","---");n(l,o,y,"\u2014","\\textemdash");n(l,o,y,"\u2018","`");n(l,o,y,"\u2018","\\textquoteleft");n(l,o,y,"\u2019","'");n(l,o,y,"\u2019","\\textquoteright");n(l,o,y,"\u201c","``");n(l,o,y,"\u201c","\\textquotedblleft");n(l,o,y,"\u201d","''");n(l,o,y,"\u201d","\\textquotedblright");n(i,o,y,"\xb0","\\degree");n(l,o,y,"\xb0","\\degree");n(i,o,h,"\xa3","\\pounds");n(i,o,h,"\xa3","\\mathsterling");n(l,o,h,"\xa3","\\pounds");n(l,o,h,"\xa3","\\textsterling");n(i,u,y,"\u2720","\\maltese");n(l,u,y,"\u2720","\\maltese");n(l,o,b,"\xa0","\\ ");n(l,o,b,"\xa0"," ");n(l,o,b,"\xa0","~");var x='0123456789/@."';for(var w=0;w<x.length;w++){var k=x.charAt(w);n(i,o,y,k,k)}var M='0123456789!@*()-=+[]<>|";:?/.,';for(var _=0;_<M.length;_++){var S=M.charAt(_);n(l,o,y,S,S)}var z="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var T=0;T<z.length;T++){var C=z.charAt(T);n(i,o,h,C,C);n(l,o,y,C,C)}for(var A=192;A<=214;A++){var N=String.fromCharCode(A);n(i,o,h,N,N);n(l,o,y,N,N)}for(var O=216;O<=246;O++){var j=String.fromCharCode(O);n(i,o,h,j,j);n(l,o,y,j,j)}for(var L=248;L<=255;L++){var E=String.fromCharCode(L);n(i,o,h,E,E);n(l,o,y,E,E)}for(var q=1040;q<=1103;q++){var P=String.fromCharCode(q);n(l,o,y,P,P)}n(l,o,y,"\u2013","\u2013");n(l,o,y,"\u2014","\u2014");n(l,o,y,"\u2018","\u2018");n(l,o,y,"\u2019","\u2019");n(l,o,y,"\u201c","\u201c");n(l,o,y,"\u201d","\u201d")},{}],119:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=r.hangulRegex=/[\uAC00-\uD7AF]/;var n=r.cjkRegex=/[\u3000-\u30FF\u4E00-\u9FAF\uAC00-\uD7AF\uFF00-\uFF60]/},{}],120:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.calculateSize=r.validUnit=undefined;var a=e("./ParseError");var n=o(a);var i=e("./Options");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:803/800,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:803/800};var s={ex:true,em:true,mu:true};var f=r.validUnit=function e(t){if(typeof t!=="string"){t=t.unit}return t in u||t in s||t==="ex"};var d=r.calculateSize=function e(t,r){var a=void 0;if(t.unit in u){a=u[t.unit]/r.fontMetrics().ptPerEm/r.sizeMultiplier}else if(t.unit==="mu"){a=r.fontMetrics().cssEmPerMu}else{var i=void 0;if(r.style.isTight()){i=r.havingStyle(r.style.text())}else{i=r}if(t.unit==="ex"){a=i.fontMetrics().xHeight}else if(t.unit==="em"){a=i.fontMetrics().quad}else{throw new n.default("Invalid unit: '"+t.unit+"'")}if(i!==r){a*=i.sizeMultiplier/r.sizeMultiplier}}return Math.min(t.number*a,r.maxSize)}},{"./Options":83,"./ParseError":84}],121:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=Array.prototype.indexOf;var n=function e(t,r){if(t==null){return-1}if(a&&t.indexOf===a){return t.indexOf(r)}var n=t.length;for(var i=0;i<n;i++){if(t[i]===r){return i}}return-1};var i=function e(t,r){return n(t,r)!==-1};var l=function e(t,r){return t===undefined?r:t};var o=/([A-Z])/g;var u=function e(t){return t.replace(o,"-$1").toLowerCase()};var s={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var f=/[&><"']/g;function d(e){return String(e).replace(f,function(e){return s[e]})}var c=void 0;if(typeof document!=="undefined"){var h=document.createElement("span");if("textContent"in h){c=function e(t,r){t.textContent=r}}else{c=function e(t,r){t.innerText=r}}}function v(e){c(e,"")}r.default={contains:i,deflt:l,escape:d,hyphenate:u,indexOf:n,setTextContent:c,clearNode:v}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2016 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.0
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {
        _MAP[i + 96] = i;
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}],3:[function(require,module,exports){
GuppyAST = {};

GuppyAST.tokenise = function(s, tokens){
   var ans = [];
    while(s.length > 0){
	var ok = false;
	for(var i = 0; i < tokens.length; i++){
	    var t = tokens[i];
	    re = RegExp(t.re);
	    var m = re.exec(s);
	    if(m){
		m = m[0];
		s = s.substring(m.length);
		ok = true;
		if(t.type != "space") ans.push({"type":t.type, "value": t.value(m)})
		break;
	    }
	}
	if(!ok){
	    console.log("Tokenising error");
	    return [];
	}
    }
    return ans;
}

GuppyAST.tokenise_e = function(s){
    return GuppyAST.tokenise(s, [
	{"type":"number", "re":"^[0-9.]+", "value":function(m){
	    if(isNaN(Number(m))) throw Exception("Invalid number: "+m);
	    return Number(m);
	}},
	{"type":"operator", "re":"^(<=|>=|!=|>|<|=)", "value":function(m){return m}},
	{"type":"operator", "re":"^[\-+*/!]", "value":function(m){return m}},
	{"type":"name", "re":"^[a-zA-Z]", "value":function(m){return m}},
	{"type":"space", "re":"^\\s+", "value":function(m){return m}},
    ]);
 }

GuppyAST.to_eqlist = function(ast){
    comparators = ["=","!=","<=",">=","<",">"];
    if(ast[1].length == 0 || comparators.indexOf(ast[1][0][0]) < 0) return [ast];
    return GuppyAST.to_eqlist(ast[1][0]).concat([[ast[0],[ast[1][0][1][1],ast[1][1]]]]);
}

GuppyAST.to_text = function(ast){
    var functions = {};
    functions["bracket"] = function(args){return "("+args[0]+")";};
    functions["="] = function(args){return args[0]+" = "+args[1];};
    functions["!="] = function(args){return args[0]+" != "+args[1];};
    functions["<="] = function(args){return args[0]+" <= "+args[1];};
    functions[">="] = function(args){return args[0]+" >= "+args[1];};
    functions["<"] = function(args){return args[0]+" < "+args[1];};
    functions[">"] = function(args){return args[0]+" > "+args[1];};
    functions["*"] = function(args){return "("+args[0]+" * "+args[1]+")";};
    functions["+"] = function(args){return "("+args[0]+" + "+args[1]+")";};
    functions["/"] = function(args){return "("+args[0]+" / "+args[1]+")";};
    functions["fraction"] = function(args){return "("+args[0]+" / "+args[1]+")";};
    functions["-"] = function(args){return args.length == 1 ? "-"+args[0] : "("+args[0]+" - "+args[1]+")";};
    functions["val"] = function(args){return args[0]+"";};
    functions["var"] = function(args){return args[0];};
    functions["exponential"] = function(args){return "("+args[0]+"^"+args[1]+")";};
    functions["factorial"] = function(args){return "("+args[0]+")!";};
    functions["_default"] = function(name, args){return name + "(" + args.join(",") + ")";};
    return GuppyAST.eval(ast, functions);
}

GuppyAST.to_xml = function(ast, symbols, symbol_to_node){
    var prepend_str = function(doc, str){
	doc.documentElement.firstChild.textContent = str + doc.documentElement.firstChild.textContent;
    }
    var append_str = function(doc, str){
	doc.documentElement.lastChild.textContent += str;
    }
    var append_doc = function(doc, doc2){
	var n = doc.documentElement.lastChild;
	var nn = doc2.documentElement.firstChild
	n.firstChild.textContent += nn.firstChild.textContent;
	for(nn = nn.nextSibling; nn; nn = nn.nextSibling){
	    n.parentNode.insertBefore(nn.cloneNode(true),null); 
	}
    }
    var ensure_text_nodes = function(base){
	var l = base.getElementsByTagName("e");
	for(var i = 0; i < l.length; i++){
	    if(!(l[i].firstChild)) l[i].appendChild(base.createTextNode(""));
	}
    }
    var get_symbol = function(name, symbols){
	for(var s in symbols){
	    if(symbols[s].attrs.type == name) return symbols[s];
	}
    }
    var get_content_array = function(args){
	var content = {};
	for(var i = 0; i < args.length; i++){
	    content[i] = [];
	    if(args[i].documentElement.nodeName == "l") content[i].push(args[i].documentElement);
	    else for(var nn = args[i].documentElement.firstChild; nn; nn = nn.nextSibling) content[i].push(nn);
	}
	return content;
    }
    var binop_low = function(args, op, parent){
	var d = args[0].cloneNode(true);
	append_str(d, op);
	append_doc(d, args[1].cloneNode(true));
	if(parent && (parent[0] == "*" || (parent[0] == "-" && parent[1].length == 1)))
	    return make_sym("bracket", [d]);
	else
	    return d;
    }
    var binop_high = function(args, op){
	var d = args[0].cloneNode(true);
	append_doc(d, make_sym(op,[]));
	append_doc(d, args[1].cloneNode(true));
	return d;
    }
    var make_sym = function(name, args){
	var sym = get_symbol(name, symbols);
	if(!sym) throw "Unrecognised symbol: "+name;
	var base = (new window.DOMParser()).parseFromString("<c><e></e><e></e></c>", "text/xml");
	ensure_text_nodes(base);
	var e0 = base.documentElement.firstChild;
	var content = get_content_array(args);
	var f = symbol_to_node(sym, content, base)['f'];
	e0.parentNode.insertBefore(f,e0.nextSibling);
	ensure_text_nodes(base);
	return base;
    }
    var functions = {};

    var ops = ["*","<",">","=","<=",">=","!="];
    for(var i = 0; i < ops.length; i++){
	functions[ops[i]] = function(o){ return function(args){ return binop_high(args, o); }}(ops[i]);
    }
    // functions["*"] = function(args){
    // 	return binop_high(args, "*");
    // };
    functions["/"] = function(args){
	return make_sym("frac",args);
    };
    functions["+"] = function(args, parent){ return binop_low(args, "+", parent); };
    functions["-"] = function(args, parent){
	if(args.length == 1){ var d = args[0].cloneNode(true); prepend_str(d, "-"); return d; }
	else{ return binop_low(args, "-", parent);};
    }
    functions["val"] = function(args){ return (new window.DOMParser()).parseFromString("<c><e>" + args[0] + "</e></c>", "text/xml");};
    functions["var"] = function(args){ return (new window.DOMParser()).parseFromString("<c><e>" + args[0] + "</e></c>", "text/xml");};
    functions["list"] = function(args){
	var base = (new window.DOMParser()).parseFromString("<l></l>", "text/xml");
	for(var i = 0; i < args.length; i++){
	    base.documentElement.appendChild(args[i].documentElement.cloneNode(true));
	}
	base.documentElement.firstChild.setAttribute("s",String(args.length))
	return base;
    };
    // var comparators = {"<":"less",">":"greater","=":"eq","!=":"neq",">=":"geq","<=":"leq"};
    // for(var c in comparators){
    // 	functions[c] = function(args){
    // 	    return make_sym(comparators[c], args);
    // 	}
    // }
    functions["_default"] = function(name, args){
	return make_sym(name, args);
    }
    var ans = GuppyAST.eval(ast, functions);
    var new_base = (new window.DOMParser()).parseFromString("<m></m>", "text/xml");
    for(nn = ans.documentElement.firstChild; nn; nn = nn.nextSibling){
	new_base.documentElement.insertBefore(nn.cloneNode(true),null);
    }
    return new_base;

}

GuppyAST.get_nodes = function(ast, name){
    if(ast.length < 2) return [];
    var ans = [];
    if(ast[0] == name) ans.push(ast[1]);
    if(ast[0] == "var" || ast[0] == "val") return ans;
    for(var i = 0; i < ast[1].length; i++) ans = ans.concat(GuppyAST.get_nodes(ast[1][i], name));
    return ans;
}

GuppyAST.get_vars = function(ast){
    var vars = {};
    var ans = [];
    var l = GuppyAST.get_nodes(ast, "var");
    for(var i = 0; i < l.length; i++) vars[l[i][0]] = true;
    for(var x in vars) ans.push(x);
    return ans;
}

GuppyAST.to_function = function(ast, functions){
    functions = functions || {}
    defaults = {}
    defaults["*"] = function(args){return function(vars){return args[0](vars)*args[1](vars)};};
    defaults["+"] = function(args){return function(vars){return args[0](vars)+args[1](vars)};};
    defaults["/"] = function(args){return function(vars){return args[0](vars)/args[1](vars)};};
    defaults["-"] = function(args){return args.length == 1 ? function(vars){return -args[0](vars)} : function(vars){return args[0](vars)-args[1](vars)};};
    defaults["val"] = function(args){return function(vars){ return args[0]; };};
    defaults["var"] = function(args){return function(vars){ if(args[0] == "pi") return Math.PI; if(args[0] == "e") return Math.E; return vars[args[0]]; };};
    defaults["exponential"] = function(args){return function(vars){return args[0](vars)**args[1](vars)};};
    //defaults["fraction"] = function(args){return function(vars){return args[0](vars)/args[1](vars);};}
    defaults["square_root"] = function(args){return function(vars){return Math.sqrt(args[0](vars))};};
    defaults["sin"] = function(args){return function(vars){return Math.sin(args[0](vars))};};
    defaults["cos"] = function(args){return function(vars){return Math.cos(args[0](vars))};};
    defaults["tan"] = function(args){return function(vars){return Math.tan(args[0](vars))};};
    defaults["log"] = function(args){return function(vars){return Math.log(args[0](vars))};};
    for(var n in defaults) if(!functions[n]) functions[n] = defaults[n];
    return {"function":GuppyAST.eval(ast, functions),"vars":GuppyAST.get_vars(ast)};
}

GuppyAST.eval = function(ast, functions, parent){
    ans = null;
    if(!functions["_default"]) functions["_default"] = function(name, args){ throw "Function not implemented: " + name;}
    
    var args = []
    for(var i = 0; i < ast[1].length; i++){
	if(Object.prototype.toString.call(ast[1][i]) === '[object Array]'){
	    args.push(GuppyAST.eval(ast[1][i], functions, ast));
	}
	else{
	    args.push(ast[1][i]);
	}
    }
    //console.log("Fn",ast[0],functions[ast[0]]);
    if(functions[ast[0]]) ans = functions[ast[0]](args, parent);
    else if(functions["_default"]) ans = functions["_default"](ast[0], args, parent);
    
    //console.log("EVAL",JSON.stringify(ast),'=',ans);
    return ans
}

GuppyAST.parse_e = function(tokens){
    var symbol_table = {};

    var original_symbol = {
	nud: function () { throw Error("Undefined"); },
	led: function (left) { throw Error("Missing operator"); }
    };

    var mul = function(left){ return ["*", [left, this.nud()]]; };
    
    var symbol = function (id, bp) {
	var s = symbol_table[id];
	bp = bp || 0;
	if (s) {
            if (bp >= s.lbp) {
		s.lbp = bp;
            }
	} else {
            s = Object.create(original_symbol);
            s.id = s.value = id;
            s.lbp = bp;
            symbol_table[id] = s;
	}
	return s;
    };

    symbol("(end)");

    s = symbol("(blank)", 60);
    s.nud = function(){ return ["blank"];};
    
    s = symbol("(function)", 60);
    s.led = mul;
    //s.nud = function(){ return [this.value, this.args || [], this.kwargs || {}];};
    s.nud = function(){ return [this.value, this.args || []];};
    
    s = symbol("(literal)", 60);
    s.led = mul;
    s.nud = function(){ return ["val", [this.value]] };

    s = symbol("(pass)", 60);
    s.led = mul;
    s.nud = function(){ return this.args[0] };
    
    s = symbol("(var)", 60);
    s.led = mul;
    s.nud = function(){ return ["var", [this.value]] };

    var token;
    var token_nr = 0;

    var advance = function (id) {
	var a, o, t, v;
	if (id && token.id !== id) {
            throw Error("Expected '" + id + "'");
	}
	if (token_nr >= tokens.length) {
            token = symbol_table["(end)"];
            return;
	}
	t = tokens[token_nr];
	token_nr += 1;
	v = t.value;
	var args = null;
	var kwargs = null;
	a = t.type;
	if (a === "name") {
            o = symbol_table["(var)"];
	} else if (a === "operator") {
            o = symbol_table[v];
            if (!o) {
		throw Exception("Unknown operator.");
            }
	} else if (a ===  "pass") {
            a = "pass";
            o = symbol_table["(pass)"];
	    args = t.args;
	} else if (a ===  "number") {
            a = "literal";
            o = symbol_table["(literal)"];
	} else if (a ===  "function") {
            a = "function";
            o = symbol_table["(function)"];
	    args = t.args;
	    kwargs = t.kwargs;
	} else {
            throw Error("Unexpected token",t);
	}
	token = Object.create(o);
	token.type = a;
	token.value = v;
	if(args) token.args = args;
	if(kwargs) token.kwargs = kwargs;
	return token;
    };


    var expression = function (rbp) {
	var left;
	var t = token;
	advance();
	left = t.nud();
	while (rbp < token.lbp) {
            t = token;
            advance();
            left = t.led(left);
	}
	return left;
    };

    var infix = function (id, bp, led) {
	var s = symbol(id, bp);
	s.led = led || function (left) {
            return [this.value, [left, expression(bp)]];
	};
	return s;
    }

    
    infix("=", 40);
    infix("!=", 40);
    infix("<", 40);
    infix(">", 40);
    infix("<=", 40);
    infix(">=", 40);

    infix("+", 50);
    infix("-", 50);
    infix("*", 60);
    infix("/", 60);
    var prefix = function (id, nud) {
	var s = symbol(id);
	s.nud = nud || function () {
            return [this.value, [expression(70)]];
	};
	return s;
    }

    prefix("-");
    prefix("!");
    prefix("typeof");

    if(tokens.length == 0) return ["blank"];
    
    advance();
    
    return expression(10);
}



GuppyAST.tokenise_text = function(s){
    return GuppyAST.tokenise(s, [
	{"type":"number", "re":"^[0-9.]+", "value":function(m){return Number(m)}},
	{"type":"operator", "re":"^(!=|>=|<=)", "value":function(m){return m;}},
	{"type":"operator", "re":"^[\-+*/,!^()=<>]", "value":function(m){return m}},
	{"type":"name", "re":"^[a-zA-Z_]+", "value":function(m){return m}},
	{"type":"comma", "re":"^,", "value":function(m){return m}},
	{"type":"space", "re":"^\\s+", "value":function(m){return m}},
    ]);
}

GuppyAST.parse_text = function(tokens){
    var symbol_table = {};

    var original_symbol = {
	nud: function () { throw Error("Undefined"); },
	led: function (left) { throw Error("Missing operator"); }
    };

    var mul = function(left){ return ["*", [left, this.nud()]]; };
    
    var symbol = function (id, bp) {
	var s = symbol_table[id];
	bp = bp || 0;
	if (s) {
            if (bp >= s.lbp) {
		s.lbp = bp;
            }
	} else {
            s = Object.create(original_symbol);
            s.id = s.value = id;
            s.lbp = bp;
            symbol_table[id] = s;
	}
	return s;
    };

    symbol("(end)");

    s = symbol("(blank)", 60);
    s.nud = function(){ return ["blank"];};
    
    s = symbol("(literal)", 60);
    s.led = mul;
    s.nud = function(){ return ["val", [this.value]] };

    var get_args = function(){
	var args = [];
	advance()
	if(token.id !== ")"){
	    while(true){
		args.push(expression(0));
		if (token.id !== ",") {
		    break;
		}
		advance(",");
	    }
	}
	advance(")");
	return args;
    }
    
    s = symbol("(var)", 60);
    s.led = mul;
    s.nud = function(){
	if(token.id == "("){
	    return [this.value, get_args()];
	}
	else{
	    return ["var", [this.value]]
	}
    };
    
    var token;
    var token_nr = 0;

    var advance = function (id) {
	var a, o, t, v;
	if (id && token.id !== id) {
            throw Error("Expected '" + id + "'");
	}
	if (token_nr >= tokens.length) {
            token = symbol_table["(end)"];
            return;
	}
	t = tokens[token_nr];
	token_nr += 1;
	v = t.value;
	var args = null;
	var kwargs = null;
	a = t.type;
	if (a === "name") {
            o = symbol_table["(var)"];
	} else if (a === "operator") {
            o = symbol_table[v];
            if (!o) {
		throw Error("Unknown operator.");
            }
	} else if (a ===  "number") {
            a = "literal";
            o = symbol_table["(literal)"];
	} else {
            throw Error("Unexpected token",t);
	}
	token = Object.create(o);
	token.type = a;
	token.value = v;
	if(args) token.args = args;
	//console.log("ADVD",JSON.stringify(token));
	return token;
    };


    var expression = function (rbp) {
	var left;
	var t = token;
	//console.log("T1",JSON.stringify(token));
	advance();
	//console.log("T2",JSON.stringify(token));
	left = t.nud();
	while (rbp < token.lbp) {
            t = token;
            advance();
	    //console.log("RB",JSON.stringify(token));
            left = t.led(left);
	}
	//console.log("POW", rbp, token.id, token.lbp);
	return left;
    };

    var infix = function (id, bp, led) {
	var s = symbol(id, bp);
	s.led = led || function (left) {
            return [this.value, [left, expression(bp)]];
	};
	return s;
    }

    infix("=", 40);
    infix("!=", 40);
    infix("<", 40);
    infix(">", 40);
    infix("<=", 40);
    infix(">=", 40);

    infix("+", 50);
    infix("-", 50);
    infix("*", 60);
    infix("/", 60);
    
    infix("!", 70, function(left){
	return ["factorial", [left]];
    });
    
    infix("^", 70, function(left){
	return ["exponential", [left, expression(70)]];
    });
    
    infix("(", 80, mul);

    symbol("(").nud = function(){
	var ans = expression(0);
	advance(")");
	return ans;
    }
    symbol(")");
    symbol(",");
    
    var prefix = function (id, nud) {
	var s = symbol(id);
	s.nud = nud || function () {
            return [this.value, [expression(70)]];
	};
	return s;
    }

    prefix("-");

    if(tokens.length == 0) return ["blank"];
    
    advance();
    
    return expression(10);
}

module.exports = GuppyAST;

},{}],4:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyUtils = require('./guppy_utils.js');
GuppyDoc = require('./guppy_doc.js');
GuppySymbols = require('./guppy_symbols.js');

String.prototype.splice = function(idx, s){ return (this.slice(0,idx) + s + this.slice(idx)); };
String.prototype.splicen = function(idx, s, n){ return (this.slice(0,idx) + s + this.slice(idx+n));};
String.prototype.search_at = function(idx, s){ return (this.substring(idx-s.length,idx) == s); };

/**
   @class
   @classdesc The backend to the editor.  Should never be constructed directly by the user.
   @constructor 
 */
var GuppyBackend = function(config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {};
    var options = config['options'] || {};
    this.parent = config['parent'];
    
    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;
    this.events = {};
    
    var evts = ["ready", "change", "left_end", "right_end", "done", "completion", "debug", "error", "focus"];
    
    for(var i = 0; i < evts.length; i++){
	var e = evts[i];
	if(e in events) this.events[e] = e in events ? events[e] : null;
    }

    var opts = ["blank_caret", "empty_content", "blacklist", "autoreplace", "cliptype"];
    
    for(var i = 0; i < opts.length; i++){
	var p = opts[i];
	if(p in options) this[p] = options[p];
    }

    this.symbols = {};
    this.doc = new GuppyDoc(options["xml_content"]);
    
    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.space_caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
    if(GuppyBackend.ready && !this.ready){
    	this.ready = true;
	this.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    	this.fire_event("ready");
    }
}

GuppyBackend.ready = false;
GuppyBackend.SEL_NONE = 0;
GuppyBackend.SEL_CURSOR_AT_START = 1;
GuppyBackend.SEL_CURSOR_AT_END = 2;
GuppyBackend.clipboard = null;

/** 
    Get the content of the editor
    @memberof GuppyBackend
    @param {string} t - The type of content to render ("latex", "text", or "xml").
*/
GuppyBackend.prototype.get_content = function(t,r){
    return this.doc.get_content(t,r);
}

/** 
    Set the XML content of the editor
    @memberof GuppyBackend
    @param {string} xml_data - An XML string of the content to place in the editor
*/
GuppyBackend.prototype.set_content = function(xml_data){
    this.set_doc(new GuppyDoc(xml_data));
}

/** 
    Set the document of the editor
    @memberof GuppyBackend
    @param {GuppyDoc} doc - The GuppyDoc that will be the editor's source
*/
GuppyBackend.prototype.set_doc = function(doc){
    this.doc = doc;
    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
}

GuppyBackend.prototype.import_text = function(text){
    var self = this;
    this.doc.import_text(text, this.symbols);
    this.set_doc(this.doc);
}

GuppyBackend.prototype.import_ast = function(ast){
    var self = this;
    this.doc.import_ast(ast, this.symbols);
    this.set_doc(this.doc);
}

GuppyBackend.prototype.fire_event = function(event, args){
    args = args || {};
    args.target = this.parent || this;
    if(this.events[event] && this.ready && GuppyBackend.ready) this.events[event](args);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.remove_symbol = function(name){
    if(this.symbols[name]) delete this.symbols[name];
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbols = function(name, sym){
    var new_syms = GuppySymbols.add_symbols(name, sym);
    for(var s in new_syms){
	this.symbols[s] = new_syms[s];
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_func = function(name, group){
    var new_syms = GuppySymbols.add_symbols("_func", [{"group":group,"symbols":[name]}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_raw = function(name, latex, text, group){
    var s = {}
    s[name] = {"latex":latex,"text":text}
    var new_syms = GuppySymbols.add_symbols("_raw", [{"group":group,"symbols":s}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

GuppyBackend.prototype.select_to = function(loc, sel_cursor, sel_caret, mouse){
    if(loc.current == sel_cursor && loc.caret == sel_caret){
	this.current = loc.current;
	this.caret = loc.caret;
	this.sel_status = GuppyBackend.SEL_NONE;
    }
    else if(loc.pos == "left"){
	this.sel_end = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START, mouse);
    }
    else if(loc.pos == "right"){
	this.sel_start = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END, mouse);
    }
}

GuppyBackend.prototype.set_sel_start = function(){
    this.sel_start = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.set_sel_end = function(){
    this.sel_end = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.add_paths = function(n,path){
    if(n.nodeName == "e"){
	n.setAttribute("path",path);
    }
    else{
	var es = 1, fs = 1, cs = 1, ls = 1;
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c"){ this.add_paths(c, path+"_c"+cs); cs++; }
	    else if(c.nodeName == "f"){ this.add_paths(c, path+"_f"+fs); fs++; }
	    else if(c.nodeName == "l"){ this.add_paths(c, path+"_l"+ls); ls++; }
	    else if(c.nodeName == "e"){ this.add_paths(c, path+"_e"+es); es++; }
	}
    }
}

GuppyBackend.prototype.add_classes_cursors = function(n,path){
    if(n.nodeName == "e"){
	var text = n.firstChild.nodeValue;
	ans = "";
	var sel_cursor;
	var text_node = GuppyUtils.is_text(n);
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel_caret_text = GuppyUtils.is_small(sel_cursor.node) ? GuppyUtils.SMALL_SEL_CARET : GuppyUtils.SEL_CARET;
	    if(!text_node && text.length == 0 && n.parentNode.childElementCount > 1){
		sel_caret_text = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+sel_caret_text+"}}";
	    }
	    else{
		sel_caret_text = "\\blue{"+sel_caret_text+"}";
	    }
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_caret_text = text_node ? "[" : sel_caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_caret_text = text_node ? "]" : "}" + sel_caret_text;
	}
	var caret_text = "";
	var temp_caret_text = "";
	if(text.length == 0){
	    if(text_node) caret_text = "\\_";
	    else if(n.parentNode.childElementCount == 1){
		if(this.current == n){
		    var blank_caret = this.blank_caret || (GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET);
		    ans = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{"+blank_caret+"}}";
		}
		else if(this.temp_cursor.node == n)
		    ans = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
		else
		    ans = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
	    }
	    else if(this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)){
		// These are the empty e elements at either end of
		// a c or m node, such as the space before and
		// after both the sin and x^2 in sin(x^2)
		//
		// Here, we add in a small element so that we can
		// use the mouse to select these areas
		ans = "\\phantom{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{\\cursor[0.1ex]{1ex}}}";
	    }
	}
	for(var i = 0; i < text.length+1; i++){
	    if(n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node){
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = "[";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "]";
		    else
			caret_text = "\\_";
		}
		else{
		    caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET;
		    if(text.length == 0)
			caret_text = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+caret_text+"}}";
		    else{
			caret_text = "\\red{\\xmlClass{main_cursor}{"+caret_text+"}}"
		    }
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "}" + caret_text;
		}
		ans += caret_text;
	    }
	    else if(n == this.current && i == this.caret && text_node){
		ans += caret_text;
	    }
	    else if(this.sel_status != GuppyBackend.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret){
		ans += sel_caret_text;
	    }
	    else if(this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node) 
		    temp_caret_text = ".";
		else{
		    temp_caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.TEMP_SMALL_CARET : GuppyUtils.TEMP_CARET;
		    if(text.length == 0){
			temp_caret_text = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+temp_caret_text+"}}";
		    }
		    else
			temp_caret_text = "\\gray{"+temp_caret_text+"}";
		}
		ans += temp_caret_text;
	    }
	    if(i < text.length) ans += "\\xmlClass{guppy_elt guppy_loc_"+n.getAttribute("path")+"_"+i+"}{"+text[i]+"}";
	}
	if(text_node && n == this.current){
	    ans = "\\xmlClass{guppy_text_current}{{"+ans+"}}";
	}
	n.setAttribute("render", ans);
	n.removeAttribute("path");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c" || c.nodeName == "l" || c.nodeName == "f" || c.nodeName == "e"){ this.add_classes_cursors(c); }
	}
    }
}

GuppyBackend.prototype.remove_cursors_classes = function(n){
    if(n.nodeName == "e"){
	n.removeAttribute("path");
	n.removeAttribute("render");
	n.removeAttribute("current");
	n.removeAttribute("temp");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeType == 1){ this.remove_cursors_classes(c); }
	}
    }
}

GuppyBackend.prototype.down_from_f = function(){
    var nn = this.current.firstChild;
    while(nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
    if(nn != null){
	while(nn.nodeName == 'l') nn = nn.firstChild;
	this.current = nn.firstChild;
    }
}

GuppyBackend.prototype.down_from_f_to_blank = function(){
    var nn = this.current.firstChild;
    while(nn != null && !(nn.nodeName == 'c' && nn.children.length == 1 && nn.firstChild.firstChild.nodeValue == "")){
	nn = nn.nextSibling;
    }
    if(nn != null){
	//Sanity check:
	
	while(nn.nodeName == 'l') nn = nn.firstChild;
	if(nn.nodeName != 'c' || nn.firstChild.nodeName != 'e'){
	    this.problem('dfftb');
	    return;
	}
	this.current = nn.firstChild;
    }
    else this.down_from_f();
}

GuppyBackend.prototype.delete_from_f = function(to_insert){
    var n = this.current;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var middle = to_insert || "";
    var new_node = this.make_e(prev.firstChild.textContent + middle + next.firstChild.textContent);
    this.current = new_node;
    this.caret = prev.firstChild.textContent.length;
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
}

GuppyBackend.prototype.symbol_to_node = function(sym_name, content){
    return GuppySymbols.symbol_to_node(this.symbols[sym_name], content, this.doc.base);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_symbol = function(sym_name){
    var s = this.symbols[sym_name];
    if(s.attrs && this.is_blacklisted(s.attrs.type)){
	return false;
    }
    var node_list = {};
    var content = {};
    var left_piece,right_piece;
    var cur = (s.current) ? s.current.index || 0 : 0;
    var to_remove = [];
    var to_replace = null;
    var replace_f = false;
    
    if(cur > 0){
	cur--;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel = this.sel_get();
	    sel_parent = sel.involved[0].parentNode;
	    to_remove = sel.involved;
	    left_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(0,this.sel_start.caret));
	    right_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(this.sel_start.caret));
	    content[cur] = sel.node_list;
	}
	else if(s.current && s.current.type == 'token'){
	    // If we're at the beginning, then the token is the previous f node
	    if(this.caret == 0 && this.current.previousSibling != null){
		content[cur] = [this.make_e(""), this.current.previousSibling, this.make_e("")];
		to_replace = this.current.previousSibling;
		replace_f = true;
	    }
	    else{
		// look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
		var prev = this.current.firstChild.nodeValue.substring(0,this.caret);
		var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
		if(token != null && token.length > 0){
		    token = token[0];
		    left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret-token.length));
		    right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
		    content[cur] = [this.make_e(token)];
		}
	    }
	}
    }
    if(!replace_f && (left_piece == null || right_piece == null)){
	left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret));
	right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
	to_remove = [this.current];
    }

    // By now:
    // 
    // content contains whatever we want to pre-populate the 'current' field with (if any)
    //
    // right_piece contains whatever content was in an involved node
    // to the right of the cursor but is not part of the insertion.
    // Analogously for left_piece
    //
    // Thus all we should have to do now is symbol_to_node(sym_type,
    // content) and then add the left_piece, resulting node, and
    // right_piece in that order.
    
    var new_current = null;
    var current_parent = this.current.parentNode;
    
    var sym = this.symbol_to_node(sym_name,content);
    var f = sym.f;
    var new_current = sym.first;

    var next = this.current.nextSibling;

    if(replace_f){
	current_parent.replaceChild(f,to_replace);
    }
    else{
	if(to_remove.length == 0) this.current.parentNode.removeChild(this.current);
	
	for(var i = 0; i < to_remove.length; i++){
	    if(next == to_remove[i]) next = next.nextSibling;
	    current_parent.removeChild(to_remove[i]);
	}
	current_parent.insertBefore(left_piece, next);
	current_parent.insertBefore(f, next);
	current_parent.insertBefore(right_piece, next);
    }
    
    this.caret = 0;
    this.current = f;
    if(s.attrs['char'] == "yes" || (s.current && s.attrs && s.current.index >= s.args.length)){
	this.current = this.current.nextSibling;
    }
    else{
	this.down_from_f_to_blank();
	this.caret = this.current.firstChild.textContent.length;
    }

    this.sel_clear();
    this.checkpoint();
    return true;
}

GuppyBackend.prototype.sel_get = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	return null;
    }
    var involved = [];
    var node_list = [];
    var remnant = null;

    if(this.sel_start.node == this.sel_end.node){
	return {"node_list":[this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret, this.sel_end.caret))],
		"remnant":this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret)),
		"involved":[this.sel_start.node]};
    }
    
    node_list.push(this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret)));
    involved.push(this.sel_start.node);
    involved.push(this.sel_end.node);
    remnant = this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret));
    var n = this.sel_start.node.nextSibling;
    while(n != null && n != this.sel_end.node){
	involved.push(n);
	node_list.push(n);
	n = n.nextSibling;
    }
    node_list.push(this.make_e(this.sel_end.node.firstChild.nodeValue.substring(0, this.sel_end.caret)));
    return {"node_list":node_list,
	    "remnant":remnant,
	    "involved":involved,
	    "cursor":0};
}

// GuppyBackend.prototype.print_selection = function(){
//     var sel = this.sel_get();
//     if(sel == null) return "[none]";
//     var ans = "";
//     ans += "node_list: \n";
//     for(var i = 0; i < sel.node_list.length; i++){
// 	var n = sel.node_list[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
//     ans += "\ninvolved: \n";
//     for(var i = 0; i < sel.involved.length; i++){
// 	var n = sel.involved[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
// }

GuppyBackend.prototype.make_e = function(text){
    var base = this.doc.base;
    var new_node = base.createElement("e");
    new_node.appendChild(base.createTextNode(text));
    return new_node;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_string = function(s){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_clear();
    }
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret,s)
    this.caret += s.length;
    this.checkpoint();
    if(this.autoreplace) this.check_for_symbol();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_copy = function(){
    var sel = this.sel_get();
    if(!sel) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < sel.node_list.length; i++){
	var node = sel.node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
}

GuppyBackend.prototype.system_copy = function(text) {
    if (window.clipboardData && window.clipboardData.setData)
        return clipboardData.setData("Text", text);
    else if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
        var textarea = document.createElement("textarea");
        textarea.textContent = text;
        textarea.style.position = "fixed";
	textarea.style.background = "transparent";
        document.body.appendChild(textarea);
        textarea.select();
        try { return document.execCommand("copy"); }
	catch (ex) { return false; }
        finally { document.body.removeChild(textarea); }
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_cut = function(){
    var node_list = this.sel_delete();
    if(!node_list) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < node_list.length; i++){
	var node = node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
    this.checkpoint();
}

GuppyBackend.prototype.insert_nodes = function(node_list, move_cursor){
    var real_clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	real_clipboard.push(node_list[i].cloneNode(true));
    }

    if(real_clipboard.length == 1){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	if(move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	if(move_cursor){
	    this.current = nn;
	    this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
	}
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_paste = function(){
    this.sel_delete();
    this.sel_clear();
    if(!(GuppyBackend.clipboard) || GuppyBackend.clipboard.length == 0) return;
    this.insert_nodes(GuppyBackend.clipboard, true);
    this.checkpoint();
    return;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_clear = function(){
    this.sel_start = null;    
    this.sel_end = null;
    this.sel_status = GuppyBackend.SEL_NONE;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_delete = function(){
    var sel = this.sel_get();
    if(!sel) return null;
    sel_parent = sel.involved[0].parentNode;
    sel_prev = sel.involved[0].previousSibling;
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	sel_parent.removeChild(n);
    }
    if(sel_prev == null){
	if(sel_parent.firstChild == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_parent.firstChild);
    }
    else if(sel_prev.nodeName == 'f'){
	if(sel_prev.nextSibling == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling);
    }
    this.current = sel.remnant
    this.caret = this.sel_start.caret;
    return sel.node_list;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_all = function(){
    this.home();
    this.set_sel_start();
    this.end();
    this.set_sel_end();
    if(this.sel_start.node != this.sel_end.node || this.sel_start.caret != this.sel_end.caret)
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_right = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_start();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
    }
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.current.nextSibling;
	if(nn != null){
	    this.current = nn.nextSibling;
	    this.caret = 0;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
    }
    else{
	this.caret += 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.set_sel_boundary = function(sstatus, mouse){
    if(this.sel_status == GuppyBackend.SEL_NONE || mouse) this.sel_status = sstatus;
    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
	this.set_sel_start();
    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
	this.set_sel_end();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_left = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_end();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_START;
    }
    if(this.caret <= 0){
	var nn = this.current.previousSibling;
	if(nn != null){
	    this.current = nn.previousSibling;
	    this.caret = this.current.firstChild.nodeValue.length;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
    }
    else{
	this.caret -= 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.list_extend_copy_right = function(){this.list_extend("right", true);}
GuppyBackend.prototype.list_extend_copy_left = function(){this.list_extend("left", true);}
GuppyBackend.prototype.list_extend_right = function(){this.list_extend("right", false);}
GuppyBackend.prototype.list_extend_left = function(){this.list_extend("left", false);}
GuppyBackend.prototype.list_extend_up = function(){this.list_extend("up", false);}
GuppyBackend.prototype.list_extend_down = function(){this.list_extend("down", false);}
GuppyBackend.prototype.list_extend_copy_up = function(){this.list_extend("up", true);}
GuppyBackend.prototype.list_extend_copy_down = function(){this.list_extend("down", true);}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_vertical_move = function(down){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var pos = 1;
    var cc = n;
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var new_l = down ? n.parentNode.nextSibling : n.parentNode.previousSibling
    if(!new_l) return;
    var idx = 1;
    var nn = new_l.firstChild;
    while(idx < pos){
	idx++;
	nn = nn.nextSibling;
    }
    this.current = nn.firstChild;
    this.caret = down ? 0 : this.current.firstChild.textContent.length;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_extend = function(direction, copy){
    var base = this.doc.base;
    var vertical = direction == "up" || direction == "down";
    var before = direction == "up" || direction == "left";
    var this_name = vertical ? "l" : "c";
    var n = this.current;
    while(n.parentNode && !(n.nodeName == this_name && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var to_insert;
    
    // check if 2D and horizontal and extend all the other rows if so 
    if(!vertical && n.parentNode.parentNode.nodeName == "l"){
	to_insert = base.createElement("c");
	to_insert.appendChild(this.make_e(""));
	var pos = 1;
	var cc = n;
	while(cc.previousSibling != null){
	    pos++;
	    cc = cc.previousSibling;
	}
	var to_modify = [];
	var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode);
	try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
	catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
	for(var j = 0; j < to_modify.length; j++){
	    var nn = to_modify[j];
	    if(copy) nn.parentNode.insertBefore(nn.cloneNode(true), before ? nn : nn.nextSibling);
	    else nn.parentNode.insertBefore(to_insert.cloneNode(true), before ? nn : nn.nextSibling);
	    nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))+1);
	}
	this.current = before ? n.previousSibling.lastChild : n.nextSibling.firstChild;
	this.caret = this.current.firstChild.textContent.length;
	this.checkpoint();
	return;
    }
    
    if(copy){
	to_insert = n.cloneNode(true);
    }
    else{
	if(vertical){
	    to_insert = base.createElement("l");
	    to_insert.setAttribute("s",n.getAttribute("s"))
	    for(var i = 0; i < parseInt(n.getAttribute("s")); i++){
		var c = base.createElement("c");
		c.appendChild(this.make_e(""));
		to_insert.appendChild(c);
	    }
	}
	else{
	    to_insert = base.createElement("c");
	    to_insert.appendChild(this.make_e(""));
	}
    }
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))+1);
    n.parentNode.insertBefore(to_insert, before ? n : n.nextSibling);
    if(vertical) this.current = to_insert.firstChild.firstChild;
    else this.current = to_insert.firstChild;
    this.caret = 0;
    this.checkpoint();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_col = function(){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    
    // Don't remove if there is only a single column:
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    
    var pos = 1;
    var cc = n;
    
    // Find position of column
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var to_modify = [];
    var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode)
    try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
    catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
    for(var j = 0; j < to_modify.length; j++){
	var nn = to_modify[j];
	nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))-1);
	nn.parentNode.removeChild(nn);
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_row = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'l' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    // Don't remove if there is only a single row:
    if(n.previousSibling != null){
	this.current = n.previousSibling.firstChild.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild.firstChild;
	this.caret = 0;
    }
    else return;

    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    if(n.parentNode.parentNode && n.parentNode.parentNode.nodeName == "l"){
	this.list_remove_col();
	return;
    }
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.right = function(){
    this.sel_clear();
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.doc.xpath_node("following::e[1]", this.current);
	if(nn != null){
	    this.current = nn;
	    this.caret = 0;
	}
	else{
	    this.fire_event("right_end");
	}
    }
    else{
	this.caret += 1;
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.spacebar = function(){
    if(GuppyUtils.is_text(this.current)) this.insert_string(" ");
    else this.space_caret = this.caret;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.left = function(){
    this.sel_clear();
    if(this.caret <= 0){
	var pn = this.doc.xpath_node("preceding::e[1]", this.current);
	if(pn != null){
	    this.current = pn;
	    this.caret = this.current.firstChild.nodeValue.length;
	}
	else{
	    this.fire_event("left_end");
	}
    }
    else{
	this.caret -= 1;
    }
}

GuppyBackend.prototype.delete_from_c = function(){
    var pos = 0;
    var c = this.current.parentNode;
    while(c && c.nodeName == "c"){
	pos++;
	c = c.previousSibling;
    }
    var idx = this.current.parentNode.getAttribute("delete");
    var survivor_node = this.doc.xpath_node("./c[position()="+idx+"]", this.current.parentNode.parentNode);
    var survivor_nodes = [];
    for(var n = survivor_node.firstChild; n != null; n = n.nextSibling){
	survivor_nodes.push(n);
    }
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_nodes(survivor_nodes, pos > idx);
}

GuppyBackend.prototype.delete_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret > 0){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret-1,"",1);
	this.caret--;
    }
    else{
	// The order of these is important
	if(this.current.previousSibling != null && this.current.previousSibling.getAttribute("char") == "yes"){
	    // The previous node is an f node but is really just a character.  Delete it.
	    this.current = this.current.previousSibling;
	    this.delete_from_f();
	}
	else if(this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f'){
	    // We're in an e node just after an f node.  Move back into the f node (delete it?)
	    this.left();
	    return false;
	}
	else if(this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c'){
	    // We're in a c child of an f node, but not the first one.  Go to the previous c
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.left();
		return false;
	    }
	}
	else if(this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')){
	    // We're in the first c child of an f node and at the beginning--delete the f node
	    var par = this.current.parentNode;
	    while(par.parentNode.nodeName == 'l' || par.parentNode.nodeName == 'c'){
		par = par.parentNode;
	    }
	    if(par.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.current = par.parentNode;
		this.delete_from_f();
	    }
	}
	else{
	    // We're at the beginning (hopefully!) 
	    return false;
	}
    }
    return true;
}

GuppyBackend.prototype.delete_forward_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret < this.current.firstChild.nodeValue.length){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret,"",1);
    }
    else{
	//We're at the end
	if(this.current.nextSibling != null){
	    // The next node is an f node.  Delete it.
	    this.current = this.current.nextSibling;
	    this.delete_from_f();
	}
	else if(this.current.parentNode.nodeName == 'c'){
	    // We're in a c child of an f node.  Do nothing
	    return false;
	}
    }
    return true;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.backspace = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_from_e()){
	this.checkpoint();
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.delete_key = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_forward_from_e()){
	this.checkpoint();
    }
}

GuppyBackend.prototype.backslash = function(){
    if(GuppyUtils.is_text(this.current)) return;
    this.insert_symbol("sym_name");
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.tab = function(){
    if(!GuppyUtils.is_symbol(this.current)){
	this.check_for_symbol();
	return;
    }
    var sym_name = this.current.firstChild.textContent;
    var candidates = [];
    for(var n in this.symbols){
	if(n.startsWith(sym_name)) candidates.push(n);
    }
    if(candidates.length == 1){
	this.current.firstChild.textContent = candidates[0];
	this.caret = candidates[0].length;
    }
    else {
	this.fire_event("completion",{"candidates":candidates});
    }
}

GuppyBackend.prototype.right_paren = function(){
    if(this.current.nodeName == 'e' && this.caret < this.current.firstChild.nodeValue.length - 1) return;
    else this.right();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.up = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("up")){
	var t = parseInt(this.current.parentNode.getAttribute("up"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(false);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.down = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("down")){
	var t = parseInt(this.current.parentNode.getAttribute("down"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(true);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.home = function(){
    this.current = this.doc.root().firstChild;
    this.caret = 0;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.end = function(){
    this.current = this.doc.root().lastChild;
    this.caret = this.current.firstChild.nodeValue.length;
}

GuppyBackend.prototype.checkpoint = function(){
    var base = this.doc.base;
    this.current.setAttribute("current","yes");
    this.current.setAttribute("caret",this.caret.toString());
    this.undo_now++;
    this.undo_data[this.undo_now] = base.cloneNode(true);
    this.undo_data.splice(this.undo_now+1, this.undo_data.length);
    this.fire_event("change",{"old":this.undo_data[this.undo_now-1],"new":this.undo_data[this.undo_now]});
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
    if(this.parent && this.parent.ready) this.parent.render(true);
}

GuppyBackend.prototype.restore = function(t){
    this.doc.base = this.undo_data[t].cloneNode(true);
    this.find_current();
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

GuppyBackend.prototype.find_current = function(){
    this.current = this.doc.xpath_node("//*[@current='yes']");
    this.caret = parseInt(this.current.getAttribute("caret"));
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.undo = function(){
    this.sel_clear();
    if(this.undo_now <= 0) return;
    this.undo_now--;
    this.restore(this.undo_now);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.redo = function(){
    this.sel_clear();
    if(this.undo_now >= this.undo_data.length-1) return;
    this.undo_now++;
    this.restore(this.undo_now);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.done = function(s){
    if(GuppyUtils.is_symbol(this.current)) this.complete_symbol();
    else this.fire_event("done");
}

GuppyBackend.prototype.complete_symbol = function(){
    var sym_name = this.current.firstChild.textContent;
    if(!(this.symbols[sym_name])) return;
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_symbol(sym_name);
}

GuppyBackend.prototype.problem = function(message){
    this.fire_event("error",{"message":message});
}

GuppyBackend.prototype.is_blacklisted = function(symb_type){
    for(var i = 0; i < this.blacklist.length; i++)
	if(symb_type == this.blacklist[i]) return true;
    return false;
}

GuppyBackend.prototype.check_for_symbol = function(){
    var instance = this;
    if(GuppyUtils.is_text(this.current)) return;
    for(var s in this.symbols){
	if(instance.current.nodeName == 'e' && s.length <= (instance.caret - instance.space_caret) && !(GuppyUtils.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret,s)){
	    var temp = instance.current.firstChild.nodeValue;
	    var temp_caret = instance.caret;
	    instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0,instance.caret-s.length)+instance.current.firstChild.nodeValue.slice(instance.caret);
	    instance.caret -= s.length;
	    var success = instance.insert_symbol(s);
	    if(!success){
		instance.current.firstChild.nodeValue = temp;
		instance.caret = temp_caret;
	    }
	    break;
	}
    }
}

module.exports = GuppyBackend;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_doc.js":5,"./guppy_symbols.js":6,"./guppy_utils.js":7,"mousetrap":2}],5:[function(require,module,exports){
GuppyAST = require('./guppy_ast.js');

/**
   @class
   @classdesc A class representing a Guppy document
   @param {string} [doc=<m><e></e></m>] - An XML string representing the document
   @constructor 
 */
var GuppyDoc = function(doc){
    doc = doc || "<m><e></e></m>";
    this.set_content(doc);
}

GuppyDoc.prototype.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes") return true;
	n = n.parentNode
	while(n != null && n.nodeName != 'c') n = n.parentNode;
    }
    return false;
}

GuppyDoc.prototype.ensure_text_nodes = function(){
    var l = this.base.getElementsByTagName("e");
    for(var i = 0; i < l.length; i++){
	if(!(l[i].firstChild)) l[i].appendChild(this.base.createTextNode(""));
    }
}

/** 
    Check if document is empty
    @memberof GuppyDoc
    @returns {boolean}
*/
GuppyDoc.prototype.is_blank = function(){
    if(this.base.getElementsByTagName("f").length > 0) return false;
    var l = this.base.getElementsByTagName("e");
    if(l.length == 1 && (!(l[0].firstChild) || l[0].firstChild.textContent == "")) return true;
    return false;
}


/** 
    Get the document as a DOM object
    @memberof GuppyDoc
    @returns {Element}
*/
GuppyDoc.prototype.root = function(){
    return this.base.documentElement;
}

/** 
    Get the content of the document as a string
    @memberof GuppyDoc
    @param {string} t - The rendering method to use ("latex", "text", "ast" (for syntax tree), or "xml" (for internal XML representation))
    @returns {string}
*/
GuppyDoc.prototype.get_content = function(t,r){
    if(t == "xml") return (new XMLSerializer()).serializeToString(this.base);
    else if(t == "ast") return JSON.stringify(this.syntax_tree());
    else if(t == "text") return GuppyAST.to_text(this.syntax_tree());
    else if(t == "function") return GuppyAST.to_function(this.syntax_tree());
    else if(t == "eqns") return GuppyAST.to_eqlist(this.syntax_tree());
    else return this.manual_render(t,this.root(),r);
}

GuppyDoc.prototype.import_text = function(text, syms, s2n){
    var tokens = GuppyAST.tokenise_text(text);
    console.log("TOKENS",JSON.stringify(tokens));
    var ast = GuppyAST.parse_text(tokens);
    console.log("AST",JSON.stringify(ast));
    this.import_ast(ast, syms, s2n);
}

GuppyDoc.prototype.import_ast = function(ast, syms, s2n){
    syms = syms || GuppySymbols.symbols;
    s2n = s2n || GuppySymbols.symbol_to_node;
    var doc = GuppyAST.to_xml(ast, syms, s2n);
    this.base = doc;
    this.ensure_text_nodes();
}

GuppyDoc.prototype.syntax_tree = function(n){
    n = n || this.root()
    if(n.nodeName == "e"){
	console.log("Should never happen");
	//ans = n.firstChild.textContent;
    }
    else if(n.nodeName == "f"){
	var ans = {"args":[], "kwargs":{}};
	ans['value'] = n.getAttribute("type");
	ans['type'] = "function";
	if(n.hasAttribute("ast_value")) ans['value'] = n.getAttribute("ast_value");
	if(n.hasAttribute("ast_type")) ans['type'] = n.getAttribute("ast_type");
	else if(n.getAttribute("char") == "yes") ans['type'] = "name";
	
	var iterator = this.xpath_list("./*[name()='c' or name()='l']", n)
	for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){
	    //if(nn.hasAttribute("name")) ans.kwargs[nn.getAttribute("name")] = this.syntax_tree(nn)
	    //else ans.args.push(this.syntax_tree(nn))
	    ans.args.push(this.syntax_tree(nn))
	}
	//console.log("F",JSON.stringify(ans))
    }
    else if(n.nodeName == "l"){
	ans = [];
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans.push(this.syntax_tree(nn));
	}
	ans = ["list",ans];
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	if(n.hasAttribute("mode") && n.getAttribute("mode") == "text"){
	    ans = n.firstChild.firstChild.textContent;
	}
	else{
	    var tokens = []
	    for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
		if(nn.nodeName == "e"){
		    tokens = tokens.concat(GuppyAST.tokenise_e(nn.firstChild.textContent));
		}
		else if(nn.nodeName == "f"){
		    tokens.push(this.syntax_tree(nn));
		}
	    }
	    //console.log("TOK",tokens);
	    ans = GuppyAST.parse_e(tokens);
	}
    }
    return ans;
}

GuppyDoc.prototype.xpath_node = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

GuppyDoc.prototype.xpath_list = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
}

/** 
    Get the names of symbols used in this document
    @memberof GuppyDoc
    @param {string[]} [groups] - A list of groups you want strings for
    @returns {string[]}
*/
GuppyDoc.prototype.get_symbols = function(groups){
    var types = {};
    var ans = [];
    var iterator = groups ? this.xpath_list("//f") : this.xpath_list("//f[@group='"+groups[i]+"']");
    for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext())
	types[nn.getAttribute("type")] = true;
    for(var t in types)
	ans.push(t);
    return ans;
}

/** 
    Set the content of the document
    @memberof GuppyDoc
    @param {string} xml_data - An XML string representing the content of the document
*/
GuppyDoc.prototype.set_content = function(xml_data){
    this.base = (new window.DOMParser()).parseFromString(xml_data, "text/xml");
    this.ensure_text_nodes();
}

GuppyDoc.bracket_xpath = "(count(./*) != 1 and not \
		          ( \
                            count(./e)=2 and \
			    count(./f)=1 and \
			    count(./e[string-length(text())=0])=2 and \
			    ( \
			      (\
                                count(./f/c)=1 and\
			        count(./f/c[@is_bracket='yes'])=1\
			      )\
			      or\
			      (\
			        f/@char='yes' and \
				count(./e[@current='yes'])=0 and \
				count(./e[@temp='yes'])=0 \
			      )\
			    )\
			  )\
			)  \
			or\
		        (\
			  count(./*) = 1 and \
			  string-length(./e/text()) != 1 and \
			  number(./e/text()) != ./e/text() \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@current = 'yes' \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@temp = 'yes' \
			)"

GuppyDoc.prototype.manual_render = function(t,n,r){
    var ans = "";
    if(n.nodeName == "e"){
	if(t == "latex" && r){
	    ans = n.getAttribute("render");
	}
	else if(t == "text"){
	    ans = n.firstChild.textContent;
	    if(n.previousSibling && n.nextSibling && ans == "")
		ans = " * ";
	    else {
		ans = ans.replace(/(.)([^a-zA-Z0-9.])(.)/g,"$1 $2 $3");
		ans = ans.replace(/([a-zA-Z])(?=\.)/g,"$1 * ");
		ans = ans.replace(/(\.)(?=[a-zA-Z])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z])(?=[a-zA-Z0-9])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z0-9])(?=[a-zA-Z])/g,"$1 * ");
		if(n.previousSibling && n.previousSibling.getAttribute("group") != "operations") ans = ans.replace(/^([a-zA-Z0-9])/g," * $1");
		if(n.nextSibling && n.nextSibling.getAttribute("group") != "operations") ans = ans.replace(/([a-zA-Z0-9])$/g,"$1 * ");
		ans = " "+ans+" ";
	    }
	}
	else{
	    ans = n.firstChild.textContent;
	}
    }
    else if(n.nodeName == "f"){
	var real_type = (t == "latex" && this.is_small(n)) ? "small_latex" : t;
	var nn = this.xpath_node("./b[@p='"+real_type+"']", n) || this.xpath_node("./b[@p='"+t+"']", n);
	if(nn) ans = this.manual_render(t,nn,r);
    }
    else if(n.nodeName == "b"){
	var cs = []
	var i = 1;
	var par = n.parentNode;
	for(var nn = par.firstChild; nn != null; nn = nn.nextSibling)
	    if(nn.nodeName == "c" || nn.nodeName == "l") cs[i++] = this.manual_render(t,nn,r);
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeType == 3) ans += nn.textContent;
	    else if(nn.nodeType == 1){
		if(nn.hasAttribute("d")){
		    var dim = parseInt(nn.getAttribute("d"));
		    var joiner = function(d,l){
			if(d > 1) for(var k = 0; k < l.length; k++) l[k] = joiner(d-1,l[k]);
			return l.join(nn.getAttribute('sep'+(d-1)));
		    }
		    ans += joiner(dim,cs[parseInt(nn.getAttribute("ref"))]);
		}
		else ans += cs[parseInt(nn.getAttribute("ref"))];
	    }
	}
    }
    else if(n.nodeName == "l"){
	ans = [];
	var i = 0;
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans[i++] = this.manual_render(t,nn,r);
	}
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling)
	    ans += this.manual_render(t,nn,r);
	if(t == "latex" &&
           n.getAttribute("bracket") == "yes" &&
	   this.base.evaluate(GuppyDoc.bracket_xpath, n, null,
			 XPathResult.BOOLEAN_TYPE, null).booleanValue){ 
	    ans = "\\left("+ans+"\\right)";
	}
    }
    return ans;
}

GuppyDoc.prototype.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return this.path_to(n.parentNode)+"_"+name+""+ns;
}

module.exports = GuppyDoc;

},{"./guppy_ast.js":3}],6:[function(require,module,exports){
GuppySymbols = {"symbols":{}, "templates":{}};

GuppySymbols.eval_template = function(template, name, args){
    args['name'] = name;
    if(Object.prototype.toString.call(template) == "[object String]"){
	var ans = template;
	for(var name in args){
	    ans = ans.replace(new RegExp("\\{\\$"+name+"\\}"),args[name]);
	}
	return ans;
    }
    else{
	for(var x in template) {
	    template[x] = GuppySymbols.eval_template(template[x], name, args)
	}
	return template;
    }
}

GuppySymbols.symbol_to_node = function(s, content, base){
    
    // s is a symbol
    //
    // content is a list of nodes to insert
    var f = base.createElement("f");
    for(var a in s.attrs){
	f.setAttribute(a, s.attrs[a]);
    }
    if("ast" in s){
	if("type" in s.ast) f.setAttribute("ast_type",s.ast["type"])
	if("value" in s.ast) f.setAttribute("ast_value",s.ast["value"])
    }
    //if(s['char']) f.setAttribute("c","yes");
    
    var first_ref = -1;
    var refs_count = 0;
    var lists = {}
    var first;

    // Make the b nodes for rendering each output    
    for(var t in s["output"]){
	var b = base.createElement("b");
	b.setAttribute("p",t);

	var out = s["output"][t];
	if(typeof out == 'string'){
	    out = out.split(/(\{\$[0-9]+(?:\{[^}]+\})*\})/g);
	    for(var i = 0; i < out.length; i++){
		m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]+\})*)\}$/);
		if(m){
		    out[i] = {'ref':parseInt(m[1])};
		    if(m[2].length > 0){
			mm = m[2].match(/\{[^}]*\}/g);
			out[i]['d'] = mm.length;
			for(var j = 0; j < mm.length; j++){
			    out[i]['sep'+j] = mm[j].substring(1,mm[j].length-1);
			}
		    }
		}
	    }
	}
	for(var i = 0; i < out.length; i++){
	    if(typeof out[i] == 'string' || out[i] instanceof String){
		var nt = base.createTextNode(out[i]);
		b.appendChild(nt);
	    }
	    else{
		var nt = base.createElement("r");
		for(var attr in out[i]){
		    nt.setAttribute(attr,out[i][attr]);
		}
		if(t == 'latex') {
		    if(first_ref == -1) first_ref = out[i]['ref'];
		    if('d' in out[i]) lists[refs_count] = out[i]['d']
		    refs_count++;
		}
		b.appendChild(nt);
	    }
	}
	f.appendChild(b);
    }
    // Now make the c nodes for storing the content
    for(var i = 0; i < refs_count; i++){
	var nc = base.createElement("c");
	if(i in content){
	    var node_list = content[i];
	    for(var se = 0; se < node_list.length; se++){
		nc.appendChild(node_list[se].cloneNode(true));
	    }
	}
	else{
	    var new_e = base.createElement("e");
	    new_e.appendChild(base.createTextNode(""));
	    nc.appendChild(new_e);
	}
	if(i+1 == first_ref) first = nc.lastChild;
	if(s['args']){
	    for(var a in (s['args'][i] || {})){
		nc.setAttribute(a,s['args'][i][a]);
	    }
	}
	if(i in lists){
	    var par = f;
	    if(i in content && content[i][0].nodeName == "l"){
		par.appendChild(content[i][0]);
	    }
	    else{
		for(var j = 0; j < lists[i]; j++){
		    var nl = base.createElement("l");
		    nl.setAttribute("s","1");
		    par.appendChild(nl);
		    par = nl;
		    if(j == lists[i]-1) nl.appendChild(nc);
		}
	    }
	}
	else f.appendChild(nc);
    }
    return {"f":f, "first":first};
}


module.exports = GuppySymbols;

},{}],7:[function(require,module,exports){
var GuppyUtils = {};

GuppyUtils.CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.TEMP_SMALL_CARET = "\\cursor{0.7ex}"
GuppyUtils.TEMP_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_CARET = "\\cursor{0.7ex}"
GuppyUtils.SEL_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_SEL_CARET = "\\cursor{0.7ex}"
GuppyUtils.SEL_COLOR = "red"

GuppyUtils.is_blank = function(n){
    return n.firstChild == null || n.firstChild.nodeValue == '';
}

GuppyUtils.get_length = function(n){
    if(GuppyUtils.is_blank(n) || n.nodeName == 'f') return 0
    return n.firstChild.nodeValue.length;
}

GuppyUtils.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return GuppyUtils.path_to(n.parentNode)+"_"+name+""+ns;
}

GuppyUtils.is_text = function(nn){
    return nn.parentNode.hasAttribute("mode") && (nn.parentNode.getAttribute("mode") == "text" || nn.parentNode.getAttribute("mode") == "symbol");
}

GuppyUtils.is_symbol = function(nn){
    return nn.parentNode.getAttribute("mode") && nn.parentNode.getAttribute("mode") == "symbol";
}

GuppyUtils.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes"){
	    return true;
	}
	n = n.parentNode
	while(n != null && n.nodeName != 'c')
	    n = n.parentNode;
    }
    return false;
}

module.exports = GuppyUtils;

},{}]},{},[4])(4)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImxpYi9rYXRleC9rYXRleC1tb2RpZmllZC5taW4uanMiLCJub2RlX21vZHVsZXMvbW91c2V0cmFwL21vdXNldHJhcC5qcyIsInNyYy9ndXBweV9hc3QuanMiLCJzcmMvZ3VwcHlfYmFja2VuZC5qcyIsInNyYy9ndXBweV9kb2MuanMiLCJzcmMvZ3VwcHlfc3ltYm9scy5qcyIsInNyYy9ndXBweV91dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3B6Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5UkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiKGZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBleHBvcnRzPT09XCJvYmplY3RcIiYmdHlwZW9mIG1vZHVsZSE9PVwidW5kZWZpbmVkXCIpe21vZHVsZS5leHBvcnRzPWUoKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQpe2RlZmluZShbXSxlKX1lbHNle3ZhciB0O2lmKHR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiKXt0PXdpbmRvd31lbHNlIGlmKHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiKXt0PWdsb2JhbH1lbHNlIGlmKHR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIil7dD1zZWxmfWVsc2V7dD10aGlzfXQua2F0ZXg9ZSgpfX0pKGZ1bmN0aW9uKCl7dmFyIGUsdCxyO3JldHVybiBmdW5jdGlvbiBlKHQscixhKXtmdW5jdGlvbiBuKGwsbyl7aWYoIXJbbF0pe2lmKCF0W2xdKXt2YXIgdT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCFvJiZ1KXJldHVybiB1KGwsITApO2lmKGkpcmV0dXJuIGkobCwhMCk7dmFyIHM9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitsK1wiJ1wiKTt0aHJvdyBzLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsc312YXIgZj1yW2xdPXtleHBvcnRzOnt9fTt0W2xdWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciByPXRbbF1bMV1bZV07cmV0dXJuIG4ocj9yOmUpfSxmLGYuZXhwb3J0cyxlLHQscixhKX1yZXR1cm4gcltsXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBsPTA7bDxhLmxlbmd0aDtsKyspbihhW2xdKTtyZXR1cm4gbn0oezE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9zcmMvUGFyc2VFcnJvclwiKTt2YXIgbj1oKGEpO3ZhciBpPWUoXCIuL3NyYy9TZXR0aW5nc1wiKTt2YXIgbD1oKGkpO3ZhciBvPWUoXCIuL3NyYy9idWlsZFRyZWVcIik7dmFyIHU9aChvKTt2YXIgcz1lKFwiLi9zcmMvcGFyc2VUcmVlXCIpO3ZhciBmPWgocyk7dmFyIGQ9ZShcIi4vc3JjL3V0aWxzXCIpO3ZhciBjPWgoZCk7ZnVuY3Rpb24gaChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHY9ZnVuY3Rpb24gZSh0LHIsYSl7Yy5kZWZhdWx0LmNsZWFyTm9kZShyKTt2YXIgbj1uZXcgbC5kZWZhdWx0KGEpO3ZhciBpPSgwLGYuZGVmYXVsdCkodCxuKTt2YXIgbz0oMCx1LmRlZmF1bHQpKGksdCxuKS50b05vZGUoKTtyLmFwcGVuZENoaWxkKG8pfTtpZih0eXBlb2YgZG9jdW1lbnQhPT1cInVuZGVmaW5lZFwiKXtpZihkb2N1bWVudC5jb21wYXRNb2RlIT09XCJDU1MxQ29tcGF0XCIpe3R5cGVvZiBjb25zb2xlIT09XCJ1bmRlZmluZWRcIiYmY29uc29sZS53YXJuKFwiV2FybmluZzogS2FUZVggZG9lc24ndCB3b3JrIGluIHF1aXJrcyBtb2RlLiBNYWtlIHN1cmUgeW91ciBcIitcIndlYnNpdGUgaGFzIGEgc3VpdGFibGUgZG9jdHlwZS5cIik7dj1mdW5jdGlvbiBlKCl7dGhyb3cgbmV3IG4uZGVmYXVsdChcIkthVGVYIGRvZXNuJ3Qgd29yayBpbiBxdWlya3MgbW9kZS5cIil9fX12YXIgcD1mdW5jdGlvbiBlKHQscil7dmFyIGE9bmV3IGwuZGVmYXVsdChyKTt2YXIgbj0oMCxmLmRlZmF1bHQpKHQsYSk7cmV0dXJuKDAsdS5kZWZhdWx0KShuLHQsYSkudG9NYXJrdXAoKX07dmFyIG09ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyBsLmRlZmF1bHQocik7cmV0dXJuKDAsZi5kZWZhdWx0KSh0LGEpfTt0LmV4cG9ydHM9e3JlbmRlcjp2LHJlbmRlclRvU3RyaW5nOnAsX19wYXJzZTptLFBhcnNlRXJyb3I6bi5kZWZhdWx0fX0se1wiLi9zcmMvUGFyc2VFcnJvclwiOjg0LFwiLi9zcmMvU2V0dGluZ3NcIjo4NyxcIi4vc3JjL2J1aWxkVHJlZVwiOjk0LFwiLi9zcmMvcGFyc2VUcmVlXCI6MTE1LFwiLi9zcmMvdXRpbHNcIjoxMjF9XSwyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtkZWZhdWx0OmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vYXJyYXkvZnJvbVwiKSxfX2VzTW9kdWxlOnRydWV9fSx7XCJjb3JlLWpzL2xpYnJhcnkvZm4vYXJyYXkvZnJvbVwiOjEyfV0sMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ZGVmYXVsdDplKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2dldC1pdGVyYXRvclwiKSxfX2VzTW9kdWxlOnRydWV9fSx7XCJjb3JlLWpzL2xpYnJhcnkvZm4vZ2V0LWl0ZXJhdG9yXCI6MTN9XSw0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtkZWZhdWx0OmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vaXMtaXRlcmFibGVcIiksX19lc01vZHVsZTp0cnVlfX0se1wiY29yZS1qcy9saWJyYXJ5L2ZuL2lzLWl0ZXJhYmxlXCI6MTR9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtkZWZhdWx0OmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnlcIiksX19lc01vZHVsZTp0cnVlfX0se1wiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5XCI6MTV9XSw2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtkZWZhdWx0OmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiKSxfX2VzTW9kdWxlOnRydWV9fSx7XCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiOjE2fV0sNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ZGVmYXVsdDplKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9mcmVlemVcIiksX19lc01vZHVsZTp0cnVlfX0se1wiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9mcmVlemVcIjoxN31dLDg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtyLl9fZXNNb2R1bGU9dHJ1ZTtyLmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX19fSx7fV0sOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3IuX19lc01vZHVsZT10cnVlO3ZhciBhPWUoXCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7dmFyIG49aShhKTtmdW5jdGlvbiBpKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1yLmRlZmF1bHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBhPXRbcl07YS5lbnVtZXJhYmxlPWEuZW51bWVyYWJsZXx8ZmFsc2U7YS5jb25maWd1cmFibGU9dHJ1ZTtpZihcInZhbHVlXCJpbiBhKWEud3JpdGFibGU9dHJ1ZTsoMCxuLmRlZmF1bHQpKGUsYS5rZXksYSl9fXJldHVybiBmdW5jdGlvbih0LHIsYSl7aWYocillKHQucHJvdG90eXBlLHIpO2lmKGEpZSh0LGEpO3JldHVybiB0fX0oKX0se1wiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCI6Nn1dLDEwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ci5fX2VzTW9kdWxlPXRydWU7dmFyIGE9ZShcIi4uL2NvcmUtanMvaXMtaXRlcmFibGVcIik7dmFyIG49byhhKTt2YXIgaT1lKFwiLi4vY29yZS1qcy9nZXQtaXRlcmF0b3JcIik7dmFyIGw9byhpKTtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1yLmRlZmF1bHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dmFyIHI9W107dmFyIGE9dHJ1ZTt2YXIgbj1mYWxzZTt2YXIgaT11bmRlZmluZWQ7dHJ5e2Zvcih2YXIgbz0oMCxsLmRlZmF1bHQpKGUpLHU7IShhPSh1PW8ubmV4dCgpKS5kb25lKTthPXRydWUpe3IucHVzaCh1LnZhbHVlKTtpZih0JiZyLmxlbmd0aD09PXQpYnJlYWt9fWNhdGNoKGUpe249dHJ1ZTtpPWV9ZmluYWxseXt0cnl7aWYoIWEmJm9bXCJyZXR1cm5cIl0pb1tcInJldHVyblwiXSgpfWZpbmFsbHl7aWYobil0aHJvdyBpfX1yZXR1cm4gcn1yZXR1cm4gZnVuY3Rpb24odCxyKXtpZihBcnJheS5pc0FycmF5KHQpKXtyZXR1cm4gdH1lbHNlIGlmKCgwLG4uZGVmYXVsdCkoT2JqZWN0KHQpKSl7cmV0dXJuIGUodCxyKX1lbHNle3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfX19KCl9LHtcIi4uL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCI6MyxcIi4uL2NvcmUtanMvaXMtaXRlcmFibGVcIjo0fV0sMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtyLl9fZXNNb2R1bGU9dHJ1ZTt2YXIgYT1lKFwiLi4vY29yZS1qcy9hcnJheS9mcm9tXCIpO3ZhciBuPWkoYSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ci5kZWZhdWx0PWZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLHI9QXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKXtyW3RdPWVbdF19cmV0dXJuIHJ9ZWxzZXtyZXR1cm4oMCxuLmRlZmF1bHQpKGUpfX19LHtcIi4uL2NvcmUtanMvYXJyYXkvZnJvbVwiOjJ9XSwxMjpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3JcIik7ZShcIi4uLy4uL21vZHVsZXMvZXM2LmFycmF5LmZyb21cIik7dC5leHBvcnRzPWUoXCIuLi8uLi9tb2R1bGVzL19jb3JlXCIpLkFycmF5LmZyb219LHtcIi4uLy4uL21vZHVsZXMvX2NvcmVcIjoyNCxcIi4uLy4uL21vZHVsZXMvZXM2LmFycmF5LmZyb21cIjo3MyxcIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvclwiOjc3fV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlXCIpO2UoXCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3JcIik7dC5leHBvcnRzPWUoXCIuLi9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yXCIpfSx7XCIuLi9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yXCI6NzEsXCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3JcIjo3NyxcIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZVwiOjc4fV0sMTQ6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlXCIpO2UoXCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3JcIik7dC5leHBvcnRzPWUoXCIuLi9tb2R1bGVzL2NvcmUuaXMtaXRlcmFibGVcIil9LHtcIi4uL21vZHVsZXMvY29yZS5pcy1pdGVyYWJsZVwiOjcyLFwiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yXCI6NzcsXCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGVcIjo3OH1dLDE1OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4uLy4uL21vZHVsZXMvX2NvcmVcIiksbj1hLkpTT058fChhLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO3QuZXhwb3J0cz1mdW5jdGlvbiBlKHQpe3JldHVybiBuLnN0cmluZ2lmeS5hcHBseShuLGFyZ3VtZW50cyl9fSx7XCIuLi8uLi9tb2R1bGVzL19jb3JlXCI6MjR9XSwxNjpbZnVuY3Rpb24oZSx0LHIpe2UoXCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5XCIpO3ZhciBhPWUoXCIuLi8uLi9tb2R1bGVzL19jb3JlXCIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24gZSh0LHIsbil7cmV0dXJuIGEuZGVmaW5lUHJvcGVydHkodCxyLG4pfX0se1wiLi4vLi4vbW9kdWxlcy9fY29yZVwiOjI0LFwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eVwiOjc1fV0sMTc6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZVwiKTt0LmV4cG9ydHM9ZShcIi4uLy4uL21vZHVsZXMvX2NvcmVcIikuT2JqZWN0LmZyZWV6ZX0se1wiLi4vLi4vbW9kdWxlcy9fY29yZVwiOjI0LFwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZVwiOjc2fV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodHlwZW9mIGUhPVwiZnVuY3Rpb25cIil0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYSBmdW5jdGlvbiFcIik7cmV0dXJuIGV9fSx7fV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faXMtb2JqZWN0XCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighYShlKSl0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYW4gb2JqZWN0IVwiKTtyZXR1cm4gZX19LHtcIi4vX2lzLW9iamVjdFwiOjQwfV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fdG8taW9iamVjdFwiKSxuPWUoXCIuL190by1sZW5ndGhcIiksaT1lKFwiLi9fdG8taW5kZXhcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIsbCl7dmFyIG89YSh0KSx1PW4oby5sZW5ndGgpLHM9aShsLHUpLGY7aWYoZSYmciE9cil3aGlsZSh1PnMpe2Y9b1tzKytdO2lmKGYhPWYpcmV0dXJuIHRydWV9ZWxzZSBmb3IoO3U+cztzKyspaWYoZXx8cyBpbiBvKXtpZihvW3NdPT09cilyZXR1cm4gZXx8c3x8MH1yZXR1cm4hZSYmLTF9fX0se1wiLi9fdG8taW5kZXhcIjo2MixcIi4vX3RvLWlvYmplY3RcIjo2NCxcIi4vX3RvLWxlbmd0aFwiOjY1fV0sMjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fY29mXCIpLG49ZShcIi4vX3drc1wiKShcInRvU3RyaW5nVGFnXCIpLGk9YShmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpPT1cIkFyZ3VtZW50c1wiO3ZhciBsPWZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiBlW3RdfWNhdGNoKGUpe319O3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdCxyLG87cmV0dXJuIGU9PT11bmRlZmluZWQ/XCJVbmRlZmluZWRcIjplPT09bnVsbD9cIk51bGxcIjp0eXBlb2Yocj1sKHQ9T2JqZWN0KGUpLG4pKT09XCJzdHJpbmdcIj9yOmk/YSh0KToobz1hKHQpKT09XCJPYmplY3RcIiYmdHlwZW9mIHQuY2FsbGVlPT1cImZ1bmN0aW9uXCI/XCJBcmd1bWVudHNcIjpvfX0se1wiLi9fY29mXCI6MjMsXCIuL193a3NcIjo2OX1dLDIzOltmdW5jdGlvbihlLHQscil7dmFyIGE9e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBhLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT10LmV4cG9ydHM9e3ZlcnNpb246XCIyLjQuMFwifTtpZih0eXBlb2YgX19lPT1cIm51bWJlclwiKV9fZT1hfSx7fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9fb2JqZWN0LWRwXCIpLG49ZShcIi4vX3Byb3BlcnR5LWRlc2NcIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZih0IGluIGUpYS5mKGUsdCxuKDAscikpO2Vsc2UgZVt0XT1yfX0se1wiLi9fb2JqZWN0LWRwXCI6NTAsXCIuL19wcm9wZXJ0eS1kZXNjXCI6NTZ9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL19hLWZ1bmN0aW9uXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7YShlKTtpZih0PT09dW5kZWZpbmVkKXJldHVybiBlO3N3aXRjaChyKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBlLmNhbGwodCxyKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihyLGEpe3JldHVybiBlLmNhbGwodCxyLGEpfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHIsYSxuKXtyZXR1cm4gZS5jYWxsKHQscixhLG4pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseSh0LGFyZ3VtZW50cyl9fX0se1wiLi9fYS1mdW5jdGlvblwiOjE4fV0sMjc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoZT09dW5kZWZpbmVkKXRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIitlKTtyZXR1cm4gZX19LHt9XSwyODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZShcIi4vX2ZhaWxzXCIpKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYSE9N30pfSx7XCIuL19mYWlsc1wiOjMyfV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faXMtb2JqZWN0XCIpLG49ZShcIi4vX2dsb2JhbFwiKS5kb2N1bWVudCxpPWEobikmJmEobi5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/bi5jcmVhdGVFbGVtZW50KGUpOnt9fX0se1wiLi9fZ2xvYmFsXCI6MzMsXCIuL19pcy1vYmplY3RcIjo0MH1dLDMwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPVwiY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mXCIuc3BsaXQoXCIsXCIpfSx7fV0sMzE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fZ2xvYmFsXCIpLG49ZShcIi4vX2NvcmVcIiksaT1lKFwiLi9fY3R4XCIpLGw9ZShcIi4vX2hpZGVcIiksbz1cInByb3RvdHlwZVwiO3ZhciB1PWZ1bmN0aW9uKGUsdCxyKXt2YXIgcz1lJnUuRixmPWUmdS5HLGQ9ZSZ1LlMsYz1lJnUuUCxoPWUmdS5CLHY9ZSZ1LlcscD1mP246blt0XXx8KG5bdF09e30pLG09cFtvXSxnPWY/YTpkP2FbdF06KGFbdF18fHt9KVtvXSxiLHkseDtpZihmKXI9dDtmb3IoYiBpbiByKXt5PSFzJiZnJiZnW2JdIT09dW5kZWZpbmVkO2lmKHkmJmIgaW4gcCljb250aW51ZTt4PXk/Z1tiXTpyW2JdO3BbYl09ZiYmdHlwZW9mIGdbYl0hPVwiZnVuY3Rpb25cIj9yW2JdOmgmJnk/aSh4LGEpOnYmJmdbYl09PXg/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLGEpe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLGEpfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07dFtvXT1lW29dO3JldHVybiB0fSh4KTpjJiZ0eXBlb2YgeD09XCJmdW5jdGlvblwiP2koRnVuY3Rpb24uY2FsbCx4KTp4O2lmKGMpeyhwLnZpcnR1YWx8fChwLnZpcnR1YWw9e30pKVtiXT14O2lmKGUmdS5SJiZtJiYhbVtiXSlsKG0sYix4KX19fTt1LkY9MTt1Lkc9Mjt1LlM9NDt1LlA9ODt1LkI9MTY7dS5XPTMyO3UuVT02NDt1LlI9MTI4O3QuZXhwb3J0cz11fSx7XCIuL19jb3JlXCI6MjQsXCIuL19jdHhcIjoyNixcIi4vX2dsb2JhbFwiOjMzLFwiLi9faGlkZVwiOjM1fV0sMzI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiB0cnVlfX19LHt9XSwzMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXQuZXhwb3J0cz10eXBlb2Ygd2luZG93IT1cInVuZGVmaW5lZFwiJiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6dHlwZW9mIHNlbGYhPVwidW5kZWZpbmVkXCImJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtpZih0eXBlb2YgX19nPT1cIm51bWJlclwiKV9fZz1hfSx7fV0sMzQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5jYWxsKGUsdCl9fSx7fV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fb2JqZWN0LWRwXCIpLG49ZShcIi4vX3Byb3BlcnR5LWRlc2NcIik7dC5leHBvcnRzPWUoXCIuL19kZXNjcmlwdG9yc1wiKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIGEuZihlLHQsbigxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe2VbdF09cjtyZXR1cm4gZX19LHtcIi4vX2Rlc2NyaXB0b3JzXCI6MjgsXCIuL19vYmplY3QtZHBcIjo1MCxcIi4vX3Byb3BlcnR5LWRlc2NcIjo1Nn1dLDM2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoXCIuL19nbG9iYWxcIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0se1wiLi9fZ2xvYmFsXCI6MzN9XSwzNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZShcIi4vX2Rlc2NyaXB0b3JzXCIpJiYhZShcIi4vX2ZhaWxzXCIpKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlKFwiLi9fZG9tLWNyZWF0ZVwiKShcImRpdlwiKSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYSE9N30pfSx7XCIuL19kZXNjcmlwdG9yc1wiOjI4LFwiLi9fZG9tLWNyZWF0ZVwiOjI5LFwiLi9fZmFpbHNcIjozMn1dLDM4OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX2NvZlwiKTt0LmV4cG9ydHM9T2JqZWN0KFwielwiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGEoZSk9PVwiU3RyaW5nXCI/ZS5zcGxpdChcIlwiKTpPYmplY3QoZSl9fSx7XCIuL19jb2ZcIjoyM31dLDM5OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX2l0ZXJhdG9yc1wiKSxuPWUoXCIuL193a3NcIikoXCJpdGVyYXRvclwiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT11bmRlZmluZWQmJihhLkFycmF5PT09ZXx8aVtuXT09PWUpfX0se1wiLi9faXRlcmF0b3JzXCI6NDYsXCIuL193a3NcIjo2OX1dLDQwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZT09PVwib2JqZWN0XCI/ZSE9PW51bGw6dHlwZW9mIGU9PT1cImZ1bmN0aW9uXCJ9fSx7fV0sNDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fYW4tb2JqZWN0XCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXt0cnl7cmV0dXJuIG4/dChhKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2godCl7dmFyIGk9ZVtcInJldHVyblwiXTtpZihpIT09dW5kZWZpbmVkKWEoaS5jYWxsKGUpKTt0aHJvdyB0fX19LHtcIi4vX2FuLW9iamVjdFwiOjIwfV0sNDI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9fb2JqZWN0LWNyZWF0ZVwiKSxuPWUoXCIuL19wcm9wZXJ0eS1kZXNjXCIpLGk9ZShcIi4vX3NldC10by1zdHJpbmctdGFnXCIpLGw9e307ZShcIi4vX2hpZGVcIikobCxlKFwiLi9fd2tzXCIpKFwiaXRlcmF0b3JcIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9YShsLHtuZXh0Om4oMSxyKX0pO2koZSx0K1wiIEl0ZXJhdG9yXCIpfX0se1wiLi9faGlkZVwiOjM1LFwiLi9fb2JqZWN0LWNyZWF0ZVwiOjQ5LFwiLi9fcHJvcGVydHktZGVzY1wiOjU2LFwiLi9fc2V0LXRvLXN0cmluZy10YWdcIjo1OCxcIi4vX3drc1wiOjY5fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9fbGlicmFyeVwiKSxuPWUoXCIuL19leHBvcnRcIiksaT1lKFwiLi9fcmVkZWZpbmVcIiksbD1lKFwiLi9faGlkZVwiKSxvPWUoXCIuL19oYXNcIiksdT1lKFwiLi9faXRlcmF0b3JzXCIpLHM9ZShcIi4vX2l0ZXItY3JlYXRlXCIpLGY9ZShcIi4vX3NldC10by1zdHJpbmctdGFnXCIpLGQ9ZShcIi4vX29iamVjdC1ncG9cIiksYz1lKFwiLi9fd2tzXCIpKFwiaXRlcmF0b3JcIiksaD0hKFtdLmtleXMmJlwibmV4dFwiaW5bXS5rZXlzKCkpLHY9XCJAQGl0ZXJhdG9yXCIscD1cImtleXNcIixtPVwidmFsdWVzXCI7dmFyIGc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGIseSx4LHcpe3Mocix0LGIpO3ZhciBrPWZ1bmN0aW9uKGUpe2lmKCFoJiZlIGluIHopcmV0dXJuIHpbZV07c3dpdGNoKGUpe2Nhc2UgcDpyZXR1cm4gZnVuY3Rpb24gdCgpe3JldHVybiBuZXcgcih0aGlzLGUpfTtjYXNlIG06cmV0dXJuIGZ1bmN0aW9uIHQoKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uIHQoKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19O3ZhciBNPXQrXCIgSXRlcmF0b3JcIixfPXk9PW0sUz1mYWxzZSx6PWUucHJvdG90eXBlLFQ9eltjXXx8elt2XXx8eSYmelt5XSxDPVR8fGsoeSksQT15PyFfP0M6ayhcImVudHJpZXNcIik6dW5kZWZpbmVkLE49dD09XCJBcnJheVwiP3ouZW50cmllc3x8VDpULE8saixMO2lmKE4pe0w9ZChOLmNhbGwobmV3IGUpKTtpZihMIT09T2JqZWN0LnByb3RvdHlwZSl7ZihMLE0sdHJ1ZSk7aWYoIWEmJiFvKEwsYykpbChMLGMsZyl9fWlmKF8mJlQmJlQubmFtZSE9PW0pe1M9dHJ1ZTtDPWZ1bmN0aW9uIGUoKXtyZXR1cm4gVC5jYWxsKHRoaXMpfX1pZigoIWF8fHcpJiYoaHx8U3x8IXpbY10pKXtsKHosYyxDKX11W3RdPUM7dVtNXT1nO2lmKHkpe089e3ZhbHVlczpfP0M6ayhtKSxrZXlzOng/QzprKHApLGVudHJpZXM6QX07aWYodylmb3IoaiBpbiBPKXtpZighKGogaW4geikpaSh6LGosT1tqXSl9ZWxzZSBuKG4uUCtuLkYqKGh8fFMpLHQsTyl9cmV0dXJuIE99fSx7XCIuL19leHBvcnRcIjozMSxcIi4vX2hhc1wiOjM0LFwiLi9faGlkZVwiOjM1LFwiLi9faXRlci1jcmVhdGVcIjo0MixcIi4vX2l0ZXJhdG9yc1wiOjQ2LFwiLi9fbGlicmFyeVwiOjQ3LFwiLi9fb2JqZWN0LWdwb1wiOjUyLFwiLi9fcmVkZWZpbmVcIjo1NyxcIi4vX3NldC10by1zdHJpbmctdGFnXCI6NTgsXCIuL193a3NcIjo2OX1dLDQ0OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX3drc1wiKShcIml0ZXJhdG9yXCIpLG49ZmFsc2U7dHJ5e3ZhciBpPVs3XVthXSgpO2lbXCJyZXR1cm5cIl09ZnVuY3Rpb24oKXtuPXRydWV9O0FycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChlKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFuKXJldHVybiBmYWxzZTt2YXIgcj1mYWxzZTt0cnl7dmFyIGk9WzddLGw9aVthXSgpO2wubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9dHJ1ZX19O2lbYV09ZnVuY3Rpb24oKXtyZXR1cm4gbH07ZShpKX1jYXRjaChlKXt9cmV0dXJuIHJ9fSx7XCIuL193a3NcIjo2OX1dLDQ1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3ZhbHVlOnQsZG9uZTohIWV9fX0se31dLDQ2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXt9fSx7fV0sNDc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9dHJ1ZX0se31dLDQ4OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX3VpZFwiKShcIm1ldGFcIiksbj1lKFwiLi9faXMtb2JqZWN0XCIpLGk9ZShcIi4vX2hhc1wiKSxsPWUoXCIuL19vYmplY3QtZHBcIikuZixvPTA7dmFyIHU9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4gdHJ1ZX07dmFyIHM9IWUoXCIuL19mYWlsc1wiKShmdW5jdGlvbigpe3JldHVybiB1KE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSk7dmFyIGY9ZnVuY3Rpb24oZSl7bChlLGEse3ZhbHVlOntpOlwiT1wiKyArK28sdzp7fX19KX07dmFyIGQ9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gdHlwZW9mIGU9PVwic3ltYm9sXCI/ZToodHlwZW9mIGU9PVwic3RyaW5nXCI/XCJTXCI6XCJQXCIpK2U7aWYoIWkoZSxhKSl7aWYoIXUoZSkpcmV0dXJuXCJGXCI7aWYoIXQpcmV0dXJuXCJFXCI7ZihlKX1yZXR1cm4gZVthXS5pfTt2YXIgYz1mdW5jdGlvbihlLHQpe2lmKCFpKGUsYSkpe2lmKCF1KGUpKXJldHVybiB0cnVlO2lmKCF0KXJldHVybiBmYWxzZTtmKGUpfXJldHVybiBlW2FdLnd9O3ZhciBoPWZ1bmN0aW9uKGUpe2lmKHMmJnYuTkVFRCYmdShlKSYmIWkoZSxhKSlmKGUpO3JldHVybiBlfTt2YXIgdj10LmV4cG9ydHM9e0tFWTphLE5FRUQ6ZmFsc2UsZmFzdEtleTpkLGdldFdlYWs6YyxvbkZyZWV6ZTpofX0se1wiLi9fZmFpbHNcIjozMixcIi4vX2hhc1wiOjM0LFwiLi9faXMtb2JqZWN0XCI6NDAsXCIuL19vYmplY3QtZHBcIjo1MCxcIi4vX3VpZFwiOjY4fV0sNDk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fYW4tb2JqZWN0XCIpLG49ZShcIi4vX29iamVjdC1kcHNcIiksaT1lKFwiLi9fZW51bS1idWcta2V5c1wiKSxsPWUoXCIuL19zaGFyZWQta2V5XCIpKFwiSUVfUFJPVE9cIiksbz1mdW5jdGlvbigpe30sdT1cInByb3RvdHlwZVwiO3ZhciBzPWZ1bmN0aW9uKCl7dmFyIHQ9ZShcIi4vX2RvbS1jcmVhdGVcIikoXCJpZnJhbWVcIikscj1pLmxlbmd0aCxhPVwiPFwiLG49XCI+XCIsbDt0LnN0eWxlLmRpc3BsYXk9XCJub25lXCI7ZShcIi4vX2h0bWxcIikuYXBwZW5kQ2hpbGQodCk7dC5zcmM9XCJqYXZhc2NyaXB0OlwiO2w9dC5jb250ZW50V2luZG93LmRvY3VtZW50O2wub3BlbigpO2wud3JpdGUoYStcInNjcmlwdFwiK24rXCJkb2N1bWVudC5GPU9iamVjdFwiK2ErXCIvc2NyaXB0XCIrbik7bC5jbG9zZSgpO3M9bC5GO3doaWxlKHItLSlkZWxldGUgc1t1XVtpW3JdXTtyZXR1cm4gcygpfTt0LmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24gZSh0LHIpe3ZhciBpO2lmKHQhPT1udWxsKXtvW3VdPWEodCk7aT1uZXcgbztvW3VdPW51bGw7aVtsXT10fWVsc2UgaT1zKCk7cmV0dXJuIHI9PT11bmRlZmluZWQ/aTpuKGkscil9fSx7XCIuL19hbi1vYmplY3RcIjoyMCxcIi4vX2RvbS1jcmVhdGVcIjoyOSxcIi4vX2VudW0tYnVnLWtleXNcIjozMCxcIi4vX2h0bWxcIjozNixcIi4vX29iamVjdC1kcHNcIjo1MSxcIi4vX3NoYXJlZC1rZXlcIjo1OX1dLDUwOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX2FuLW9iamVjdFwiKSxuPWUoXCIuL19pZTgtZG9tLWRlZmluZVwiKSxpPWUoXCIuL190by1wcmltaXRpdmVcIiksbD1PYmplY3QuZGVmaW5lUHJvcGVydHk7ci5mPWUoXCIuL19kZXNjcmlwdG9yc1wiKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24gZSh0LHIsbyl7YSh0KTtyPWkocix0cnVlKTthKG8pO2lmKG4pdHJ5e3JldHVybiBsKHQscixvKX1jYXRjaChlKXt9aWYoXCJnZXRcImluIG98fFwic2V0XCJpbiBvKXRocm93IFR5cGVFcnJvcihcIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIVwiKTtpZihcInZhbHVlXCJpbiBvKXRbcl09by52YWx1ZTtyZXR1cm4gdH19LHtcIi4vX2FuLW9iamVjdFwiOjIwLFwiLi9fZGVzY3JpcHRvcnNcIjoyOCxcIi4vX2llOC1kb20tZGVmaW5lXCI6MzcsXCIuL190by1wcmltaXRpdmVcIjo2N31dLDUxOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX29iamVjdC1kcFwiKSxuPWUoXCIuL19hbi1vYmplY3RcIiksaT1lKFwiLi9fb2JqZWN0LWtleXNcIik7dC5leHBvcnRzPWUoXCIuL19kZXNjcmlwdG9yc1wiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbiBlKHQscil7bih0KTt2YXIgbD1pKHIpLG89bC5sZW5ndGgsdT0wLHM7d2hpbGUobz51KWEuZih0LHM9bFt1KytdLHJbc10pO3JldHVybiB0fX0se1wiLi9fYW4tb2JqZWN0XCI6MjAsXCIuL19kZXNjcmlwdG9yc1wiOjI4LFwiLi9fb2JqZWN0LWRwXCI6NTAsXCIuL19vYmplY3Qta2V5c1wiOjU0fV0sNTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faGFzXCIpLG49ZShcIi4vX3RvLW9iamVjdFwiKSxpPWUoXCIuL19zaGFyZWQta2V5XCIpKFwiSUVfUFJPVE9cIiksbD1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe2U9bihlKTtpZihhKGUsaSkpcmV0dXJuIGVbaV07aWYodHlwZW9mIGUuY29uc3RydWN0b3I9PVwiZnVuY3Rpb25cIiYmZSBpbnN0YW5jZW9mIGUuY29uc3RydWN0b3Ipe3JldHVybiBlLmNvbnN0cnVjdG9yLnByb3RvdHlwZX1yZXR1cm4gZSBpbnN0YW5jZW9mIE9iamVjdD9sOm51bGx9fSx7XCIuL19oYXNcIjozNCxcIi4vX3NoYXJlZC1rZXlcIjo1OSxcIi4vX3RvLW9iamVjdFwiOjY2fV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faGFzXCIpLG49ZShcIi4vX3RvLWlvYmplY3RcIiksaT1lKFwiLi9fYXJyYXktaW5jbHVkZXNcIikoZmFsc2UpLGw9ZShcIi4vX3NoYXJlZC1rZXlcIikoXCJJRV9QUk9UT1wiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uKGUpLG89MCx1PVtdLHM7Zm9yKHMgaW4gcilpZihzIT1sKWEocixzKSYmdS5wdXNoKHMpO3doaWxlKHQubGVuZ3RoPm8paWYoYShyLHM9dFtvKytdKSl7fmkodSxzKXx8dS5wdXNoKHMpfXJldHVybiB1fX0se1wiLi9fYXJyYXktaW5jbHVkZXNcIjoyMSxcIi4vX2hhc1wiOjM0LFwiLi9fc2hhcmVkLWtleVwiOjU5LFwiLi9fdG8taW9iamVjdFwiOjY0fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWxcIiksbj1lKFwiLi9fZW51bS1idWcta2V5c1wiKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uIGUodCl7cmV0dXJuIGEodCxuKX19LHtcIi4vX2VudW0tYnVnLWtleXNcIjozMCxcIi4vX29iamVjdC1rZXlzLWludGVybmFsXCI6NTN9XSw1NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL19leHBvcnRcIiksbj1lKFwiLi9fY29yZVwiKSxpPWUoXCIuL19mYWlsc1wiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0obi5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLGw9e307bFtlXT10KHIpO2EoYS5TK2EuRippKGZ1bmN0aW9uKCl7cigxKX0pLFwiT2JqZWN0XCIsbCl9fSx7XCIuL19jb3JlXCI6MjQsXCIuL19leHBvcnRcIjozMSxcIi4vX2ZhaWxzXCI6MzJ9XSw1NjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoZSYxKSxjb25maWd1cmFibGU6IShlJjIpLHdyaXRhYmxlOiEoZSY0KSx2YWx1ZTp0fX19LHt9XSw1NzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKFwiLi9faGlkZVwiKX0se1wiLi9faGlkZVwiOjM1fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fb2JqZWN0LWRwXCIpLmYsbj1lKFwiLi9faGFzXCIpLGk9ZShcIi4vX3drc1wiKShcInRvU3RyaW5nVGFnXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7aWYoZSYmIW4oZT1yP2U6ZS5wcm90b3R5cGUsaSkpYShlLGkse2NvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOnR9KX19LHtcIi4vX2hhc1wiOjM0LFwiLi9fb2JqZWN0LWRwXCI6NTAsXCIuL193a3NcIjo2OX1dLDU5OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX3NoYXJlZFwiKShcImtleXNcIiksbj1lKFwiLi9fdWlkXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gYVtlXXx8KGFbZV09bihlKSl9fSx7XCIuL19zaGFyZWRcIjo2MCxcIi4vX3VpZFwiOjY4fV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fZ2xvYmFsXCIpLG49XCJfX2NvcmUtanNfc2hhcmVkX19cIixpPWFbbl18fChhW25dPXt9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlbZV18fChpW2VdPXt9KX19LHtcIi4vX2dsb2JhbFwiOjMzfV0sNjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fdG8taW50ZWdlclwiKSxuPWUoXCIuL19kZWZpbmVkXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaT1TdHJpbmcobih0KSksbD1hKHIpLG89aS5sZW5ndGgsdSxzO2lmKGw8MHx8bD49bylyZXR1cm4gZT9cIlwiOnVuZGVmaW5lZDt1PWkuY2hhckNvZGVBdChsKTtyZXR1cm4gdTw1NTI5Nnx8dT41NjMxOXx8bCsxPT09b3x8KHM9aS5jaGFyQ29kZUF0KGwrMSkpPDU2MzIwfHxzPjU3MzQzP2U/aS5jaGFyQXQobCk6dTplP2kuc2xpY2UobCxsKzIpOih1LTU1Mjk2PDwxMCkrKHMtNTYzMjApKzY1NTM2fX19LHtcIi4vX2RlZmluZWRcIjoyNyxcIi4vX3RvLWludGVnZXJcIjo2M31dLDYyOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX3RvLWludGVnZXJcIiksbj1NYXRoLm1heCxpPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2U9YShlKTtyZXR1cm4gZTwwP24oZSt0LDApOmkoZSx0KX19LHtcIi4vX3RvLWludGVnZXJcIjo2M31dLDYzOltmdW5jdGlvbihlLHQscil7dmFyIGE9TWF0aC5jZWlsLG49TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9uOmEpKGUpfX0se31dLDY0OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vX2lvYmplY3RcIiksbj1lKFwiLi9fZGVmaW5lZFwiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGEobihlKSl9fSx7XCIuL19kZWZpbmVkXCI6MjcsXCIuL19pb2JqZWN0XCI6Mzh9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL190by1pbnRlZ2VyXCIpLG49TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/bihhKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7XCIuL190by1pbnRlZ2VyXCI6NjN9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL19kZWZpbmVkXCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KGEoZSkpfX0se1wiLi9fZGVmaW5lZFwiOjI3fV0sNjc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faXMtb2JqZWN0XCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFhKGUpKXJldHVybiBlO3ZhciByLG47aWYodCYmdHlwZW9mKHI9ZS50b1N0cmluZyk9PVwiZnVuY3Rpb25cIiYmIWEobj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKHR5cGVvZihyPWUudmFsdWVPZik9PVwiZnVuY3Rpb25cIiYmIWEobj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKCF0JiZ0eXBlb2Yocj1lLnRvU3RyaW5nKT09XCJmdW5jdGlvblwiJiYhYShuPXIuY2FsbChlKSkpcmV0dXJuIG47dGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpfX0se1wiLi9faXMtb2JqZWN0XCI6NDB9XSw2ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPTAsbj1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm5cIlN5bWJvbChcIi5jb25jYXQoZT09PXVuZGVmaW5lZD9cIlwiOmUsXCIpX1wiLCgrK2ErbikudG9TdHJpbmcoMzYpKX19LHt9XSw2OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL19zaGFyZWRcIikoXCJ3a3NcIiksbj1lKFwiLi9fdWlkXCIpLGk9ZShcIi4vX2dsb2JhbFwiKS5TeW1ib2wsbD10eXBlb2YgaT09XCJmdW5jdGlvblwiO3ZhciBvPXQuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gYVtlXXx8KGFbZV09bCYmaVtlXXx8KGw/aTpuKShcIlN5bWJvbC5cIitlKSl9O28uc3RvcmU9YX0se1wiLi9fZ2xvYmFsXCI6MzMsXCIuL19zaGFyZWRcIjo2MCxcIi4vX3VpZFwiOjY4fV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fY2xhc3NvZlwiKSxuPWUoXCIuL193a3NcIikoXCJpdGVyYXRvclwiKSxpPWUoXCIuL19pdGVyYXRvcnNcIik7dC5leHBvcnRzPWUoXCIuL19jb3JlXCIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKGUpe2lmKGUhPXVuZGVmaW5lZClyZXR1cm4gZVtuXXx8ZVtcIkBAaXRlcmF0b3JcIl18fGlbYShlKV19fSx7XCIuL19jbGFzc29mXCI6MjIsXCIuL19jb3JlXCI6MjQsXCIuL19pdGVyYXRvcnNcIjo0NixcIi4vX3drc1wiOjY5fV0sNzE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fYW4tb2JqZWN0XCIpLG49ZShcIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kXCIpO3QuZXhwb3J0cz1lKFwiLi9fY29yZVwiKS5nZXRJdGVyYXRvcj1mdW5jdGlvbihlKXt2YXIgdD1uKGUpO2lmKHR5cGVvZiB0IT1cImZ1bmN0aW9uXCIpdGhyb3cgVHlwZUVycm9yKGUrXCIgaXMgbm90IGl0ZXJhYmxlIVwiKTtyZXR1cm4gYSh0LmNhbGwoZSkpfX0se1wiLi9fYW4tb2JqZWN0XCI6MjAsXCIuL19jb3JlXCI6MjQsXCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiOjcwfV0sNzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9fY2xhc3NvZlwiKSxuPWUoXCIuL193a3NcIikoXCJpdGVyYXRvclwiKSxpPWUoXCIuL19pdGVyYXRvcnNcIik7dC5leHBvcnRzPWUoXCIuL19jb3JlXCIpLmlzSXRlcmFibGU9ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0KGUpO3JldHVybiB0W25dIT09dW5kZWZpbmVkfHxcIkBAaXRlcmF0b3JcImluIHR8fGkuaGFzT3duUHJvcGVydHkoYSh0KSl9fSx7XCIuL19jbGFzc29mXCI6MjIsXCIuL19jb3JlXCI6MjQsXCIuL19pdGVyYXRvcnNcIjo0NixcIi4vX3drc1wiOjY5fV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9fY3R4XCIpLG49ZShcIi4vX2V4cG9ydFwiKSxpPWUoXCIuL190by1vYmplY3RcIiksbD1lKFwiLi9faXRlci1jYWxsXCIpLG89ZShcIi4vX2lzLWFycmF5LWl0ZXJcIiksdT1lKFwiLi9fdG8tbGVuZ3RoXCIpLHM9ZShcIi4vX2NyZWF0ZS1wcm9wZXJ0eVwiKSxmPWUoXCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZFwiKTtuKG4uUytuLkYqIWUoXCIuL19pdGVyLWRldGVjdFwiKShmdW5jdGlvbihlKXtBcnJheS5mcm9tKGUpfSksXCJBcnJheVwiLHtmcm9tOmZ1bmN0aW9uIGUodCl7dmFyIHI9aSh0KSxuPXR5cGVvZiB0aGlzPT1cImZ1bmN0aW9uXCI/dGhpczpBcnJheSxkPWFyZ3VtZW50cy5sZW5ndGgsYz1kPjE/YXJndW1lbnRzWzFdOnVuZGVmaW5lZCxoPWMhPT11bmRlZmluZWQsdj0wLHA9ZihyKSxtLGcsYix5O2lmKGgpYz1hKGMsZD4yP2FyZ3VtZW50c1syXTp1bmRlZmluZWQsMik7aWYocCE9dW5kZWZpbmVkJiYhKG49PUFycmF5JiZvKHApKSl7Zm9yKHk9cC5jYWxsKHIpLGc9bmV3IG47IShiPXkubmV4dCgpKS5kb25lO3YrKyl7cyhnLHYsaD9sKHksYyxbYi52YWx1ZSx2XSx0cnVlKTpiLnZhbHVlKX19ZWxzZXttPXUoci5sZW5ndGgpO2ZvcihnPW5ldyBuKG0pO20+djt2Kyspe3MoZyx2LGg/YyhyW3ZdLHYpOnJbdl0pfX1nLmxlbmd0aD12O3JldHVybiBnfX0pfSx7XCIuL19jcmVhdGUtcHJvcGVydHlcIjoyNSxcIi4vX2N0eFwiOjI2LFwiLi9fZXhwb3J0XCI6MzEsXCIuL19pcy1hcnJheS1pdGVyXCI6MzksXCIuL19pdGVyLWNhbGxcIjo0MSxcIi4vX2l0ZXItZGV0ZWN0XCI6NDQsXCIuL190by1sZW5ndGhcIjo2NSxcIi4vX3RvLW9iamVjdFwiOjY2LFwiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2RcIjo3MH1dLDc0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vX2FkZC10by11bnNjb3BhYmxlc1wiKSxuPWUoXCIuL19pdGVyLXN0ZXBcIiksaT1lKFwiLi9faXRlcmF0b3JzXCIpLGw9ZShcIi4vX3RvLWlvYmplY3RcIik7dC5leHBvcnRzPWUoXCIuL19pdGVyLWRlZmluZVwiKShBcnJheSxcIkFycmF5XCIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PWwoZSk7dGhpcy5faT0wO3RoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztpZighZXx8cj49ZS5sZW5ndGgpe3RoaXMuX3Q9dW5kZWZpbmVkO3JldHVybiBuKDEpfWlmKHQ9PVwia2V5c1wiKXJldHVybiBuKDAscik7aWYodD09XCJ2YWx1ZXNcIilyZXR1cm4gbigwLGVbcl0pO3JldHVybiBuKDAsW3IsZVtyXV0pfSxcInZhbHVlc1wiKTtpLkFyZ3VtZW50cz1pLkFycmF5O2EoXCJrZXlzXCIpO2EoXCJ2YWx1ZXNcIik7YShcImVudHJpZXNcIil9LHtcIi4vX2FkZC10by11bnNjb3BhYmxlc1wiOjE5LFwiLi9faXRlci1kZWZpbmVcIjo0MyxcIi4vX2l0ZXItc3RlcFwiOjQ1LFwiLi9faXRlcmF0b3JzXCI6NDYsXCIuL190by1pb2JqZWN0XCI6NjR9XSw3NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL19leHBvcnRcIik7YShhLlMrYS5GKiFlKFwiLi9fZGVzY3JpcHRvcnNcIiksXCJPYmplY3RcIix7ZGVmaW5lUHJvcGVydHk6ZShcIi4vX29iamVjdC1kcFwiKS5mfSl9LHtcIi4vX2Rlc2NyaXB0b3JzXCI6MjgsXCIuL19leHBvcnRcIjozMSxcIi4vX29iamVjdC1kcFwiOjUwfV0sNzY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9faXMtb2JqZWN0XCIpLG49ZShcIi4vX21ldGFcIikub25GcmVlemU7ZShcIi4vX29iamVjdC1zYXBcIikoXCJmcmVlemVcIixmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24gdChyKXtyZXR1cm4gZSYmYShyKT9lKG4ocikpOnJ9fSl9LHtcIi4vX2lzLW9iamVjdFwiOjQwLFwiLi9fbWV0YVwiOjQ4LFwiLi9fb2JqZWN0LXNhcFwiOjU1fV0sNzc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9fc3RyaW5nLWF0XCIpKHRydWUpO2UoXCIuL19pdGVyLWRlZmluZVwiKShTdHJpbmcsXCJTdHJpbmdcIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKTt0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2kscjtpZih0Pj1lLmxlbmd0aClyZXR1cm57dmFsdWU6dW5kZWZpbmVkLGRvbmU6dHJ1ZX07cj1hKGUsdCk7dGhpcy5faSs9ci5sZW5ndGg7cmV0dXJue3ZhbHVlOnIsZG9uZTpmYWxzZX19KX0se1wiLi9faXRlci1kZWZpbmVcIjo0MyxcIi4vX3N0cmluZy1hdFwiOjYxfV0sNzg6W2Z1bmN0aW9uKGUsdCxyKXtlKFwiLi9lczYuYXJyYXkuaXRlcmF0b3JcIik7dmFyIGE9ZShcIi4vX2dsb2JhbFwiKSxuPWUoXCIuL19oaWRlXCIpLGk9ZShcIi4vX2l0ZXJhdG9yc1wiKSxsPWUoXCIuL193a3NcIikoXCJ0b1N0cmluZ1RhZ1wiKTtmb3IodmFyIG89W1wiTm9kZUxpc3RcIixcIkRPTVRva2VuTGlzdFwiLFwiTWVkaWFMaXN0XCIsXCJTdHlsZVNoZWV0TGlzdFwiLFwiQ1NTUnVsZUxpc3RcIl0sdT0wO3U8NTt1Kyspe3ZhciBzPW9bdV0sZj1hW3NdLGQ9ZiYmZi5wcm90b3R5cGU7aWYoZCYmIWRbbF0pbihkLGwscyk7aVtzXT1pLkFycmF5fX0se1wiLi9fZ2xvYmFsXCI6MzMsXCIuL19oaWRlXCI6MzUsXCIuL19pdGVyYXRvcnNcIjo0NixcIi4vX3drc1wiOjY5LFwiLi9lczYuYXJyYXkuaXRlcmF0b3JcIjo3NH1dLDc5OltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gYShlKXtpZighZS5fX21hdGNoQXRSZWxvY2F0YWJsZSl7dmFyIHQ9ZS5zb3VyY2UrXCJ8KClcIjt2YXIgcj1cImdcIisoZS5pZ25vcmVDYXNlP1wiaVwiOlwiXCIpKyhlLm11bHRpbGluZT9cIm1cIjpcIlwiKSsoZS51bmljb2RlP1widVwiOlwiXCIpO2UuX19tYXRjaEF0UmVsb2NhdGFibGU9bmV3IFJlZ0V4cCh0LHIpfXJldHVybiBlLl9fbWF0Y2hBdFJlbG9jYXRhYmxlfWZ1bmN0aW9uIG4oZSx0LHIpe2lmKGUuZ2xvYmFsfHxlLnN0aWNreSl7dGhyb3cgbmV3IEVycm9yKFwibWF0Y2hBdCguLi4pOiBPbmx5IG5vbi1nbG9iYWwgcmVnZXhlcyBhcmUgc3VwcG9ydGVkXCIpfXZhciBuPWEoZSk7bi5sYXN0SW5kZXg9cjt2YXIgaT1uLmV4ZWModCk7aWYoaVtpLmxlbmd0aC0xXT09bnVsbCl7aS5sZW5ndGg9aS5sZW5ndGgtMTtyZXR1cm4gaX1lbHNle3JldHVybiBudWxsfX10LmV4cG9ydHM9bn0se31dLDgwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sczt2YXIgbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7ZnVuY3Rpb24gbChlKXtpZihlPT09bnVsbHx8ZT09PXVuZGVmaW5lZCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIk9iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkXCIpfXJldHVybiBPYmplY3QoZSl9ZnVuY3Rpb24gbygpe3RyeXtpZighT2JqZWN0LmFzc2lnbil7cmV0dXJuIGZhbHNlfXZhciBlPW5ldyBTdHJpbmcoXCJhYmNcIik7ZVs1XT1cImRlXCI7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSlbMF09PT1cIjVcIil7cmV0dXJuIGZhbHNlfXZhciB0PXt9O2Zvcih2YXIgcj0wO3I8MTA7cisrKXt0W1wiX1wiK1N0cmluZy5mcm9tQ2hhckNvZGUocildPXJ9dmFyIGE9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSk7aWYoYS5qb2luKFwiXCIpIT09XCIwMTIzNDU2Nzg5XCIpe3JldHVybiBmYWxzZX12YXIgbj17fTtcImFiY2RlZmdoaWprbG1ub3BxcnN0XCIuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihlKXtuW2VdPWV9KTtpZihPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LG4pKS5qb2luKFwiXCIpIT09XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9Y2F0Y2goZSl7cmV0dXJuIGZhbHNlfX10LmV4cG9ydHM9bygpP09iamVjdC5hc3NpZ246ZnVuY3Rpb24oZSx0KXt2YXIgcjt2YXIgbz1sKGUpO3ZhciB1O2Zvcih2YXIgcz0xO3M8YXJndW1lbnRzLmxlbmd0aDtzKyspe3I9T2JqZWN0KGFyZ3VtZW50c1tzXSk7Zm9yKHZhciBmIGluIHIpe2lmKG4uY2FsbChyLGYpKXtvW2ZdPXJbZl19fWlmKGEpe3U9YShyKTtmb3IodmFyIGQ9MDtkPHUubGVuZ3RoO2QrKyl7aWYoaS5jYWxsKHIsdVtkXSkpe29bdVtkXV09clt1W2RdXX19fX1yZXR1cm4gb319LHt9XSw4MTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ci5jb250cm9sV29yZFJlZ2V4PXVuZGVmaW5lZDt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCIpO3ZhciBuPXYoYSk7dmFyIGk9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiKTt2YXIgbD12KGkpO3ZhciBvPWUoXCJtYXRjaC1hdFwiKTt2YXIgdT12KG8pO3ZhciBzPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIGY9dihzKTt2YXIgZD1lKFwiLi9Tb3VyY2VMb2NhdGlvblwiKTt2YXIgYz12KGQpO3ZhciBoPWUoXCIuL1Rva2VuXCIpO2Z1bmN0aW9uIHYoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBwPVwiJVteXFxuXSpbXFxuXVwiO3ZhciBtPVwiXFxcXFxcXFxbYS16QS1aQF0rXCI7dmFyIGc9XCJcXFxcXFxcXFteXFx1ZDgwMC1cXHVkZmZmXVwiO3ZhciBiPW5ldyBSZWdFeHAoXCIoWyBcXHJcXG5cXHRdKyl8XCIrKFwiKFwiK3ArXCJ8XCIpK1wiWyEtXFxcXFtcXFxcXS1cXHUyMDI3XFx1MjAyYS1cXHVkN2ZmXFx1ZjkwMC1cXHVmZmZmXVwiK1wifFtcXHVkODAwLVxcdWRiZmZdW1xcdWRjMDAtXFx1ZGZmZl1cIitcInxcXFxcXFxcXHZlcmJcXFxcKihbXl0pLio/XFxcXDNcIitcInxcXFxcXFxcXHZlcmIoW14qYS16QS1aXSkuKj9cXFxcNFwiKyhcInxcIittKSsoXCJ8XCIrZykrXCIpXCIpO3ZhciB5PXIuY29udHJvbFdvcmRSZWdleD1uZXcgUmVnRXhwKFwiXlwiK20pO3ZhciB4PW5ldyBSZWdFeHAoXCJeXCIrcCk7dmFyIHc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpeygwLG4uZGVmYXVsdCkodGhpcyxlKTt0aGlzLmlucHV0PXQ7dGhpcy5wb3M9MH0oMCxsLmRlZmF1bHQpKGUsW3trZXk6XCJsZXhcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9dGhpcy5pbnB1dDt2YXIgcj10aGlzLnBvcztpZihyPT09dC5sZW5ndGgpe3JldHVybiBuZXcgaC5Ub2tlbihcIkVPRlwiLG5ldyBjLmRlZmF1bHQodGhpcyxyLHIpKX12YXIgYT0oMCx1LmRlZmF1bHQpKGIsdCxyKTtpZihhPT09bnVsbCl7dGhyb3cgbmV3IGYuZGVmYXVsdChcIlVuZXhwZWN0ZWQgY2hhcmFjdGVyOiAnXCIrdFtyXStcIidcIixuZXcgaC5Ub2tlbih0W3JdLG5ldyBjLmRlZmF1bHQodGhpcyxyLHIrMSkpKX12YXIgbj1hWzJdfHxcIiBcIjt2YXIgaT10aGlzLnBvczt0aGlzLnBvcys9YVswXS5sZW5ndGg7dmFyIGw9dGhpcy5wb3M7aWYoeC50ZXN0KG4pKXtyZXR1cm4gdGhpcy5sZXgoKX1lbHNle3JldHVybiBuZXcgaC5Ub2tlbihuLG5ldyBjLmRlZmF1bHQodGhpcyxpLGwpKX19fV0pO3JldHVybiBlfSgpO3IuZGVmYXVsdD13fSx7XCIuL1BhcnNlRXJyb3JcIjo4NCxcIi4vU291cmNlTG9jYXRpb25cIjo4OCxcIi4vVG9rZW5cIjo5MCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiOjgsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjo5LFwibWF0Y2gtYXRcIjo3OX1dLDgyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5XCIpO3ZhciBuPWIoYSk7dmFyIGk9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbD1iKGkpO3ZhciBvPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIik7dmFyIHU9YihvKTt2YXIgcz1lKFwiLi9MZXhlclwiKTt2YXIgZj1iKHMpO3ZhciBkPWUoXCIuL1Rva2VuXCIpO3ZhciBjPWUoXCIuL21hY3Jvc1wiKTt2YXIgaD1iKGMpO3ZhciB2PWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIHA9Yih2KTt2YXIgbT1lKFwib2JqZWN0LWFzc2lnblwiKTt2YXIgZz1iKG0pO2Z1bmN0aW9uIGIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLmxleGVyPW5ldyBmLmRlZmF1bHQodCk7dGhpcy5tYWNyb3M9KDAsZy5kZWZhdWx0KSh7fSxoLmRlZmF1bHQscik7dGhpcy5zdGFjaz1bXX0oMCx1LmRlZmF1bHQpKGUsW3trZXk6XCJmdXR1cmVcIix2YWx1ZTpmdW5jdGlvbiBlKCl7aWYodGhpcy5zdGFjay5sZW5ndGg9PT0wKXt0aGlzLnB1c2hUb2tlbih0aGlzLmxleGVyLmxleCgpKX1yZXR1cm4gdGhpcy5zdGFja1t0aGlzLnN0YWNrLmxlbmd0aC0xXX19LHtrZXk6XCJwb3BUb2tlblwiLHZhbHVlOmZ1bmN0aW9uIGUoKXt0aGlzLmZ1dHVyZSgpO3JldHVybiB0aGlzLnN0YWNrLnBvcCgpfX0se2tleTpcImNvbnN1bWVTcGFjZXNcIix2YWx1ZTpmdW5jdGlvbiBlKCl7Zm9yKDs7KXt2YXIgdD10aGlzLmZ1dHVyZSgpO2lmKHQudGV4dD09PVwiIFwiKXt0aGlzLnN0YWNrLnBvcCgpfWVsc2V7YnJlYWt9fX19LHtrZXk6XCJleHBhbmRPbmNlXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0O3ZhciByPXRoaXMucG9wVG9rZW4oKTt2YXIgYT1yLnRleHQ7dmFyIGk9YS5jaGFyQXQoMCk9PT1cIlxcXFxcIjtpZihpJiZzLmNvbnRyb2xXb3JkUmVnZXgudGVzdChhKSl7dGhpcy5jb25zdW1lU3BhY2VzKCl9aWYoIShpJiZ0aGlzLm1hY3Jvcy5oYXNPd25Qcm9wZXJ0eShhKSkpe3RoaXMucHVzaFRva2VuKHIpO3JldHVybiByfXZhciBsPXRoaXMuX2dldEV4cGFuc2lvbihhKSxvPWwudG9rZW5zLHU9bC5udW1BcmdzO3ZhciBmPW87aWYodSl7dmFyIGQ9W107Zm9yKHZhciBjPTA7Yzx1OysrYyl7dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIGg9dGhpcy5wb3BUb2tlbigpO2lmKGgudGV4dD09PVwie1wiKXt2YXIgdj1bXTt2YXIgbT0xO3doaWxlKG0hPT0wKXt2YXIgZz10aGlzLnBvcFRva2VuKCk7di5wdXNoKGcpO2lmKGcudGV4dD09PVwie1wiKXsrK219ZWxzZSBpZihnLnRleHQ9PT1cIn1cIil7LS1tfWVsc2UgaWYoZy50ZXh0PT09XCJFT0ZcIil7dGhyb3cgbmV3IHAuZGVmYXVsdChcIkVuZCBvZiBpbnB1dCBpbiBtYWNybyBhcmd1bWVudFwiLGgpfX12LnBvcCgpO3YucmV2ZXJzZSgpO2RbY109dn1lbHNlIGlmKGgudGV4dD09PVwiRU9GXCIpe3Rocm93IG5ldyBwLmRlZmF1bHQoXCJFbmQgb2YgaW5wdXQgZXhwZWN0aW5nIG1hY3JvIGFyZ3VtZW50XCIscil9ZWxzZXtkW2NdPVtoXX19Zj1mLnNsaWNlKCk7Zm9yKHZhciBiPWYubGVuZ3RoLTE7Yj49MDstLWIpe3ZhciB5PWZbYl07aWYoeS50ZXh0PT09XCIjXCIpe2lmKGI9PT0wKXt0aHJvdyBuZXcgcC5kZWZhdWx0KFwiSW5jb21wbGV0ZSBwbGFjZWhvbGRlciBhdCBlbmQgb2YgbWFjcm8gYm9keVwiLHkpfXk9ZlstLWJdO2lmKHkudGV4dD09PVwiI1wiKXtmLnNwbGljZShiKzEsMSl9ZWxzZSBpZigvXlsxLTldJC8udGVzdCh5LnRleHQpKXt2YXIgeDsoeD1mKS5zcGxpY2UuYXBwbHkoeCxbYiwyXS5jb25jYXQoKDAsbi5kZWZhdWx0KShkWyt5LnRleHQtMV0pKSl9ZWxzZXt0aHJvdyBuZXcgcC5kZWZhdWx0KFwiTm90IGEgdmFsaWQgYXJndW1lbnQgbnVtYmVyXCIseSl9fX19KHQ9dGhpcy5zdGFjaykucHVzaC5hcHBseSh0LCgwLG4uZGVmYXVsdCkoZikpO3JldHVybiBmfX0se2tleTpcImV4cGFuZEFmdGVyRnV0dXJlXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3RoaXMuZXhwYW5kT25jZSgpO3JldHVybiB0aGlzLmZ1dHVyZSgpfX0se2tleTpcImV4cGFuZE5leHRUb2tlblwiLHZhbHVlOmZ1bmN0aW9uIGUoKXtmb3IoOzspe3ZhciB0PXRoaXMuZXhwYW5kT25jZSgpO2lmKHQgaW5zdGFuY2VvZiBkLlRva2VuKXtpZih0LnRleHQ9PT1cIlxcXFxyZWxheFwiKXt0aGlzLnN0YWNrLnBvcCgpfWVsc2V7cmV0dXJuIHRoaXMuc3RhY2sucG9wKCl9fX10aHJvdyBuZXcgRXJyb3J9fSx7a2V5OlwiX2dldEV4cGFuc2lvblwiLHZhbHVlOmZ1bmN0aW9uIGUodCl7dmFyIHI9dGhpcy5tYWNyb3NbdF07dmFyIGE9dHlwZW9mIHI9PT1cImZ1bmN0aW9uXCI/cih0aGlzKTpyO2lmKHR5cGVvZiBhPT09XCJzdHJpbmdcIil7dmFyIG49MDtpZihhLmluZGV4T2YoXCIjXCIpIT09LTEpe3ZhciBpPWEucmVwbGFjZSgvIyMvZyxcIlwiKTt3aGlsZShpLmluZGV4T2YoXCIjXCIrKG4rMSkpIT09LTEpeysrbn19dmFyIGw9bmV3IGYuZGVmYXVsdChhKTt2YXIgbz1bXTt2YXIgdT1sLmxleCgpO3doaWxlKHUudGV4dCE9PVwiRU9GXCIpe28ucHVzaCh1KTt1PWwubGV4KCl9by5yZXZlcnNlKCk7dmFyIHM9e3Rva2VuczpvLG51bUFyZ3M6bn07aWYodHlwZW9mIHIhPT1cImZ1bmN0aW9uXCIpe3RoaXMubWFjcm9zW3RdPXN9cmV0dXJuIHN9cmV0dXJuIGF9fSx7a2V5OlwicHVzaFRva2VuXCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXt0aGlzLnN0YWNrLnB1c2godCl9fV0pO3JldHVybiBlfSgpO3IuZGVmYXVsdD15fSx7XCIuL0xleGVyXCI6ODEsXCIuL1BhcnNlRXJyb3JcIjo4NCxcIi4vVG9rZW5cIjo5MCxcIi4vbWFjcm9zXCI6MTEzLFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI6OCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiOjksXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXlcIjoxMSxcIm9iamVjdC1hc3NpZ25cIjo4MH1dLDgzOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCIpO3ZhciBuPXMoYSk7dmFyIGk9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiKTt2YXIgbD1zKGkpO3ZhciBvPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciB1PXMobyk7ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGY9W1sxLDEsMV0sWzIsMSwxXSxbMywxLDFdLFs0LDIsMV0sWzUsMiwxXSxbNiwzLDFdLFs3LDQsMl0sWzgsNiwzXSxbOSw3LDZdLFsxMCw4LDddLFsxMSwxMCw5XV07dmFyIGQ9Wy41LC42LC43LC44LC45LDEsMS4yLDEuNDQsMS43MjgsMi4wNzQsMi40ODhdO3ZhciBjPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gci5zaXplPDI/dDpmW3QtMV1bci5zaXplLTFdfTt2YXIgaD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsbi5kZWZhdWx0KSh0aGlzLGUpO3RoaXMuc3R5bGU9dC5zdHlsZTt0aGlzLmNvbG9yPXQuY29sb3I7dGhpcy5zaXplPXQuc2l6ZXx8ZS5CQVNFU0laRTt0aGlzLnRleHRTaXplPXQudGV4dFNpemV8fHRoaXMuc2l6ZTt0aGlzLnBoYW50b209ISF0LnBoYW50b207dGhpcy5mb250PXQuZm9udDt0aGlzLnNpemVNdWx0aXBsaWVyPWRbdGhpcy5zaXplLTFdO3RoaXMubWF4U2l6ZT10Lm1heFNpemU7dGhpcy5fZm9udE1ldHJpY3M9dW5kZWZpbmVkfSgwLGwuZGVmYXVsdCkoZSxbe2tleTpcImV4dGVuZFwiLHZhbHVlOmZ1bmN0aW9uIHQocil7dmFyIGE9e3N0eWxlOnRoaXMuc3R5bGUsc2l6ZTp0aGlzLnNpemUsdGV4dFNpemU6dGhpcy50ZXh0U2l6ZSxjb2xvcjp0aGlzLmNvbG9yLHBoYW50b206dGhpcy5waGFudG9tLGZvbnQ6dGhpcy5mb250LG1heFNpemU6dGhpcy5tYXhTaXplfTtmb3IodmFyIG4gaW4gcil7aWYoci5oYXNPd25Qcm9wZXJ0eShuKSl7YVtuXT1yW25dfX1yZXR1cm4gbmV3IGUoYSl9fSx7a2V5OlwiaGF2aW5nU3R5bGVcIix2YWx1ZTpmdW5jdGlvbiBlKHQpe2lmKHRoaXMuc3R5bGU9PT10KXtyZXR1cm4gdGhpc31lbHNle3JldHVybiB0aGlzLmV4dGVuZCh7c3R5bGU6dCxzaXplOmModGhpcy50ZXh0U2l6ZSx0KX0pfX19LHtrZXk6XCJoYXZpbmdDcmFtcGVkU3R5bGVcIix2YWx1ZTpmdW5jdGlvbiBlKCl7cmV0dXJuIHRoaXMuaGF2aW5nU3R5bGUodGhpcy5zdHlsZS5jcmFtcCgpKX19LHtrZXk6XCJoYXZpbmdTaXplXCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXtpZih0aGlzLnNpemU9PT10JiZ0aGlzLnRleHRTaXplPT09dCl7cmV0dXJuIHRoaXN9ZWxzZXtyZXR1cm4gdGhpcy5leHRlbmQoe3N0eWxlOnRoaXMuc3R5bGUudGV4dCgpLHNpemU6dCx0ZXh0U2l6ZTp0fSl9fX0se2tleTpcImhhdmluZ0Jhc2VTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uIHQocil7cj1yfHx0aGlzLnN0eWxlLnRleHQoKTt2YXIgYT1jKGUuQkFTRVNJWkUscik7aWYodGhpcy5zaXplPT09YSYmdGhpcy50ZXh0U2l6ZT09PWUuQkFTRVNJWkUmJnRoaXMuc3R5bGU9PT1yKXtyZXR1cm4gdGhpc31lbHNle3JldHVybiB0aGlzLmV4dGVuZCh7c3R5bGU6cixzaXplOmF9KX19fSx7a2V5Olwid2l0aENvbG9yXCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdGhpcy5leHRlbmQoe2NvbG9yOnR9KX19LHtrZXk6XCJ3aXRoUGhhbnRvbVwiLHZhbHVlOmZ1bmN0aW9uIGUoKXtyZXR1cm4gdGhpcy5leHRlbmQoe3BoYW50b206dHJ1ZX0pfX0se2tleTpcIndpdGhGb250XCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdGhpcy5leHRlbmQoe2ZvbnQ6dHx8dGhpcy5mb250fSl9fSx7a2V5Olwic2l6aW5nQ2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uIGUodCl7aWYodC5zaXplIT09dGhpcy5zaXplKXtyZXR1cm5bXCJzaXppbmdcIixcInJlc2V0LXNpemVcIit0LnNpemUsXCJzaXplXCIrdGhpcy5zaXplXX1lbHNle3JldHVybltdfX19LHtrZXk6XCJiYXNlU2l6aW5nQ2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uIHQoKXtpZih0aGlzLnNpemUhPT1lLkJBU0VTSVpFKXtyZXR1cm5bXCJzaXppbmdcIixcInJlc2V0LXNpemVcIit0aGlzLnNpemUsXCJzaXplXCIrZS5CQVNFU0laRV19ZWxzZXtyZXR1cm5bXX19fSx7a2V5OlwiZm9udE1ldHJpY3NcIix2YWx1ZTpmdW5jdGlvbiBlKCl7aWYoIXRoaXMuX2ZvbnRNZXRyaWNzKXt0aGlzLl9mb250TWV0cmljcz11LmRlZmF1bHQuZ2V0Rm9udE1ldHJpY3ModGhpcy5zaXplKX1yZXR1cm4gdGhpcy5fZm9udE1ldHJpY3N9fSx7a2V5OlwiZ2V0Q29sb3JcIix2YWx1ZTpmdW5jdGlvbiB0KCl7aWYodGhpcy5waGFudG9tKXtyZXR1cm5cInRyYW5zcGFyZW50XCJ9ZWxzZSBpZih0aGlzLmNvbG9yIT1udWxsJiZlLmNvbG9yTWFwLmhhc093blByb3BlcnR5KHRoaXMuY29sb3IpKXtyZXR1cm4gZS5jb2xvck1hcFt0aGlzLmNvbG9yXX1lbHNle3JldHVybiB0aGlzLmNvbG9yfX19XSk7cmV0dXJuIGV9KCk7aC5CQVNFU0laRT02O2guY29sb3JNYXA9e1wia2F0ZXgtYmx1ZVwiOlwiIzY0OTVlZFwiLFwia2F0ZXgtb3JhbmdlXCI6XCIjZmZhNTAwXCIsXCJrYXRleC1waW5rXCI6XCIjZmYwMGFmXCIsXCJrYXRleC1yZWRcIjpcIiNkZjAwMzBcIixcImthdGV4LWdyZWVuXCI6XCIjMjhhZTdiXCIsXCJrYXRleC1ncmF5XCI6XCJncmF5XCIsXCJrYXRleC1wdXJwbGVcIjpcIiM5ZDM4YmRcIixcImthdGV4LWJsdWVBXCI6XCIjY2NmYWZmXCIsXCJrYXRleC1ibHVlQlwiOlwiIzgwZjZmZlwiLFwia2F0ZXgtYmx1ZUNcIjpcIiM2M2Q5ZWFcIixcImthdGV4LWJsdWVEXCI6XCIjMTFhY2NkXCIsXCJrYXRleC1ibHVlRVwiOlwiIzBjN2Y5OVwiLFwia2F0ZXgtdGVhbEFcIjpcIiM5NGZmZjVcIixcImthdGV4LXRlYWxCXCI6XCIjMjZlZGQ1XCIsXCJrYXRleC10ZWFsQ1wiOlwiIzAxZDFjMVwiLFwia2F0ZXgtdGVhbERcIjpcIiMwMWE5OTVcIixcImthdGV4LXRlYWxFXCI6XCIjMjA4MTcwXCIsXCJrYXRleC1ncmVlbkFcIjpcIiNiNmZmYjBcIixcImthdGV4LWdyZWVuQlwiOlwiIzhhZjI4MVwiLFwia2F0ZXgtZ3JlZW5DXCI6XCIjNzRjZjcwXCIsXCJrYXRleC1ncmVlbkRcIjpcIiMxZmFiNTRcIixcImthdGV4LWdyZWVuRVwiOlwiIzBkOTIzZlwiLFwia2F0ZXgtZ29sZEFcIjpcIiNmZmQwYTlcIixcImthdGV4LWdvbGRCXCI6XCIjZmZiYjcxXCIsXCJrYXRleC1nb2xkQ1wiOlwiI2ZmOWMzOVwiLFwia2F0ZXgtZ29sZERcIjpcIiNlMDdkMTBcIixcImthdGV4LWdvbGRFXCI6XCIjYTc1YTA1XCIsXCJrYXRleC1yZWRBXCI6XCIjZmNhOWE5XCIsXCJrYXRleC1yZWRCXCI6XCIjZmY4NDgyXCIsXCJrYXRleC1yZWRDXCI6XCIjZjk2ODVkXCIsXCJrYXRleC1yZWREXCI6XCIjZTg0ZDM5XCIsXCJrYXRleC1yZWRFXCI6XCIjYmMyNjEyXCIsXCJrYXRleC1tYXJvb25BXCI6XCIjZmZiZGUwXCIsXCJrYXRleC1tYXJvb25CXCI6XCIjZmY5MmM2XCIsXCJrYXRleC1tYXJvb25DXCI6XCIjZWQ1ZmE2XCIsXCJrYXRleC1tYXJvb25EXCI6XCIjY2EzMzdjXCIsXCJrYXRleC1tYXJvb25FXCI6XCIjOWUwMzRlXCIsXCJrYXRleC1wdXJwbGVBXCI6XCIjZGRkN2ZmXCIsXCJrYXRleC1wdXJwbGVCXCI6XCIjYzZiOWZjXCIsXCJrYXRleC1wdXJwbGVDXCI6XCIjYWE4N2ZmXCIsXCJrYXRleC1wdXJwbGVEXCI6XCIjNzg1NGFiXCIsXCJrYXRleC1wdXJwbGVFXCI6XCIjNTQzYjc4XCIsXCJrYXRleC1taW50QVwiOlwiI2Y1ZjllOFwiLFwia2F0ZXgtbWludEJcIjpcIiNlZGYyZGZcIixcImthdGV4LW1pbnRDXCI6XCIjZTBlNWNjXCIsXCJrYXRleC1ncmF5QVwiOlwiI2Y2ZjdmN1wiLFwia2F0ZXgtZ3JheUJcIjpcIiNmMGYxZjJcIixcImthdGV4LWdyYXlDXCI6XCIjZTNlNWU2XCIsXCJrYXRleC1ncmF5RFwiOlwiI2Q2ZDhkYVwiLFwia2F0ZXgtZ3JheUVcIjpcIiNiYWJlYzJcIixcImthdGV4LWdyYXlGXCI6XCIjODg4ZDkzXCIsXCJrYXRleC1ncmF5R1wiOlwiIzYyNjU2OVwiLFwia2F0ZXgtZ3JheUhcIjpcIiMzYjNlNDBcIixcImthdGV4LWdyYXlJXCI6XCIjMjEyNDJjXCIsXCJrYXRleC1rYUJsdWVcIjpcIiMzMTQ0NTNcIixcImthdGV4LWthR3JlZW5cIjpcIiM3MUIzMDdcIn07ci5kZWZhdWx0PWh9LHtcIi4vZm9udE1ldHJpY3NcIjoxMDEsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjo4LFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI6OX1dLDg0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCIpO3ZhciBuPXUoYSk7dmFyIGk9ZShcIi4vUGFyc2VOb2RlXCIpO3ZhciBsPXUoaSk7dmFyIG89ZShcIi4vVG9rZW5cIik7ZnVuY3Rpb24gdShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHM9ZnVuY3Rpb24gZSh0LHIpeygwLG4uZGVmYXVsdCkodGhpcyxlKTt2YXIgYT1cIkthVGVYIHBhcnNlIGVycm9yOiBcIit0O3ZhciBpPXZvaWQgMDt2YXIgbD1yJiZyLmxvYztpZihsJiZsLnN0YXJ0PD1sLmVuZCl7dmFyIG89bC5sZXhlci5pbnB1dDtpPWwuc3RhcnQ7dmFyIHU9bC5lbmQ7aWYoaT09PW8ubGVuZ3RoKXtcbmErPVwiIGF0IGVuZCBvZiBpbnB1dDogXCJ9ZWxzZXthKz1cIiBhdCBwb3NpdGlvbiBcIisoaSsxKStcIjogXCJ9dmFyIHM9by5zbGljZShpLHUpLnJlcGxhY2UoL1teXS9nLFwiJCZcXHUwMzMyXCIpO3ZhciBmPXZvaWQgMDtpZihpPjE1KXtmPVwiXFx1MjAyNlwiK28uc2xpY2UoaS0xNSxpKX1lbHNle2Y9by5zbGljZSgwLGkpfXZhciBkPXZvaWQgMDtpZih1KzE1PG8ubGVuZ3RoKXtkPW8uc2xpY2UodSx1KzE1KStcIlxcdTIwMjZcIn1lbHNle2Q9by5zbGljZSh1KX1hKz1mK3MrZH12YXIgYz1uZXcgRXJyb3IoYSk7Yy5uYW1lPVwiUGFyc2VFcnJvclwiO2MuX19wcm90b19fPWUucHJvdG90eXBlO2MucG9zaXRpb249aTtyZXR1cm4gY307cy5wcm90b3R5cGUuX19wcm90b19fPUVycm9yLnByb3RvdHlwZTtyLmRlZmF1bHQ9c30se1wiLi9QYXJzZU5vZGVcIjo4NSxcIi4vVG9rZW5cIjo5MCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiOjh9XSw4NTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbj11KGEpO3ZhciBpPWUoXCIuL1Rva2VuXCIpO3ZhciBsPWUoXCIuL1NvdXJjZUxvY2F0aW9uXCIpO3ZhciBvPXUobCk7ZnVuY3Rpb24gdShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHM9ZnVuY3Rpb24gZSh0LHIsYSxpLGwpeygwLG4uZGVmYXVsdCkodGhpcyxlKTt0aGlzLnR5cGU9dDt0aGlzLnZhbHVlPXI7dGhpcy5tb2RlPWE7dGhpcy5sb2M9by5kZWZhdWx0LnJhbmdlKGksbCl9O3IuZGVmYXVsdD1zfSx7XCIuL1NvdXJjZUxvY2F0aW9uXCI6ODgsXCIuL1Rva2VuXCI6OTAsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjo4fV0sODY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIik7dmFyIG49TShhKTt2YXIgaT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCIpO3ZhciBsPU0oaSk7dmFyIG89ZShcIi4vZnVuY3Rpb25zXCIpO3ZhciB1PU0obyk7dmFyIHM9ZShcIi4vZW52aXJvbm1lbnRzXCIpO3ZhciBmPU0ocyk7dmFyIGQ9ZShcIi4vTWFjcm9FeHBhbmRlclwiKTt2YXIgYz1NKGQpO3ZhciBoPWUoXCIuL3N5bWJvbHNcIik7dmFyIHY9TShoKTt2YXIgcD1lKFwiLi91dGlsc1wiKTt2YXIgbT1NKHApO3ZhciBnPWUoXCIuL3VuaXRzXCIpO3ZhciBiPWUoXCIuL3VuaWNvZGVSZWdleGVzXCIpO3ZhciB5PWUoXCIuL1BhcnNlTm9kZVwiKTt2YXIgeD1NKHkpO3ZhciB3PWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIGs9TSh3KTtmdW5jdGlvbiBNKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBfKGUsdCl7cmV0dXJue3R5cGU6XCJhcmdcIixyZXN1bHQ6ZSx0b2tlbjp0fX1mdW5jdGlvbiBTKGUpe3JldHVybnt0eXBlOlwiZm5cIixyZXN1bHQ6ZS50ZXh0LHRva2VuOmV9fWZ1bmN0aW9uIHooZSl7cmV0dXJue3R5cGU6XCIkXCIscmVzdWx0OlwiJFwiLHRva2VuOmV9fWZ1bmN0aW9uIFQoZSl7aWYoZS50eXBlPT09XCIkXCIpe3Rocm93IG5ldyBrLmRlZmF1bHQoXCJVbmV4cGVjdGVkICRcIixlLnRva2VuKX1yZXR1cm4gZX12YXIgQz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyKXsoMCxuLmRlZmF1bHQpKHRoaXMsZSk7dGhpcy5ndWxsZXQ9bmV3IGMuZGVmYXVsdCh0LHIubWFjcm9zKTtpZihyLmNvbG9ySXNUZXh0Q29sb3Ipe3RoaXMuZ3VsbGV0Lm1hY3Jvc1tcIlxcXFxjb2xvclwiXT1cIlxcXFx0ZXh0Y29sb3JcIn10aGlzLnNldHRpbmdzPXI7dGhpcy5sZWZ0cmlnaHREZXB0aD0wfSgwLGwuZGVmYXVsdCkoZSxbe2tleTpcImV4cGVjdFwiLHZhbHVlOmZ1bmN0aW9uIGUodCxyKXtpZih0aGlzLm5leHRUb2tlbi50ZXh0IT09dCl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkV4cGVjdGVkICdcIit0K1wiJywgZ290ICdcIit0aGlzLm5leHRUb2tlbi50ZXh0K1wiJ1wiLHRoaXMubmV4dFRva2VuKX1pZihyIT09ZmFsc2Upe3RoaXMuY29uc3VtZSgpfX19LHtrZXk6XCJjb25zdW1lXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3RoaXMubmV4dFRva2VuPXRoaXMuZ3VsbGV0LmV4cGFuZE5leHRUb2tlbigpfX0se2tleTpcInN3aXRjaE1vZGVcIix2YWx1ZTpmdW5jdGlvbiBlKHQpe3RoaXMubW9kZT10fX0se2tleTpcInBhcnNlXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3RoaXMubW9kZT1cIm1hdGhcIjt0aGlzLmNvbnN1bWUoKTt2YXIgZT10aGlzLnBhcnNlSW5wdXQoKTtyZXR1cm4gZX19LHtrZXk6XCJwYXJzZUlucHV0XCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlKTt0aGlzLmV4cGVjdChcIkVPRlwiLGZhbHNlKTtyZXR1cm4gdH19LHtrZXk6XCJwYXJzZUV4cHJlc3Npb25cIix2YWx1ZTpmdW5jdGlvbiB0KHIsYSl7dmFyIG49W107d2hpbGUodHJ1ZSl7aWYodGhpcy5tb2RlPT09XCJtYXRoXCIpe3RoaXMuY29uc3VtZVNwYWNlcygpfXZhciBpPXRoaXMubmV4dFRva2VuO2lmKGUuZW5kT2ZFeHByZXNzaW9uLmluZGV4T2YoaS50ZXh0KSE9PS0xKXticmVha31pZihhJiZpLnRleHQ9PT1hKXticmVha31pZihyJiZ1LmRlZmF1bHRbaS50ZXh0XSYmdS5kZWZhdWx0W2kudGV4dF0uaW5maXgpe2JyZWFrfXZhciBsPXRoaXMucGFyc2VBdG9tKGEpO2lmKCFsKXtpZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJmkudGV4dFswXT09PVwiXFxcXFwiKXt2YXIgbz10aGlzLmhhbmRsZVVuc3VwcG9ydGVkQ21kKCk7bi5wdXNoKG8pO2NvbnRpbnVlfWJyZWFrfW4ucHVzaChsKX1yZXR1cm4gdGhpcy5oYW5kbGVJbmZpeE5vZGVzKG4pfX0se2tleTpcImhhbmRsZUluZml4Tm9kZXNcIix2YWx1ZTpmdW5jdGlvbiBlKHQpe3ZhciByPS0xO3ZhciBhPXZvaWQgMDtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXTtpZihpLnR5cGU9PT1cImluZml4XCIpe2lmKHIhPT0tMSl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIm9ubHkgb25lIGluZml4IG9wZXJhdG9yIHBlciBncm91cFwiLGkudmFsdWUudG9rZW4pfXI9bjthPWkudmFsdWUucmVwbGFjZVdpdGh9fWlmKHIhPT0tMSl7dmFyIGw9dm9pZCAwO3ZhciBvPXZvaWQgMDt2YXIgdT10LnNsaWNlKDAscik7dmFyIHM9dC5zbGljZShyKzEpO2lmKHUubGVuZ3RoPT09MSYmdVswXS50eXBlPT09XCJvcmRncm91cFwiKXtsPXVbMF19ZWxzZXtsPW5ldyB4LmRlZmF1bHQoXCJvcmRncm91cFwiLHUsdGhpcy5tb2RlKX1pZihzLmxlbmd0aD09PTEmJnNbMF0udHlwZT09PVwib3JkZ3JvdXBcIil7bz1zWzBdfWVsc2V7bz1uZXcgeC5kZWZhdWx0KFwib3JkZ3JvdXBcIixzLHRoaXMubW9kZSl9dmFyIGY9dGhpcy5jYWxsRnVuY3Rpb24oYSxbbCxvXSxbXSk7cmV0dXJuW25ldyB4LmRlZmF1bHQoZi50eXBlLGYsdGhpcy5tb2RlKV19ZWxzZXtyZXR1cm4gdH19fSx7a2V5OlwiaGFuZGxlU3VwU3Vic2NyaXB0XCIsdmFsdWU6ZnVuY3Rpb24gdChyKXt2YXIgYT10aGlzLm5leHRUb2tlbjt2YXIgbj1hLnRleHQ7dGhpcy5jb25zdW1lKCk7dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIGk9dGhpcy5wYXJzZUdyb3VwKCk7aWYoIWkpe2lmKCF0aGlzLnNldHRpbmdzLnRocm93T25FcnJvciYmdGhpcy5uZXh0VG9rZW4udGV4dFswXT09PVwiXFxcXFwiKXtyZXR1cm4gdGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCgpfWVsc2V7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkV4cGVjdGVkIGdyb3VwIGFmdGVyICdcIituK1wiJ1wiLGEpfX12YXIgbD1UKGkpO2lmKGwudHlwZT09PVwiZm5cIil7dmFyIG89dS5kZWZhdWx0W2kucmVzdWx0XS5ncmVlZGluZXNzO2lmKG8+ZS5TVVBTVUJfR1JFRURJTkVTUyl7cmV0dXJuIHRoaXMucGFyc2VHaXZlbkZ1bmN0aW9uKGkpfWVsc2V7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkdvdCBmdW5jdGlvbiAnXCIraS5yZXN1bHQrXCInIHdpdGggbm8gYXJndW1lbnRzIFwiK1wiYXMgXCIrcixhKX19ZWxzZXtyZXR1cm4gaS5yZXN1bHR9fX0se2tleTpcImhhbmRsZVVuc3VwcG9ydGVkQ21kXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PXRoaXMubmV4dFRva2VuLnRleHQ7dmFyIHI9W107Zm9yKHZhciBhPTA7YTx0Lmxlbmd0aDthKyspe3IucHVzaChuZXcgeC5kZWZhdWx0KFwidGV4dG9yZFwiLHRbYV0sXCJ0ZXh0XCIpKX12YXIgbj1uZXcgeC5kZWZhdWx0KFwidGV4dFwiLHtib2R5OnIsdHlwZTpcInRleHRcIn0sdGhpcy5tb2RlKTt2YXIgaT1uZXcgeC5kZWZhdWx0KFwiY29sb3JcIix7Y29sb3I6dGhpcy5zZXR0aW5ncy5lcnJvckNvbG9yLHZhbHVlOltuXSx0eXBlOlwiY29sb3JcIn0sdGhpcy5tb2RlKTt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gaX19LHtrZXk6XCJwYXJzZUF0b21cIix2YWx1ZTpmdW5jdGlvbiBlKHQpe3ZhciByPXRoaXMucGFyc2VJbXBsaWNpdEdyb3VwKHQpO2lmKHRoaXMubW9kZT09PVwidGV4dFwiKXtyZXR1cm4gcn12YXIgYT12b2lkIDA7dmFyIG49dm9pZCAwO3doaWxlKHRydWUpe3RoaXMuY29uc3VtZVNwYWNlcygpO3ZhciBpPXRoaXMubmV4dFRva2VuO2lmKGkudGV4dD09PVwiXFxcXGxpbWl0c1wifHxpLnRleHQ9PT1cIlxcXFxub2xpbWl0c1wiKXtpZighcnx8ci50eXBlIT09XCJvcFwiKXt0aHJvdyBuZXcgay5kZWZhdWx0KFwiTGltaXQgY29udHJvbHMgbXVzdCBmb2xsb3cgYSBtYXRoIG9wZXJhdG9yXCIsaSl9ZWxzZXt2YXIgbD1pLnRleHQ9PT1cIlxcXFxsaW1pdHNcIjtyLnZhbHVlLmxpbWl0cz1sO3IudmFsdWUuYWx3YXlzSGFuZGxlU3VwU3ViPXRydWV9dGhpcy5jb25zdW1lKCl9ZWxzZSBpZihpLnRleHQ9PT1cIl5cIil7aWYoYSl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkRvdWJsZSBzdXBlcnNjcmlwdFwiLGkpfWE9dGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdXBlcnNjcmlwdFwiKX1lbHNlIGlmKGkudGV4dD09PVwiX1wiKXtpZihuKXt0aHJvdyBuZXcgay5kZWZhdWx0KFwiRG91YmxlIHN1YnNjcmlwdFwiLGkpfW49dGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdWJzY3JpcHRcIil9ZWxzZSBpZihpLnRleHQ9PT1cIidcIil7aWYoYSl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkRvdWJsZSBzdXBlcnNjcmlwdFwiLGkpfXZhciBvPW5ldyB4LmRlZmF1bHQoXCJ0ZXh0b3JkXCIsXCJcXFxccHJpbWVcIix0aGlzLm1vZGUpO3ZhciB1PVtvXTt0aGlzLmNvbnN1bWUoKTt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0PT09XCInXCIpe3UucHVzaChvKTt0aGlzLmNvbnN1bWUoKX1pZih0aGlzLm5leHRUb2tlbi50ZXh0PT09XCJeXCIpe3UucHVzaCh0aGlzLmhhbmRsZVN1cFN1YnNjcmlwdChcInN1cGVyc2NyaXB0XCIpKX1hPW5ldyB4LmRlZmF1bHQoXCJvcmRncm91cFwiLHUsdGhpcy5tb2RlKX1lbHNle2JyZWFrfX1pZihhfHxuKXtyZXR1cm4gbmV3IHguZGVmYXVsdChcInN1cHN1YlwiLHtiYXNlOnIsc3VwOmEsc3ViOm59LHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gcn19fSx7a2V5OlwicGFyc2VJbXBsaWNpdEdyb3VwXCIsdmFsdWU6ZnVuY3Rpb24gdChyKXt2YXIgYT10aGlzLnBhcnNlU3ltYm9sKCk7aWYoYT09bnVsbCl7cmV0dXJuIHRoaXMucGFyc2VGdW5jdGlvbigpfXZhciBuPWEucmVzdWx0O2lmKG49PT1cIlxcXFxsZWZ0XCIpe3ZhciBpPXRoaXMucGFyc2VHaXZlbkZ1bmN0aW9uKGEpOysrdGhpcy5sZWZ0cmlnaHREZXB0aDt2YXIgbD10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7LS10aGlzLmxlZnRyaWdodERlcHRoO3RoaXMuZXhwZWN0KFwiXFxcXHJpZ2h0XCIsZmFsc2UpO3ZhciBvPXRoaXMucGFyc2VGdW5jdGlvbigpO3JldHVybiBuZXcgeC5kZWZhdWx0KFwibGVmdHJpZ2h0XCIse2JvZHk6bCxsZWZ0OmkudmFsdWUudmFsdWUscmlnaHQ6by52YWx1ZS52YWx1ZX0sdGhpcy5tb2RlKX1lbHNlIGlmKG49PT1cIlxcXFxiZWdpblwiKXt2YXIgdT10aGlzLnBhcnNlR2l2ZW5GdW5jdGlvbihhKTt2YXIgcz11LnZhbHVlLm5hbWU7aWYoIWYuZGVmYXVsdC5oYXMocykpe3Rocm93IG5ldyBrLmRlZmF1bHQoXCJObyBzdWNoIGVudmlyb25tZW50OiBcIitzLHUudmFsdWUubmFtZUdyb3VwKX12YXIgZD1mLmRlZmF1bHQuZ2V0KHMpO3ZhciBjPXRoaXMucGFyc2VBcmd1bWVudHMoXCJcXFxcYmVnaW57XCIrcytcIn1cIixkKSxoPWMuYXJncyx2PWMub3B0QXJnczt2YXIgcD17bW9kZTp0aGlzLm1vZGUsZW52TmFtZTpzLHBhcnNlcjp0aGlzfTt2YXIgZz1kLmhhbmRsZXIocCxoLHYpO3RoaXMuZXhwZWN0KFwiXFxcXGVuZFwiLGZhbHNlKTt2YXIgYj10aGlzLm5leHRUb2tlbjt2YXIgeT10aGlzLnBhcnNlRnVuY3Rpb24oKTtpZih5LnZhbHVlLm5hbWUhPT1zKXt0aHJvdyBuZXcgay5kZWZhdWx0KFwiTWlzbWF0Y2g6IFxcXFxiZWdpbntcIitzK1wifSBtYXRjaGVkIFwiK1wiYnkgXFxcXGVuZHtcIit5LnZhbHVlLm5hbWUrXCJ9XCIsYil9Zy5wb3NpdGlvbj15LnBvc2l0aW9uO3JldHVybiBnfWVsc2UgaWYobS5kZWZhdWx0LmNvbnRhaW5zKGUuc2l6ZUZ1bmNzLG4pKXt0aGlzLmNvbnN1bWVTcGFjZXMoKTt2YXIgdz10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxyKTtyZXR1cm4gbmV3IHguZGVmYXVsdChcInNpemluZ1wiLHtzaXplOm0uZGVmYXVsdC5pbmRleE9mKGUuc2l6ZUZ1bmNzLG4pKzEsdmFsdWU6d30sdGhpcy5tb2RlKX1lbHNlIGlmKG0uZGVmYXVsdC5jb250YWlucyhlLnN0eWxlRnVuY3Msbikpe3RoaXMuY29uc3VtZVNwYWNlcygpO3ZhciBNPXRoaXMucGFyc2VFeHByZXNzaW9uKHRydWUscik7cmV0dXJuIG5ldyB4LmRlZmF1bHQoXCJzdHlsaW5nXCIse3N0eWxlOm4uc2xpY2UoMSxuLmxlbmd0aC01KSx2YWx1ZTpNfSx0aGlzLm1vZGUpfWVsc2UgaWYobiBpbiBlLm9sZEZvbnRGdW5jcyl7dmFyIF89ZS5vbGRGb250RnVuY3Nbbl07dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIFM9dGhpcy5wYXJzZUV4cHJlc3Npb24odHJ1ZSxyKTtpZihfLnNsaWNlKDAsNCk9PT1cInRleHRcIil7cmV0dXJuIG5ldyB4LmRlZmF1bHQoXCJ0ZXh0XCIse3N0eWxlOl8sYm9keTpuZXcgeC5kZWZhdWx0KFwib3JkZ3JvdXBcIixTLHRoaXMubW9kZSl9LHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gbmV3IHguZGVmYXVsdChcImZvbnRcIix7Zm9udDpfLGJvZHk6bmV3IHguZGVmYXVsdChcIm9yZGdyb3VwXCIsUyx0aGlzLm1vZGUpfSx0aGlzLm1vZGUpfX1lbHNlIGlmKG49PT1cIlxcXFxjb2xvclwiKXt2YXIgej10aGlzLnBhcnNlQ29sb3JHcm91cChmYWxzZSk7aWYoIXope3Rocm93IG5ldyBrLmRlZmF1bHQoXCJcXFxcY29sb3Igbm90IGZvbGxvd2VkIGJ5IGNvbG9yXCIpfXZhciBUPXRoaXMucGFyc2VFeHByZXNzaW9uKHRydWUscik7cmV0dXJuIG5ldyB4LmRlZmF1bHQoXCJjb2xvclwiLHt0eXBlOlwiY29sb3JcIixjb2xvcjp6LnJlc3VsdC52YWx1ZSx2YWx1ZTpUfSx0aGlzLm1vZGUpfWVsc2UgaWYobj09PVwiJFwiKXtpZih0aGlzLm1vZGU9PT1cIm1hdGhcIil7dGhyb3cgbmV3IGsuZGVmYXVsdChcIiQgd2l0aGluIG1hdGggbW9kZVwiKX10aGlzLmNvbnN1bWUoKTt2YXIgQz10aGlzLm1vZGU7dGhpcy5zd2l0Y2hNb2RlKFwibWF0aFwiKTt2YXIgQT10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxcIiRcIik7dGhpcy5leHBlY3QoXCIkXCIsdHJ1ZSk7dGhpcy5zd2l0Y2hNb2RlKEMpO3JldHVybiBuZXcgeC5kZWZhdWx0KFwic3R5bGluZ1wiLHtzdHlsZTpcInRleHRcIix2YWx1ZTpBfSxcIm1hdGhcIil9ZWxzZXtyZXR1cm4gdGhpcy5wYXJzZUdpdmVuRnVuY3Rpb24oYSl9fX0se2tleTpcInBhcnNlRnVuY3Rpb25cIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9dGhpcy5wYXJzZUdyb3VwKCk7cmV0dXJuIHQ/dGhpcy5wYXJzZUdpdmVuRnVuY3Rpb24odCk6bnVsbH19LHtrZXk6XCJwYXJzZUdpdmVuRnVuY3Rpb25cIix2YWx1ZTpmdW5jdGlvbiBlKHQpe3Q9VCh0KTtpZih0LnR5cGU9PT1cImZuXCIpe3ZhciByPXQucmVzdWx0O3ZhciBhPXUuZGVmYXVsdFtyXTtpZih0aGlzLm1vZGU9PT1cInRleHRcIiYmIWEuYWxsb3dlZEluVGV4dCl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkNhbid0IHVzZSBmdW5jdGlvbiAnXCIrcitcIicgaW4gdGV4dCBtb2RlXCIsdC50b2tlbil9ZWxzZSBpZih0aGlzLm1vZGU9PT1cIm1hdGhcIiYmYS5hbGxvd2VkSW5NYXRoPT09ZmFsc2Upe3Rocm93IG5ldyBrLmRlZmF1bHQoXCJDYW4ndCB1c2UgZnVuY3Rpb24gJ1wiK3IrXCInIGluIG1hdGggbW9kZVwiLHQudG9rZW4pfXZhciBuPXRoaXMucGFyc2VBcmd1bWVudHMocixhKSxpPW4uYXJncyxsPW4ub3B0QXJnczt2YXIgbz10LnRva2VuO3ZhciBzPXRoaXMuY2FsbEZ1bmN0aW9uKHIsaSxsLG8pO3JldHVybiBuZXcgeC5kZWZhdWx0KHMudHlwZSxzLHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gdC5yZXN1bHR9fX0se2tleTpcImNhbGxGdW5jdGlvblwiLHZhbHVlOmZ1bmN0aW9uIGUodCxyLGEsbil7dmFyIGk9e2Z1bmNOYW1lOnQscGFyc2VyOnRoaXMsdG9rZW46bn07cmV0dXJuIHUuZGVmYXVsdFt0XS5oYW5kbGVyKGkscixhKX19LHtrZXk6XCJwYXJzZUFyZ3VtZW50c1wiLHZhbHVlOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yLm51bUFyZ3Mrci5udW1PcHRpb25hbEFyZ3M7aWYoYT09PTApe3JldHVybnthcmdzOltdLG9wdEFyZ3M6W119fXZhciBuPXIuZ3JlZWRpbmVzczt2YXIgaT1bXTt2YXIgbD1bXTtmb3IodmFyIG89MDtvPGE7bysrKXt2YXIgcz1yLmFyZ1R5cGVzJiZyLmFyZ1R5cGVzW29dO3ZhciBmPW88ci5udW1PcHRpb25hbEFyZ3M7aWYobz4wJiYhZil7dGhpcy5jb25zdW1lU3BhY2VzKCl9aWYobz09PTAmJiFmJiZ0aGlzLm1vZGU9PT1cIm1hdGhcIil7dGhpcy5jb25zdW1lU3BhY2VzKCl9dmFyIGQ9dGhpcy5uZXh0VG9rZW47dmFyIGM9cz90aGlzLnBhcnNlR3JvdXBPZlR5cGUocyxmKTp0aGlzLnBhcnNlR3JvdXAoZik7aWYoIWMpe2lmKGYpe2wucHVzaChudWxsKTtjb250aW51ZX1pZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJnRoaXMubmV4dFRva2VuLnRleHRbMF09PT1cIlxcXFxcIil7Yz1fKHRoaXMuaGFuZGxlVW5zdXBwb3J0ZWRDbWQoKSxkKX1lbHNle3Rocm93IG5ldyBrLmRlZmF1bHQoXCJFeHBlY3RlZCBncm91cCBhZnRlciAnXCIrdCtcIidcIixkKX19dmFyIGg9dm9pZCAwO2M9VChjKTtpZihjLnR5cGU9PT1cImZuXCIpe3ZhciB2PXUuZGVmYXVsdFtjLnJlc3VsdF0uZ3JlZWRpbmVzcztpZih2Pm4pe2g9dGhpcy5wYXJzZUdpdmVuRnVuY3Rpb24oYyl9ZWxzZXt0aHJvdyBuZXcgay5kZWZhdWx0KFwiR290IGZ1bmN0aW9uICdcIitjLnJlc3VsdCtcIicgYXMgXCIrXCJhcmd1bWVudCB0byAnXCIrdCtcIidcIixkKX19ZWxzZXtoPWMucmVzdWx0fShmP2w6aSkucHVzaChoKX1yZXR1cm57YXJnczppLG9wdEFyZ3M6bH19fSx7a2V5OlwicGFyc2VHcm91cE9mVHlwZVwiLHZhbHVlOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT10aGlzLm1vZGU7aWYodD09PVwib3JpZ2luYWxcIil7dD1hfWlmKHQ9PT1cImNvbG9yXCIpe3JldHVybiB0aGlzLnBhcnNlQ29sb3JHcm91cChyKX1pZih0PT09XCJzaXplXCIpe3JldHVybiB0aGlzLnBhcnNlU2l6ZUdyb3VwKHIpfWlmKHQ9PT1cInN0cmluZ1wiKXt2YXIgbj10aGlzLnBhcnNlU3RyaW5nR3JvdXAoXCJzdHJpbmdcIixyKTtyZXR1cm4gbmV3IF8obi50ZXh0LGZhbHNlKX10aGlzLnN3aXRjaE1vZGUodCk7dmFyIGk9dGhpcy5wYXJzZUdyb3VwKHIpO3RoaXMuc3dpdGNoTW9kZShhKTtyZXR1cm4gaX19LHtrZXk6XCJjb25zdW1lU3BhY2VzXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIiBcIil7dGhpcy5jb25zdW1lKCl9fX0se2tleTpcInBhcnNlU3RyaW5nR3JvdXBcIix2YWx1ZTpmdW5jdGlvbiBlKHQscil7aWYociYmdGhpcy5uZXh0VG9rZW4udGV4dCE9PVwiW1wiKXtyZXR1cm4gbnVsbH12YXIgYT10aGlzLm1vZGU7dGhpcy5tb2RlPVwidGV4dFwiO3RoaXMuZXhwZWN0KHI/XCJbXCI6XCJ7XCIpO3ZhciBuPVwiXCI7dmFyIGk9dGhpcy5uZXh0VG9rZW47dmFyIGw9aTt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0IT09KHI/XCJdXCI6XCJ9XCIpKXtpZih0aGlzLm5leHRUb2tlbi50ZXh0PT09XCJFT0ZcIil7dGhyb3cgbmV3IGsuZGVmYXVsdChcIlVuZXhwZWN0ZWQgZW5kIG9mIGlucHV0IGluIFwiK3QsaS5yYW5nZSh0aGlzLm5leHRUb2tlbixuKSl9bD10aGlzLm5leHRUb2tlbjtuKz1sLnRleHQ7dGhpcy5jb25zdW1lKCl9dGhpcy5tb2RlPWE7dGhpcy5leHBlY3Qocj9cIl1cIjpcIn1cIik7cmV0dXJuIGkucmFuZ2UobCxuKX19LHtrZXk6XCJwYXJzZVJlZ2V4R3JvdXBcIix2YWx1ZTpmdW5jdGlvbiBlKHQscil7dmFyIGE9dGhpcy5tb2RlO3RoaXMubW9kZT1cInRleHRcIjt2YXIgbj10aGlzLm5leHRUb2tlbjt2YXIgaT1uO3ZhciBsPVwiXCI7d2hpbGUodGhpcy5uZXh0VG9rZW4udGV4dCE9PVwiRU9GXCImJnQudGVzdChsK3RoaXMubmV4dFRva2VuLnRleHQpKXtpPXRoaXMubmV4dFRva2VuO2wrPWkudGV4dDt0aGlzLmNvbnN1bWUoKX1pZihsPT09XCJcIil7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkludmFsaWQgXCIrcitcIjogJ1wiK24udGV4dCtcIidcIixuKX10aGlzLm1vZGU9YTtyZXR1cm4gbi5yYW5nZShpLGwpfX0se2tleTpcInBhcnNlQ29sb3JHcm91cFwiLHZhbHVlOmZ1bmN0aW9uIGUodCl7dmFyIHI9dGhpcy5wYXJzZVN0cmluZ0dyb3VwKFwiY29sb3JcIix0KTtpZighcil7cmV0dXJuIG51bGx9dmFyIGE9L14oI1thLWYwLTldezN9fCNbYS1mMC05XXs2fXxbYS16XSspJC9pLmV4ZWMoci50ZXh0KTtpZighYSl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkludmFsaWQgY29sb3I6ICdcIityLnRleHQrXCInXCIscil9cmV0dXJuIF8obmV3IHguZGVmYXVsdChcImNvbG9yXCIsYVswXSx0aGlzLm1vZGUpLHIpfX0se2tleTpcInBhcnNlU2l6ZUdyb3VwXCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXt2YXIgcj12b2lkIDA7aWYoIXQmJnRoaXMubmV4dFRva2VuLnRleHQhPT1cIntcIil7cj10aGlzLnBhcnNlUmVnZXhHcm91cCgvXlstK10/ICooPzokfFxcZCt8XFxkK1xcLlxcZCp8XFwuXFxkKikgKlthLXpdezAsMn0gKiQvLFwic2l6ZVwiKX1lbHNle3I9dGhpcy5wYXJzZVN0cmluZ0dyb3VwKFwic2l6ZVwiLHQpfWlmKCFyKXtyZXR1cm4gbnVsbH12YXIgYT0vKFstK10/KSAqKFxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykgKihbYS16XXsyfSkvLmV4ZWMoci50ZXh0KTtpZighYSl7dGhyb3cgbmV3IGsuZGVmYXVsdChcIkludmFsaWQgc2l6ZTogJ1wiK3IudGV4dCtcIidcIixyKX12YXIgbj17bnVtYmVyOisoYVsxXSthWzJdKSx1bml0OmFbM119O2lmKCEoMCxnLnZhbGlkVW5pdCkobikpe3Rocm93IG5ldyBrLmRlZmF1bHQoXCJJbnZhbGlkIHVuaXQ6ICdcIituLnVuaXQrXCInXCIscil9cmV0dXJuIF8obmV3IHguZGVmYXVsdChcInNpemVcIixuLHRoaXMubW9kZSkscil9fSx7a2V5OlwicGFyc2VHcm91cFwiLHZhbHVlOmZ1bmN0aW9uIGUodCl7dmFyIHI9dGhpcy5uZXh0VG9rZW47aWYodGhpcy5uZXh0VG9rZW4udGV4dD09PSh0P1wiW1wiOlwie1wiKSl7dGhpcy5jb25zdW1lKCk7dmFyIGE9dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UsdD9cIl1cIjpcIn1cIik7dmFyIG49dGhpcy5uZXh0VG9rZW47dGhpcy5leHBlY3QodD9cIl1cIjpcIn1cIik7aWYodGhpcy5tb2RlPT09XCJ0ZXh0XCIpe3RoaXMuZm9ybUxpZ2F0dXJlcyhhKX1yZXR1cm4gXyhuZXcgeC5kZWZhdWx0KFwib3JkZ3JvdXBcIixhLHRoaXMubW9kZSxyLG4pLHIucmFuZ2UobixyLnRleHQpKX1lbHNle3JldHVybiB0P251bGw6dGhpcy5wYXJzZVN5bWJvbCgpfX19LHtrZXk6XCJmb3JtTGlnYXR1cmVzXCIsdmFsdWU6ZnVuY3Rpb24gZSh0KXt2YXIgcj10Lmxlbmd0aC0xO2Zvcih2YXIgYT0wO2E8cjsrK2Epe3ZhciBuPXRbYV07dmFyIGk9bi52YWx1ZTtpZihpPT09XCItXCImJnRbYSsxXS52YWx1ZT09PVwiLVwiKXtpZihhKzE8ciYmdFthKzJdLnZhbHVlPT09XCItXCIpe3Quc3BsaWNlKGEsMyxuZXcgeC5kZWZhdWx0KFwidGV4dG9yZFwiLFwiLS0tXCIsXCJ0ZXh0XCIsbix0W2ErMl0pKTtyLT0yfWVsc2V7dC5zcGxpY2UoYSwyLG5ldyB4LmRlZmF1bHQoXCJ0ZXh0b3JkXCIsXCItLVwiLFwidGV4dFwiLG4sdFthKzFdKSk7ci09MX19aWYoKGk9PT1cIidcInx8aT09PVwiYFwiKSYmdFthKzFdLnZhbHVlPT09aSl7dC5zcGxpY2UoYSwyLG5ldyB4LmRlZmF1bHQoXCJ0ZXh0b3JkXCIsaStpLFwidGV4dFwiLG4sdFthKzFdKSk7ci09MX19fX0se2tleTpcInBhcnNlU3ltYm9sXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PXRoaXMubmV4dFRva2VuO2lmKHUuZGVmYXVsdFt0LnRleHRdKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gUyh0KX1lbHNlIGlmKHYuZGVmYXVsdFt0aGlzLm1vZGVdW3QudGV4dF0pe3RoaXMuY29uc3VtZSgpO3JldHVybiBfKG5ldyB4LmRlZmF1bHQodi5kZWZhdWx0W3RoaXMubW9kZV1bdC50ZXh0XS5ncm91cCx0LnRleHQsdGhpcy5tb2RlLHQpLHQpfWVsc2UgaWYodGhpcy5tb2RlPT09XCJ0ZXh0XCImJmIuY2prUmVnZXgudGVzdCh0LnRleHQpKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gXyhuZXcgeC5kZWZhdWx0KFwidGV4dG9yZFwiLHQudGV4dCx0aGlzLm1vZGUsdCksdCl9ZWxzZSBpZih0LnRleHQ9PT1cIiRcIil7cmV0dXJuIHoodCl9ZWxzZSBpZigvXlxcXFx2ZXJiW15hLXpBLVpdLy50ZXN0KHQudGV4dCkpe3RoaXMuY29uc3VtZSgpO3ZhciByPXQudGV4dC5zbGljZSg1KTt2YXIgYT1yLmNoYXJBdCgwKT09PVwiKlwiO2lmKGEpe3I9ci5zbGljZSgxKX1pZihyLmxlbmd0aDwyfHxyLmNoYXJBdCgwKSE9PXIuc2xpY2UoLTEpKXt0aHJvdyBuZXcgay5kZWZhdWx0KFwiXFxcXHZlcmIgYXNzZXJ0aW9uIGZhaWxlZCAtLVxcbiAgICAgICAgICAgICAgICAgICAgcGxlYXNlIHJlcG9ydCB3aGF0IGlucHV0IGNhdXNlZCB0aGlzIGJ1Z1wiKX1yPXIuc2xpY2UoMSwtMSk7cmV0dXJuIF8obmV3IHguZGVmYXVsdChcInZlcmJcIix7Ym9keTpyLHN0YXI6YX0sXCJ0ZXh0XCIpLHQpfWVsc2V7cmV0dXJuIG51bGx9fX1dKTtyZXR1cm4gZX0oKTtDLmVuZE9mRXhwcmVzc2lvbj1bXCJ9XCIsXCJcXFxcZW5kXCIsXCJcXFxccmlnaHRcIixcIiZcIixcIlxcXFxcXFxcXCIsXCJcXFxcY3JcIl07Qy5TVVBTVUJfR1JFRURJTkVTUz0xO0Muc2l6ZUZ1bmNzPVtcIlxcXFx0aW55XCIsXCJcXFxcc2l4cHRzaXplXCIsXCJcXFxcc2NyaXB0c2l6ZVwiLFwiXFxcXGZvb3Rub3Rlc2l6ZVwiLFwiXFxcXHNtYWxsXCIsXCJcXFxcbm9ybWFsc2l6ZVwiLFwiXFxcXGxhcmdlXCIsXCJcXFxcTGFyZ2VcIixcIlxcXFxMQVJHRVwiLFwiXFxcXGh1Z2VcIixcIlxcXFxIdWdlXCJdO0Muc3R5bGVGdW5jcz1bXCJcXFxcZGlzcGxheXN0eWxlXCIsXCJcXFxcdGV4dHN0eWxlXCIsXCJcXFxcc2NyaXB0c3R5bGVcIixcIlxcXFxzY3JpcHRzY3JpcHRzdHlsZVwiXTtDLm9sZEZvbnRGdW5jcz17XCJcXFxccm1cIjpcIm1hdGhybVwiLFwiXFxcXHNmXCI6XCJtYXRoc2ZcIixcIlxcXFx0dFwiOlwibWF0aHR0XCIsXCJcXFxcYmZcIjpcIm1hdGhiZlwiLFwiXFxcXGl0XCI6XCJtYXRoaXRcIn07ci5kZWZhdWx0PUN9LHtcIi4vTWFjcm9FeHBhbmRlclwiOjgyLFwiLi9QYXJzZUVycm9yXCI6ODQsXCIuL1BhcnNlTm9kZVwiOjg1LFwiLi9lbnZpcm9ubWVudHNcIjo5OSxcIi4vZnVuY3Rpb25zXCI6MTAzLFwiLi9zeW1ib2xzXCI6MTE4LFwiLi91bmljb2RlUmVnZXhlc1wiOjExOSxcIi4vdW5pdHNcIjoxMjAsXCIuL3V0aWxzXCI6MTIxLFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI6OCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiOjl9XSw4NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbj1vKGEpO3ZhciBpPWUoXCIuL3V0aWxzXCIpO3ZhciBsPW8oaSk7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHU9ZnVuY3Rpb24gZSh0KXsoMCxuLmRlZmF1bHQpKHRoaXMsZSk7dD10fHx7fTt0aGlzLmRpc3BsYXlNb2RlPWwuZGVmYXVsdC5kZWZsdCh0LmRpc3BsYXlNb2RlLGZhbHNlKTt0aGlzLnRocm93T25FcnJvcj1sLmRlZmF1bHQuZGVmbHQodC50aHJvd09uRXJyb3IsdHJ1ZSk7dGhpcy5lcnJvckNvbG9yPWwuZGVmYXVsdC5kZWZsdCh0LmVycm9yQ29sb3IsXCIjY2MwMDAwXCIpO3RoaXMubWFjcm9zPXQubWFjcm9zfHx7fTt0aGlzLmNvbG9ySXNUZXh0Q29sb3I9bC5kZWZhdWx0LmRlZmx0KHQuY29sb3JJc1RleHRDb2xvcixmYWxzZSk7dGhpcy5tYXhTaXplPU1hdGgubWF4KDAsbC5kZWZhdWx0LmRlZmx0KHQubWF4U2l6ZSxJbmZpbml0eSkpfTtyLmRlZmF1bHQ9dX0se1wiLi91dGlsc1wiOjEyMSxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiOjh9XSw4ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZnJlZXplXCIpO3ZhciBuPXMoYSk7dmFyIGk9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbD1zKGkpO3ZhciBvPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIik7dmFyIHU9cyhvKTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLGEpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLmxleGVyPXQ7dGhpcy5zdGFydD1yO3RoaXMuZW5kPWE7KDAsbi5kZWZhdWx0KSh0aGlzKX0oMCx1LmRlZmF1bHQpKGUsbnVsbCxbe2tleTpcInJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24gdChyLGEpe2lmKCFhKXtyZXR1cm4gciYmci5sb2N9ZWxzZSBpZighcnx8IXIubG9jfHwhYS5sb2N8fHIubG9jLmxleGVyIT09YS5sb2MubGV4ZXIpe3JldHVybiBudWxsfWVsc2V7cmV0dXJuIG5ldyBlKHIubG9jLmxleGVyLHIubG9jLnN0YXJ0LGEubG9jLmVuZCl9fX1dKTtyZXR1cm4gZX0oKTtyLmRlZmF1bHQ9Zn0se1wiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9mcmVlemVcIjo3LFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI6OCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiOjl9XSw4OTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbj1vKGEpO3ZhciBpPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIik7dmFyIGw9byhpKTtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLGEpeygwLG4uZGVmYXVsdCkodGhpcyxlKTt0aGlzLmlkPXQ7dGhpcy5zaXplPXI7dGhpcy5jcmFtcGVkPWF9KDAsbC5kZWZhdWx0KShlLFt7a2V5Olwic3VwXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3JldHVybiBnW2JbdGhpcy5pZF1dfX0se2tleTpcInN1YlwiLHZhbHVlOmZ1bmN0aW9uIGUoKXtyZXR1cm4gZ1t5W3RoaXMuaWRdXX19LHtrZXk6XCJmcmFjTnVtXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3JldHVybiBnW3hbdGhpcy5pZF1dfX0se2tleTpcImZyYWNEZW5cIix2YWx1ZTpmdW5jdGlvbiBlKCl7cmV0dXJuIGdbd1t0aGlzLmlkXV19fSx7a2V5OlwiY3JhbXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7cmV0dXJuIGdba1t0aGlzLmlkXV19fSx7a2V5OlwidGV4dFwiLHZhbHVlOmZ1bmN0aW9uIGUoKXtyZXR1cm4gZ1tNW3RoaXMuaWRdXX19LHtrZXk6XCJpc1RpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3JldHVybiB0aGlzLnNpemU+PTJ9fV0pO3JldHVybiBlfSgpO3ZhciBzPTA7dmFyIGY9MTt2YXIgZD0yO3ZhciBjPTM7dmFyIGg9NDt2YXIgdj01O3ZhciBwPTY7dmFyIG09Nzt2YXIgZz1bbmV3IHUocywwLGZhbHNlKSxuZXcgdShmLDAsdHJ1ZSksbmV3IHUoZCwxLGZhbHNlKSxuZXcgdShjLDEsdHJ1ZSksbmV3IHUoaCwyLGZhbHNlKSxuZXcgdSh2LDIsdHJ1ZSksbmV3IHUocCwzLGZhbHNlKSxuZXcgdShtLDMsdHJ1ZSldO3ZhciBiPVtoLHYsaCx2LHAsbSxwLG1dO3ZhciB5PVt2LHYsdix2LG0sbSxtLG1dO3ZhciB4PVtkLGMsaCx2LHAsbSxwLG1dO3ZhciB3PVtjLGMsdix2LG0sbSxtLG1dO3ZhciBrPVtmLGYsYyxjLHYsdixtLG1dO3ZhciBNPVtzLGYsZCxjLGQsYyxkLGNdO3IuZGVmYXVsdD17RElTUExBWTpnW3NdLFRFWFQ6Z1tkXSxTQ1JJUFQ6Z1toXSxTQ1JJUFRTQ1JJUFQ6Z1twXX19LHtcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiOjgsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjo5fV0sOTA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3IuVG9rZW49dW5kZWZpbmVkO3ZhciBhPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIik7dmFyIG49cyhhKTt2YXIgaT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCIpO3ZhciBsPXMoaSk7dmFyIG89ZShcIi4vU291cmNlTG9jYXRpb25cIik7dmFyIHU9cyhvKTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgZj1yLlRva2VuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLG4uZGVmYXVsdCkodGhpcyxlKTt0aGlzLnRleHQ9dDt0aGlzLmxvYz1yfSgwLGwuZGVmYXVsdCkoZSxbe2tleTpcInJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24gdChyLGEpe3JldHVybiBuZXcgZShhLHUuZGVmYXVsdC5yYW5nZSh0aGlzLHIpKX19XSk7cmV0dXJuIGV9KCl9LHtcIi4vU291cmNlTG9jYXRpb25cIjo4OCxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiOjgsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjo5fV0sOTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPWUoXCIuL2RvbVRyZWVcIik7dmFyIG49ZChhKTt2YXIgaT1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgbD1kKGkpO3ZhciBvPWUoXCIuL3N5bWJvbHNcIik7dmFyIHU9ZChvKTt2YXIgcz1lKFwiLi91dGlsc1wiKTt2YXIgZj1kKHMpO2Z1bmN0aW9uIGQoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBjPVtcIlxcXFxpbWF0aFwiLFwiXFxcXGptYXRoXCIsXCJcXFxccG91bmRzXCJdO3ZhciBoPWZ1bmN0aW9uIGUodCxyLGEpe2lmKHUuZGVmYXVsdFthXVt0XSYmdS5kZWZhdWx0W2FdW3RdLnJlcGxhY2Upe3Q9dS5kZWZhdWx0W2FdW3RdLnJlcGxhY2V9cmV0dXJue3ZhbHVlOnQsbWV0cmljczpsLmRlZmF1bHQuZ2V0Q2hhcmFjdGVyTWV0cmljcyh0LHIpfX07dmFyIHY9ZnVuY3Rpb24gZSh0LHIsYSxpLGwpe3ZhciBvPWgodCxyLGEpO3ZhciB1PW8ubWV0cmljczt0PW8udmFsdWU7dmFyIHM9dm9pZCAwO2lmKHUpe3ZhciBmPXUuaXRhbGljO2lmKGE9PT1cInRleHRcIil7Zj0wfXM9bmV3IG4uZGVmYXVsdC5zeW1ib2xOb2RlKHQsdS5oZWlnaHQsdS5kZXB0aCxmLHUuc2tldyxsKX1lbHNle3R5cGVvZiBjb25zb2xlIT09XCJ1bmRlZmluZWRcIiYmY29uc29sZS53YXJuKFwiTm8gY2hhcmFjdGVyIG1ldHJpY3MgZm9yICdcIit0K1wiJyBpbiBzdHlsZSAnXCIrcitcIidcIik7cz1uZXcgbi5kZWZhdWx0LnN5bWJvbE5vZGUodCwwLDAsMCwwLGwpfWlmKGkpe3MubWF4Rm9udFNpemU9aS5zaXplTXVsdGlwbGllcjtpZihpLnN0eWxlLmlzVGlnaHQoKSl7cy5jbGFzc2VzLnB1c2goXCJtdGlnaHRcIil9aWYoaS5nZXRDb2xvcigpKXtzLnN0eWxlLmNvbG9yPWkuZ2V0Q29sb3IoKX19cmV0dXJuIHN9O3ZhciBwPWZ1bmN0aW9uIGUodCxyLGEsbil7aWYodD09PVwiXFxcXFwifHx1LmRlZmF1bHRbcl1bdF0uZm9udD09PVwibWFpblwiKXtyZXR1cm4gdih0LFwiTWFpbi1SZWd1bGFyXCIscixhLG4pfWVsc2V7cmV0dXJuIHYodCxcIkFNUy1SZWd1bGFyXCIscixhLG4uY29uY2F0KFtcImFtc3JtXCJdKSl9fTt2YXIgbT1mdW5jdGlvbiBlKHQscixhLG4saSl7aWYoaT09PVwibWF0aG9yZFwiKXt2YXIgbD1nKHQscixhLG4pO3JldHVybiB2KHQsbC5mb250TmFtZSxyLGEsbi5jb25jYXQoW2wuZm9udENsYXNzXSkpfWVsc2UgaWYoaT09PVwidGV4dG9yZFwiKXt2YXIgbz11LmRlZmF1bHRbcl1bdF0mJnUuZGVmYXVsdFtyXVt0XS5mb250O2lmKG89PT1cImFtc1wiKXtyZXR1cm4gdih0LFwiQU1TLVJlZ3VsYXJcIixyLGEsbi5jb25jYXQoW1wiYW1zcm1cIl0pKX1lbHNle3JldHVybiB2KHQsXCJNYWluLVJlZ3VsYXJcIixyLGEsbi5jb25jYXQoW1wibWF0aHJtXCJdKSl9fWVsc2V7dGhyb3cgbmV3IEVycm9yKFwidW5leHBlY3RlZCB0eXBlOiBcIitpK1wiIGluIG1hdGhEZWZhdWx0XCIpfX07dmFyIGc9ZnVuY3Rpb24gZSh0LHIsYSxuKXtpZigvWzAtOV0vLnRlc3QodC5jaGFyQXQoMCkpfHxmLmRlZmF1bHQuY29udGFpbnMoYyx0KSl7cmV0dXJue2ZvbnROYW1lOlwiTWFpbi1JdGFsaWNcIixmb250Q2xhc3M6XCJtYWluaXRcIn19ZWxzZXtyZXR1cm57Zm9udE5hbWU6XCJNYXRoLUl0YWxpY1wiLGZvbnRDbGFzczpcIm1hdGhpdFwifX19O3ZhciBiPWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBuPXQubW9kZTt2YXIgaT10LnZhbHVlO3ZhciBsPVtcIm1vcmRcIl07dmFyIG89ci5mb250O2lmKG8pe3ZhciB1PXZvaWQgMDtpZihvPT09XCJtYXRoaXRcInx8Zi5kZWZhdWx0LmNvbnRhaW5zKGMsaSkpe3U9ZyhpLG4scixsKX1lbHNle3U9VFtvXX1pZihoKGksdS5mb250TmFtZSxuKS5tZXRyaWNzKXtyZXR1cm4gdihpLHUuZm9udE5hbWUsbixyLGwuY29uY2F0KFt1LmZvbnRDbGFzc3x8b10pKX1lbHNle3JldHVybiBtKGksbixyLGwsYSl9fWVsc2V7cmV0dXJuIG0oaSxuLHIsbCxhKX19O3ZhciB5PWZ1bmN0aW9uIGUodCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aC0xO3IrKyl7aWYodFtyXS50cnlDb21iaW5lKHRbcisxXSkpe3Quc3BsaWNlKHIrMSwxKTtyLS19fXJldHVybiB0fTt2YXIgeD1mdW5jdGlvbiBlKHQpe3ZhciByPTA7dmFyIGE9MDt2YXIgbj0wO2lmKHQuY2hpbGRyZW4pe2Zvcih2YXIgaT0wO2k8dC5jaGlsZHJlbi5sZW5ndGg7aSsrKXtpZih0LmNoaWxkcmVuW2ldLmhlaWdodD5yKXtyPXQuY2hpbGRyZW5baV0uaGVpZ2h0fWlmKHQuY2hpbGRyZW5baV0uZGVwdGg+YSl7YT10LmNoaWxkcmVuW2ldLmRlcHRofWlmKHQuY2hpbGRyZW5baV0ubWF4Rm9udFNpemU+bil7bj10LmNoaWxkcmVuW2ldLm1heEZvbnRTaXplfX19dC5oZWlnaHQ9cjt0LmRlcHRoPWE7dC5tYXhGb250U2l6ZT1ufTt2YXIgdz1mdW5jdGlvbiBlKHQscixhKXt2YXIgaT1uZXcgbi5kZWZhdWx0LnNwYW4odCxyLGEpO3goaSk7cmV0dXJuIGl9O3ZhciBrPWZ1bmN0aW9uIGUodCxyKXt0LmNoaWxkcmVuPXIuY29uY2F0KHQuY2hpbGRyZW4pO3godCl9O3ZhciBNPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1uZXcgbi5kZWZhdWx0LmRvY3VtZW50RnJhZ21lbnQodCxyKTt4KGEpO3JldHVybiBhfTt2YXIgXz1mdW5jdGlvbiBlKHQscil7dmFyIGE9dC5wb3NpdGlvblR5cGUsaT10LnBvc2l0aW9uRGF0YSxsPXQuY2hpbGRyZW47dmFyIG89dm9pZCAwO3ZhciB1PXZvaWQgMDt2YXIgcz12b2lkIDA7aWYoYT09PVwiaW5kaXZpZHVhbFNoaWZ0XCIpe3ZhciBmPWw7bD1bZlswXV07bz0tZlswXS5zaGlmdC1mWzBdLmVsZW0uZGVwdGg7dT1vO2ZvcihzPTE7czxmLmxlbmd0aDtzKyspe3ZhciBkPS1mW3NdLnNoaWZ0LXUtZltzXS5lbGVtLmRlcHRoO3ZhciBjPWQtKGZbcy0xXS5lbGVtLmhlaWdodCtmW3MtMV0uZWxlbS5kZXB0aCk7dT11K2Q7bC5wdXNoKHt0eXBlOlwia2VyblwiLHNpemU6Y30pO2wucHVzaChmW3NdKX19ZWxzZSBpZihhPT09XCJ0b3BcIil7dmFyIGg9aTtmb3Iocz0wO3M8bC5sZW5ndGg7cysrKXtpZihsW3NdLnR5cGU9PT1cImtlcm5cIil7aC09bFtzXS5zaXplfWVsc2V7aC09bFtzXS5lbGVtLmhlaWdodCtsW3NdLmVsZW0uZGVwdGh9fW89aH1lbHNlIGlmKGE9PT1cImJvdHRvbVwiKXtvPS1pfWVsc2UgaWYoYT09PVwic2hpZnRcIil7bz0tbFswXS5lbGVtLmRlcHRoLWl9ZWxzZSBpZihhPT09XCJmaXJzdEJhc2VsaW5lXCIpe289LWxbMF0uZWxlbS5kZXB0aH1lbHNle289MH12YXIgdj0wO2ZvcihzPTA7czxsLmxlbmd0aDtzKyspe2lmKGxbc10udHlwZT09PVwiZWxlbVwiKXt2YXIgcD1sW3NdLmVsZW07dj1NYXRoLm1heCh2LHAubWF4Rm9udFNpemUscC5oZWlnaHQpfX12Kz0yO3ZhciBtPXcoW1wicHN0cnV0XCJdLFtdKTttLnN0eWxlLmhlaWdodD12K1wiZW1cIjt2YXIgZz1bXTt2YXIgYj1vO3ZhciB5PW87dT1vO2ZvcihzPTA7czxsLmxlbmd0aDtzKyspe2lmKGxbc10udHlwZT09PVwia2VyblwiKXt1Kz1sW3NdLnNpemV9ZWxzZXt2YXIgeD1sW3NdLmVsZW07dmFyIGs9dyhbXSxbbSx4XSk7ay5zdHlsZS50b3A9LXYtdS14LmRlcHRoK1wiZW1cIjtpZihsW3NdLm1hcmdpbkxlZnQpe2suc3R5bGUubWFyZ2luTGVmdD1sW3NdLm1hcmdpbkxlZnR9aWYobFtzXS5tYXJnaW5SaWdodCl7ay5zdHlsZS5tYXJnaW5SaWdodD1sW3NdLm1hcmdpblJpZ2h0fWcucHVzaChrKTt1Kz14LmhlaWdodCt4LmRlcHRofWI9TWF0aC5taW4oYix1KTt5PU1hdGgubWF4KHksdSl9dmFyIE09dyhbXCJ2bGlzdFwiXSxnKTtNLnN0eWxlLmhlaWdodD15K1wiZW1cIjt2YXIgXz12b2lkIDA7aWYoYjwwKXt2YXIgUz13KFtcInZsaXN0XCJdLFtdKTtTLnN0eWxlLmhlaWdodD0tYitcImVtXCI7dmFyIHo9dyhbXCJ2bGlzdC1zXCJdLFtuZXcgbi5kZWZhdWx0LnN5bWJvbE5vZGUoXCJcXHUyMDBiXCIpXSk7Xz1bdyhbXCJ2bGlzdC1yXCJdLFtNLHpdKSx3KFtcInZsaXN0LXJcIl0sW1NdKV19ZWxzZXtfPVt3KFtcInZsaXN0LXJcIl0sW01dKV19dmFyIFQ9dyhbXCJ2bGlzdC10XCJdLF8pO2lmKF8ubGVuZ3RoPT09Mil7VC5jbGFzc2VzLnB1c2goXCJ2bGlzdC10MlwiKX1ULmhlaWdodD15O1QuZGVwdGg9LWI7cmV0dXJuIFR9O3ZhciBTPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT10LnZhbHVlLmJvZHk7aWYodC52YWx1ZS5zdGFyKXthPWEucmVwbGFjZSgvIC9nLFwiXFx1MjQyM1wiKX1lbHNle2E9YS5yZXBsYWNlKC8gL2csXCJcXHhhMFwiKX1yZXR1cm4gYX07dmFyIHo9e1wiXFxcXHFxdWFkXCI6e3NpemU6XCIyZW1cIixjbGFzc05hbWU6XCJxcXVhZFwifSxcIlxcXFxxdWFkXCI6e3NpemU6XCIxZW1cIixjbGFzc05hbWU6XCJxdWFkXCJ9LFwiXFxcXGVuc3BhY2VcIjp7c2l6ZTpcIjAuNWVtXCIsY2xhc3NOYW1lOlwiZW5zcGFjZVwifSxcIlxcXFw7XCI6e3NpemU6XCIwLjI3Nzc3OGVtXCIsY2xhc3NOYW1lOlwidGhpY2tzcGFjZVwifSxcIlxcXFw6XCI6e3NpemU6XCIwLjIyMjIyZW1cIixjbGFzc05hbWU6XCJtZWRpdW1zcGFjZVwifSxcIlxcXFwsXCI6e3NpemU6XCIwLjE2NjY3ZW1cIixjbGFzc05hbWU6XCJ0aGluc3BhY2VcIn0sXCJcXFxcIVwiOntzaXplOlwiLTAuMTY2NjdlbVwiLGNsYXNzTmFtZTpcIm5lZ2F0aXZldGhpbnNwYWNlXCJ9fTt2YXIgVD17bWF0aGJmOnt2YXJpYW50OlwiYm9sZFwiLGZvbnROYW1lOlwiTWFpbi1Cb2xkXCJ9LG1hdGhybTp7dmFyaWFudDpcIm5vcm1hbFwiLGZvbnROYW1lOlwiTWFpbi1SZWd1bGFyXCJ9LHRleHRpdDp7dmFyaWFudDpcIml0YWxpY1wiLGZvbnROYW1lOlwiTWFpbi1JdGFsaWNcIn0sbWF0aGJiOnt2YXJpYW50OlwiZG91YmxlLXN0cnVja1wiLGZvbnROYW1lOlwiQU1TLVJlZ3VsYXJcIn0sbWF0aGNhbDp7dmFyaWFudDpcInNjcmlwdFwiLGZvbnROYW1lOlwiQ2FsaWdyYXBoaWMtUmVndWxhclwifSxtYXRoZnJhazp7dmFyaWFudDpcImZyYWt0dXJcIixmb250TmFtZTpcIkZyYWt0dXItUmVndWxhclwifSxtYXRoc2NyOnt2YXJpYW50Olwic2NyaXB0XCIsZm9udE5hbWU6XCJTY3JpcHQtUmVndWxhclwifSxtYXRoc2Y6e3ZhcmlhbnQ6XCJzYW5zLXNlcmlmXCIsZm9udE5hbWU6XCJTYW5zU2VyaWYtUmVndWxhclwifSxtYXRodHQ6e3ZhcmlhbnQ6XCJtb25vc3BhY2VcIixmb250TmFtZTpcIlR5cGV3cml0ZXItUmVndWxhclwifX07ci5kZWZhdWx0PXtmb250TWFwOlQsbWFrZVN5bWJvbDp2LG1hdGhzeW06cCxtYWtlU3Bhbjp3LG1ha2VGcmFnbWVudDpNLG1ha2VWTGlzdDpfLG1ha2VPcmQ6YixtYWtlVmVyYjpTLHRyeUNvbWJpbmVDaGFyczp5LHByZXBlbmRDaGlsZHJlbjprLHNwYWNpbmdGdW5jdGlvbnM6en19LHtcIi4vZG9tVHJlZVwiOjk4LFwiLi9mb250TWV0cmljc1wiOjEwMSxcIi4vc3ltYm9sc1wiOjExOCxcIi4vdXRpbHNcIjoxMjF9XSw5MjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ci5idWlsZEdyb3VwPXIubWFrZUxpbmVTcGFuPXIuZ3JvdXBUeXBlcz1yLm1ha2VOdWxsRGVsaW1pdGVyPXIuYnVpbGRFeHByZXNzaW9uPXIuc3BsaWNlU3BhY2VzPXVuZGVmaW5lZDt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCIpO3ZhciBuPXgoYSk7ci5kZWZhdWx0PUI7dmFyIGk9ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgbD14KGkpO3ZhciBvPWUoXCIuL1N0eWxlXCIpO3ZhciB1PXgobyk7dmFyIHM9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIGY9eChzKTt2YXIgZD1lKFwiLi9kZWxpbWl0ZXJcIik7dmFyIGM9eChkKTt2YXIgaD1lKFwiLi9kb21UcmVlXCIpO3ZhciB2PXgoaCk7dmFyIHA9ZShcIi4vdW5pdHNcIik7dmFyIG09ZShcIi4vdXRpbHNcIik7dmFyIGc9eChtKTt2YXIgYj1lKFwiLi9zdHJldGNoeVwiKTt2YXIgeT14KGIpO2Z1bmN0aW9uIHgoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB3PWYuZGVmYXVsdC5tYWtlU3Bhbjt2YXIgaz1mdW5jdGlvbiBlKHQpe3JldHVybiB0IGluc3RhbmNlb2Ygdi5kZWZhdWx0LnNwYW4mJnQuY2xhc3Nlc1swXT09PVwibXNwYWNlXCJ9O3ZhciBNPWZ1bmN0aW9uIGUodCl7cmV0dXJuIHQmJnQuY2xhc3Nlc1swXT09PVwibWJpblwifTt2YXIgXz1mdW5jdGlvbiBlKHQscil7aWYodCl7cmV0dXJuIGcuZGVmYXVsdC5jb250YWlucyhbXCJtYmluXCIsXCJtb3BlblwiLFwibXJlbFwiLFwibW9wXCIsXCJtcHVuY3RcIl0sdC5jbGFzc2VzWzBdKX1lbHNle3JldHVybiByfX07dmFyIFM9ZnVuY3Rpb24gZSh0LHIpe2lmKHQpe3JldHVybiBnLmRlZmF1bHQuY29udGFpbnMoW1wibXJlbFwiLFwibWNsb3NlXCIsXCJtcHVuY3RcIl0sdC5jbGFzc2VzWzBdKX1lbHNle3JldHVybiByfX07dmFyIHo9ci5zcGxpY2VTcGFjZXM9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXI7d2hpbGUoYTx0Lmxlbmd0aCYmayh0W2FdKSl7YSsrfWlmKGE9PT1yKXtyZXR1cm4gbnVsbH1lbHNle3JldHVybiB0LnNwbGljZShyLGEtcil9fTt2YXIgVD1yLmJ1aWxkRXhwcmVzc2lvbj1mdW5jdGlvbiBlKHQscixhKXt2YXIgbj1bXTtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIGw9dFtpXTt2YXIgbz1QKGwscik7aWYobyBpbnN0YW5jZW9mIHYuZGVmYXVsdC5kb2N1bWVudEZyYWdtZW50KXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShuLG8uY2hpbGRyZW4pfWVsc2V7bi5wdXNoKG8pfX1mb3IodmFyIHU9MDt1PG4ubGVuZ3RoO3UrKyl7dmFyIHM9eihuLHUpO2lmKHMpe2lmKHU8bi5sZW5ndGgpe2lmKG5bdV1pbnN0YW5jZW9mIHYuZGVmYXVsdC5zeW1ib2xOb2RlKXtuW3VdPXcoW10uY29uY2F0KG5bdV0uY2xhc3NlcyksW25bdV1dKX1mLmRlZmF1bHQucHJlcGVuZENoaWxkcmVuKG5bdV0scyl9ZWxzZXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShuLHMpO2JyZWFrfX19Zm9yKHZhciBkPTA7ZDxuLmxlbmd0aDtkKyspe3ZhciBjPTE7dmFyIGg9MTt3aGlsZShuW2QtY10mJm5bZC1jXS5jbGFzc2VzWzBdPT09XCJjdXJzb3JcIil7YysrfXdoaWxlKG5bZCtoXSYmbltkK2hdLmNsYXNzZXNbMF09PT1cImN1cnNvclwiKXtoKyt9aWYoTShuW2RdKSYmKF8obltkLWNdLGEpfHxTKG5bZCtoXSxhKSkpe25bZF0uY2xhc3Nlc1swXT1cIm1vcmRcIn19Zm9yKHZhciBwPTA7cDxuLmxlbmd0aDtwKyspe2lmKG5bcF0udmFsdWU9PT1cIlxcdTAzMzhcIiYmcCsxPG4ubGVuZ3RoKXt2YXIgbT1uLnNsaWNlKHAscCsyKTttWzBdLmNsYXNzZXM9W1wibWFpbnJtXCJdO21bMF0uc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiO21bMF0uc3R5bGUucmlnaHQ9XCIwXCI7dmFyIGc9bltwKzFdLmNsYXNzZXM7dmFyIGI9dyhnLG0pO2lmKGcuaW5kZXhPZihcIm1vcmRcIikhPT0tMSl7Yi5zdHlsZS5wYWRkaW5nTGVmdD1cIjAuMjc3NzcxZW1cIn1iLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIjtuLnNwbGljZShwLDIsYil9fXJldHVybiBufTt2YXIgQz1mdW5jdGlvbiBlKHQpe2lmKHQgaW5zdGFuY2VvZiB2LmRlZmF1bHQuZG9jdW1lbnRGcmFnbWVudCl7aWYodC5jaGlsZHJlbi5sZW5ndGgpe3JldHVybiBlKHQuY2hpbGRyZW5bdC5jaGlsZHJlbi5sZW5ndGgtMV0pfX1lbHNle2lmKGcuZGVmYXVsdC5jb250YWlucyhbXCJtb3JkXCIsXCJtb3BcIixcIm1iaW5cIixcIm1yZWxcIixcIm1vcGVuXCIsXCJtY2xvc2VcIixcIm1wdW5jdFwiLFwibWlubmVyXCJdLHQuY2xhc3Nlc1swXSkpe3JldHVybiB0LmNsYXNzZXNbMF19fXJldHVybiBudWxsfTt2YXIgQT1mdW5jdGlvbiBlKHQscil7aWYoIXQudmFsdWUuYmFzZSl7cmV0dXJuIGZhbHNlfWVsc2V7dmFyIGE9dC52YWx1ZS5iYXNlO2lmKGEudHlwZT09PVwib3BcIil7cmV0dXJuIGEudmFsdWUubGltaXRzJiYoci5zdHlsZS5zaXplPT09dS5kZWZhdWx0LkRJU1BMQVkuc2l6ZXx8YS52YWx1ZS5hbHdheXNIYW5kbGVTdXBTdWIpfWVsc2UgaWYoYS50eXBlPT09XCJhY2NlbnRcIil7cmV0dXJuIE8oYS52YWx1ZS5iYXNlKX1lbHNlIGlmKGEudHlwZT09PVwiaG9yaXpCcmFjZVwiKXt2YXIgbj10LnZhbHVlLnN1Yj9mYWxzZTp0cnVlO3JldHVybiBuPT09YS52YWx1ZS5pc092ZXJ9ZWxzZXtyZXR1cm4gbnVsbH19fTt2YXIgTj1mdW5jdGlvbiBlKHQpe2lmKCF0KXtyZXR1cm4gZmFsc2V9ZWxzZSBpZih0LnR5cGU9PT1cIm9yZGdyb3VwXCIpe2lmKHQudmFsdWUubGVuZ3RoPT09MSl7cmV0dXJuIGUodC52YWx1ZVswXSl9ZWxzZXtyZXR1cm4gdH19ZWxzZSBpZih0LnR5cGU9PT1cImNvbG9yXCIpe2lmKHQudmFsdWUudmFsdWUubGVuZ3RoPT09MSl7cmV0dXJuIGUodC52YWx1ZS52YWx1ZVswXSl9ZWxzZXtyZXR1cm4gdH19ZWxzZSBpZih0LnR5cGU9PT1cImZvbnRcIil7cmV0dXJuIGUodC52YWx1ZS5ib2R5KX1lbHNle3JldHVybiB0fX07dmFyIE89ZnVuY3Rpb24gZSh0KXt2YXIgcj1OKHQpO3JldHVybiByLnR5cGU9PT1cIm1hdGhvcmRcInx8ci50eXBlPT09XCJ0ZXh0b3JkXCJ8fHIudHlwZT09PVwiYmluXCJ8fHIudHlwZT09PVwicmVsXCJ8fHIudHlwZT09PVwiaW5uZXJcInx8ci50eXBlPT09XCJvcGVuXCJ8fHIudHlwZT09PVwiY2xvc2VcInx8ci50eXBlPT09XCJwdW5jdFwifTt2YXIgaj1yLm1ha2VOdWxsRGVsaW1pdGVyPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1bXCJudWxsZGVsaW1pdGVyXCJdLmNvbmNhdCh0LmJhc2VTaXppbmdDbGFzc2VzKCkpO3JldHVybiB3KHIuY29uY2F0KGEpKX07dmFyIEw9ci5ncm91cFR5cGVzPXt9O0wubWF0aG9yZD1mdW5jdGlvbihlLHQpe3JldHVybiBmLmRlZmF1bHQubWFrZU9yZChlLHQsXCJtYXRob3JkXCIpfTtMLnRleHRvcmQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZi5kZWZhdWx0Lm1ha2VPcmQoZSx0LFwidGV4dG9yZFwiKX07TC5iaW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZi5kZWZhdWx0Lm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtYmluXCJdKX07TC5yZWw9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZi5kZWZhdWx0Lm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtcmVsXCJdKX07TC5vcGVuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGYuZGVmYXVsdC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibW9wZW5cIl0pfTtMLmNsb3NlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGYuZGVmYXVsdC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibWNsb3NlXCJdKX07TC5pbm5lcj1mdW5jdGlvbihlLHQpe3JldHVybiBmLmRlZmF1bHQubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1pbm5lclwiXSl9O0wucHVuY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZi5kZWZhdWx0Lm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtcHVuY3RcIl0pfTtMLm9yZGdyb3VwPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHcoW1wibW9yZFwiXSxUKGUudmFsdWUsdCx0cnVlKSx0KX07TC50ZXh0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC53aXRoRm9udChlLnZhbHVlLmZvbnQpO3ZhciBhPVQoZS52YWx1ZS5ib2R5LHIsdHJ1ZSk7Zi5kZWZhdWx0LnRyeUNvbWJpbmVDaGFycyhhKTtyZXR1cm4gdyhbXCJtb3JkXCIsXCJ0ZXh0XCJdLGEscil9O0wueG1sQ2xhc3M9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPVQoZS52YWx1ZS52YWx1ZSx0LHIpO3JldHVybiBuZXcgZi5kZWZhdWx0Lm1ha2VGcmFnbWVudChhLFtlLnZhbHVlLmNsXSl9O0wuY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj1UKGUudmFsdWUudmFsdWUsdC53aXRoQ29sb3IoZS52YWx1ZS5jb2xvciksZmFsc2UpO3JldHVybiBuZXcgZi5kZWZhdWx0Lm1ha2VGcmFnbWVudChyKX07TC5zdXBzdWI9ZnVuY3Rpb24oZSx0KXtpZihBKGUsdCkpe3JldHVybiBMW2UudmFsdWUuYmFzZS50eXBlXShlLHQpfXZhciByPVAoZS52YWx1ZS5iYXNlLHQpO3ZhciBhPXZvaWQgMDt2YXIgbj12b2lkIDA7dmFyIGk9dC5mb250TWV0cmljcygpO3ZhciBsPXZvaWQgMDt2YXIgbz0wO3ZhciBzPTA7aWYoZS52YWx1ZS5zdXApe2w9dC5oYXZpbmdTdHlsZSh0LnN0eWxlLnN1cCgpKTthPVAoZS52YWx1ZS5zdXAsbCx0KTtpZighTyhlLnZhbHVlLmJhc2UpKXtvPXIuaGVpZ2h0LWwuZm9udE1ldHJpY3MoKS5zdXBEcm9wKmwuc2l6ZU11bHRpcGxpZXIvdC5zaXplTXVsdGlwbGllcn19aWYoZS52YWx1ZS5zdWIpe2w9dC5oYXZpbmdTdHlsZSh0LnN0eWxlLnN1YigpKTtuPVAoZS52YWx1ZS5zdWIsbCx0KTtpZighTyhlLnZhbHVlLmJhc2UpKXtzPXIuZGVwdGgrbC5mb250TWV0cmljcygpLnN1YkRyb3AqbC5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyfX12YXIgZD12b2lkIDA7aWYodC5zdHlsZT09PXUuZGVmYXVsdC5ESVNQTEFZKXtkPWkuc3VwMX1lbHNlIGlmKHQuc3R5bGUuY3JhbXBlZCl7ZD1pLnN1cDN9ZWxzZXtkPWkuc3VwMn12YXIgYz10LnNpemVNdWx0aXBsaWVyO3ZhciBoPS41L2kucHRQZXJFbS9jK1wiZW1cIjt2YXIgcD12b2lkIDA7aWYoIWUudmFsdWUuc3VwKXtzPU1hdGgubWF4KHMsaS5zdWIxLG4uaGVpZ2h0LS44KmkueEhlaWdodCk7dmFyIG09W3t0eXBlOlwiZWxlbVwiLGVsZW06bixtYXJnaW5SaWdodDpofV07aWYociBpbnN0YW5jZW9mIHYuZGVmYXVsdC5zeW1ib2xOb2RlKXttWzBdLm1hcmdpbkxlZnQ9LXIuaXRhbGljK1wiZW1cIn1wPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcInNoaWZ0XCIscG9zaXRpb25EYXRhOnMsY2hpbGRyZW46bX0sdCl9ZWxzZSBpZighZS52YWx1ZS5zdWIpe289TWF0aC5tYXgobyxkLGEuZGVwdGgrLjI1KmkueEhlaWdodCk7cD1mLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJzaGlmdFwiLHBvc2l0aW9uRGF0YTotbyxjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTphLG1hcmdpblJpZ2h0Omh9XX0sdCl9ZWxzZXtvPU1hdGgubWF4KG8sZCxhLmRlcHRoKy4yNSppLnhIZWlnaHQpO3M9TWF0aC5tYXgocyxpLnN1YjIpO3ZhciBnPWkuZGVmYXVsdFJ1bGVUaGlja25lc3M7aWYoby1hLmRlcHRoLShuLmhlaWdodC1zKTw0Kmcpe3M9NCpnLShvLWEuZGVwdGgpK24uaGVpZ2h0O3ZhciBiPS44KmkueEhlaWdodC0oby1hLmRlcHRoKTtpZihiPjApe28rPWI7cy09Yn19dmFyIHk9W3t0eXBlOlwiZWxlbVwiLGVsZW06bixzaGlmdDpzLG1hcmdpblJpZ2h0Omh9LHt0eXBlOlwiZWxlbVwiLGVsZW06YSxzaGlmdDotbyxtYXJnaW5SaWdodDpofV07aWYociBpbnN0YW5jZW9mIHYuZGVmYXVsdC5zeW1ib2xOb2RlKXt5WzBdLm1hcmdpbkxlZnQ9LXIuaXRhbGljK1wiZW1cIn1wPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImluZGl2aWR1YWxTaGlmdFwiLGNoaWxkcmVuOnl9LHQpfXZhciB4PUMocil8fFwibW9yZFwiO3JldHVybiB3KFt4XSxbcix3KFtcIm1zdXBzdWJcIl0sW3BdKV0sdCl9O0wuc3BhY2luZz1mdW5jdGlvbihlLHQpe2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7aWYoZS5tb2RlPT09XCJ0ZXh0XCIpe3JldHVybiBmLmRlZmF1bHQubWFrZU9yZChlLHQsXCJ0ZXh0b3JkXCIpfWVsc2V7cmV0dXJuIHcoW1wibXNwYWNlXCJdLFtmLmRlZmF1bHQubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0KV0sdCl9fWVsc2V7cmV0dXJuIHcoW1wibXNwYWNlXCIsZi5kZWZhdWx0LnNwYWNpbmdGdW5jdGlvbnNbZS52YWx1ZV0uY2xhc3NOYW1lXSxbXSx0KX19O3ZhciBFPXIubWFrZUxpbmVTcGFuPWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBuPXcoW3RdLFtdLHIpO24uaGVpZ2h0PWF8fHIuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzcztuLnN0eWxlLmJvcmRlckJvdHRvbVdpZHRoPW4uaGVpZ2h0K1wiZW1cIjtuLm1heEZvbnRTaXplPTE7cmV0dXJuIG59O0wub3ZlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1QKGUudmFsdWUuYm9keSx0LmhhdmluZ0NyYW1wZWRTdHlsZSgpKTt2YXIgYT1FKFwib3ZlcmxpbmUtbGluZVwiLHQpO3ZhciBuPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImZpcnN0QmFzZWxpbmVcIixjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTpyfSx7dHlwZTpcImtlcm5cIixzaXplOjMqYS5oZWlnaHR9LHt0eXBlOlwiZWxlbVwiLGVsZW06YX0se3R5cGU6XCJrZXJuXCIsc2l6ZTphLmhlaWdodH1dfSx0KTtyZXR1cm4gdyhbXCJtb3JkXCIsXCJvdmVybGluZVwiXSxbbl0sdCl9O0wudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9UChlLnZhbHVlLmJvZHksdCk7dmFyIGE9RShcInVuZGVybGluZS1saW5lXCIsdCk7dmFyIG49Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwidG9wXCIscG9zaXRpb25EYXRhOnIuaGVpZ2h0LGNoaWxkcmVuOlt7dHlwZTpcImtlcm5cIixzaXplOmEuaGVpZ2h0fSx7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6MyphLmhlaWdodH0se3R5cGU6XCJlbGVtXCIsZWxlbTpyfV19LHQpO3JldHVybiB3KFtcIm1vcmRcIixcInVuZGVybGluZVwiXSxbbl0sdCl9O0wuc3FydD1mdW5jdGlvbihlLHQpe3ZhciByPVAoZS52YWx1ZS5ib2R5LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO2lmKHIuaGVpZ2h0PT09MCl7ci5oZWlnaHQ9dC5mb250TWV0cmljcygpLnhIZWlnaHR9aWYociBpbnN0YW5jZW9mIHYuZGVmYXVsdC5kb2N1bWVudEZyYWdtZW50KXtyPXcoW10sW3JdLHQpfXZhciBhPXQuZm9udE1ldHJpY3MoKTt2YXIgbj1hLmRlZmF1bHRSdWxlVGhpY2tuZXNzO3ZhciBpPW47aWYodC5zdHlsZS5pZDx1LmRlZmF1bHQuVEVYVC5pZCl7aT10LmZvbnRNZXRyaWNzKCkueEhlaWdodH12YXIgbD1uK2kvNDt2YXIgbz0oci5oZWlnaHQrci5kZXB0aCtsK24pKnQuc2l6ZU11bHRpcGxpZXI7dmFyIHM9Yy5kZWZhdWx0LmN1c3RvbVNpemVkRGVsaW0oXCJcXFxcc3VyZFwiLG8sZmFsc2UsdCxlLm1vZGUpO3ZhciBkPXQuZm9udE1ldHJpY3MoKS5zcXJ0UnVsZVRoaWNrbmVzcypzLnNpemVNdWx0aXBsaWVyO3ZhciBoPXMuaGVpZ2h0LWQ7aWYoaD5yLmhlaWdodCtyLmRlcHRoK2wpe2w9KGwraC1yLmhlaWdodC1yLmRlcHRoKS8yfXZhciBwPXMuaGVpZ2h0LXIuaGVpZ2h0LWwtZDtyLnN0eWxlLnBhZGRpbmdMZWZ0PXMuYWR2YW5jZVdpZHRoK1wiZW1cIjt2YXIgbT1mLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJmaXJzdEJhc2VsaW5lXCIsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06cn0se3R5cGU6XCJrZXJuXCIsc2l6ZTotKHIuaGVpZ2h0K3ApfSx7dHlwZTpcImVsZW1cIixlbGVtOnN9LHt0eXBlOlwia2VyblwiLHNpemU6ZH1dfSx0KTttLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLmNsYXNzZXMucHVzaChcInN2Zy1hbGlnblwiKTtpZighZS52YWx1ZS5pbmRleCl7cmV0dXJuIHcoW1wibW9yZFwiLFwic3FydFwiXSxbbV0sdCl9ZWxzZXt2YXIgZz10LmhhdmluZ1N0eWxlKHUuZGVmYXVsdC5TQ1JJUFRTQ1JJUFQpO3ZhciBiPVAoZS52YWx1ZS5pbmRleCxnLHQpO3ZhciB5PS42KihtLmhlaWdodC1tLmRlcHRoKTt2YXIgeD1mLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJzaGlmdFwiLHBvc2l0aW9uRGF0YToteSxjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTpifV19LHQpO3ZhciBrPXcoW1wicm9vdFwiXSxbeF0pO3JldHVybiB3KFtcIm1vcmRcIixcInNxcnRcIl0sW2ssbV0sdCl9fTtmdW5jdGlvbiBxKGUsdCxyKXt2YXIgYT1UKGUsdCxmYWxzZSk7dmFyIG49dC5zaXplTXVsdGlwbGllci9yLnNpemVNdWx0aXBsaWVyO2Zvcih2YXIgaT0wO2k8YS5sZW5ndGg7aSsrKXt2YXIgbD1nLmRlZmF1bHQuaW5kZXhPZihhW2ldLmNsYXNzZXMsXCJzaXppbmdcIik7aWYobDwwKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhW2ldLmNsYXNzZXMsdC5zaXppbmdDbGFzc2VzKHIpKX1lbHNlIGlmKGFbaV0uY2xhc3Nlc1tsKzFdPT09XCJyZXNldC1zaXplXCIrdC5zaXplKXthW2ldLmNsYXNzZXNbbCsxXT1cInJlc2V0LXNpemVcIityLnNpemV9YVtpXS5oZWlnaHQqPW47YVtpXS5kZXB0aCo9bn1yZXR1cm4gZi5kZWZhdWx0Lm1ha2VGcmFnbWVudChhKX1MLnNpemluZz1mdW5jdGlvbihlLHQpe3ZhciByPXQuaGF2aW5nU2l6ZShlLnZhbHVlLnNpemUpO3JldHVybiBxKGUudmFsdWUudmFsdWUscix0KX07TC5zdHlsaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9e2Rpc3BsYXk6dS5kZWZhdWx0LkRJU1BMQVksdGV4dDp1LmRlZmF1bHQuVEVYVCxzY3JpcHQ6dS5kZWZhdWx0LlNDUklQVCxzY3JpcHRzY3JpcHQ6dS5kZWZhdWx0LlNDUklQVFNDUklQVH07dmFyIGE9cltlLnZhbHVlLnN0eWxlXTt2YXIgbj10LmhhdmluZ1N0eWxlKGEpO3JldHVybiBxKGUudmFsdWUudmFsdWUsbix0KX07TC5mb250PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS5mb250O3JldHVybiBQKGUudmFsdWUuYm9keSx0LndpdGhGb250KHIpKX07TC52ZXJiPWZ1bmN0aW9uKGUsdCl7dmFyIHI9Zi5kZWZhdWx0Lm1ha2VWZXJiKGUsdCk7dmFyIGE9W107dmFyIG49dC5oYXZpbmdTdHlsZSh0LnN0eWxlLnRleHQoKSk7Zm9yKHZhciBpPTA7aTxyLmxlbmd0aDtpKyspe2lmKHJbaV09PT1cIlxceGEwXCIpe3ZhciBsPXcoW1wibW9yZFwiLFwicnVsZVwiXSxbXSxuKTtsLnN0eWxlLm1hcmdpbkxlZnQ9XCIwLjUyNWVtXCI7YS5wdXNoKGwpfWVsc2V7YS5wdXNoKGYuZGVmYXVsdC5tYWtlU3ltYm9sKHJbaV0sXCJUeXBld3JpdGVyLVJlZ3VsYXJcIixlLm1vZGUsbixbXCJtYXRodHRcIl0pKX19Zi5kZWZhdWx0LnRyeUNvbWJpbmVDaGFycyhhKTtyZXR1cm4gdyhbXCJtb3JkXCIsXCJ0ZXh0XCJdLmNvbmNhdChuLnNpemluZ0NsYXNzZXModCkpLGEsbil9O0wuY3Vyc29yPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT13KFtcImN1cnNvclwiXSxbXSx0KTt2YXIgbj0wO3ZhciBpPSgwLHAuY2FsY3VsYXRlU2l6ZSkoZS52YWx1ZS5oZWlnaHQsdCk7aWYoZS52YWx1ZS5zaGlmdCl7bj0oMCxwLmNhbGN1bGF0ZVNpemUpKGUudmFsdWUuc2hpZnQsdCl9bi89dC5zaXplTXVsdGlwbGllcjtpLz10LnNpemVNdWx0aXBsaWVyO2Euc3R5bGUubWFyZ2luUmlnaHQ9XCItMXB4XCI7YS5zdHlsZS5ib3JkZXJSaWdodD1cIjFweCBzb2xpZFwiO2Euc3R5bGUubWFyZ2luQm90dG9tPW4rXCJlbVwiO2Euc3R5bGUuaGVpZ2h0PWkrXCJlbVwiO2Eud2lkdGg9MTthLmhlaWdodD1pK247YS5kZXB0aD0tbjtlLnZhbHVlLnByZXZpb3VzPXI7cmV0dXJuIGF9O0wucnVsZT1mdW5jdGlvbihlLHQscil7dmFyIGE9dyhbXCJtb3JkXCIsXCJydWxlXCJdLFtdLHQpO3ZhciBuPTA7aWYoZS52YWx1ZS5zaGlmdCl7bj0oMCxwLmNhbGN1bGF0ZVNpemUpKGUudmFsdWUuc2hpZnQsdCl9dmFyIGk9KDAscC5jYWxjdWxhdGVTaXplKShlLnZhbHVlLndpZHRoLHQpO3ZhciBsPSgwLHAuY2FsY3VsYXRlU2l6ZSkoZS52YWx1ZS5oZWlnaHQsdCk7YS5zdHlsZS5ib3JkZXJSaWdodFdpZHRoPWkrXCJlbVwiO2Euc3R5bGUuYm9yZGVyVG9wV2lkdGg9bCtcImVtXCI7YS5zdHlsZS5ib3R0b209bitcImVtXCI7YS53aWR0aD1pO2EuaGVpZ2h0PWwrbjthLmRlcHRoPS1uO2EubWF4Rm9udFNpemU9bCoxLjEyNSp0LnNpemVNdWx0aXBsaWVyO3JldHVybiBhfTtMLmtlcm49ZnVuY3Rpb24oZSx0KXt2YXIgcj13KFtcIm1vcmRcIixcInJ1bGVcIl0sW10sdCk7aWYoZS52YWx1ZS5kaW1lbnNpb24pe3ZhciBhPSgwLHAuY2FsY3VsYXRlU2l6ZSkoZS52YWx1ZS5kaW1lbnNpb24sdCk7ci5zdHlsZS5tYXJnaW5MZWZ0PWErXCJlbVwifXJldHVybiByfTtMLmFjY2VudD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuYmFzZTt2YXIgYT12b2lkIDA7aWYoZS50eXBlPT09XCJzdXBzdWJcIil7dmFyIG49ZTtlPW4udmFsdWUuYmFzZTtyPWUudmFsdWUuYmFzZTtuLnZhbHVlLmJhc2U9cjthPVAobix0KTtcbn12YXIgaT1QKHIsdC5oYXZpbmdDcmFtcGVkU3R5bGUoKSk7dmFyIGw9ZS52YWx1ZS5pc1NoaWZ0eSYmTyhyKTt2YXIgbz0wO2lmKGwpe3ZhciB1PU4ocik7dmFyIHM9UCh1LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO289cy5za2V3fXZhciBkPU1hdGgubWluKGkuaGVpZ2h0LHQuZm9udE1ldHJpY3MoKS54SGVpZ2h0KTt2YXIgYz12b2lkIDA7aWYoIWUudmFsdWUuaXNTdHJldGNoeSl7dmFyIGg9Zi5kZWZhdWx0Lm1ha2VTeW1ib2woZS52YWx1ZS5sYWJlbCxcIk1haW4tUmVndWxhclwiLGUubW9kZSx0KTtoLml0YWxpYz0wO3ZhciB2PW51bGw7aWYoZS52YWx1ZS5sYWJlbD09PVwiXFxcXHZlY1wiKXt2PVwiYWNjZW50LXZlY1wifWVsc2UgaWYoZS52YWx1ZS5sYWJlbD09PVwiXFxcXEhcIil7dj1cImFjY2VudC1odW5nYXJpYW5cIn1jPXcoW10sW2hdKTtjPXcoW1wiYWNjZW50LWJvZHlcIix2XSxbY10pO2Muc3R5bGUubWFyZ2luTGVmdD0yKm8rXCJlbVwiO2M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiZmlyc3RCYXNlbGluZVwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOml9LHt0eXBlOlwia2VyblwiLHNpemU6LWR9LHt0eXBlOlwiZWxlbVwiLGVsZW06Y31dfSx0KX1lbHNle2M9eS5kZWZhdWx0LnN2Z1NwYW4oZSx0KTtjPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImZpcnN0QmFzZWxpbmVcIixjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTppfSx7dHlwZTpcImVsZW1cIixlbGVtOmN9XX0sdCk7dmFyIHA9Yy5jaGlsZHJlblswXS5jaGlsZHJlblswXS5jaGlsZHJlblsxXTtwLmNsYXNzZXMucHVzaChcInN2Zy1hbGlnblwiKTtpZihvPjApe3Auc3R5bGUud2lkdGg9XCJjYWxjKDEwMCUgLSBcIisyKm8rXCJlbSlcIjtwLnN0eWxlLm1hcmdpbkxlZnQ9MipvK1wiZW1cIn19dmFyIG09dyhbXCJtb3JkXCIsXCJhY2NlbnRcIl0sW2NdLHQpO2lmKGEpe2EuY2hpbGRyZW5bMF09bTthLmhlaWdodD1NYXRoLm1heChtLmhlaWdodCxhLmhlaWdodCk7YS5jbGFzc2VzWzBdPVwibW9yZFwiO3JldHVybiBhfWVsc2V7cmV0dXJuIG19fTtMLmhvcml6QnJhY2U9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LnN0eWxlO3ZhciBhPWUudHlwZT09PVwic3Vwc3ViXCI7dmFyIG49dm9pZCAwO3ZhciBpPXZvaWQgMDtpZihhKXtpZihlLnZhbHVlLnN1cCl7aT10LmhhdmluZ1N0eWxlKHIuc3VwKCkpO249UChlLnZhbHVlLnN1cCxpLHQpfWVsc2V7aT10LmhhdmluZ1N0eWxlKHIuc3ViKCkpO249UChlLnZhbHVlLnN1YixpLHQpfWU9ZS52YWx1ZS5iYXNlfXZhciBsPVAoZS52YWx1ZS5iYXNlLHQuaGF2aW5nQmFzZVN0eWxlKHUuZGVmYXVsdC5ESVNQTEFZKSk7dmFyIG89eS5kZWZhdWx0LnN2Z1NwYW4oZSx0KTt2YXIgcz12b2lkIDA7aWYoZS52YWx1ZS5pc092ZXIpe3M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiZmlyc3RCYXNlbGluZVwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOmx9LHt0eXBlOlwia2VyblwiLHNpemU6LjF9LHt0eXBlOlwiZWxlbVwiLGVsZW06b31dfSx0KTtzLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdLmNsYXNzZXMucHVzaChcInN2Zy1hbGlnblwiKX1lbHNle3M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiYm90dG9tXCIscG9zaXRpb25EYXRhOmwuZGVwdGgrLjErby5oZWlnaHQsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06b30se3R5cGU6XCJrZXJuXCIsc2l6ZTouMX0se3R5cGU6XCJlbGVtXCIsZWxlbTpsfV19LHQpO3MuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2xhc3Nlcy5wdXNoKFwic3ZnLWFsaWduXCIpfWlmKGEpe3ZhciBkPXcoW1wibW9yZFwiLGUudmFsdWUuaXNPdmVyP1wibW92ZXJcIjpcIm11bmRlclwiXSxbc10sdCk7aWYoZS52YWx1ZS5pc092ZXIpe3M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiZmlyc3RCYXNlbGluZVwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOmR9LHt0eXBlOlwia2VyblwiLHNpemU6LjJ9LHt0eXBlOlwiZWxlbVwiLGVsZW06bn1dfSx0KX1lbHNle3M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiYm90dG9tXCIscG9zaXRpb25EYXRhOmQuZGVwdGgrLjIrbi5oZWlnaHQsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06bn0se3R5cGU6XCJrZXJuXCIsc2l6ZTouMn0se3R5cGU6XCJlbGVtXCIsZWxlbTpkfV19LHQpfX1yZXR1cm4gdyhbXCJtb3JkXCIsZS52YWx1ZS5pc092ZXI/XCJtb3ZlclwiOlwibXVuZGVyXCJdLFtzXSx0KX07TC5hY2NlbnRVbmRlcj1mdW5jdGlvbihlLHQpe3ZhciByPVAoZS52YWx1ZS5iYXNlLHQpO3ZhciBhPXkuZGVmYXVsdC5zdmdTcGFuKGUsdCk7dmFyIG49L3RpbGRlLy50ZXN0KGUudmFsdWUubGFiZWwpPy4xMjowO3ZhciBpPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImJvdHRvbVwiLHBvc2l0aW9uRGF0YTphLmhlaWdodCtuLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6bn0se3R5cGU6XCJlbGVtXCIsZWxlbTpyfV19LHQpO2kuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2xhc3Nlcy5wdXNoKFwic3ZnLWFsaWduXCIpO3JldHVybiB3KFtcIm1vcmRcIixcImFjY2VudHVuZGVyXCJdLFtpXSx0KX07TC5lbmNsb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9UChlLnZhbHVlLmJvZHksdCk7dmFyIGE9ZS52YWx1ZS5sYWJlbC5zdWJzdHIoMSk7dmFyIG49dC5zaXplTXVsdGlwbGllcjt2YXIgaT12b2lkIDA7dmFyIGw9MDt2YXIgbz0vY29sb3IvLnRlc3QoYSk7aWYoYT09PVwic291dFwiKXtpPXcoW1wic3RyZXRjaHlcIixcInNvdXRcIl0pO2kuaGVpZ2h0PXQuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzcy9uO2w9LS41KnQuZm9udE1ldHJpY3MoKS54SGVpZ2h0fWVsc2V7ci5jbGFzc2VzLnB1c2goL2NhbmNlbC8udGVzdChhKT9cImNhbmNlbC1wYWRcIjpcImJveHBhZFwiKTt2YXIgdT0wO2lmKC9ib3gvLnRlc3QoYSkpe3U9YT09PVwiY29sb3Jib3hcIj8uMzouMzR9ZWxzZXt1PU8oZS52YWx1ZS5ib2R5KT8uMjowfWk9eS5kZWZhdWx0LmVuY2xvc2VTcGFuKHIsYSx1LHQpO2w9ci5kZXB0aCt1O2lmKG8pe2kuc3R5bGUuYmFja2dyb3VuZENvbG9yPWUudmFsdWUuYmFja2dyb3VuZENvbG9yLnZhbHVlO2lmKGE9PT1cImZjb2xvcmJveFwiKXtpLnN0eWxlLmJvcmRlckNvbG9yPWUudmFsdWUuYm9yZGVyQ29sb3IudmFsdWV9fX12YXIgcz12b2lkIDA7aWYobyl7cz1mLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJpbmRpdmlkdWFsU2hpZnRcIixjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0Omx9LHt0eXBlOlwiZWxlbVwiLGVsZW06cixzaGlmdDowfV19LHQpfWVsc2V7cz1mLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJpbmRpdmlkdWFsU2hpZnRcIixjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTpyLHNoaWZ0OjB9LHt0eXBlOlwiZWxlbVwiLGVsZW06aSxzaGlmdDpsfV19LHQpfWlmKC9jYW5jZWwvLnRlc3QoYSkpe3MuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bMV0uY2xhc3Nlcy5wdXNoKFwic3ZnLWFsaWduXCIpO3JldHVybiB3KFtcIm1vcmRcIixcImNhbmNlbC1sYXBcIl0sW3NdLHQpfWVsc2V7cmV0dXJuIHcoW1wibW9yZFwiXSxbc10sdCl9fTtMLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPXQuc3R5bGU7dmFyIGE9dC5oYXZpbmdTdHlsZShyLnN1cCgpKTt2YXIgbj1QKGUudmFsdWUuYm9keSxhLHQpO24uY2xhc3Nlcy5wdXNoKFwieC1hcnJvdy1wYWRcIik7dmFyIGk9dm9pZCAwO2lmKGUudmFsdWUuYmVsb3cpe2E9dC5oYXZpbmdTdHlsZShyLnN1YigpKTtpPVAoZS52YWx1ZS5iZWxvdyxhLHQpO2kuY2xhc3Nlcy5wdXNoKFwieC1hcnJvdy1wYWRcIil9dmFyIGw9eS5kZWZhdWx0LnN2Z1NwYW4oZSx0KTt2YXIgbz0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQrLjUqbC5oZWlnaHQ7dmFyIHU9LXQuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0LS41KmwuaGVpZ2h0LS4xMTE7dmFyIHM9dm9pZCAwO2lmKGUudmFsdWUuYmVsb3cpe3ZhciBkPS10LmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodCtpLmhlaWdodCsuNSpsLmhlaWdodCsuMTExO3M9Zi5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiaW5kaXZpZHVhbFNoaWZ0XCIsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06bixzaGlmdDp1fSx7dHlwZTpcImVsZW1cIixlbGVtOmwsc2hpZnQ6b30se3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0OmR9XX0sdCl9ZWxzZXtzPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImluZGl2aWR1YWxTaGlmdFwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOm4sc2hpZnQ6dX0se3R5cGU6XCJlbGVtXCIsZWxlbTpsLHNoaWZ0Om99XX0sdCl9cy5jaGlsZHJlblswXS5jaGlsZHJlblswXS5jaGlsZHJlblsxXS5jbGFzc2VzLnB1c2goXCJzdmctYWxpZ25cIik7cmV0dXJuIHcoW1wibXJlbFwiLFwieC1hcnJvd1wiXSxbc10sdCl9O0wubWNsYXNzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9VChlLnZhbHVlLnZhbHVlLHQsdHJ1ZSk7cmV0dXJuIHcoW2UudmFsdWUubWNsYXNzXSxyLHQpfTtMLnJhaXNlYm94PWZ1bmN0aW9uKGUsdCl7dmFyIHI9TC5zaXppbmcoe3ZhbHVlOnt2YWx1ZTpbe3R5cGU6XCJ0ZXh0XCIsdmFsdWU6e2JvZHk6ZS52YWx1ZS52YWx1ZSxmb250OlwibWF0aHJtXCJ9fV0sc2l6ZTo2fX0sdCk7dmFyIGE9KDAscC5jYWxjdWxhdGVTaXplKShlLnZhbHVlLmR5LnZhbHVlLHQpO3JldHVybiBmLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJzaGlmdFwiLHBvc2l0aW9uRGF0YTotYSxjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTpyfV19LHQpfTt2YXIgUD1yLmJ1aWxkR3JvdXA9ZnVuY3Rpb24gZSh0LHIsYSl7aWYoIXQpe3JldHVybiB3KCl9aWYoTFt0LnR5cGVdKXt2YXIgbj1MW3QudHlwZV0odCxyKTtpZihhJiZyLnNpemUhPT1hLnNpemUpe249dyhyLnNpemluZ0NsYXNzZXMoYSksW25dLHIpO3ZhciBpPXIuc2l6ZU11bHRpcGxpZXIvYS5zaXplTXVsdGlwbGllcjtuLmhlaWdodCo9aTtuLmRlcHRoKj1pfXJldHVybiBufWVsc2V7dGhyb3cgbmV3IGwuZGVmYXVsdChcIkdvdCBncm91cCBvZiB1bmtub3duIHR5cGU6ICdcIit0LnR5cGUrXCInXCIpfX07ZnVuY3Rpb24gQihlLHQpe2U9SlNPTi5wYXJzZSgoMCxuLmRlZmF1bHQpKGUpKTt2YXIgcj1UKGUsdCx0cnVlKTt2YXIgYT13KFtcImJhc2VcIl0scix0KTt2YXIgaT13KFtcInN0cnV0XCJdKTt2YXIgbD13KFtcInN0cnV0XCIsXCJib3R0b21cIl0pO2kuc3R5bGUuaGVpZ2h0PWEuaGVpZ2h0K1wiZW1cIjtsLnN0eWxlLmhlaWdodD1hLmhlaWdodCthLmRlcHRoK1wiZW1cIjtsLnN0eWxlLnZlcnRpY2FsQWxpZ249LWEuZGVwdGgrXCJlbVwiO3ZhciBvPXcoW1wia2F0ZXgtaHRtbFwiXSxbaSxsLGFdKTtvLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpO3JldHVybiBvfX0se1wiLi9QYXJzZUVycm9yXCI6ODQsXCIuL1N0eWxlXCI6ODksXCIuL2J1aWxkQ29tbW9uXCI6OTEsXCIuL2RlbGltaXRlclwiOjk3LFwiLi9kb21UcmVlXCI6OTgsXCIuL3N0cmV0Y2h5XCI6MTE2LFwiLi91bml0c1wiOjEyMCxcIi4vdXRpbHNcIjoxMjEsXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnlcIjo1fV0sOTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3IuYnVpbGRHcm91cD1yLmJ1aWxkRXhwcmVzc2lvbj1yLmdyb3VwVHlwZXM9ci5tYWtlVGV4dD11bmRlZmluZWQ7ci5kZWZhdWx0PXo7dmFyIGE9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIG49eShhKTt2YXIgaT1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgbD15KGkpO3ZhciBvPWUoXCIuL21hdGhNTFRyZWVcIik7dmFyIHU9eShvKTt2YXIgcz1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBmPXkocyk7dmFyIGQ9ZShcIi4vU3R5bGVcIik7dmFyIGM9eShkKTt2YXIgaD1lKFwiLi9zeW1ib2xzXCIpO3ZhciB2PXkoaCk7dmFyIHA9ZShcIi4vdXRpbHNcIik7dmFyIG09eShwKTt2YXIgZz1lKFwiLi9zdHJldGNoeVwiKTt2YXIgYj15KGcpO2Z1bmN0aW9uIHkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB4PXIubWFrZVRleHQ9ZnVuY3Rpb24gZSh0LHIpe2lmKHYuZGVmYXVsdFtyXVt0XSYmdi5kZWZhdWx0W3JdW3RdLnJlcGxhY2Upe3Q9di5kZWZhdWx0W3JdW3RdLnJlcGxhY2V9cmV0dXJuIG5ldyB1LmRlZmF1bHQuVGV4dE5vZGUodCl9O3ZhciB3PWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yLmZvbnQ7aWYoIWEpe3JldHVybiBudWxsfXZhciBpPXQubW9kZTtpZihhPT09XCJtYXRoaXRcIil7cmV0dXJuXCJpdGFsaWNcIn12YXIgbz10LnZhbHVlO2lmKG0uZGVmYXVsdC5jb250YWlucyhbXCJcXFxcaW1hdGhcIixcIlxcXFxqbWF0aFwiXSxvKSl7cmV0dXJuIG51bGx9aWYodi5kZWZhdWx0W2ldW29dJiZ2LmRlZmF1bHRbaV1bb10ucmVwbGFjZSl7bz12LmRlZmF1bHRbaV1bb10ucmVwbGFjZX12YXIgdT1uLmRlZmF1bHQuZm9udE1hcFthXS5mb250TmFtZTtpZihsLmRlZmF1bHQuZ2V0Q2hhcmFjdGVyTWV0cmljcyhvLHUpKXtyZXR1cm4gbi5kZWZhdWx0LmZvbnRNYXBbci5mb250XS52YXJpYW50fXJldHVybiBudWxsfTt2YXIgaz1yLmdyb3VwVHlwZXM9e307dmFyIE09e21pOlwiaXRhbGljXCIsbW46XCJub3JtYWxcIixtdGV4dDpcIm5vcm1hbFwifTtrLm1hdGhvcmQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibWlcIixbeChlLnZhbHVlLGUubW9kZSldKTt2YXIgYT13KGUsdCl8fFwiaXRhbGljXCI7aWYoYSE9PU1bci50eXBlXSl7ci5zZXRBdHRyaWJ1dGUoXCJtYXRodmFyaWFudFwiLGEpfXJldHVybiByfTtrLnRleHRvcmQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUsZS5tb2RlKTt2YXIgYT13KGUsdCl8fFwibm9ybWFsXCI7dmFyIG49dm9pZCAwO2lmKGUubW9kZT09PVwidGV4dFwiKXtuPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdGV4dFwiLFtyXSl9ZWxzZSBpZigvWzAtOV0vLnRlc3QoZS52YWx1ZSkpe249bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1uXCIsW3JdKX1lbHNlIGlmKGUudmFsdWU9PT1cIlxcXFxwcmltZVwiKXtuPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLFtyXSl9ZWxzZXtuPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtaVwiLFtyXSl9aWYoYSE9PU1bbi50eXBlXSl7bi5zZXRBdHRyaWJ1dGUoXCJtYXRodmFyaWFudFwiLGEpfXJldHVybiBufTtrLmJpbj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbeChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07ay5yZWw9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW3goZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2sub3Blbj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbeChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07ay5jbG9zZT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbeChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07ay5pbm5lcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbeChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07ay5wdW5jdD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbeChlLnZhbHVlLGUubW9kZSldKTt0LnNldEF0dHJpYnV0ZShcInNlcGFyYXRvclwiLFwidHJ1ZVwiKTtyZXR1cm4gdH07ay5vcmRncm91cD1mdW5jdGlvbihlLHQpe3ZhciByPV8oZS52YWx1ZSx0KTt2YXIgYT1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXJvd1wiLHIpO3JldHVybiBhfTtrLnRleHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmJvZHk7dmFyIGE9W107dmFyIG49bnVsbDtmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKyl7dmFyIGw9UyhyW2ldLHQpO2lmKGwudHlwZT09PVwibXRleHRcIiYmbiE9bnVsbCl7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkobi5jaGlsZHJlbixsLmNoaWxkcmVuKX1lbHNle2EucHVzaChsKTtpZihsLnR5cGU9PT1cIm10ZXh0XCIpe249bH19fWlmKGEubGVuZ3RoPT09MSl7cmV0dXJuIGFbMF19ZWxzZXtyZXR1cm4gbmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1yb3dcIixhKX19O2suY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj1fKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zdHlsZVwiLHIpO2Euc2V0QXR0cmlidXRlKFwibWF0aGNvbG9yXCIsZS52YWx1ZS5jb2xvcik7cmV0dXJuIGF9O2sueG1sQ2xhc3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj1fKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zdHlsZVwiLHIpO2Euc2V0QXR0cmlidXRlKFwiY2xhc3NcIixlLnZhbHVlLmNsKTtyZXR1cm4gYX07ay5zdXBzdWI9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mYWxzZTt2YXIgYT12b2lkIDA7dmFyIG49dm9pZCAwO2lmKGUudmFsdWUuYmFzZSl7aWYoZS52YWx1ZS5iYXNlLnZhbHVlLnR5cGU9PT1cImhvcml6QnJhY2VcIil7bj1lLnZhbHVlLnN1cD90cnVlOmZhbHNlO2lmKG49PT1lLnZhbHVlLmJhc2UudmFsdWUuaXNPdmVyKXtyPXRydWU7YT1lLnZhbHVlLmJhc2UudmFsdWUuaXNPdmVyfX19dmFyIGk9dHJ1ZTt2YXIgbD1bUyhlLnZhbHVlLmJhc2UsdCxpKV07aWYoZS52YWx1ZS5zdWIpe2wucHVzaChTKGUudmFsdWUuc3ViLHQsaSkpfWlmKGUudmFsdWUuc3VwKXtsLnB1c2goUyhlLnZhbHVlLnN1cCx0LGkpKX12YXIgbz12b2lkIDA7aWYocil7bz1hP1wibW92ZXJcIjpcIm11bmRlclwifWVsc2UgaWYoIWUudmFsdWUuc3ViKXtvPVwibXN1cFwifWVsc2UgaWYoIWUudmFsdWUuc3VwKXtvPVwibXN1YlwifWVsc2V7dmFyIHM9ZS52YWx1ZS5iYXNlO2lmKHMmJnMudmFsdWUubGltaXRzJiZ0LnN0eWxlPT09Yy5kZWZhdWx0LkRJU1BMQVkpe289XCJtdW5kZXJvdmVyXCJ9ZWxzZXtvPVwibXN1YnN1cFwifX12YXIgZj1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKG8sbCk7cmV0dXJuIGZ9O2suc3FydD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLmluZGV4KXtyPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtcm9vdFwiLFtTKGUudmFsdWUuYm9keSx0KSxTKGUudmFsdWUuaW5kZXgsdCldKX1lbHNle3I9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zcXJ0XCIsW1MoZS52YWx1ZS5ib2R5LHQpXSl9cmV0dXJuIHJ9O2suYWNjZW50PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dm9pZCAwO2lmKGUudmFsdWUuaXNTdHJldGNoeSl7cj1iLmRlZmF1bHQubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKX1lbHNle3I9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW3goZS52YWx1ZS5sYWJlbCxlLm1vZGUpXSl9dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vdmVyXCIsW1MoZS52YWx1ZS5iYXNlLHQpLHJdKTthLnNldEF0dHJpYnV0ZShcImFjY2VudFwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07ay5zcGFjaW5nPWZ1bmN0aW9uKGUpe3ZhciB0PXZvaWQgMDtpZihlLnZhbHVlPT09XCJcXFxcIFwifHxlLnZhbHVlPT09XCJcXFxcc3BhY2VcInx8ZS52YWx1ZT09PVwiIFwifHxlLnZhbHVlPT09XCJ+XCIpe3Q9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyB1LmRlZmF1bHQuVGV4dE5vZGUoXCJcXHhhMFwiKV0pfWVsc2V7dD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXNwYWNlXCIpO3Quc2V0QXR0cmlidXRlKFwid2lkdGhcIixuLmRlZmF1bHQuc3BhY2luZ0Z1bmN0aW9uc1tlLnZhbHVlXS5zaXplKX1yZXR1cm4gdH07ay5jdXJzb3I9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyB1LmRlZmF1bHQuVGV4dE5vZGUoXCJ8XCIpXSk7cmV0dXJuIHR9O2suZm9udD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuZm9udDtyZXR1cm4gUyhlLnZhbHVlLmJvZHksdC53aXRoRm9udChyKSl9O2suc3R5bGluZz1mdW5jdGlvbihlLHQpe3ZhciByPXtkaXNwbGF5OmMuZGVmYXVsdC5ESVNQTEFZLHRleHQ6Yy5kZWZhdWx0LlRFWFQsc2NyaXB0OmMuZGVmYXVsdC5TQ1JJUFQsc2NyaXB0c2NyaXB0OmMuZGVmYXVsdC5TQ1JJUFRTQ1JJUFR9O3ZhciBhPXJbZS52YWx1ZS5zdHlsZV07dmFyIG49dC5oYXZpbmdTdHlsZShhKTt2YXIgaT1fKGUudmFsdWUudmFsdWUsbik7dmFyIGw9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zdHlsZVwiLGkpO3ZhciBvPXtkaXNwbGF5OltcIjBcIixcInRydWVcIl0sdGV4dDpbXCIwXCIsXCJmYWxzZVwiXSxzY3JpcHQ6W1wiMVwiLFwiZmFsc2VcIl0sc2NyaXB0c2NyaXB0OltcIjJcIixcImZhbHNlXCJdfTt2YXIgcz1vW2UudmFsdWUuc3R5bGVdO2wuc2V0QXR0cmlidXRlKFwic2NyaXB0bGV2ZWxcIixzWzBdKTtsLnNldEF0dHJpYnV0ZShcImRpc3BsYXlzdHlsZVwiLHNbMV0pO3JldHVybiBsfTtrLnNpemluZz1mdW5jdGlvbihlLHQpe3ZhciByPXQuaGF2aW5nU2l6ZShlLnZhbHVlLnNpemUpO3ZhciBhPV8oZS52YWx1ZS52YWx1ZSxyKTt2YXIgbj1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXN0eWxlXCIsYSk7bi5zZXRBdHRyaWJ1dGUoXCJtYXRoc2l6ZVwiLHIuc2l6ZU11bHRpcGxpZXIrXCJlbVwiKTtyZXR1cm4gbn07ay52ZXJiPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IHUuZGVmYXVsdC5UZXh0Tm9kZShuLmRlZmF1bHQubWFrZVZlcmIoZSx0KSk7dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm10ZXh0XCIsW3JdKTthLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsbi5kZWZhdWx0LmZvbnRNYXBbXCJtYXRodHRcIl0udmFyaWFudCk7cmV0dXJuIGF9O2sub3ZlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbbmV3IHUuZGVmYXVsdC5UZXh0Tm9kZShcIlxcdTIwM2VcIildKTtyLnNldEF0dHJpYnV0ZShcInN0cmV0Y2h5XCIsXCJ0cnVlXCIpO3ZhciBhPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtb3ZlclwiLFtTKGUudmFsdWUuYm9keSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnRcIixcInRydWVcIik7cmV0dXJuIGF9O2sudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW25ldyB1LmRlZmF1bHQuVGV4dE5vZGUoXCJcXHUyMDNlXCIpXSk7ci5zZXRBdHRyaWJ1dGUoXCJzdHJldGNoeVwiLFwidHJ1ZVwiKTt2YXIgYT1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXVuZGVyXCIsW1MoZS52YWx1ZS5ib2R5LHQpLHJdKTthLnNldEF0dHJpYnV0ZShcImFjY2VudHVuZGVyXCIsXCJ0cnVlXCIpO3JldHVybiBhfTtrLmFjY2VudFVuZGVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI9Yi5kZWZhdWx0Lm1hdGhNTG5vZGUoZS52YWx1ZS5sYWJlbCk7dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm11bmRlclwiLFtTKGUudmFsdWUuYm9keSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnR1bmRlclwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07ay5lbmNsb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1lbmNsb3NlXCIsW1MoZS52YWx1ZS5ib2R5LHQpXSk7c3dpdGNoKGUudmFsdWUubGFiZWwpe2Nhc2VcIlxcXFxjYW5jZWxcIjpyLnNldEF0dHJpYnV0ZShcIm5vdGF0aW9uXCIsXCJ1cGRpYWdvbmFsc3RyaWtlXCIpO2JyZWFrO2Nhc2VcIlxcXFxiY2FuY2VsXCI6ci5zZXRBdHRyaWJ1dGUoXCJub3RhdGlvblwiLFwiZG93bmRpYWdvbmFsc3RyaWtlXCIpO2JyZWFrO2Nhc2VcIlxcXFxzb3V0XCI6ci5zZXRBdHRyaWJ1dGUoXCJub3RhdGlvblwiLFwiaG9yaXpvbnRhbHN0cmlrZVwiKTticmVhaztjYXNlXCJcXFxcZmJveFwiOnIuc2V0QXR0cmlidXRlKFwibm90YXRpb25cIixcImJveFwiKTticmVhaztjYXNlXCJcXFxcY29sb3Jib3hcIjpyLnNldEF0dHJpYnV0ZShcIm1hdGhiYWNrZ3JvdW5kXCIsZS52YWx1ZS5iYWNrZ3JvdW5kQ29sb3IudmFsdWUpO2JyZWFrO2Nhc2VcIlxcXFxmY29sb3Jib3hcIjpyLnNldEF0dHJpYnV0ZShcIm1hdGhiYWNrZ3JvdW5kXCIsZS52YWx1ZS5iYWNrZ3JvdW5kQ29sb3IudmFsdWUpO3Iuc2V0QXR0cmlidXRlKFwibm90YXRpb25cIixcImJveFwiKTticmVhaztkZWZhdWx0OnIuc2V0QXR0cmlidXRlKFwibm90YXRpb25cIixcInVwZGlhZ29uYWxzdHJpa2UgZG93bmRpYWdvbmFsc3RyaWtlXCIpfXJldHVybiByfTtrLmhvcml6QnJhY2U9ZnVuY3Rpb24oZSx0KXt2YXIgcj1iLmRlZmF1bHQubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKTtyZXR1cm4gbmV3IHUuZGVmYXVsdC5NYXRoTm9kZShlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIixbUyhlLnZhbHVlLmJhc2UsdCkscl0pfTtrLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPWIuZGVmYXVsdC5tYXRoTUxub2RlKGUudmFsdWUubGFiZWwpO3ZhciBhPXZvaWQgMDt2YXIgbj12b2lkIDA7aWYoZS52YWx1ZS5ib2R5KXt2YXIgaT1TKGUudmFsdWUuYm9keSx0KTtpZihlLnZhbHVlLmJlbG93KXtuPVMoZS52YWx1ZS5iZWxvdyx0KTthPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdW5kZXJvdmVyXCIsW3IsbixpXSl9ZWxzZXthPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtb3ZlclwiLFtyLGldKX19ZWxzZSBpZihlLnZhbHVlLmJlbG93KXtuPVMoZS52YWx1ZS5iZWxvdyx0KTthPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdW5kZXJcIixbcixuXSl9ZWxzZXthPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtb3ZlclwiLFtyXSl9cmV0dXJuIGF9O2sucnVsZT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXJvd1wiKTtyZXR1cm4gdH07ay5rZXJuPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtcm93XCIpO3JldHVybiB0fTtrLm1jbGFzcz1mdW5jdGlvbihlLHQpe3ZhciByPV8oZS52YWx1ZS52YWx1ZSx0KTtyZXR1cm4gbmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zdHlsZVwiLHIpfTtrLnJhaXNlYm94PWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1wYWRkZWRcIixbUyhlLnZhbHVlLmJvZHksdCldKTt2YXIgYT1lLnZhbHVlLmR5LnZhbHVlLm51bWJlcitlLnZhbHVlLmR5LnZhbHVlLnVuaXQ7ci5zZXRBdHRyaWJ1dGUoXCJ2b2Zmc2V0XCIsYSk7cmV0dXJuIHJ9O3ZhciBfPXIuYnVpbGRFeHByZXNzaW9uPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1bXTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXTthLnB1c2goUyhpLHIpKX1yZXR1cm4gYX07dmFyIFM9ci5idWlsZEdyb3VwPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06ZmFsc2U7aWYoIXQpe3JldHVybiBuZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXJvd1wiKX1pZihrW3QudHlwZV0pe3ZhciBuPWtbdC50eXBlXSh0LHIpO2lmKGEpe2lmKG4udHlwZT09PVwibXJvd1wiJiZuLmNoaWxkcmVuLmxlbmd0aD09PTEpe3JldHVybiBuLmNoaWxkcmVuWzBdfX1yZXR1cm4gbn1lbHNle3Rocm93IG5ldyBmLmRlZmF1bHQoXCJHb3QgZ3JvdXAgb2YgdW5rbm93biB0eXBlOiAnXCIrdC50eXBlK1wiJ1wiKX19O2Z1bmN0aW9uIHooZSx0LHIpe3ZhciBhPV8oZSxyKTt2YXIgaT1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXJvd1wiLGEpO3ZhciBsPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJhbm5vdGF0aW9uXCIsW25ldyB1LmRlZmF1bHQuVGV4dE5vZGUodCldKTtsLnNldEF0dHJpYnV0ZShcImVuY29kaW5nXCIsXCJhcHBsaWNhdGlvbi94LXRleFwiKTt2YXIgbz1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwic2VtYW50aWNzXCIsW2ksbF0pO3ZhciBzPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtYXRoXCIsW29dKTtyZXR1cm4gbi5kZWZhdWx0Lm1ha2VTcGFuKFtcImthdGV4LW1hdGhtbFwiXSxbc10pfX0se1wiLi9QYXJzZUVycm9yXCI6ODQsXCIuL1N0eWxlXCI6ODksXCIuL2J1aWxkQ29tbW9uXCI6OTEsXCIuL2ZvbnRNZXRyaWNzXCI6MTAxLFwiLi9tYXRoTUxUcmVlXCI6MTE0LFwiLi9zdHJldGNoeVwiOjExNixcIi4vc3ltYm9sc1wiOjExOCxcIi4vdXRpbHNcIjoxMjF9XSw5NDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcIi4vYnVpbGRIVE1MXCIpO3ZhciBuPXAoYSk7dmFyIGk9ZShcIi4vYnVpbGRNYXRoTUxcIik7dmFyIGw9cChpKTt2YXIgbz1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgdT1wKG8pO3ZhciBzPWUoXCIuL09wdGlvbnNcIik7dmFyIGY9cChzKTt2YXIgZD1lKFwiLi9TZXR0aW5nc1wiKTt2YXIgYz1wKGQpO3ZhciBoPWUoXCIuL1N0eWxlXCIpO3ZhciB2PXAoaCk7ZnVuY3Rpb24gcChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIG09ZnVuY3Rpb24gZSh0LHIsYSl7YT1hfHxuZXcgYy5kZWZhdWx0KHt9KTt2YXIgaT12LmRlZmF1bHQuVEVYVDtpZihhLmRpc3BsYXlNb2RlKXtpPXYuZGVmYXVsdC5ESVNQTEFZfXZhciBvPW5ldyBmLmRlZmF1bHQoe3N0eWxlOmksbWF4U2l6ZTphLm1heFNpemV9KTt2YXIgcz0oMCxsLmRlZmF1bHQpKHQscixvKTt2YXIgZD0oMCxuLmRlZmF1bHQpKHQsbyk7dmFyIGg9dS5kZWZhdWx0Lm1ha2VTcGFuKFtcImthdGV4XCJdLFtzLGRdKTtpZihhLmRpc3BsYXlNb2RlKXtyZXR1cm4gdS5kZWZhdWx0Lm1ha2VTcGFuKFtcImthdGV4LWRpc3BsYXlcIl0sW2hdKX1lbHNle3JldHVybiBofX07ci5kZWZhdWx0PW19LHtcIi4vT3B0aW9uc1wiOjgzLFwiLi9TZXR0aW5nc1wiOjg3LFwiLi9TdHlsZVwiOjg5LFwiLi9idWlsZENvbW1vblwiOjkxLFwiLi9idWlsZEhUTUxcIjo5MixcIi4vYnVpbGRNYXRoTUxcIjo5M31dLDk1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTtyLl9lbnZpcm9ubWVudHM9dW5kZWZpbmVkO3IuZGVmYXVsdD1kO3ZhciBhPWUoXCIuL2J1aWxkSFRNTFwiKTt2YXIgbj1lKFwiLi9idWlsZE1hdGhNTFwiKTt2YXIgaT1lKFwiLi9PcHRpb25zXCIpO3ZhciBsPXMoaSk7dmFyIG89ZShcIi4vUGFyc2VOb2RlXCIpO3ZhciB1PXMobyk7ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGY9ci5fZW52aXJvbm1lbnRzPXt9O2Z1bmN0aW9uIGQoZSl7dmFyIHQ9ZS50eXBlLHI9ZS5uYW1lcyxpPWUucHJvcHMsbD1lLmhhbmRsZXIsbz1lLmh0bWxCdWlsZGVyLHU9ZS5tYXRobWxCdWlsZGVyO3ZhciBzPXtudW1BcmdzOmkubnVtQXJnc3x8MCxncmVlZGluZXNzOjEsYWxsb3dlZEluVGV4dDpmYWxzZSxudW1PcHRpb25hbEFyZ3M6MCxoYW5kbGVyOmx9O2Zvcih2YXIgZD0wO2Q8ci5sZW5ndGg7KytkKXtmW3JbZF1dPXN9aWYobyl7YS5ncm91cFR5cGVzW3RdPW99aWYodSl7bi5ncm91cFR5cGVzW3RdPXV9fX0se1wiLi9PcHRpb25zXCI6ODMsXCIuL1BhcnNlTm9kZVwiOjg1LFwiLi9idWlsZEhUTUxcIjo5MixcIi4vYnVpbGRNYXRoTUxcIjo5M31dLDk2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTtyLm9yZGFyZ3VtZW50PXIuX2Z1bmN0aW9ucz11bmRlZmluZWQ7ci5kZWZhdWx0PWw7dmFyIGE9ZShcIi4vYnVpbGRIVE1MXCIpO3ZhciBuPWUoXCIuL2J1aWxkTWF0aE1MXCIpO3ZhciBpPXIuX2Z1bmN0aW9ucz17fTtmdW5jdGlvbiBsKGUpe3ZhciB0PWUudHlwZSxyPWUubmFtZXMsbD1lLnByb3BzLG89ZS5oYW5kbGVyLHU9ZS5odG1sQnVpbGRlcixzPWUubWF0aG1sQnVpbGRlcjt2YXIgZj17bnVtQXJnczpsLm51bUFyZ3MsYXJnVHlwZXM6bC5hcmdUeXBlcyxncmVlZGluZXNzOmwuZ3JlZWRpbmVzcz09PXVuZGVmaW5lZD8xOmwuZ3JlZWRpbmVzcyxhbGxvd2VkSW5UZXh0OiEhbC5hbGxvd2VkSW5UZXh0LGFsbG93ZWRJbk1hdGg6bC5hbGxvd2VkSW5NYXRoPT09dW5kZWZpbmVkP3RydWU6bC5hbGxvd2VkSW5NYXRoLG51bU9wdGlvbmFsQXJnczpsLm51bU9wdGlvbmFsQXJnc3x8MCxpbmZpeDohIWwuaW5maXgsaGFuZGxlcjpvfTtmb3IodmFyIGQ9MDtkPHIubGVuZ3RoOysrZCl7aVtyW2RdXT1mfWlmKHQpe2lmKHUpe2EuZ3JvdXBUeXBlc1t0XT11fWlmKHMpe24uZ3JvdXBUeXBlc1t0XT1zfX19dmFyIG89ci5vcmRhcmd1bWVudD1mdW5jdGlvbiBlKHQpe2lmKHQudHlwZT09PVwib3JkZ3JvdXBcIil7cmV0dXJuIHQudmFsdWV9ZWxzZXtyZXR1cm5bdF19fX0se1wiLi9idWlsZEhUTUxcIjo5MixcIi4vYnVpbGRNYXRoTUxcIjo5M31dLDk3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBuPWcoYSk7dmFyIGk9ZShcIi4vU3R5bGVcIik7dmFyIGw9ZyhpKTt2YXIgbz1lKFwiLi9kb21UcmVlXCIpO3ZhciB1PWcobyk7dmFyIHM9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIGY9ZyhzKTt2YXIgZD1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgYz1nKGQpO3ZhciBoPWUoXCIuL3N5bWJvbHNcIik7dmFyIHY9ZyhoKTt2YXIgcD1lKFwiLi91dGlsc1wiKTt2YXIgbT1nKHApO2Z1bmN0aW9uIGcoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBiPWZ1bmN0aW9uIGUodCxyKXtpZih2LmRlZmF1bHQubWF0aFt0XSYmdi5kZWZhdWx0Lm1hdGhbdF0ucmVwbGFjZSl7cmV0dXJuIGMuZGVmYXVsdC5nZXRDaGFyYWN0ZXJNZXRyaWNzKHYuZGVmYXVsdC5tYXRoW3RdLnJlcGxhY2Uscil9ZWxzZXtyZXR1cm4gYy5kZWZhdWx0LmdldENoYXJhY3Rlck1ldHJpY3ModCxyKX19O3ZhciB5PWZ1bmN0aW9uIGUodCxyLGEsbil7dmFyIGk9YS5oYXZpbmdCYXNlU3R5bGUocik7dmFyIGw9Zi5kZWZhdWx0Lm1ha2VTcGFuKChufHxbXSkuY29uY2F0KGkuc2l6aW5nQ2xhc3NlcyhhKSksW3RdLGEpO2wuZGVsaW1TaXplTXVsdGlwbGllcj1pLnNpemVNdWx0aXBsaWVyL2Euc2l6ZU11bHRpcGxpZXI7bC5oZWlnaHQqPWwuZGVsaW1TaXplTXVsdGlwbGllcjtsLmRlcHRoKj1sLmRlbGltU2l6ZU11bHRpcGxpZXI7bC5tYXhGb250U2l6ZT1pLnNpemVNdWx0aXBsaWVyO3JldHVybiBsfTt2YXIgeD1mdW5jdGlvbiBlKHQscixhKXt2YXIgbj1yLmhhdmluZ0Jhc2VTdHlsZShhKTt2YXIgaT0oMS1yLnNpemVNdWx0aXBsaWVyL24uc2l6ZU11bHRpcGxpZXIpKnIuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0O3QuY2xhc3Nlcy5wdXNoKFwiZGVsaW1jZW50ZXJcIik7dC5zdHlsZS50b3A9aStcImVtXCI7dC5oZWlnaHQtPWk7dC5kZXB0aCs9aX07dmFyIHc9ZnVuY3Rpb24gZSh0LHIsYSxuLGksbCl7dmFyIG89Zi5kZWZhdWx0Lm1ha2VTeW1ib2wodCxcIk1haW4tUmVndWxhclwiLGksbik7dmFyIHU9eShvLHIsbixsKTtpZihhKXt4KHUsbixyKX1yZXR1cm4gdX07dmFyIGs9ZnVuY3Rpb24gZSh0LHIsYSxuKXtyZXR1cm4gZi5kZWZhdWx0Lm1ha2VTeW1ib2wodCxcIlNpemVcIityK1wiLVJlZ3VsYXJcIixhLG4pfTt2YXIgTT1mdW5jdGlvbiBlKHQscixhLG4saSxvKXt2YXIgdT1rKHQscixpLG4pO3ZhciBzPXkoZi5kZWZhdWx0Lm1ha2VTcGFuKFtcImRlbGltc2l6aW5nXCIsXCJzaXplXCIrcl0sW3VdLG4pLGwuZGVmYXVsdC5URVhULG4sbyk7aWYoYSl7eChzLG4sbC5kZWZhdWx0LlRFWFQpfXJldHVybiBzfTt2YXIgXz1mdW5jdGlvbiBlKHQscixhKXt2YXIgbj12b2lkIDA7aWYocj09PVwiU2l6ZTEtUmVndWxhclwiKXtuPVwiZGVsaW0tc2l6ZTFcIn1lbHNlIGlmKHI9PT1cIlNpemU0LVJlZ3VsYXJcIil7bj1cImRlbGltLXNpemU0XCJ9dmFyIGk9Zi5kZWZhdWx0Lm1ha2VTcGFuKFtcImRlbGltc2l6aW5naW5uZXJcIixuXSxbZi5kZWZhdWx0Lm1ha2VTcGFuKFtdLFtmLmRlZmF1bHQubWFrZVN5bWJvbCh0LHIsYSldKV0pO3JldHVybnt0eXBlOlwiZWxlbVwiLGVsZW06aX19O3ZhciBTPWZ1bmN0aW9uIGUodCxyLGEsbixpLG8pe3ZhciB1PXZvaWQgMDt2YXIgcz12b2lkIDA7dmFyIGQ9dm9pZCAwO3ZhciBjPXZvaWQgMDt1PWQ9Yz10O3M9bnVsbDt2YXIgaD1cIlNpemUxLVJlZ3VsYXJcIjtpZih0PT09XCJcXFxcdXBhcnJvd1wiKXtkPWM9XCJcXHUyM2QwXCJ9ZWxzZSBpZih0PT09XCJcXFxcVXBhcnJvd1wiKXtkPWM9XCJcXHUyMDE2XCJ9ZWxzZSBpZih0PT09XCJcXFxcZG93bmFycm93XCIpe3U9ZD1cIlxcdTIzZDBcIn1lbHNlIGlmKHQ9PT1cIlxcXFxEb3duYXJyb3dcIil7dT1kPVwiXFx1MjAxNlwifWVsc2UgaWYodD09PVwiXFxcXHVwZG93bmFycm93XCIpe3U9XCJcXFxcdXBhcnJvd1wiO2Q9XCJcXHUyM2QwXCI7Yz1cIlxcXFxkb3duYXJyb3dcIn1lbHNlIGlmKHQ9PT1cIlxcXFxVcGRvd25hcnJvd1wiKXt1PVwiXFxcXFVwYXJyb3dcIjtkPVwiXFx1MjAxNlwiO2M9XCJcXFxcRG93bmFycm93XCJ9ZWxzZSBpZih0PT09XCJbXCJ8fHQ9PT1cIlxcXFxsYnJhY2tcIil7dT1cIlxcdTIzYTFcIjtkPVwiXFx1MjNhMlwiO2M9XCJcXHUyM2EzXCI7aD1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIl1cInx8dD09PVwiXFxcXHJicmFja1wiKXt1PVwiXFx1MjNhNFwiO2Q9XCJcXHUyM2E1XCI7Yz1cIlxcdTIzYTZcIjtoPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxmbG9vclwiKXtkPXU9XCJcXHUyM2EyXCI7Yz1cIlxcdTIzYTNcIjtoPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxjZWlsXCIpe3U9XCJcXHUyM2ExXCI7ZD1jPVwiXFx1MjNhMlwiO2g9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmZsb29yXCIpe2Q9dT1cIlxcdTIzYTVcIjtjPVwiXFx1MjNhNlwiO2g9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmNlaWxcIil7dT1cIlxcdTIzYTRcIjtkPWM9XCJcXHUyM2E1XCI7aD1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIihcIil7dT1cIlxcdTIzOWJcIjtkPVwiXFx1MjM5Y1wiO2M9XCJcXHUyMzlkXCI7aD1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIilcIil7dT1cIlxcdTIzOWVcIjtkPVwiXFx1MjM5ZlwiO2M9XCJcXHUyM2EwXCI7aD1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFx7XCJ8fHQ9PT1cIlxcXFxsYnJhY2VcIil7dT1cIlxcdTIzYTdcIjtzPVwiXFx1MjNhOFwiO2M9XCJcXHUyM2E5XCI7ZD1cIlxcdTIzYWFcIjtoPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXH1cInx8dD09PVwiXFxcXHJicmFjZVwiKXt1PVwiXFx1MjNhYlwiO3M9XCJcXHUyM2FjXCI7Yz1cIlxcdTIzYWRcIjtkPVwiXFx1MjNhYVwiO2g9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcbGdyb3VwXCIpe3U9XCJcXHUyM2E3XCI7Yz1cIlxcdTIzYTlcIjtkPVwiXFx1MjNhYVwiO2g9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmdyb3VwXCIpe3U9XCJcXHUyM2FiXCI7Yz1cIlxcdTIzYWRcIjtkPVwiXFx1MjNhYVwiO2g9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcbG1vdXN0YWNoZVwiKXt1PVwiXFx1MjNhN1wiO2M9XCJcXHUyM2FkXCI7ZD1cIlxcdTIzYWFcIjtoPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJtb3VzdGFjaGVcIil7dT1cIlxcdTIzYWJcIjtjPVwiXFx1MjNhOVwiO2Q9XCJcXHUyM2FhXCI7aD1cIlNpemU0LVJlZ3VsYXJcIn12YXIgdj1iKHUsaCk7dmFyIHA9di5oZWlnaHQrdi5kZXB0aDt2YXIgbT1iKGQsaCk7dmFyIGc9bS5oZWlnaHQrbS5kZXB0aDt2YXIgeD1iKGMsaCk7dmFyIHc9eC5oZWlnaHQreC5kZXB0aDt2YXIgaz0wO3ZhciBNPTE7aWYocyE9PW51bGwpe3ZhciBTPWIocyxoKTtrPVMuaGVpZ2h0K1MuZGVwdGg7TT0yfXZhciB6PXArdytrO3ZhciBUPU1hdGguY2VpbCgoci16KS8oTSpnKSk7dmFyIEM9eitUKk0qZzt2YXIgQT1uLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDtpZihhKXtBKj1uLnNpemVNdWx0aXBsaWVyfXZhciBOPUMvMi1BO3ZhciBPPVtdO08ucHVzaChfKGMsaCxpKSk7aWYocz09PW51bGwpe2Zvcih2YXIgaj0wO2o8VDtqKyspe08ucHVzaChfKGQsaCxpKSl9fWVsc2V7Zm9yKHZhciBMPTA7TDxUO0wrKyl7Ty5wdXNoKF8oZCxoLGkpKX1PLnB1c2goXyhzLGgsaSkpO2Zvcih2YXIgRT0wO0U8VDtFKyspe08ucHVzaChfKGQsaCxpKSl9fU8ucHVzaChfKHUsaCxpKSk7dmFyIHE9bi5oYXZpbmdCYXNlU3R5bGUobC5kZWZhdWx0LlRFWFQpO3ZhciBQPWYuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImJvdHRvbVwiLHBvc2l0aW9uRGF0YTpOLGNoaWxkcmVuOk99LHEpO3JldHVybiB5KGYuZGVmYXVsdC5tYWtlU3BhbihbXCJkZWxpbXNpemluZ1wiLFwibXVsdFwiXSxbUF0scSksbC5kZWZhdWx0LlRFWFQsbixvKX07dmFyIHo9ZnVuY3Rpb24gZSh0LHIsYSxuKXt2YXIgaT12b2lkIDA7aWYodD09PVwic3FydFRhbGxcIil7dmFyIGw9YS01NDtpPVwiTTcwMiAwSDQwMDAwMHY0MEg3NDJ2XCIrbCtcImwtNCA0LTQgNGMtLjY2Ny42NjdcXG4tMiAxLjUtNCAyLjVzLTQuMTY3IDEuODMzLTYuNSAyLjUtNS41IDEtOS41IDFoLTEybC0yOC04NGMtMTYuNjY3LTUyLTk2LjY2N1xcbi0yOTQuMzMzLTI0MC03MjdsLTIxMiAtNjQzIC04NSAxNzBjLTQtMy4zMzMtOC4zMzMtNy42NjctMTMgLTEzbC0xMy0xM2w3Ny0xNTVcXG4gNzctMTU2YzY2IDE5OS4zMzMgMTM5IDQxOS42NjcgMjE5IDY2MSBsMjE4IDY2MXpNNzAyIDBINDAwMDAwdjQwSDc0MnpcIn12YXIgbz1uZXcgdS5kZWZhdWx0LnBhdGhOb2RlKHQsaSk7dmFyIHM9W1tcIndpZHRoXCIsXCI0MDBlbVwiXSxbXCJoZWlnaHRcIixyK1wiZW1cIl1dO3MucHVzaChbXCJ2aWV3Qm94XCIsXCIwIDAgNDAwMDAwIFwiK2FdKTtzLnB1c2goW1wicHJlc2VydmVBc3BlY3RSYXRpb1wiLFwieE1pbllNaW4gc2xpY2VcIl0pO3ZhciBkPW5ldyB1LmRlZmF1bHQuc3ZnTm9kZShbb10scyk7cmV0dXJuIGYuZGVmYXVsdC5tYWtlU3BhbihbXCJoaWRlLXRhaWxcIl0sW2RdLG4pfTt2YXIgVD1mdW5jdGlvbiBlKHQscixhKXt2YXIgbj12b2lkIDA7dmFyIGk9YS5zaXplTXVsdGlwbGllcjt2YXIgbD12b2lkIDA7dmFyIG89dm9pZCAwO2lmKHIudHlwZT09PVwic21hbGxcIil7bz0xZTM7dmFyIHU9YS5oYXZpbmdCYXNlU3R5bGUoci5zdHlsZSk7aT11LnNpemVNdWx0aXBsaWVyL2Euc2l6ZU11bHRpcGxpZXI7bD0xKmk7bj16KFwic3FydE1haW5cIixsLG8sYSk7bi5zdHlsZS5taW5XaWR0aD1cIjAuODUzZW1cIjtuLmFkdmFuY2VXaWR0aD0uODMzKml9ZWxzZSBpZihyLnR5cGU9PT1cImxhcmdlXCIpe289MWUzKk9bci5zaXplXTtsPU9bci5zaXplXS9pO249eihcInNxcnRTaXplXCIrci5zaXplLGwsbyxhKTtuLnN0eWxlLm1pbldpZHRoPVwiMS4wMmVtXCI7bi5hZHZhbmNlV2lkdGg9MS9pfWVsc2V7bD10L2k7bz1NYXRoLmZsb29yKDFlMyp0KTtuPXooXCJzcXJ0VGFsbFwiLGwsbyxhKTtuLnN0eWxlLm1pbldpZHRoPVwiMC43NDJlbVwiO24uYWR2YW5jZVdpZHRoPTEuMDU2L2l9bi5oZWlnaHQ9bDtuLnN0eWxlLmhlaWdodD1sK1wiZW1cIjtuLnNpemVNdWx0aXBsaWVyPWk7cmV0dXJuIG59O3ZhciBDPVtcIihcIixcIilcIixcIltcIixcIlxcXFxsYnJhY2tcIixcIl1cIixcIlxcXFxyYnJhY2tcIixcIlxcXFx7XCIsXCJcXFxcbGJyYWNlXCIsXCJcXFxcfVwiLFwiXFxcXHJicmFjZVwiLFwiXFxcXGxmbG9vclwiLFwiXFxcXHJmbG9vclwiLFwiXFxcXGxjZWlsXCIsXCJcXFxccmNlaWxcIixcIlxcXFxzdXJkXCJdO3ZhciBBPVtcIlxcXFx1cGFycm93XCIsXCJcXFxcZG93bmFycm93XCIsXCJcXFxcdXBkb3duYXJyb3dcIixcIlxcXFxVcGFycm93XCIsXCJcXFxcRG93bmFycm93XCIsXCJcXFxcVXBkb3duYXJyb3dcIixcInxcIixcIlxcXFx8XCIsXCJcXFxcdmVydFwiLFwiXFxcXFZlcnRcIixcIlxcXFxsdmVydFwiLFwiXFxcXHJ2ZXJ0XCIsXCJcXFxcbFZlcnRcIixcIlxcXFxyVmVydFwiLFwiXFxcXGxncm91cFwiLFwiXFxcXHJncm91cFwiLFwiXFxcXGxtb3VzdGFjaGVcIixcIlxcXFxybW91c3RhY2hlXCJdO3ZhciBOPVtcIjxcIixcIj5cIixcIlxcXFxsYW5nbGVcIixcIlxcXFxyYW5nbGVcIixcIi9cIixcIlxcXFxiYWNrc2xhc2hcIixcIlxcXFxsdFwiLFwiXFxcXGd0XCJdO3ZhciBPPVswLDEuMiwxLjgsMi40LDNdO3ZhciBqPWZ1bmN0aW9uIGUodCxyLGEsaSxsKXtpZih0PT09XCI8XCJ8fHQ9PT1cIlxcXFxsdFwiKXt0PVwiXFxcXGxhbmdsZVwifWVsc2UgaWYodD09PVwiPlwifHx0PT09XCJcXFxcZ3RcIil7dD1cIlxcXFxyYW5nbGVcIn1pZihtLmRlZmF1bHQuY29udGFpbnMoQyx0KXx8bS5kZWZhdWx0LmNvbnRhaW5zKE4sdCkpe3JldHVybiBNKHQscixmYWxzZSxhLGksbCl9ZWxzZSBpZihtLmRlZmF1bHQuY29udGFpbnMoQSx0KSl7cmV0dXJuIFModCxPW3JdLGZhbHNlLGEsaSxsKX1lbHNle3Rocm93IG5ldyBuLmRlZmF1bHQoXCJJbGxlZ2FsIGRlbGltaXRlcjogJ1wiK3QrXCInXCIpfX07dmFyIEw9W3t0eXBlOlwic21hbGxcIixzdHlsZTpsLmRlZmF1bHQuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6bC5kZWZhdWx0LlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmwuZGVmYXVsdC5URVhUfSx7dHlwZTpcImxhcmdlXCIsc2l6ZToxfSx7dHlwZTpcImxhcmdlXCIsc2l6ZToyfSx7dHlwZTpcImxhcmdlXCIsc2l6ZTozfSx7dHlwZTpcImxhcmdlXCIsc2l6ZTo0fV07dmFyIEU9W3t0eXBlOlwic21hbGxcIixzdHlsZTpsLmRlZmF1bHQuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6bC5kZWZhdWx0LlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmwuZGVmYXVsdC5URVhUfSx7dHlwZTpcInN0YWNrXCJ9XTt2YXIgcT1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmwuZGVmYXVsdC5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTpsLmRlZmF1bHQuU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6bC5kZWZhdWx0LlRFWFR9LHt0eXBlOlwibGFyZ2VcIixzaXplOjF9LHt0eXBlOlwibGFyZ2VcIixzaXplOjJ9LHt0eXBlOlwibGFyZ2VcIixzaXplOjN9LHt0eXBlOlwibGFyZ2VcIixzaXplOjR9LHt0eXBlOlwic3RhY2tcIn1dO3ZhciBQPWZ1bmN0aW9uIGUodCl7aWYodC50eXBlPT09XCJzbWFsbFwiKXtyZXR1cm5cIk1haW4tUmVndWxhclwifWVsc2UgaWYodC50eXBlPT09XCJsYXJnZVwiKXtyZXR1cm5cIlNpemVcIit0LnNpemUrXCItUmVndWxhclwifWVsc2UgaWYodC50eXBlPT09XCJzdGFja1wiKXtyZXR1cm5cIlNpemU0LVJlZ3VsYXJcIn19O3ZhciBCPWZ1bmN0aW9uIGUodCxyLGEsbil7dmFyIGk9TWF0aC5taW4oMiwzLW4uc3R5bGUuc2l6ZSk7Zm9yKHZhciBsPWk7bDxhLmxlbmd0aDtsKyspe2lmKGFbbF0udHlwZT09PVwic3RhY2tcIil7YnJlYWt9dmFyIG89Yih0LFAoYVtsXSkpO3ZhciB1PW8uaGVpZ2h0K28uZGVwdGg7aWYoYVtsXS50eXBlPT09XCJzbWFsbFwiKXt2YXIgcz1uLmhhdmluZ0Jhc2VTdHlsZShhW2xdLnN0eWxlKTt1Kj1zLnNpemVNdWx0aXBsaWVyfWlmKHU+cil7cmV0dXJuIGFbbF19fXJldHVybiBhW2EubGVuZ3RoLTFdfTt2YXIgUj1mdW5jdGlvbiBlKHQscixhLG4saSxsKXtpZih0PT09XCI8XCJ8fHQ9PT1cIlxcXFxsdFwiKXt0PVwiXFxcXGxhbmdsZVwifWVsc2UgaWYodD09PVwiPlwifHx0PT09XCJcXFxcZ3RcIil7dD1cIlxcXFxyYW5nbGVcIn12YXIgbz12b2lkIDA7aWYobS5kZWZhdWx0LmNvbnRhaW5zKE4sdCkpe289TH1lbHNlIGlmKG0uZGVmYXVsdC5jb250YWlucyhDLHQpKXtvPXF9ZWxzZXtvPUV9dmFyIHU9Qih0LHIsbyxuKTtpZih0PT09XCJcXFxcc3VyZFwiKXtyZXR1cm4gVChyLHUsbil9ZWxzZXtpZih1LnR5cGU9PT1cInNtYWxsXCIpe3JldHVybiB3KHQsdS5zdHlsZSxhLG4saSxsKX1lbHNlIGlmKHUudHlwZT09PVwibGFyZ2VcIil7cmV0dXJuIE0odCx1LnNpemUsYSxuLGksbCl9ZWxzZSBpZih1LnR5cGU9PT1cInN0YWNrXCIpe3JldHVybiBTKHQscixhLG4saSxsKX19fTt2YXIgRD1mdW5jdGlvbiBlKHQscixhLG4saSxsKXt2YXIgbz1uLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodCpuLnNpemVNdWx0aXBsaWVyO3ZhciB1PTkwMTt2YXIgcz01L24uZm9udE1ldHJpY3MoKS5wdFBlckVtO3ZhciBmPU1hdGgubWF4KHItbyxhK28pO3ZhciBkPU1hdGgubWF4KGYvNTAwKnUsMipmLXMpO3JldHVybiBSKHQsZCx0cnVlLG4saSxsKX07ci5kZWZhdWx0PXtzaXplZERlbGltOmosY3VzdG9tU2l6ZWREZWxpbTpSLGxlZnRSaWdodERlbGltOkR9fSx7XCIuL1BhcnNlRXJyb3JcIjo4NCxcIi4vU3R5bGVcIjo4OSxcIi4vYnVpbGRDb21tb25cIjo5MSxcIi4vZG9tVHJlZVwiOjk4LFwiLi9mb250TWV0cmljc1wiOjEwMSxcIi4vc3ltYm9sc1wiOjExOCxcIi4vdXRpbHNcIjoxMjF9XSw5ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpO3ZhciBuPXYoYSk7dmFyIGk9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKTt2YXIgbD12KGkpO3ZhciBvPWUoXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIik7dmFyIHU9dihvKTt2YXIgcz1lKFwiLi91bmljb2RlUmVnZXhlc1wiKTt2YXIgZj1lKFwiLi91dGlsc1wiKTt2YXIgZD12KGYpO3ZhciBjPWUoXCIuL3N2Z0dlb21ldHJ5XCIpO3ZhciBoPXYoYyk7ZnVuY3Rpb24gdihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHA9ZnVuY3Rpb24gZSh0KXt0PXQuc2xpY2UoKTtmb3IodmFyIHI9dC5sZW5ndGgtMTtyPj0wO3ItLSl7aWYoIXRbcl0pe3Quc3BsaWNlKHIsMSl9fXJldHVybiB0LmpvaW4oXCIgXCIpfTt2YXIgbT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLGEpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLmNsYXNzZXM9dHx8W107dGhpcy5jaGlsZHJlbj1yfHxbXTt0aGlzLmhlaWdodD0wO3RoaXMuZGVwdGg9MDt0aGlzLm1heEZvbnRTaXplPTA7dGhpcy5zdHlsZT17fTt0aGlzLmF0dHJpYnV0ZXM9e307aWYoYSl7aWYoYS5zdHlsZS5pc1RpZ2h0KCkpe3RoaXMuY2xhc3Nlcy5wdXNoKFwibXRpZ2h0XCIpfWlmKGEuZ2V0Q29sb3IoKSl7dGhpcy5zdHlsZS5jb2xvcj1hLmdldENvbG9yKCl9fX0oMCx1LmRlZmF1bHQpKGUsW3trZXk6XCJzZXRBdHRyaWJ1dGVcIix2YWx1ZTpmdW5jdGlvbiBlKHQscil7dGhpcy5hdHRyaWJ1dGVzW3RdPXJ9fSx7a2V5OlwidHJ5Q29tYmluZVwiLHZhbHVlOmZ1bmN0aW9uIGUodCl7cmV0dXJuIGZhbHNlfX0se2tleTpcInRvTm9kZVwiLHZhbHVlOmZ1bmN0aW9uIGUoKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0LmNsYXNzTmFtZT1wKHRoaXMuY2xhc3Nlcyk7Zm9yKHZhciByIGluIHRoaXMuc3R5bGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLnN0eWxlLHIpKXt0LnN0eWxlW3JdPXRoaXMuc3R5bGVbcl19fWZvcih2YXIgYSBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMsYSkpe3Quc2V0QXR0cmlidXRlKGEsdGhpcy5hdHRyaWJ1dGVzW2FdKX19Zm9yKHZhciBuPTA7bjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtuKyspe3QuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlbltuXS50b05vZGUoKSl9cmV0dXJuIHR9fSx7a2V5OlwidG9NYXJrdXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9XCI8c3BhblwiO2lmKHRoaXMuY2xhc3Nlcy5sZW5ndGgpe3QrPScgY2xhc3M9XCInO3QrPWQuZGVmYXVsdC5lc2NhcGUocCh0aGlzLmNsYXNzZXMpKTt0Kz0nXCInfXZhciByPVwiXCI7Zm9yKHZhciBhIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkoYSkpe3IrPWQuZGVmYXVsdC5oeXBoZW5hdGUoYSkrXCI6XCIrdGhpcy5zdHlsZVthXStcIjtcIn19aWYocil7dCs9JyBzdHlsZT1cIicrZC5kZWZhdWx0LmVzY2FwZShyKSsnXCInfWZvcih2YXIgbiBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMsbikpe3QrPVwiIFwiK24rJz1cIic7dCs9ZC5kZWZhdWx0LmVzY2FwZSh0aGlzLmF0dHJpYnV0ZXNbbl0pO3QrPSdcIid9fXQrPVwiPlwiO2Zvcih2YXIgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXt0Kz10aGlzLmNoaWxkcmVuW2ldLnRvTWFya3VwKCl9dCs9XCI8L3NwYW4+XCI7cmV0dXJuIHR9fV0pO3JldHVybiBlfSgpO3ZhciBnPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLmNoaWxkcmVuPXR8fFtdO3RoaXMuaGVpZ2h0PTA7dGhpcy5kZXB0aD0wO3RoaXMubWF4Rm9udFNpemU9MDtpZihyKXtmb3IodmFyIGE9MDthPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2ErKyl7Zm9yKHZhciBuPTA7bjxyLmxlbmd0aDtuKyspe3RoaXMuY2hpbGRyZW5bYV0uY2xhc3Nlcy5wdXNoKHJbbl0pfX19dGhpcy5jbGFzc2VzPXJ8fFtdfSgwLHUuZGVmYXVsdCkoZSxbe2tleTpcInRvTm9kZVwiLHZhbHVlOmZ1bmN0aW9uIGUoKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe3QuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlbltyXS50b05vZGUoKSl9cmV0dXJuIHR9fSx7a2V5OlwidG9NYXJrdXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9XCJcIjtmb3IodmFyIHI9MDtyPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3IrKyl7dCs9dGhpcy5jaGlsZHJlbltyXS50b01hcmt1cCgpfXJldHVybiB0fX1dKTtyZXR1cm4gZX0oKTt2YXIgYj17XCJcXHhlZVwiOlwiXFx1MDEzMVxcdTAzMDJcIixcIlxceGVmXCI6XCJcXHUwMTMxXFx1MDMwOFwiLFwiXFx4ZWRcIjpcIlxcdTAxMzFcXHUwMzAxXCIsXCJcXHhlY1wiOlwiXFx1MDEzMVxcdTAzMDBcIn07dmFyIHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixhLG4saSxvLHUpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLnZhbHVlPXR8fFwiXCI7dGhpcy5oZWlnaHQ9cnx8MDt0aGlzLmRlcHRoPWF8fDA7dGhpcy5pdGFsaWM9bnx8MDt0aGlzLnNrZXc9aXx8MDt0aGlzLmNsYXNzZXM9b3x8W107dGhpcy5zdHlsZT11fHx7fTt0aGlzLm1heEZvbnRTaXplPTA7aWYocy5jamtSZWdleC50ZXN0KHQpKXtpZihzLmhhbmd1bFJlZ2V4LnRlc3QodCkpe3RoaXMuY2xhc3Nlcy5wdXNoKFwiaGFuZ3VsX2ZhbGxiYWNrXCIpfWVsc2V7dGhpcy5jbGFzc2VzLnB1c2goXCJjamtfZmFsbGJhY2tcIil9fWlmKC9bXFx4ZWVcXHhlZlxceGVkXFx4ZWNdLy50ZXN0KHRoaXMudmFsdWUpKXt0aGlzLnZhbHVlPWJbdGhpcy52YWx1ZV19fSgwLHUuZGVmYXVsdCkoZSxbe2tleTpcInRyeUNvbWJpbmVcIix2YWx1ZTpmdW5jdGlvbiB0KHIpe2lmKCFyfHwhKHIgaW5zdGFuY2VvZiBlKXx8dGhpcy5pdGFsaWM+MHx8cCh0aGlzLmNsYXNzZXMpIT09cChyLmNsYXNzZXMpfHx0aGlzLnNrZXchPT1yLnNrZXd8fHRoaXMubWF4Rm9udFNpemUhPT1yLm1heEZvbnRTaXplKXtyZXR1cm4gZmFsc2V9Zm9yKHZhciBhIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkoYSkmJnRoaXMuc3R5bGVbYV0hPT1yLnN0eWxlW2FdKXtyZXR1cm4gZmFsc2V9fWZvcih2YXIgbiBpbiByLnN0eWxlKXtpZihyLnN0eWxlLmhhc093blByb3BlcnR5KG4pJiZ0aGlzLnN0eWxlW25dIT09ci5zdHlsZVtuXSl7cmV0dXJuIGZhbHNlfX10aGlzLnZhbHVlKz1yLnZhbHVlO3RoaXMuaGVpZ2h0PU1hdGgubWF4KHRoaXMuaGVpZ2h0LHIuaGVpZ2h0KTt0aGlzLmRlcHRoPU1hdGgubWF4KHRoaXMuZGVwdGgsci5kZXB0aCk7dGhpcy5pdGFsaWM9ci5pdGFsaWM7cmV0dXJuIHRydWV9fSx7a2V5OlwidG9Ob2RlXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRoaXMudmFsdWUpO3ZhciByPW51bGw7aWYodGhpcy5pdGFsaWM+MCl7cj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtyLnN0eWxlLm1hcmdpblJpZ2h0PXRoaXMuaXRhbGljK1wiZW1cIn1pZih0aGlzLmNsYXNzZXMubGVuZ3RoPjApe3I9cnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7ci5jbGFzc05hbWU9cCh0aGlzLmNsYXNzZXMpfWZvcih2YXIgYSBpbiB0aGlzLnN0eWxlKXtpZih0aGlzLnN0eWxlLmhhc093blByb3BlcnR5KGEpKXtyPXJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3Iuc3R5bGVbYV09dGhpcy5zdHlsZVthXX19aWYocil7ci5hcHBlbmRDaGlsZCh0KTtyZXR1cm4gcn1lbHNle3JldHVybiB0fX19LHtrZXk6XCJ0b01hcmt1cFwiLHZhbHVlOmZ1bmN0aW9uIGUoKXt2YXIgdD1mYWxzZTt2YXIgcj1cIjxzcGFuXCI7aWYodGhpcy5jbGFzc2VzLmxlbmd0aCl7dD10cnVlO3IrPScgY2xhc3M9XCInO3IrPWQuZGVmYXVsdC5lc2NhcGUocCh0aGlzLmNsYXNzZXMpKTtyKz0nXCInfXZhciBhPVwiXCI7aWYodGhpcy5pdGFsaWM+MCl7YSs9XCJtYXJnaW4tcmlnaHQ6XCIrdGhpcy5pdGFsaWMrXCJlbTtcIn1mb3IodmFyIG4gaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShuKSl7YSs9ZC5kZWZhdWx0Lmh5cGhlbmF0ZShuKStcIjpcIit0aGlzLnN0eWxlW25dK1wiO1wifX1pZihhKXt0PXRydWU7cis9JyBzdHlsZT1cIicrZC5kZWZhdWx0LmVzY2FwZShhKSsnXCInfXZhciBpPWQuZGVmYXVsdC5lc2NhcGUodGhpcy52YWx1ZSk7aWYodCl7cis9XCI+XCI7cis9aTtyKz1cIjwvc3Bhbj5cIjtyZXR1cm4gcn1lbHNle3JldHVybiBpfX19XSk7cmV0dXJuIGV9KCk7dmFyIHg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscil7KDAsbC5kZWZhdWx0KSh0aGlzLGUpO3RoaXMuY2hpbGRyZW49dHx8W107dGhpcy5hdHRyaWJ1dGVzPXJ8fFtdfSgwLHUuZGVmYXVsdCkoZSxbe2tleTpcInRvTm9kZVwiLHZhbHVlOmZ1bmN0aW9uIGUoKXt2YXIgdD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHQsXCJzdmdcIik7Zm9yKHZhciBhPTA7YTx0aGlzLmF0dHJpYnV0ZXMubGVuZ3RoO2ErKyl7dmFyIGk9KDAsbi5kZWZhdWx0KSh0aGlzLmF0dHJpYnV0ZXNbYV0sMiksbD1pWzBdLG89aVsxXTtyLnNldEF0dHJpYnV0ZShsLG8pfWZvcih2YXIgdT0wO3U8dGhpcy5jaGlsZHJlbi5sZW5ndGg7dSsrKXtyLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bdV0udG9Ob2RlKCkpfXJldHVybiByfX0se2tleTpcInRvTWFya3VwXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PVwiPHN2Z1wiO2Zvcih2YXIgcj0wO3I8dGhpcy5hdHRyaWJ1dGVzLmxlbmd0aDtyKyspe3ZhciBhPSgwLG4uZGVmYXVsdCkodGhpcy5hdHRyaWJ1dGVzW3JdLDIpLGk9YVswXSxsPWFbMV07dCs9XCIgXCIraStcIj0nXCIrbCtcIidcIn10Kz1cIj5cIjtmb3IodmFyIG89MDtvPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO28rKyl7dCs9dGhpcy5jaGlsZHJlbltvXS50b01hcmt1cCgpfXQrPVwiPC9zdmc+XCI7cmV0dXJuIHR9fV0pO3JldHVybiBlfSgpO3ZhciB3PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLnBhdGhOYW1lPXQ7dGhpcy5hbHRlcm5hdGU9cn0oMCx1LmRlZmF1bHQpKGUsW3trZXk6XCJ0b05vZGVcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0LFwicGF0aFwiKTtpZih0aGlzLnBhdGhOYW1lIT09XCJzcXJ0VGFsbFwiKXtyLnNldEF0dHJpYnV0ZShcImRcIixoLmRlZmF1bHQucGF0aFt0aGlzLnBhdGhOYW1lXSl9ZWxzZXtyLnNldEF0dHJpYnV0ZShcImRcIix0aGlzLmFsdGVybmF0ZSl9cmV0dXJuIHJ9fSx7a2V5OlwidG9NYXJrdXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7aWYodGhpcy5wYXRoTmFtZSE9PVwic3FydFRhbGxcIil7cmV0dXJuXCI8cGF0aCBkPSdcIitoLmRlZmF1bHQucGF0aFt0aGlzLnBhdGhOYW1lXStcIicvPlwifWVsc2V7cmV0dXJuXCI8cGF0aCBkPSdcIit0aGlzLmFsdGVybmF0ZStcIicvPlwifX19XSk7cmV0dXJuIGV9KCk7dmFyIGs9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLmF0dHJpYnV0ZXM9dHx8W119KDAsdS5kZWZhdWx0KShlLFt7a2V5OlwidG9Ob2RlXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlModCxcImxpbmVcIik7Zm9yKHZhciBhPTA7YTx0aGlzLmF0dHJpYnV0ZXMubGVuZ3RoO2ErKyl7dmFyIGk9KDAsbi5kZWZhdWx0KSh0aGlzLmF0dHJpYnV0ZXNbYV0sMiksbD1pWzBdLG89aVsxXTtyLnNldEF0dHJpYnV0ZShsLG8pfXJldHVybiByfX0se2tleTpcInRvTWFya3VwXCIsdmFsdWU6ZnVuY3Rpb24gZSgpe3ZhciB0PVwiPGxpbmVcIjtmb3IodmFyIHI9MDtyPHRoaXMuYXR0cmlidXRlcy5sZW5ndGg7cisrKXt2YXIgYT0oMCxuLmRlZmF1bHQpKHRoaXMuYXR0cmlidXRlc1tyXSwyKSxpPWFbMF0sbD1hWzFdO3QrPVwiIFwiK2krXCI9J1wiK2wrXCInXCJ9dCs9XCIvPlwiO3JldHVybiB0fX1dKTtyZXR1cm4gZX0oKTtyLmRlZmF1bHQ9e3NwYW46bSxkb2N1bWVudEZyYWdtZW50Omcsc3ltYm9sTm9kZTp5LHN2Z05vZGU6eCxwYXRoTm9kZTp3LGxpbmVOb2RlOmt9fSx7XCIuL3N2Z0dlb21ldHJ5XCI6MTE3LFwiLi91bmljb2RlUmVnZXhlc1wiOjExOSxcIi4vdXRpbHNcIjoxMjEsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjo4LFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI6OSxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCI6MTB9XSw5OTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcIi4vZGVmaW5lRW52aXJvbm1lbnRcIik7ZShcIi4vZW52aXJvbm1lbnRzL2FycmF5LmpzXCIpO3ZhciBuPXtoYXM6ZnVuY3Rpb24gZSh0KXtyZXR1cm4gYS5fZW52aXJvbm1lbnRzLmhhc093blByb3BlcnR5KHQpfSxnZXQ6ZnVuY3Rpb24gZSh0KXtyZXR1cm4gYS5fZW52aXJvbm1lbnRzW3RdfX07ci5kZWZhdWx0PW59LHtcIi4vZGVmaW5lRW52aXJvbm1lbnRcIjo5NSxcIi4vZW52aXJvbm1lbnRzL2FycmF5LmpzXCI6MTAwfV0sMTAwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4uL2J1aWxkQ29tbW9uXCIpO3ZhciBuPXcoYSk7dmFyIGk9ZShcIi4uL2RlZmluZUVudmlyb25tZW50XCIpO3ZhciBsPXcoaSk7dmFyIG89ZShcIi4uL21hdGhNTFRyZWVcIik7dmFyIHU9dyhvKTt2YXIgcz1lKFwiLi4vUGFyc2VFcnJvclwiKTt2YXIgZj13KHMpO3ZhciBkPWUoXCIuLi9QYXJzZU5vZGVcIik7dmFyIGM9dyhkKTt2YXIgaD1lKFwiLi4vdW5pdHNcIik7dmFyIHY9ZShcIi4uL3V0aWxzXCIpO3ZhciBwPXcodik7dmFyIG09ZShcIi4uL2J1aWxkSFRNTFwiKTt2YXIgZz14KG0pO3ZhciBiPWUoXCIuLi9idWlsZE1hdGhNTFwiKTt2YXIgeT14KGIpO2Z1bmN0aW9uIHgoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXtyZXR1cm4gZX1lbHNle3ZhciB0PXt9O2lmKGUhPW51bGwpe2Zvcih2YXIgciBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl0W3JdPWVbcl19fXQuZGVmYXVsdD1lO3JldHVybiB0fX1mdW5jdGlvbiB3KGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBrKGUsdCxyKXt2YXIgYT1bXTt2YXIgbj1bYV07dmFyIGk9W107d2hpbGUodHJ1ZSl7dmFyIGw9ZS5wYXJzZUV4cHJlc3Npb24oZmFsc2UsbnVsbCk7bD1uZXcgYy5kZWZhdWx0KFwib3JkZ3JvdXBcIixsLGUubW9kZSk7aWYocil7bD1uZXcgYy5kZWZhdWx0KFwic3R5bGluZ1wiLHtzdHlsZTpyLHZhbHVlOltsXX0sZS5tb2RlKX1hLnB1c2gobCk7dmFyIG89ZS5uZXh0VG9rZW4udGV4dDtpZihvPT09XCImXCIpe2UuY29uc3VtZSgpfWVsc2UgaWYobz09PVwiXFxcXGVuZFwiKXt2YXIgdT1uW24ubGVuZ3RoLTFdO2lmKG4ubGVuZ3RoPjEmJnUubGVuZ3RoPT09MSYmdVswXS52YWx1ZS52YWx1ZVswXS52YWx1ZS5sZW5ndGg9PT0wKXtuLnBvcCgpfWJyZWFrfWVsc2UgaWYobz09PVwiXFxcXFxcXFxcInx8bz09PVwiXFxcXGNyXCIpe3ZhciBzPWUucGFyc2VGdW5jdGlvbigpO2kucHVzaChzLnZhbHVlLnNpemUpO2E9W107bi5wdXNoKGEpfWVsc2V7dGhyb3cgbmV3IGYuZGVmYXVsdChcIkV4cGVjdGVkICYgb3IgXFxcXFxcXFwgb3IgXFxcXGVuZFwiLGUubmV4dFRva2VuKX19dC5ib2R5PW47dC5yb3dHYXBzPWk7cmV0dXJuIG5ldyBjLmRlZmF1bHQodC50eXBlLHQsZS5tb2RlKX1mdW5jdGlvbiBNKGUpe2lmKGUuc3Vic3RyKDAsMSk9PT1cImRcIil7cmV0dXJuXCJkaXNwbGF5XCJ9ZWxzZXtyZXR1cm5cInRleHRcIn19dmFyIF89ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXZvaWQgMDt2YXIgaT12b2lkIDA7dmFyIGw9dC52YWx1ZS5ib2R5Lmxlbmd0aDt2YXIgbz0wO3ZhciB1PW5ldyBBcnJheShsKTt2YXIgcz0xL3IuZm9udE1ldHJpY3MoKS5wdFBlckVtO3ZhciBkPTUqczt2YXIgYz0xMipzO3ZhciB2PTMqczt2YXIgbT1wLmRlZmF1bHQuZGVmbHQodC52YWx1ZS5hcnJheXN0cmV0Y2gsMSk7dmFyIGI9bSpjO3ZhciB5PS43KmI7dmFyIHg9LjMqYjt2YXIgdz0wO2ZvcihhPTA7YTx0LnZhbHVlLmJvZHkubGVuZ3RoOysrYSl7dmFyIGs9dC52YWx1ZS5ib2R5W2FdO3ZhciBNPXk7dmFyIF89eDtpZihvPGsubGVuZ3RoKXtvPWsubGVuZ3RofXZhciBTPW5ldyBBcnJheShrLmxlbmd0aCk7Zm9yKGk9MDtpPGsubGVuZ3RoOysraSl7XG52YXIgej1nLmJ1aWxkR3JvdXAoa1tpXSxyKTtpZihfPHouZGVwdGgpe189ei5kZXB0aH1pZihNPHouaGVpZ2h0KXtNPXouaGVpZ2h0fVNbaV09en12YXIgVD0wO2lmKHQudmFsdWUucm93R2Fwc1thXSl7VD0oMCxoLmNhbGN1bGF0ZVNpemUpKHQudmFsdWUucm93R2Fwc1thXS52YWx1ZSxyKTtpZihUPjApe1QrPXg7aWYoXzxUKXtfPVR9VD0wfX1pZih0LnZhbHVlLmFkZEpvdCl7Xys9dn1TLmhlaWdodD1NO1MuZGVwdGg9Xzt3Kz1NO1MucG9zPXc7dys9XytUO3VbYV09U312YXIgQz13LzIrci5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7dmFyIEE9dC52YWx1ZS5jb2xzfHxbXTt2YXIgTj1bXTt2YXIgTz12b2lkIDA7dmFyIGo9dm9pZCAwO2ZvcihpPTAsaj0wO2k8b3x8ajxBLmxlbmd0aDsrK2ksKytqKXt2YXIgTD1BW2pdfHx7fTt2YXIgRT10cnVlO3doaWxlKEwudHlwZT09PVwic2VwYXJhdG9yXCIpe2lmKCFFKXtPPW4uZGVmYXVsdC5tYWtlU3BhbihbXCJhcnJheWNvbHNlcFwiXSxbXSk7Ty5zdHlsZS53aWR0aD1yLmZvbnRNZXRyaWNzKCkuZG91YmxlUnVsZVNlcCtcImVtXCI7Ti5wdXNoKE8pfWlmKEwuc2VwYXJhdG9yPT09XCJ8XCIpe3ZhciBxPW4uZGVmYXVsdC5tYWtlU3BhbihbXCJ2ZXJ0aWNhbC1zZXBhcmF0b3JcIl0sW10pO3Euc3R5bGUuaGVpZ2h0PXcrXCJlbVwiO3Euc3R5bGUudmVydGljYWxBbGlnbj0tKHctQykrXCJlbVwiO04ucHVzaChxKX1lbHNle3Rocm93IG5ldyBmLmRlZmF1bHQoXCJJbnZhbGlkIHNlcGFyYXRvciB0eXBlOiBcIitMLnNlcGFyYXRvcil9aisrO0w9QVtqXXx8e307RT1mYWxzZX1pZihpPj1vKXtjb250aW51ZX12YXIgUD12b2lkIDA7aWYoaT4wfHx0LnZhbHVlLmhza2lwQmVmb3JlQW5kQWZ0ZXIpe1A9cC5kZWZhdWx0LmRlZmx0KEwucHJlZ2FwLGQpO2lmKFAhPT0wKXtPPW4uZGVmYXVsdC5tYWtlU3BhbihbXCJhcnJheWNvbHNlcFwiXSxbXSk7Ty5zdHlsZS53aWR0aD1QK1wiZW1cIjtOLnB1c2goTyl9fXZhciBCPVtdO2ZvcihhPTA7YTxsOysrYSl7dmFyIFI9dVthXTt2YXIgRD1SW2ldO2lmKCFEKXtjb250aW51ZX12YXIgRj1SLnBvcy1DO0QuZGVwdGg9Ui5kZXB0aDtELmhlaWdodD1SLmhlaWdodDtCLnB1c2goe3R5cGU6XCJlbGVtXCIsZWxlbTpELHNoaWZ0OkZ9KX1CPW4uZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImluZGl2aWR1YWxTaGlmdFwiLGNoaWxkcmVuOkJ9LHIpO0I9bi5kZWZhdWx0Lm1ha2VTcGFuKFtcImNvbC1hbGlnbi1cIisoTC5hbGlnbnx8XCJjXCIpXSxbQl0pO04ucHVzaChCKTtpZihpPG8tMXx8dC52YWx1ZS5oc2tpcEJlZm9yZUFuZEFmdGVyKXtQPXAuZGVmYXVsdC5kZWZsdChMLnBvc3RnYXAsZCk7aWYoUCE9PTApe089bi5kZWZhdWx0Lm1ha2VTcGFuKFtcImFycmF5Y29sc2VwXCJdLFtdKTtPLnN0eWxlLndpZHRoPVArXCJlbVwiO04ucHVzaChPKX19fXU9bi5kZWZhdWx0Lm1ha2VTcGFuKFtcIm10YWJsZVwiXSxOKTtyZXR1cm4gbi5kZWZhdWx0Lm1ha2VTcGFuKFtcIm1vcmRcIl0sW3VdLHIpfTt2YXIgUz1mdW5jdGlvbiBlKHQscil7cmV0dXJuIG5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdGFibGVcIix0LnZhbHVlLmJvZHkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibXRyXCIsZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdGRcIixbeS5idWlsZEdyb3VwKGUscildKX0pKX0pKX07dmFyIHo9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXt0eXBlOlwiYXJyYXlcIixjb2xzOltdLGFkZEpvdDp0cnVlfTthPWsodC5wYXJzZXIsYSxcImRpc3BsYXlcIik7dmFyIG49dm9pZCAwO3ZhciBpPTA7dmFyIGw9bmV3IGMuZGVmYXVsdChcIm9yZGdyb3VwXCIsW10sdC5tb2RlKTtpZihyWzBdJiZyWzBdLnZhbHVlKXt2YXIgbz1cIlwiO2Zvcih2YXIgdT0wO3U8clswXS52YWx1ZS5sZW5ndGg7dSsrKXtvKz1yWzBdLnZhbHVlW3VdLnZhbHVlfW49TnVtYmVyKG8pO2k9bioyfXZhciBzPSFpO2EudmFsdWUuYm9keS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8ZS5sZW5ndGg7dCs9Mil7dmFyIHI9ZVt0XS52YWx1ZS52YWx1ZVswXTtyLnZhbHVlLnVuc2hpZnQobCl9aWYoIXMpe3ZhciBhPWUubGVuZ3RoLzI7aWYobjxhKXt0aHJvdyBuZXcgZi5kZWZhdWx0KFwiVG9vIG1hbnkgbWF0aCBpbiBhIHJvdzogXCIrKFwiZXhwZWN0ZWQgXCIrbitcIiwgYnV0IGdvdCBcIithKSxlKX19ZWxzZSBpZihpPGUubGVuZ3RoKXtpPWUubGVuZ3RofX0pO2Zvcih2YXIgZD0wO2Q8aTsrK2Qpe3ZhciBoPVwiclwiO3ZhciB2PTA7aWYoZCUyPT09MSl7aD1cImxcIn1lbHNlIGlmKGQ+MCYmcyl7dj0xfWEudmFsdWUuY29sc1tkXT17dHlwZTpcImFsaWduXCIsYWxpZ246aCxwcmVnYXA6dixwb3N0Z2FwOjB9fXJldHVybiBhfTsoMCxsLmRlZmF1bHQpKHt0eXBlOlwiYXJyYXlcIixuYW1lczpbXCJhcnJheVwiLFwiZGFycmF5XCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXJbMF07YT1hLnZhbHVlLm1hcD9hLnZhbHVlOlthXTt2YXIgbj1hLm1hcChmdW5jdGlvbihlKXt2YXIgdD1lLnZhbHVlO2lmKFwibGNyXCIuaW5kZXhPZih0KSE9PS0xKXtyZXR1cm57dHlwZTpcImFsaWduXCIsYWxpZ246dH19ZWxzZSBpZih0PT09XCJ8XCIpe3JldHVybnt0eXBlOlwic2VwYXJhdG9yXCIsc2VwYXJhdG9yOlwifFwifX10aHJvdyBuZXcgZi5kZWZhdWx0KFwiVW5rbm93biBjb2x1bW4gYWxpZ25tZW50OiBcIitlLnZhbHVlLGUpfSk7dmFyIGk9e3R5cGU6XCJhcnJheVwiLGNvbHM6bixoc2tpcEJlZm9yZUFuZEFmdGVyOnRydWV9O2k9ayh0LnBhcnNlcixpLE0odC5lbnZOYW1lKSk7cmV0dXJuIGl9LGh0bWxCdWlsZGVyOl8sbWF0aG1sQnVpbGRlcjpTfSk7KDAsbC5kZWZhdWx0KSh7dHlwZTpcImFycmF5XCIsbmFtZXM6W1wibWF0cml4XCIsXCJwbWF0cml4XCIsXCJibWF0cml4XCIsXCJCbWF0cml4XCIsXCJ2bWF0cml4XCIsXCJWbWF0cml4XCJdLHByb3BzOntudW1BcmdzOjB9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0KXt2YXIgcj17bWF0cml4Om51bGwscG1hdHJpeDpbXCIoXCIsXCIpXCJdLGJtYXRyaXg6W1wiW1wiLFwiXVwiXSxCbWF0cml4OltcIlxcXFx7XCIsXCJcXFxcfVwiXSx2bWF0cml4OltcInxcIixcInxcIl0sVm1hdHJpeDpbXCJcXFxcVmVydFwiLFwiXFxcXFZlcnRcIl19W3QuZW52TmFtZV07dmFyIGE9e3R5cGU6XCJhcnJheVwiLGhza2lwQmVmb3JlQW5kQWZ0ZXI6ZmFsc2V9O2E9ayh0LnBhcnNlcixhLE0odC5lbnZOYW1lKSk7aWYocil7YT1uZXcgYy5kZWZhdWx0KFwibGVmdHJpZ2h0XCIse2JvZHk6W2FdLGxlZnQ6clswXSxyaWdodDpyWzFdfSx0Lm1vZGUpfXJldHVybiBhfSxodG1sQnVpbGRlcjpfLG1hdGhtbEJ1aWxkZXI6U30pOygwLGwuZGVmYXVsdCkoe3R5cGU6XCJhcnJheVwiLG5hbWVzOltcImNhc2VzXCIsXCJkY2FzZXNcIl0scHJvcHM6e251bUFyZ3M6MH0saGFuZGxlcjpmdW5jdGlvbiBlKHQpe3ZhciByPXt0eXBlOlwiYXJyYXlcIixhcnJheXN0cmV0Y2g6MS4yLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjF9LHt0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjB9XX07cj1rKHQucGFyc2VyLHIsTSh0LmVudk5hbWUpKTtyPW5ldyBjLmRlZmF1bHQoXCJsZWZ0cmlnaHRcIix7Ym9keTpbcl0sbGVmdDpcIlxcXFx7XCIscmlnaHQ6XCIuXCJ9LHQubW9kZSk7cmV0dXJuIHJ9LGh0bWxCdWlsZGVyOl8sbWF0aG1sQnVpbGRlcjpTfSk7KDAsbC5kZWZhdWx0KSh7dHlwZTpcImFycmF5XCIsbmFtZXM6W1wiYWxpZ25lZFwiXSxwcm9wczp7bnVtQXJnczowfSxoYW5kbGVyOnosaHRtbEJ1aWxkZXI6XyxtYXRobWxCdWlsZGVyOlN9KTsoMCxsLmRlZmF1bHQpKHt0eXBlOlwiYXJyYXlcIixuYW1lczpbXCJnYXRoZXJlZFwiXSxwcm9wczp7bnVtQXJnczowfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCl7dmFyIHI9e3R5cGU6XCJhcnJheVwiLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImNcIn1dLGFkZEpvdDp0cnVlfTtyPWsodC5wYXJzZXIscixcImRpc3BsYXlcIik7cmV0dXJuIHJ9LGh0bWxCdWlsZGVyOl8sbWF0aG1sQnVpbGRlcjpTfSk7KDAsbC5kZWZhdWx0KSh7dHlwZTpcImFycmF5XCIsbmFtZXM6W1wiYWxpZ25lZGF0XCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6eixodG1sQnVpbGRlcjpfLG1hdGhtbEJ1aWxkZXI6U30pfSx7XCIuLi9QYXJzZUVycm9yXCI6ODQsXCIuLi9QYXJzZU5vZGVcIjo4NSxcIi4uL2J1aWxkQ29tbW9uXCI6OTEsXCIuLi9idWlsZEhUTUxcIjo5MixcIi4uL2J1aWxkTWF0aE1MXCI6OTMsXCIuLi9kZWZpbmVFbnZpcm9ubWVudFwiOjk1LFwiLi4vbWF0aE1MVHJlZVwiOjExNCxcIi4uL3VuaXRzXCI6MTIwLFwiLi4vdXRpbHNcIjoxMjF9XSwxMDE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPWUoXCIuL3VuaWNvZGVSZWdleGVzXCIpO3ZhciBuPWUoXCIuL2ZvbnRNZXRyaWNzRGF0YVwiKTt2YXIgaT1sKG4pO2Z1bmN0aW9uIGwoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBvPXtzbGFudDpbLjI1LC4yNSwuMjVdLHNwYWNlOlswLDAsMF0sc3RyZXRjaDpbMCwwLDBdLHNocmluazpbMCwwLDBdLHhIZWlnaHQ6Wy40MzEsLjQzMSwuNDMxXSxxdWFkOlsxLDEuMTcxLDEuNDcyXSxleHRyYVNwYWNlOlswLDAsMF0sbnVtMTpbLjY3NywuNzMyLC45MjVdLG51bTI6Wy4zOTQsLjM4NCwuMzg3XSxudW0zOlsuNDQ0LC40NzEsLjUwNF0sZGVub20xOlsuNjg2LC43NTIsMS4wMjVdLGRlbm9tMjpbLjM0NSwuMzQ0LC41MzJdLHN1cDE6Wy40MTMsLjUwMywuNTA0XSxzdXAyOlsuMzYzLC40MzEsLjQwNF0sc3VwMzpbLjI4OSwuMjg2LC4yOTRdLHN1YjE6Wy4xNSwuMTQzLC4yXSxzdWIyOlsuMjQ3LC4yODYsLjRdLHN1cERyb3A6Wy4zODYsLjM1MywuNDk0XSxzdWJEcm9wOlsuMDUsLjA3MSwuMV0sZGVsaW0xOlsyLjM5LDEuNywxLjk4XSxkZWxpbTI6WzEuMDEsMS4xNTcsMS40Ml0sYXhpc0hlaWdodDpbLjI1LC4yNSwuMjVdLGRlZmF1bHRSdWxlVGhpY2tuZXNzOlsuMDQsLjA0OSwuMDQ5XSxiaWdPcFNwYWNpbmcxOlsuMTExLC4xMTEsLjExMV0sYmlnT3BTcGFjaW5nMjpbLjE2NiwuMTY2LC4xNjZdLGJpZ09wU3BhY2luZzM6Wy4yLC4yLC4yXSxiaWdPcFNwYWNpbmc0OlsuNiwuNjExLC42MTFdLGJpZ09wU3BhY2luZzU6Wy4xLC4xNDMsLjE0M10sc3FydFJ1bGVUaGlja25lc3M6Wy4wNCwuMDQsLjA0XSxwdFBlckVtOlsxMCwxMCwxMF0sZG91YmxlUnVsZVNlcDpbLjIsLjIsLjJdfTt2YXIgdT17XCJcXHhjMFwiOlwiQVwiLFwiXFx4YzFcIjpcIkFcIixcIlxceGMyXCI6XCJBXCIsXCJcXHhjM1wiOlwiQVwiLFwiXFx4YzRcIjpcIkFcIixcIlxceGM1XCI6XCJBXCIsXCJcXHhjNlwiOlwiQVwiLFwiXFx4YzdcIjpcIkNcIixcIlxceGM4XCI6XCJFXCIsXCJcXHhjOVwiOlwiRVwiLFwiXFx4Y2FcIjpcIkVcIixcIlxceGNiXCI6XCJFXCIsXCJcXHhjY1wiOlwiSVwiLFwiXFx4Y2RcIjpcIklcIixcIlxceGNlXCI6XCJJXCIsXCJcXHhjZlwiOlwiSVwiLFwiXFx4ZDBcIjpcIkRcIixcIlxceGQxXCI6XCJOXCIsXCJcXHhkMlwiOlwiT1wiLFwiXFx4ZDNcIjpcIk9cIixcIlxceGQ0XCI6XCJPXCIsXCJcXHhkNVwiOlwiT1wiLFwiXFx4ZDZcIjpcIk9cIixcIlxceGQ4XCI6XCJPXCIsXCJcXHhkOVwiOlwiVVwiLFwiXFx4ZGFcIjpcIlVcIixcIlxceGRiXCI6XCJVXCIsXCJcXHhkY1wiOlwiVVwiLFwiXFx4ZGRcIjpcIllcIixcIlxceGRlXCI6XCJvXCIsXCJcXHhkZlwiOlwiQlwiLFwiXFx4ZTBcIjpcImFcIixcIlxceGUxXCI6XCJhXCIsXCJcXHhlMlwiOlwiYVwiLFwiXFx4ZTNcIjpcImFcIixcIlxceGU0XCI6XCJhXCIsXCJcXHhlNVwiOlwiYVwiLFwiXFx4ZTZcIjpcImFcIixcIlxceGU3XCI6XCJjXCIsXCJcXHhlOFwiOlwiZVwiLFwiXFx4ZTlcIjpcImVcIixcIlxceGVhXCI6XCJlXCIsXCJcXHhlYlwiOlwiZVwiLFwiXFx4ZWNcIjpcImlcIixcIlxceGVkXCI6XCJpXCIsXCJcXHhlZVwiOlwiaVwiLFwiXFx4ZWZcIjpcImlcIixcIlxceGYwXCI6XCJkXCIsXCJcXHhmMVwiOlwiblwiLFwiXFx4ZjJcIjpcIm9cIixcIlxceGYzXCI6XCJvXCIsXCJcXHhmNFwiOlwib1wiLFwiXFx4ZjVcIjpcIm9cIixcIlxceGY2XCI6XCJvXCIsXCJcXHhmOFwiOlwib1wiLFwiXFx4ZjlcIjpcInVcIixcIlxceGZhXCI6XCJ1XCIsXCJcXHhmYlwiOlwidVwiLFwiXFx4ZmNcIjpcInVcIixcIlxceGZkXCI6XCJ5XCIsXCJcXHhmZVwiOlwib1wiLFwiXFx4ZmZcIjpcInlcIixcIlxcdTA0MTBcIjpcIkFcIixcIlxcdTA0MTFcIjpcIkJcIixcIlxcdTA0MTJcIjpcIkJcIixcIlxcdTA0MTNcIjpcIkZcIixcIlxcdTA0MTRcIjpcIkFcIixcIlxcdTA0MTVcIjpcIkVcIixcIlxcdTA0MTZcIjpcIktcIixcIlxcdTA0MTdcIjpcIjNcIixcIlxcdTA0MThcIjpcIk5cIixcIlxcdTA0MTlcIjpcIk5cIixcIlxcdTA0MWFcIjpcIktcIixcIlxcdTA0MWJcIjpcIk5cIixcIlxcdTA0MWNcIjpcIk1cIixcIlxcdTA0MWRcIjpcIkhcIixcIlxcdTA0MWVcIjpcIk9cIixcIlxcdTA0MWZcIjpcIk5cIixcIlxcdTA0MjBcIjpcIlBcIixcIlxcdTA0MjFcIjpcIkNcIixcIlxcdTA0MjJcIjpcIlRcIixcIlxcdTA0MjNcIjpcInlcIixcIlxcdTA0MjRcIjpcIk9cIixcIlxcdTA0MjVcIjpcIlhcIixcIlxcdTA0MjZcIjpcIlVcIixcIlxcdTA0MjdcIjpcImhcIixcIlxcdTA0MjhcIjpcIldcIixcIlxcdTA0MjlcIjpcIldcIixcIlxcdTA0MmFcIjpcIkJcIixcIlxcdTA0MmJcIjpcIlhcIixcIlxcdTA0MmNcIjpcIkJcIixcIlxcdTA0MmRcIjpcIjNcIixcIlxcdTA0MmVcIjpcIlhcIixcIlxcdTA0MmZcIjpcIlJcIixcIlxcdTA0MzBcIjpcImFcIixcIlxcdTA0MzFcIjpcImJcIixcIlxcdTA0MzJcIjpcImFcIixcIlxcdTA0MzNcIjpcInJcIixcIlxcdTA0MzRcIjpcInlcIixcIlxcdTA0MzVcIjpcImVcIixcIlxcdTA0MzZcIjpcIm1cIixcIlxcdTA0MzdcIjpcImVcIixcIlxcdTA0MzhcIjpcIm5cIixcIlxcdTA0MzlcIjpcIm5cIixcIlxcdTA0M2FcIjpcIm5cIixcIlxcdTA0M2JcIjpcIm5cIixcIlxcdTA0M2NcIjpcIm1cIixcIlxcdTA0M2RcIjpcIm5cIixcIlxcdTA0M2VcIjpcIm9cIixcIlxcdTA0M2ZcIjpcIm5cIixcIlxcdTA0NDBcIjpcInBcIixcIlxcdTA0NDFcIjpcImNcIixcIlxcdTA0NDJcIjpcIm9cIixcIlxcdTA0NDNcIjpcInlcIixcIlxcdTA0NDRcIjpcImJcIixcIlxcdTA0NDVcIjpcInhcIixcIlxcdTA0NDZcIjpcIm5cIixcIlxcdTA0NDdcIjpcIm5cIixcIlxcdTA0NDhcIjpcIndcIixcIlxcdTA0NDlcIjpcIndcIixcIlxcdTA0NGFcIjpcImFcIixcIlxcdTA0NGJcIjpcIm1cIixcIlxcdTA0NGNcIjpcImFcIixcIlxcdTA0NGRcIjpcImVcIixcIlxcdTA0NGVcIjpcIm1cIixcIlxcdTA0NGZcIjpcInJcIn07dmFyIHM9ZnVuY3Rpb24gZSh0LHIpe3ZhciBuPXQuY2hhckNvZGVBdCgwKTtpZih0WzBdaW4gdSl7bj11W3RbMF1dLmNoYXJDb2RlQXQoMCl9ZWxzZSBpZihhLmNqa1JlZ2V4LnRlc3QodFswXSkpe249XCJNXCIuY2hhckNvZGVBdCgwKX12YXIgbD1pLmRlZmF1bHRbcl1bXCJcIituXTtpZihsKXtyZXR1cm57ZGVwdGg6bFswXSxoZWlnaHQ6bFsxXSxpdGFsaWM6bFsyXSxza2V3OmxbM10sd2lkdGg6bFs0XX19fTt2YXIgZj17fTt2YXIgZD1mdW5jdGlvbiBlKHQpe3ZhciByPXZvaWQgMDtpZih0Pj01KXtyPTB9ZWxzZSBpZih0Pj0zKXtyPTF9ZWxzZXtyPTJ9aWYoIWZbcl0pe3ZhciBhPWZbcl09e2Nzc0VtUGVyTXU6by5xdWFkW3JdLzE4fTtmb3IodmFyIG4gaW4gbyl7aWYoby5oYXNPd25Qcm9wZXJ0eShuKSl7YVtuXT1vW25dW3JdfX19cmV0dXJuIGZbcl19O3IuZGVmYXVsdD17Z2V0Rm9udE1ldHJpY3M6ZCxnZXRDaGFyYWN0ZXJNZXRyaWNzOnN9fSx7XCIuL2ZvbnRNZXRyaWNzRGF0YVwiOjEwMixcIi4vdW5pY29kZVJlZ2V4ZXNcIjoxMTl9XSwxMDI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPXtcIkFNUy1SZWd1bGFyXCI6ezY1OlswLC42ODg4OSwwLDBdLDY2OlswLC42ODg4OSwwLDBdLDY3OlswLC42ODg4OSwwLDBdLDY4OlswLC42ODg4OSwwLDBdLDY5OlswLC42ODg4OSwwLDBdLDcwOlswLC42ODg4OSwwLDBdLDcxOlswLC42ODg4OSwwLDBdLDcyOlswLC42ODg4OSwwLDBdLDczOlswLC42ODg4OSwwLDBdLDc0OlsuMTY2NjcsLjY4ODg5LDAsMF0sNzU6WzAsLjY4ODg5LDAsMF0sNzY6WzAsLjY4ODg5LDAsMF0sNzc6WzAsLjY4ODg5LDAsMF0sNzg6WzAsLjY4ODg5LDAsMF0sNzk6Wy4xNjY2NywuNjg4ODksMCwwXSw4MDpbMCwuNjg4ODksMCwwXSw4MTpbLjE2NjY3LC42ODg4OSwwLDBdLDgyOlswLC42ODg4OSwwLDBdLDgzOlswLC42ODg4OSwwLDBdLDg0OlswLC42ODg4OSwwLDBdLDg1OlswLC42ODg4OSwwLDBdLDg2OlswLC42ODg4OSwwLDBdLDg3OlswLC42ODg4OSwwLDBdLDg4OlswLC42ODg4OSwwLDBdLDg5OlswLC42ODg4OSwwLDBdLDkwOlswLC42ODg4OSwwLDBdLDEwNzpbMCwuNjg4ODksMCwwXSwxNjU6WzAsLjY3NSwuMDI1LDBdLDE3NDpbLjE1NTU5LC42OTIyNCwwLDBdLDI0MDpbMCwuNjg4ODksMCwwXSwyOTU6WzAsLjY4ODg5LDAsMF0sNzEwOlswLC44MjUsMCwwXSw3MzI6WzAsLjksMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuOSwwLDBdLDk4OTpbLjA4MTY3LC41ODE2NywwLDBdLDEwMDg6WzAsLjQzMDU2LC4wNDAyOCwwXSw4MjQ1OlswLC41NDk4NiwwLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF0sODQ4NzpbMCwuNjg4ODksMCwwXSw4NDk4OlswLC42ODg4OSwwLDBdLDg1MDI6WzAsLjY4ODg5LDAsMF0sODUwMzpbMCwuNjg4ODksMCwwXSw4NTA0OlswLC42ODg4OSwwLDBdLDg1MTM6WzAsLjY4ODg5LDAsMF0sODU5MjpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NTk0OlstLjAzNTk4LC40NjQwMiwwLDBdLDg2MDI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYwMzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjA2OlsuMDEzNTQsLjUyMjM5LDAsMF0sODYwODpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MTA6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjExOlsuMDEzNTQsLjUyMjM5LDAsMF0sODYxOTpbMCwuNTQ5ODYsMCwwXSw4NjIwOlswLC41NDk4NiwwLDBdLDg2MjE6Wy0uMTMzMTMsLjM3Nzg4LDAsMF0sODYyMjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjI0OlswLC42OTIyNCwwLDBdLDg2MjU6WzAsLjY5MjI0LDAsMF0sODYzMDpbMCwuNDMwNTYsMCwwXSw4NjMxOlswLC40MzA1NiwwLDBdLDg2MzQ6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NjM1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODYzODpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2Mzk6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0MzpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NDQ6Wy4xODA4LC42NzUsMCwwXSw4NjQ2OlsuMTgwOCwuNjc1LDAsMF0sODY0NzpbLjE4MDgsLjY3NSwwLDBdLDg2NDg6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQ5OlsuMTgwOCwuNjc1LDAsMF0sODY1MDpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NTE6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjUyOlsuMDEzNTQsLjUyMjM5LDAsMF0sODY1MzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTU6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY2NjpbLjEzNjY3LC42MzY2NywwLDBdLDg2Njc6Wy4xMzY2NywuNjM2NjcsMCwwXSw4NjY5OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg2NzI6Wy0uMDY0LC40MzcsMCwwXSw4Njc0OlstLjA2NCwuNDM3LDAsMF0sODcwNTpbMCwuODI1LDAsMF0sODcwODpbMCwuNjg4ODksMCwwXSw4NzA5OlsuMDgxNjcsLjU4MTY3LDAsMF0sODcxNzpbMCwuNDMwNTYsMCwwXSw4NzIyOlstLjAzNTk4LC40NjQwMiwwLDBdLDg3MjQ6Wy4wODE5OCwuNjkyMjQsMCwwXSw4NzI2OlsuMDgxNjcsLjU4MTY3LDAsMF0sODczMzpbMCwuNjkyMjQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzc6WzAsLjY5MjI0LDAsMF0sODczODpbLjAzNTE3LC41MjIzOSwwLDBdLDg3Mzk6Wy4wODE2NywuNTgxNjcsMCwwXSw4NzQwOlsuMjUxNDIsLjc0MTExLDAsMF0sODc0MTpbLjA4MTY3LC41ODE2NywwLDBdLDg3NDI6Wy4yNTE0MiwuNzQxMTEsMCwwXSw4NzU2OlswLC42OTIyNCwwLDBdLDg3NTc6WzAsLjY5MjI0LDAsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY1OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg3Njk6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc3MDpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4Nzc0OlsuMzAyNzQsLjc5MzgzLDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4Nzc4OlsuMDgxNjcsLjU4MTY3LDAsMF0sODc4MjpbLjA2MDYyLC41NDk4NiwwLDBdLDg3ODM6Wy4wNjA2MiwuNTQ5ODYsMCwwXSw4Nzg1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODc4NjpbLjA4MTk4LC41ODE5OCwwLDBdLDg3ODc6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NzkwOlswLC42OTIyNCwwLDBdLDg3OTE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4Nzk2OlsuMDgxOTgsLjkxNjY3LDAsMF0sODgwNjpbLjI1NTgzLC43NTU4MywwLDBdLDg4MDc6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODA4OlsuMjUxNDIsLjc1NzI2LDAsMF0sODgwOTpbLjI1MTQyLC43NTcyNiwwLDBdLDg4MTI6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODE0OlsuMjA1NzYsLjcwNTc2LDAsMF0sODgxNTpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MTY6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODE3OlsuMzAyNzQsLjc5MzgzLDAsMF0sODgxODpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MTk6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODIyOlsuMTgwOCwuNjc1LDAsMF0sODgyMzpbLjE4MDgsLjY3NSwwLDBdLDg4Mjg6Wy4xMzY2NywuNjM2NjcsMCwwXSw4ODI5OlsuMTM2NjcsLjYzNjY3LDAsMF0sODgzMDpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MzE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODMyOlsuMjA1NzYsLjcwNTc2LDAsMF0sODgzMzpbLjIwNTc2LC43MDU3NiwwLDBdLDg4NDA6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODQxOlsuMzAyNzQsLjc5MzgzLDAsMF0sODg0MjpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDM6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQ3OlsuMDM1MTcsLjU0OTg2LDAsMF0sODg0ODpbLjAzNTE3LC41NDk4NiwwLDBdLDg4NTg6Wy4wODE5OCwuNTgxOTgsMCwwXSw4ODU5OlsuMDgxOTgsLjU4MTk4LDAsMF0sODg2MTpbLjA4MTk4LC41ODE5OCwwLDBdLDg4NjI6WzAsLjY3NSwwLDBdLDg4NjM6WzAsLjY3NSwwLDBdLDg4NjQ6WzAsLjY3NSwwLDBdLDg4NjU6WzAsLjY3NSwwLDBdLDg4NzI6WzAsLjY5MjI0LDAsMF0sODg3MzpbMCwuNjkyMjQsMCwwXSw4ODc0OlswLC42OTIyNCwwLDBdLDg4NzY6WzAsLjY4ODg5LDAsMF0sODg3NzpbMCwuNjg4ODksMCwwXSw4ODc4OlswLC42ODg4OSwwLDBdLDg4Nzk6WzAsLjY4ODg5LDAsMF0sODg4MjpbLjAzNTE3LC41NDk4NiwwLDBdLDg4ODM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODg0OlsuMTM2NjcsLjYzNjY3LDAsMF0sODg4NTpbLjEzNjY3LC42MzY2NywwLDBdLDg4ODg6WzAsLjU0OTg2LDAsMF0sODg5MDpbLjE5NDQ0LC40MzA1NiwwLDBdLDg4OTE6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4ODkyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODkwMTpbMCwuNTQ5ODYsMCwwXSw4OTAzOlsuMDgxNjcsLjU4MTY3LDAsMF0sODkwNTpbLjA4MTY3LC41ODE2NywwLDBdLDg5MDY6Wy4wODE2NywuNTgxNjcsMCwwXSw4OTA3OlswLC42OTIyNCwwLDBdLDg5MDg6WzAsLjY5MjI0LDAsMF0sODkwOTpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4OTEwOlswLC41NDk4NiwwLDBdLDg5MTE6WzAsLjU0OTg2LDAsMF0sODkxMjpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MTM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTE0OlswLC41NDk4NiwwLDBdLDg5MTU6WzAsLjU0OTg2LDAsMF0sODkxNjpbMCwuNjkyMjQsMCwwXSw4OTE4OlsuMDM5MSwuNTM5MSwwLDBdLDg5MTk6Wy4wMzkxLC41MzkxLDAsMF0sODkyMDpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MjE6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTIyOlsuMzg1NjksLjg4NTY5LDAsMF0sODkyMzpbLjM4NTY5LC44ODU2OSwwLDBdLDg5MjY6Wy4xMzY2NywuNjM2NjcsMCwwXSw4OTI3OlsuMTM2NjcsLjYzNjY3LDAsMF0sODkyODpbLjMwMjc0LC43OTM4MywwLDBdLDg5Mjk6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTM0OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzNTpbLjIzMjIyLC43NDExMSwwLDBdLDg5MzY6Wy4yMzIyMiwuNzQxMTEsMCwwXSw4OTM3OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzODpbLjIwNTc2LC43MDU3NiwwLDBdLDg5Mzk6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4OTQwOlsuMzAyNzQsLjc5MzgzLDAsMF0sODk0MTpbLjMwMjc0LC43OTM4MywwLDBdLDg5OTQ6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4OTk1OlsuMTk0NDQsLjY5MjI0LDAsMF0sOTQxNjpbLjE1NTU5LC42OTIyNCwwLDBdLDk0ODQ6WzAsLjY5MjI0LDAsMF0sOTQ4ODpbMCwuNjkyMjQsMCwwXSw5NDkyOlswLC4zNzc4OCwwLDBdLDk0OTY6WzAsLjM3Nzg4LDAsMF0sOTU4NTpbLjE5NDQ0LC42ODg4OSwwLDBdLDk1ODY6Wy4xOTQ0NCwuNzQxMTEsMCwwXSw5NjMyOlswLC42NzUsMCwwXSw5NjMzOlswLC42NzUsMCwwXSw5NjUwOlswLC41NDk4NiwwLDBdLDk2NTE6WzAsLjU0OTg2LDAsMF0sOTY1NDpbLjAzNTE3LC41NDk4NiwwLDBdLDk2NjA6WzAsLjU0OTg2LDAsMF0sOTY2MTpbMCwuNTQ5ODYsMCwwXSw5NjY0OlsuMDM1MTcsLjU0OTg2LDAsMF0sOTY3NDpbLjExMTExLC42OTIyNCwwLDBdLDk3MzM6Wy4xOTQ0NCwuNjkyMjQsMCwwXSwxMDAwMzpbMCwuNjkyMjQsMCwwXSwxMDAxNjpbMCwuNjkyMjQsMCwwXSwxMDczMTpbLjExMTExLC42OTIyNCwwLDBdLDEwODQ2OlsuMTk0NDQsLjc1NTgzLDAsMF0sMTA4Nzc6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDg3ODpbLjEzNjY3LC42MzY2NywwLDBdLDEwODg1OlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA4ODY6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDg4NzpbLjEzNTk3LC42MzU5NywwLDBdLDEwODg4OlsuMTM1OTcsLjYzNTk3LDAsMF0sMTA4ODk6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDg5MDpbLjI2MTY3LC43NTcyNiwwLDBdLDEwODkxOlsuNDgyNTYsLjk4MjU2LDAsMF0sMTA4OTI6Wy40ODI1NiwuOTgyNTYsMCwwXSwxMDkwMTpbLjEzNjY3LC42MzY2NywwLDBdLDEwOTAyOlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA5MzM6Wy4yNTE0MiwuNzU3MjYsMCwwXSwxMDkzNDpbLjI1MTQyLC43NTcyNiwwLDBdLDEwOTM1OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5MzY6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDkzNzpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTM4OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5NDk6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDk1MDpbLjI1NTgzLC43NTU4MywwLDBdLDEwOTU1OlsuMjg0ODEsLjc5MzgzLDAsMF0sMTA5NTY6Wy4yODQ4MSwuNzkzODMsMCwwXSw1NzM1MDpbLjA4MTY3LC41ODE2NywwLDBdLDU3MzUxOlsuMDgxNjcsLjU4MTY3LDAsMF0sNTczNTI6Wy4wODE2NywuNTgxNjcsMCwwXSw1NzM1MzpbMCwuNDMwNTYsLjA0MDI4LDBdLDU3MzU2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNTc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM1ODpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzU5OlsuMzAyNzQsLjc5MzgzLDAsMF0sNTczNjA6Wy4zMDI3NCwuNzkzODMsMCwwXSw1NzM2MTpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzY2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNjc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM2ODpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzY5OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNzA6Wy4xMzU5NywuNjM1OTcsMCwwXSw1NzM3MTpbLjEzNTk3LC42MzU5NywwLDBdfSxcIkNhbGlncmFwaGljLVJlZ3VsYXJcIjp7NDg6WzAsLjQzMDU2LDAsMF0sNDk6WzAsLjQzMDU2LDAsMF0sNTA6WzAsLjQzMDU2LDAsMF0sNTE6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1MjpbLjE5NDQ0LC40MzA1NiwwLDBdLDUzOlsuMTk0NDQsLjQzMDU2LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1NjpbMCwuNjQ0NDQsMCwwXSw1NzpbLjE5NDQ0LC40MzA1NiwwLDBdLDY1OlswLC42ODMzMywwLC4xOTQ0NV0sNjY6WzAsLjY4MzMzLC4wMzA0MSwuMTM4ODldLDY3OlswLC42ODMzMywuMDU4MzQsLjEzODg5XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sNjk6WzAsLjY4MzMzLC4wODk0NCwuMTExMTFdLDcwOlswLC42ODMzMywuMDk5MzEsLjExMTExXSw3MTpbLjA5NzIyLC42ODMzMywuMDU5MywuMTExMTFdLDcyOlswLC42ODMzMywuMDA5NjUsLjExMTExXSw3MzpbMCwuNjgzMzMsLjA3MzgyLDBdLDc0OlsuMDk3MjIsLjY4MzMzLC4xODQ3MiwuMTY2NjddLDc1OlswLC42ODMzMywuMDE0NDUsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMTM4ODldLDc3OlswLC42ODMzMywwLC4xMzg4OV0sNzg6WzAsLjY4MzMzLC4xNDczNiwuMDgzMzRdLDc5OlswLC42ODMzMywuMDI3NzgsLjExMTExXSw4MDpbMCwuNjgzMzMsLjA4MjIyLC4wODMzNF0sODE6Wy4wOTcyMiwuNjgzMzMsMCwuMTExMTFdLDgyOlswLC42ODMzMywwLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNzUsLjEzODg5XSw4NDpbMCwuNjgzMzMsLjI1NDE3LDBdLDg1OlswLC42ODMzMywuMDk5MzEsLjA4MzM0XSw4NjpbMCwuNjgzMzMsLjA4MjIyLDBdLDg3OlswLC42ODMzMywuMDgyMjIsLjA4MzM0XSw4ODpbMCwuNjgzMzMsLjE0NjQzLC4xMzg4OV0sODk6Wy4wOTcyMiwuNjgzMzMsLjA4MjIyLC4wODMzNF0sOTA6WzAsLjY4MzMzLC4wNzk0NCwuMTM4ODldfSxcIkZyYWt0dXItUmVndWxhclwiOnszMzpbMCwuNjkxNDEsMCwwXSwzNDpbMCwuNjkxNDEsMCwwXSwzODpbMCwuNjkxNDEsMCwwXSwzOTpbMCwuNjkxNDEsMCwwXSw0MDpbLjI0OTgyLC43NDk0NywwLDBdLDQxOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDI6WzAsLjYyMTE5LDAsMF0sNDM6Wy4wODMxOSwuNTgyODMsMCwwXSw0NDpbMCwuMTA4MDMsMCwwXSw0NTpbLjA4MzE5LC41ODI4MywwLDBdLDQ2OlswLC4xMDgwMywwLDBdLDQ3OlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDg6WzAsLjQ3NTM0LDAsMF0sNDk6WzAsLjQ3NTM0LDAsMF0sNTA6WzAsLjQ3NTM0LDAsMF0sNTE6Wy4xODkwNiwuNDc1MzQsMCwwXSw1MjpbLjE4OTA2LC40NzUzNCwwLDBdLDUzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTQ6WzAsLjY5MTQxLDAsMF0sNTU6Wy4xODkwNiwuNDc1MzQsMCwwXSw1NjpbMCwuNjkxNDEsMCwwXSw1NzpbLjE4OTA2LC40NzUzNCwwLDBdLDU4OlswLC40NzUzNCwwLDBdLDU5OlsuMTI2MDQsLjQ3NTM0LDAsMF0sNjE6Wy0uMTMwOTksLjM2ODY2LDAsMF0sNjM6WzAsLjY5MTQxLDAsMF0sNjU6WzAsLjY5MTQxLDAsMF0sNjY6WzAsLjY5MTQxLDAsMF0sNjc6WzAsLjY5MTQxLDAsMF0sNjg6WzAsLjY5MTQxLDAsMF0sNjk6WzAsLjY5MTQxLDAsMF0sNzA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw3MTpbMCwuNjkxNDEsMCwwXSw3MjpbLjA2MzAyLC42OTE0MSwwLDBdLDczOlswLC42OTE0MSwwLDBdLDc0OlsuMTI2MDQsLjY5MTQxLDAsMF0sNzU6WzAsLjY5MTQxLDAsMF0sNzY6WzAsLjY5MTQxLDAsMF0sNzc6WzAsLjY5MTQxLDAsMF0sNzg6WzAsLjY5MTQxLDAsMF0sNzk6WzAsLjY5MTQxLDAsMF0sODA6Wy4xODkwNiwuNjkxNDEsMCwwXSw4MTpbLjAzNzgxLC42OTE0MSwwLDBdLDgyOlswLC42OTE0MSwwLDBdLDgzOlswLC42OTE0MSwwLDBdLDg0OlswLC42OTE0MSwwLDBdLDg1OlswLC42OTE0MSwwLDBdLDg2OlswLC42OTE0MSwwLDBdLDg3OlswLC42OTE0MSwwLDBdLDg4OlswLC42OTE0MSwwLDBdLDg5OlsuMTg5MDYsLjY5MTQxLDAsMF0sOTA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw5MTpbLjI0OTgyLC43NDk0NywwLDBdLDkzOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sOTQ6WzAsLjY5MTQxLDAsMF0sOTc6WzAsLjQ3NTM0LDAsMF0sOTg6WzAsLjY5MTQxLDAsMF0sOTk6WzAsLjQ3NTM0LDAsMF0sMTAwOlswLC42MjExOSwwLDBdLDEwMTpbMCwuNDc1MzQsMCwwXSwxMDI6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDM6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMDQ6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDU6WzAsLjY5MTQxLDAsMF0sMTA2OlswLC42OTE0MSwwLDBdLDEwNzpbMCwuNjkxNDEsMCwwXSwxMDg6WzAsLjY5MTQxLDAsMF0sMTA5OlswLC40NzUzNCwwLDBdLDExMDpbMCwuNDc1MzQsMCwwXSwxMTE6WzAsLjQ3NTM0LDAsMF0sMTEyOlsuMTg5MDYsLjUyMzk2LDAsMF0sMTEzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTE0OlswLC40NzUzNCwwLDBdLDExNTpbMCwuNDc1MzQsMCwwXSwxMTY6WzAsLjYyMTE5LDAsMF0sMTE3OlswLC40NzUzNCwwLDBdLDExODpbMCwuNTIzOTYsMCwwXSwxMTk6WzAsLjUyMzk2LDAsMF0sMTIwOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIxOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIyOlsuMTg5MDYsLjQ3NTM0LDAsMF0sODIxNjpbMCwuNjkxNDEsMCwwXSw4MjE3OlswLC42OTE0MSwwLDBdLDU4MTEyOlswLC42MjExOSwwLDBdLDU4MTEzOlswLC42MjExOSwwLDBdLDU4MTE0OlsuMTg5MDYsLjY5MTQxLDAsMF0sNTgxMTU6Wy4xODkwNiwuNjkxNDEsMCwwXSw1ODExNjpbLjE4OTA2LC40NzUzNCwwLDBdLDU4MTE3OlswLC42OTE0MSwwLDBdLDU4MTE4OlswLC42MjExOSwwLDBdLDU4MTE5OlswLC40NzUzNCwwLDBdfSxcIk1haW4tQm9sZFwiOnszMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4xMzMzMywuNjMzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xNTU1NiwwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4xNTU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw2MDpbLjA4NTU2LC41ODU1NiwwLDBdLDYxOlstLjEwODg5LC4zOTExMSwwLDBdLDYyOlsuMDg1NTYsLjU4NTU2LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4NjExLDAsMF0sNjY6WzAsLjY4NjExLDAsMF0sNjc6WzAsLjY4NjExLDAsMF0sNjg6WzAsLjY4NjExLDAsMF0sNjk6WzAsLjY4NjExLDAsMF0sNzA6WzAsLjY4NjExLDAsMF0sNzE6WzAsLjY4NjExLDAsMF0sNzI6WzAsLjY4NjExLDAsMF0sNzM6WzAsLjY4NjExLDAsMF0sNzQ6WzAsLjY4NjExLDAsMF0sNzU6WzAsLjY4NjExLDAsMF0sNzY6WzAsLjY4NjExLDAsMF0sNzc6WzAsLjY4NjExLDAsMF0sNzg6WzAsLjY4NjExLDAsMF0sNzk6WzAsLjY4NjExLDAsMF0sODA6WzAsLjY4NjExLDAsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsMCwwXSw4MzpbMCwuNjg2MTEsMCwwXSw4NDpbMCwuNjg2MTEsMCwwXSw4NTpbMCwuNjg2MTEsMCwwXSw4NjpbMCwuNjg2MTEsLjAxNTk3LDBdLDg3OlswLC42ODYxMSwuMDE1OTcsMF0sODg6WzAsLjY4NjExLDAsMF0sODk6WzAsLjY4NjExLC4wMjg3NSwwXSw5MDpbMCwuNjg2MTEsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMzQ0NCwuMDMxOTQsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4xMDkwMywwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxNTk3LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY5NDQ0LDAsMF0sMTA2OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LDAsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDE1OTcsMF0sMTE5OlswLC40NDQ0NCwuMDE1OTcsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDE1OTcsMF0sMTIyOlswLC40NDQ0NCwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zNDQ0NCwwLDBdLDE2ODpbMCwuNjk0NDQsMCwwXSwxNzI6WzAsLjQ0NDQ0LDAsMF0sMTc1OlswLC41OTYxMSwwLDBdLDE3NjpbMCwuNjk0NDQsMCwwXSwxNzc6Wy4xMzMzMywuNjMzMzMsMCwwXSwxODA6WzAsLjY5NDQ0LDAsMF0sMjE1OlsuMTMzMzMsLjYzMzMzLDAsMF0sMjQ3OlsuMTMzMzMsLjYzMzMzLDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDcxMDpbMCwuNjk0NDQsMCwwXSw3MTE6WzAsLjYzMTk0LDAsMF0sNzEzOlswLC41OTYxMSwwLDBdLDcxNDpbMCwuNjk0NDQsMCwwXSw3MTU6WzAsLjY5NDQ0LDAsMF0sNzI4OlswLC42OTQ0NCwwLDBdLDcyOTpbMCwuNjk0NDQsMCwwXSw3MzA6WzAsLjY5NDQ0LDAsMF0sNzMyOlswLC42OTQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjk0NDQsMCwwXSw3NzI6WzAsLjU5NjExLDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjk0NDQsMCwwXSw3NzY6WzAsLjY5NDQ0LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sODI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTE1OlswLC42ODYxMSwwLDBdLDkxNjpbMCwuNjg2MTEsMCwwXSw5MjA6WzAsLjY4NjExLDAsMF0sOTIzOlswLC42ODYxMSwwLDBdLDkyNjpbMCwuNjg2MTEsMCwwXSw5Mjg6WzAsLjY4NjExLDAsMF0sOTMxOlswLC42ODYxMSwwLDBdLDkzMzpbMCwuNjg2MTEsMCwwXSw5MzQ6WzAsLjY4NjExLDAsMF0sOTM2OlswLC42ODYxMSwwLDBdLDkzNzpbMCwuNjg2MTEsMCwwXSw4MjExOlswLC40NDQ0NCwuMDMxOTQsMF0sODIxMjpbMCwuNDQ0NDQsLjAzMTk0LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF0sODIyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMjU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjQyOlswLC41NTU1NiwwLDBdLDg0MDc6WzAsLjcyNDQ0LC4xNTQ4NiwwXSw4NDYzOlswLC42OTQ0NCwwLDBdLDg0NjU6WzAsLjY5NDQ0LDAsMF0sODQ2NzpbMCwuNjk0NDQsMCwwXSw4NDcyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sODQ3NjpbMCwuNjk0NDQsMCwwXSw4NTAxOlswLC42OTQ0NCwwLDBdLDg1OTI6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5MzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTQ6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NzpbLjI1LC43NSwwLDBdLDg1OTg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjM2OlstLjEwODg5LC4zOTExMSwwLDBdLDg2Mzc6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY0MDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjQxOlstLjEwODg5LC4zOTExMSwwLDBdLDg2NTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NTg6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NjA6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY2MTpbLjI1LC43NSwwLDBdLDg3MDQ6WzAsLjY5NDQ0LDAsMF0sODcwNjpbMCwuNjk0NDQsLjA2Mzg5LDBdLDg3MDc6WzAsLjY5NDQ0LDAsMF0sODcwOTpbLjA1NTU2LC43NSwwLDBdLDg3MTE6WzAsLjY4NjExLDAsMF0sODcxMjpbLjA4NTU2LC41ODU1NiwwLDBdLDg3MTU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4NzIyOlsuMTMzMzMsLjYzMzMzLDAsMF0sODcyMzpbLjEzMzMzLC42MzMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMjc3OCwuNDcyMjIsMCwwXSw4NzI4OlstLjAyNjM5LC40NzM2MSwwLDBdLDg3Mjk6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODczMDpbLjE4LC44MiwwLDBdLDg3MzM6WzAsLjQ0NDQ0LDAsMF0sODczNDpbMCwuNDQ0NDQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzk6Wy4yNSwuNzUsMCwwXSw4NzQxOlsuMjUsLjc1LDAsMF0sODc0MzpbMCwuNTU1NTYsMCwwXSw4NzQ0OlswLC41NTU1NiwwLDBdLDg3NDU6WzAsLjU1NTU2LDAsMF0sODc0NjpbMCwuNTU1NTYsMCwwXSw4NzQ3OlsuMTk0NDQsLjY5NDQ0LC4xMjc3OCwwXSw4NzY0OlstLjEwODg5LC4zOTExMSwwLDBdLDg3Njg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NzcxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODc3NjpbLjAyNDQ0LC41MjQ0NCwwLDBdLDg3ODE6Wy4wMDIyMiwuNTAyMjIsMCwwXSw4ODAxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODgwNDpbLjE5NjY3LC42OTY2NywwLDBdLDg4MDU6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODEwOlsuMDg1NTYsLjU4NTU2LDAsMF0sODgxMTpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MjY6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODI3OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgzNDpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MzU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODM4OlsuMTk2NjcsLjY5NjY3LDAsMF0sODgzOTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NTA6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTQ6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU1OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NjpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTc6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg5MDA6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODkwMTpbLS4wMjYzOSwuNDczNjEsMCwwXSw4OTAyOlstLjAyNzc4LC40NzIyMiwwLDBdLDg5Njg6Wy4yNSwuNzUsMCwwXSw4OTY5OlsuMjUsLjc1LDAsMF0sODk3MDpbLjI1LC43NSwwLDBdLDg5NzE6Wy4yNSwuNzUsMCwwXSw4OTk0OlstLjEzODg5LC4zNjExMSwwLDBdLDg5OTU6Wy0uMTM4ODksLjM2MTExLDAsMF0sOTY1MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2NTc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTY2MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2Njc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTcxMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4MjQ6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI1OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNjpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mjc6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODM3OlswLC43NSwwLDBdLDk4Mzg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODM5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTAyMTY6Wy4yNSwuNzUsMCwwXSwxMDIxNzpbLjI1LC43NSwwLDBdLDEwODE1OlswLC42ODYxMSwwLDBdLDEwOTI3OlsuMTk2NjcsLjY5NjY3LDAsMF0sMTA5Mjg6Wy4xOTY2NywuNjk2NjcsMCwwXX0sXCJNYWluLUl0YWxpY1wiOnszMzpbMCwuNjk0NDQsLjEyNDE3LDBdLDM0OlswLC42OTQ0NCwuMDY5NjEsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsLjA2NjE2LDBdLDM3OlsuMDU1NTYsLjc1LC4xMzYzOSwwXSwzODpbMCwuNjk0NDQsLjA5Njk0LDBdLDM5OlswLC42OTQ0NCwuMTI0MTcsMF0sNDA6Wy4yNSwuNzUsLjE2MTk0LDBdLDQxOlsuMjUsLjc1LC4wMzY5NCwwXSw0MjpbMCwuNzUsLjE0OTE3LDBdLDQzOlsuMDU2NjcsLjU2MTY3LC4wMzY5NCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwuMDI4MjYsMF0sNDY6WzAsLjEwNTU2LDAsMF0sNDc6Wy4yNSwuNzUsLjE2MTk0LDBdLDQ4OlswLC42NDQ0NCwuMTM1NTYsMF0sNDk6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1MDpbMCwuNjQ0NDQsLjEzNTU2LDBdLDUxOlswLC42NDQ0NCwuMTM1NTYsMF0sNTI6Wy4xOTQ0NCwuNjQ0NDQsLjEzNTU2LDBdLDUzOlswLC42NDQ0NCwuMTM1NTYsMF0sNTQ6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NTpbLjE5NDQ0LC42NDQ0NCwuMTM1NTYsMF0sNTY6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NzpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU4OlswLC40MzA1NiwuMDU4MiwwXSw1OTpbLjE5NDQ0LC40MzA1NiwuMDU4MiwwXSw2MTpbLS4xMzMxMywuMzY2ODcsLjA2NjE2LDBdLDYzOlswLC42OTQ0NCwuMTIyNSwwXSw2NDpbMCwuNjk0NDQsLjA5NTk3LDBdLDY1OlswLC42ODMzMywwLDBdLDY2OlswLC42ODMzMywuMTAyNTcsMF0sNjc6WzAsLjY4MzMzLC4xNDUyOCwwXSw2ODpbMCwuNjgzMzMsLjA5NDAzLDBdLDY5OlswLC42ODMzMywuMTIwMjgsMF0sNzA6WzAsLjY4MzMzLC4xMzMwNSwwXSw3MTpbMCwuNjgzMzMsLjA4NzIyLDBdLDcyOlswLC42ODMzMywuMTYzODksMF0sNzM6WzAsLjY4MzMzLC4xNTgwNiwwXSw3NDpbMCwuNjgzMzMsLjE0MDI4LDBdLDc1OlswLC42ODMzMywuMTQ1MjgsMF0sNzY6WzAsLjY4MzMzLDAsMF0sNzc6WzAsLjY4MzMzLC4xNjM4OSwwXSw3ODpbMCwuNjgzMzMsLjE2Mzg5LDBdLDc5OlswLC42ODMzMywuMDk0MDMsMF0sODA6WzAsLjY4MzMzLC4xMDI1NywwXSw4MTpbLjE5NDQ0LC42ODMzMywuMDk0MDMsMF0sODI6WzAsLjY4MzMzLC4wMzg2OCwwXSw4MzpbMCwuNjgzMzMsLjExOTcyLDBdLDg0OlswLC42ODMzMywuMTMzMDUsMF0sODU6WzAsLjY4MzMzLC4xNjM4OSwwXSw4NjpbMCwuNjgzMzMsLjE4MzYxLDBdLDg3OlswLC42ODMzMywuMTgzNjEsMF0sODg6WzAsLjY4MzMzLC4xNTgwNiwwXSw4OTpbMCwuNjgzMzMsLjE5MzgzLDBdLDkwOlswLC42ODMzMywuMTQ1MjgsMF0sOTE6Wy4yNSwuNzUsLjE4NzUsMF0sOTM6Wy4yNSwuNzUsLjEwNTI4LDBdLDk0OlswLC42OTQ0NCwuMDY2NDYsMF0sOTU6Wy4zMSwuMTIwNTYsLjA5MjA4LDBdLDk3OlswLC40MzA1NiwuMDc2NzEsMF0sOTg6WzAsLjY5NDQ0LC4wNjMxMiwwXSw5OTpbMCwuNDMwNTYsLjA1NjUzLDBdLDEwMDpbMCwuNjk0NDQsLjEwMzMzLDBdLDEwMTpbMCwuNDMwNTYsLjA3NTE0LDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMjExOTQsMF0sMTAzOlsuMTk0NDQsLjQzMDU2LC4wODg0NywwXSwxMDQ6WzAsLjY5NDQ0LC4wNzY3MSwwXSwxMDU6WzAsLjY1NTM2LC4xMDE5LDBdLDEwNjpbLjE5NDQ0LC42NTUzNiwuMTQ0NjcsMF0sMTA3OlswLC42OTQ0NCwuMTA3NjQsMF0sMTA4OlswLC42OTQ0NCwuMTAzMzMsMF0sMTA5OlswLC40MzA1NiwuMDc2NzEsMF0sMTEwOlswLC40MzA1NiwuMDc2NzEsMF0sMTExOlswLC40MzA1NiwuMDYzMTIsMF0sMTEyOlsuMTk0NDQsLjQzMDU2LC4wNjMxMiwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjA4ODQ3LDBdLDExNDpbMCwuNDMwNTYsLjEwNzY0LDBdLDExNTpbMCwuNDMwNTYsLjA4MjA4LDBdLDExNjpbMCwuNjE1MDgsLjA5NDg2LDBdLDExNzpbMCwuNDMwNTYsLjA3NjcxLDBdLDExODpbMCwuNDMwNTYsLjEwNzY0LDBdLDExOTpbMCwuNDMwNTYsLjEwNzY0LDBdLDEyMDpbMCwuNDMwNTYsLjEyMDQyLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDg4NDcsMF0sMTIyOlswLC40MzA1NiwuMTIyOTIsMF0sMTI2OlsuMzUsLjMxNzg2LC4xMTU4NSwwXSwxNjM6WzAsLjY5NDQ0LDAsMF0sMzA1OlswLC40MzA1NiwwLC4wMjc3OF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwuMDk2OTQsMF0sNzcwOlswLC42OTQ0NCwuMDY2NDYsMF0sNzcxOlswLC42Njc4NiwuMTE1ODUsMF0sNzcyOlswLC41NjE2NywuMTAzMzMsMF0sNzc0OlswLC42OTQ0NCwuMTA4MDYsMF0sNzc1OlswLC42Njc4NiwuMTE3NTIsMF0sNzc2OlswLC42Njc4NiwuMTA0NzQsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsLjEyMjUsMF0sNzgwOlswLC42Mjg0NywuMDgyOTUsMF0sOTE1OlswLC42ODMzMywuMTMzMDUsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsLjA5NDAzLDBdLDkyMzpbMCwuNjgzMzMsMCwwXSw5MjY6WzAsLjY4MzMzLC4xNTI5NCwwXSw5Mjg6WzAsLjY4MzMzLC4xNjM4OSwwXSw5MzE6WzAsLjY4MzMzLC4xMjAyOCwwXSw5MzM6WzAsLjY4MzMzLC4xMTExMSwwXSw5MzQ6WzAsLjY4MzMzLC4wNTk4NiwwXSw5MzY6WzAsLjY4MzMzLC4xMTExMSwwXSw5Mzc6WzAsLjY4MzMzLC4xMDI1NywwXSw4MjExOlswLC40MzA1NiwuMDkyMDgsMF0sODIxMjpbMCwuNDMwNTYsLjA5MjA4LDBdLDgyMTY6WzAsLjY5NDQ0LC4xMjQxNywwXSw4MjE3OlswLC42OTQ0NCwuMTI0MTcsMF0sODIyMDpbMCwuNjk0NDQsLjE2ODUsMF0sODIyMTpbMCwuNjk0NDQsLjA2OTYxLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF19LFwiTWFpbi1SZWd1bGFyXCI6ezMyOlswLDAsMCwwXSwzMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4wODMzMywuNTgzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwwLDBdLDQ2OlswLC4xMDU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQzMDU2LDAsMF0sNTk6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw2MDpbLjAzOTEsLjUzOTEsMCwwXSw2MTpbLS4xMzMxMywuMzY2ODcsMCwwXSw2MjpbLjAzOTEsLjUzOTEsMCwwXSw2MzpbMCwuNjk0NDQsMCwwXSw2NDpbMCwuNjk0NDQsMCwwXSw2NTpbMCwuNjgzMzMsMCwwXSw2NjpbMCwuNjgzMzMsMCwwXSw2NzpbMCwuNjgzMzMsMCwwXSw2ODpbMCwuNjgzMzMsMCwwXSw2OTpbMCwuNjgzMzMsMCwwXSw3MDpbMCwuNjgzMzMsMCwwXSw3MTpbMCwuNjgzMzMsMCwwXSw3MjpbMCwuNjgzMzMsMCwwXSw3MzpbMCwuNjgzMzMsMCwwXSw3NDpbMCwuNjgzMzMsMCwwXSw3NTpbMCwuNjgzMzMsMCwwXSw3NjpbMCwuNjgzMzMsMCwwXSw3NzpbMCwuNjgzMzMsMCwwXSw3ODpbMCwuNjgzMzMsMCwwXSw3OTpbMCwuNjgzMzMsMCwwXSw4MDpbMCwuNjgzMzMsMCwwXSw4MTpbLjE5NDQ0LC42ODMzMywwLDBdLDgyOlswLC42ODMzMywwLDBdLDgzOlswLC42ODMzMywwLDBdLDg0OlswLC42ODMzMywwLDBdLDg1OlswLC42ODMzMywwLDBdLDg2OlswLC42ODMzMywuMDEzODksMF0sODc6WzAsLjY4MzMzLC4wMTM4OSwwXSw4ODpbMCwuNjgzMzMsMCwwXSw4OTpbMCwuNjgzMzMsLjAyNSwwXSw5MDpbMCwuNjgzMzMsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMjA1NiwuMDI3NzgsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDMwNTYsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNzc3OCwwXSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY2Nzg2LDAsMF0sMTA2OlsuMTk0NDQsLjY2Nzg2LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwwXSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTQ6WzAsLjQzMDU2LDAsMF0sMTE1OlswLC40MzA1NiwwLDBdLDExNjpbMCwuNjE1MDgsMCwwXSwxMTc6WzAsLjQzMDU2LDAsMF0sMTE4OlswLC40MzA1NiwuMDEzODksMF0sMTE5OlswLC40MzA1NiwuMDEzODksMF0sMTIwOlswLC40MzA1NiwwLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDEzODksMF0sMTIyOlswLC40MzA1NiwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zMTc4NiwwLDBdLDE2MDpbMCwwLDAsMF0sMTY4OlswLC42Njc4NiwwLDBdLDE3MjpbMCwuNDMwNTYsMCwwXSwxNzU6WzAsLjU2Nzc4LDAsMF0sMTc2OlswLC42OTQ0NCwwLDBdLDE3NzpbLjA4MzMzLC41ODMzMywwLDBdLDE4MDpbMCwuNjk0NDQsMCwwXSwyMTU6Wy4wODMzMywuNTgzMzMsMCwwXSwyNDc6Wy4wODMzMywuNTgzMzMsMCwwXSwzMDU6WzAsLjQzMDU2LDAsMF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsMF0sNzEwOlswLC42OTQ0NCwwLDBdLDcxMTpbMCwuNjI4NDcsMCwwXSw3MTM6WzAsLjU2Nzc4LDAsMF0sNzE0OlswLC42OTQ0NCwwLDBdLDcxNTpbMCwuNjk0NDQsMCwwXSw3Mjg6WzAsLjY5NDQ0LDAsMF0sNzI5OlswLC42Njc4NiwwLDBdLDczMDpbMCwuNjk0NDQsMCwwXSw3MzI6WzAsLjY2Nzg2LDAsMF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsMCwwXSw3NzA6WzAsLjY5NDQ0LDAsMF0sNzcxOlswLC42Njc4NiwwLDBdLDc3MjpbMCwuNTY3NzgsMCwwXSw3NzQ6WzAsLjY5NDQ0LDAsMF0sNzc1OlswLC42Njc4NiwwLDBdLDc3NjpbMCwuNjY3ODYsMCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwwLDBdLDc4MDpbMCwuNjI4NDcsMCwwXSw4MjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5MTU6WzAsLjY4MzMzLDAsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsMCwwXSw5MjM6WzAsLjY4MzMzLDAsMF0sOTI2OlswLC42ODMzMywwLDBdLDkyODpbMCwuNjgzMzMsMCwwXSw5MzE6WzAsLjY4MzMzLDAsMF0sOTMzOlswLC42ODMzMywwLDBdLDkzNDpbMCwuNjgzMzMsMCwwXSw5MzY6WzAsLjY4MzMzLDAsMF0sOTM3OlswLC42ODMzMywwLDBdLDgyMTE6WzAsLjQzMDU2LC4wMjc3OCwwXSw4MjEyOlswLC40MzA1NiwuMDI3NzgsMF0sODIxNjpbMCwuNjk0NDQsMCwwXSw4MjE3OlswLC42OTQ0NCwwLDBdLDgyMjA6WzAsLjY5NDQ0LDAsMF0sODIyMTpbMCwuNjk0NDQsMCwwXSw4MjI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODIyNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMzA6WzAsLjEyLDAsMF0sODI0MjpbMCwuNTU1NTYsMCwwXSw4NDA3OlswLC43MTQ0NCwuMTUzODIsMF0sODQ2MzpbMCwuNjg4ODksMCwwXSw4NDY1OlswLC42OTQ0NCwwLDBdLDg0Njc6WzAsLjY5NDQ0LDAsLjExMTExXSw4NDcyOlsuMTk0NDQsLjQzMDU2LDAsLjExMTExXSw4NDc2OlswLC42OTQ0NCwwLDBdLDg1MDE6WzAsLjY5NDQ0LDAsMF0sODU5MjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTkzOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk3OlsuMjUsLjc1LDAsMF0sODU5ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAwOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MTQ6Wy4wMTEsLjUxMSwwLDBdLDg2MTc6Wy4wMTEsLjUxMSwwLDBdLDg2MTg6Wy4wMTEsLjUxMSwwLDBdLDg2MzY6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYzNzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjQwOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NDE6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1MjpbLjAxMSwuNjcxLDAsMF0sODY1NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY1ODpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY2MDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjYxOlsuMjUsLjc1LDAsMF0sODcwNDpbMCwuNjk0NDQsMCwwXSw4NzA2OlswLC42OTQ0NCwuMDU1NTYsLjA4MzM0XSw4NzA3OlswLC42OTQ0NCwwLDBdLDg3MDk6Wy4wNTU1NiwuNzUsMCwwXSw4NzExOlswLC42ODMzMywwLDBdLDg3MTI6Wy4wMzkxLC41MzkxLDAsMF0sODcxNTpbLjAzOTEsLjUzOTEsMCwwXSw4NzIyOlsuMDgzMzMsLjU4MzMzLDAsMF0sODcyMzpbLjA4MzMzLC41ODMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw4NzI4OlstLjA1NTU1LC40NDQ0NSwwLDBdLDg3Mjk6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODczMDpbLjIsLjgsMCwwXSw4NzMzOlswLC40MzA1NiwwLDBdLDg3MzQ6WzAsLjQzMDU2LDAsMF0sODczNjpbMCwuNjkyMjQsMCwwXSw4NzM5OlsuMjUsLjc1LDAsMF0sODc0MTpbLjI1LC43NSwwLDBdLDg3NDM6WzAsLjU1NTU2LDAsMF0sODc0NDpbMCwuNTU1NTYsMCwwXSw4NzQ1OlswLC41NTU1NiwwLDBdLDg3NDY6WzAsLjU1NTU2LDAsMF0sODc0NzpbLjE5NDQ0LC42OTQ0NCwuMTExMTEsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODc3MTpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4NzczOlstLjAyMiwuNTg5LDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4NzgxOlstLjAzNjI1LC40NjM3NSwwLDBdLDg3ODQ6Wy0uMTMzLC42NywwLDBdLDg4MDA6Wy4yMTUsLjcxNiwwLDBdLDg4MDE6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODgwNDpbLjEzNTk3LC42MzU5NywwLDBdLDg4MDU6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODEwOlsuMDM5MSwuNTM5MSwwLDBdLDg4MTE6Wy4wMzkxLC41MzkxLDAsMF0sODgyNjpbLjAzOTEsLjUzOTEsMCwwXSw4ODI3OlsuMDM5MSwuNTM5MSwwLDBdLDg4MzQ6Wy4wMzkxLC41MzkxLDAsMF0sODgzNTpbLjAzOTEsLjUzOTEsMCwwXSw4ODM4OlsuMTM1OTcsLjYzNTk3LDAsMF0sODgzOTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NTA6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTQ6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU1OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NjpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTc6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg4NzI6Wy4yNDksLjc1LDAsMF0sODkwMDpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4OTAxOlstLjA1NTU1LC40NDQ0NSwwLDBdLDg5MDI6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sODkwNDpbLjAwNSwuNTA1LDAsMF0sODk0MjpbLjAzLC45LDAsMF0sODk0MzpbLS4xOSwuMzEsMCwwXSw4OTQ1OlstLjEsLjgyLDAsMF0sODk2ODpbLjI1LC43NSwwLDBdLDg5Njk6Wy4yNSwuNzUsMCwwXSw4OTcwOlsuMjUsLjc1LDAsMF0sODk3MTpbLjI1LC43NSwwLDBdLDg5OTQ6Wy0uMTQyMzYsLjM1NzY0LDAsMF0sODk5NTpbLS4xNDIzNiwuMzU3NjQsMCwwXSw5MTM2OlsuMjQ0LC43NDQsMCwwXSw5MTM3OlsuMjQ0LC43NDQsMCwwXSw5NjUxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY1NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NjYxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY2NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NzExOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgyNDpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjU6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI2OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNzpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mzc6WzAsLjc1LDAsMF0sOTgzODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4Mzk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwxMDIxNjpbLjI1LC43NSwwLDBdLDEwMjE3OlsuMjUsLjc1LDAsMF0sMTAyMjI6Wy4yNDQsLjc0NCwwLDBdLDEwMjIzOlsuMjQ0LC43NDQsMCwwXSwxMDIyOTpbLjAxMSwuNTExLDAsMF0sMTAyMzA6Wy4wMTEsLjUxMSwwLDBdLDEwMjMxOlsuMDExLC41MTEsMCwwXSwxMDIzMjpbLjAyNCwuNTI1LDAsMF0sMTAyMzM6Wy4wMjQsLjUyNSwwLDBdLDEwMjM0OlsuMDI0LC41MjUsMCwwXSwxMDIzNjpbLjAxMSwuNTExLDAsMF0sMTA4MTU6WzAsLjY4MzMzLDAsMF0sMTA5Mjc6Wy4xMzU5NywuNjM1OTcsMCwwXSwxMDkyODpbLjEzNTk3LC42MzU5NywwLDBdfSxcIk1hdGgtQm9sZEl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODYxMSwwLDBdLDY2OlswLC42ODYxMSwuMDQ4MzUsMF0sNjc6WzAsLjY4NjExLC4wNjk3OSwwXSw2ODpbMCwuNjg2MTEsLjAzMTk0LDBdLDY5OlswLC42ODYxMSwuMDU0NTEsMF0sNzA6WzAsLjY4NjExLC4xNTk3MiwwXSw3MTpbMCwuNjg2MTEsMCwwXSw3MjpbMCwuNjg2MTEsLjA4MjI5LDBdLDczOlswLC42ODYxMSwuMDc3NzgsMF0sNzQ6WzAsLjY4NjExLC4xMDA2OSwwXSw3NTpbMCwuNjg2MTEsLjA2OTc5LDBdLDc2OlswLC42ODYxMSwwLDBdLDc3OlswLC42ODYxMSwuMTE0MjQsMF0sNzg6WzAsLjY4NjExLC4xMTQyNCwwXSw3OTpbMCwuNjg2MTEsLjAzMTk0LDBdLDgwOlswLC42ODYxMSwuMTU5NzIsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsLjAwNDIxLDBdLDgzOlswLC42ODYxMSwuMDUzODIsMF0sODQ6WzAsLjY4NjExLC4xNTk3MiwwXSw4NTpbMCwuNjg2MTEsLjExNDI0LDBdLDg2OlswLC42ODYxMSwuMjU1NTUsMF0sODc6WzAsLjY4NjExLC4xNTk3MiwwXSw4ODpbMCwuNjg2MTEsLjA3Nzc4LDBdLDg5OlswLC42ODYxMSwuMjU1NTUsMF0sOTA6WzAsLjY4NjExLC4wNjk3OSwwXSw5NzpbMCwuNDQ0NDQsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDQ0NDQsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40NDQ0NCwwLDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTEwNDIsMF0sMTAzOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42OTMyNiwwLDBdLDEwNjpbLjE5NDQ0LC42OTMyNiwuMDYyMiwwXSwxMDc6WzAsLjY5NDQ0LC4wMTg1MiwwXSwxMDg6WzAsLjY5NDQ0LC4wMDg4LDBdLDEwOTpbMCwuNDQ0NDQsMCwwXSwxMTA6WzAsLjQ0NDQ0LDAsMF0sMTExOlswLC40NDQ0NCwwLDBdLDExMjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExMzpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTE0OlswLC40NDQ0NCwuMDMxOTQsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDM3MDQsMF0sMTE5OlswLC40NDQ0NCwuMDI3NzgsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTIyOlswLC40NDQ0NCwuMDQyMTMsMF0sOTE1OlswLC42ODYxMSwuMTU5NzIsMF0sOTE2OlswLC42ODYxMSwwLDBdLDkyMDpbMCwuNjg2MTEsLjAzMTk0LDBdLDkyMzpbMCwuNjg2MTEsMCwwXSw5MjY6WzAsLjY4NjExLC4wNzQ1OCwwXSw5Mjg6WzAsLjY4NjExLC4wODIyOSwwXSw5MzE6WzAsLjY4NjExLC4wNTQ1MSwwXSw5MzM6WzAsLjY4NjExLC4xNTk3MiwwXSw5MzQ6WzAsLjY4NjExLDAsMF0sOTM2OlswLC42ODYxMSwuMTE2NTMsMF0sOTM3OlswLC42ODYxMSwuMDQ4MzUsMF0sOTQ1OlswLC40NDQ0NCwwLDBdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDM0MDMsMF0sOTQ3OlsuMTk0NDQsLjQ0NDQ0LC4wNjM4OSwwXSw5NDg6WzAsLjY5NDQ0LC4wMzgxOSwwXSw5NDk6WzAsLjQ0NDQ0LDAsMF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNjIxNSwwXSw5NTE6Wy4xOTQ0NCwuNDQ0NDQsLjAzNzA0LDBdLDk1MjpbMCwuNjk0NDQsLjAzMTk0LDBdLDk1MzpbMCwuNDQ0NDQsMCwwXSw5NTQ6WzAsLjQ0NDQ0LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDk1NzpbMCwuNDQ0NDQsLjA2ODk4LDBdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDMwMjEsMF0sOTU5OlswLC40NDQ0NCwwLDBdLDk2MDpbMCwuNDQ0NDQsLjAzNzA0LDBdLFxuOTYxOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTYyOlsuMDk3MjIsLjQ0NDQ0LC4wNzkxNywwXSw5NjM6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjQ6WzAsLjQ0NDQ0LC4xMzQ3MiwwXSw5NjU6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjY6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njc6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njg6Wy4xOTQ0NCwuNjk0NDQsLjAzNzA0LDBdLDk2OTpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk3NzpbMCwuNjk0NDQsMCwwXSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODI6WzAsLjQ0NDQ0LC4wMzE5NCwwXSwxMDA5OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTAxMzpbMCwuNDQ0NDQsMCwwXX0sXCJNYXRoLUl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODMzMywwLC4xMzg4OV0sNjY6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDY3OlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wNTU1Nl0sNjk6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDcwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw3MTpbMCwuNjgzMzMsMCwuMDgzMzRdLDcyOlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw3MzpbMCwuNjgzMzMsLjA3ODQ3LC4xMTExMV0sNzQ6WzAsLjY4MzMzLC4wOTYxOCwuMTY2NjddLDc1OlswLC42ODMzMywuMDcxNTMsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMDI3NzhdLDc3OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3ODpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzk6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDgwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4MTpbLjE5NDQ0LC42ODMzMywwLC4wODMzNF0sODI6WzAsLjY4MzMzLC4wMDc3MywuMDgzMzRdLDgzOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw4NDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODU6WzAsLjY4MzMzLC4xMDkwMywuMDI3NzhdLDg2OlswLC42ODMzMywuMjIyMjIsMF0sODc6WzAsLjY4MzMzLC4xMzg4OSwwXSw4ODpbMCwuNjgzMzMsLjA3ODQ3LC4wODMzNF0sODk6WzAsLjY4MzMzLC4yMjIyMiwwXSw5MDpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDA6WzAsLjY5NDQ0LDAsLjE2NjY3XSwxMDE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjEwNzY0LC4xNjY2N10sMTAzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY1OTUyLDAsMF0sMTA2OlsuMTk0NDQsLjY1OTUyLC4wNTcyNCwwXSwxMDc6WzAsLjY5NDQ0LC4wMzE0OCwwXSwxMDg6WzAsLjY5NDQ0LC4wMTk2OCwuMDgzMzRdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLC4wNTU1Nl0sMTEyOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wODMzNF0sMTE0OlswLC40MzA1NiwuMDI3NzgsLjA1NTU2XSwxMTU6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTY6WzAsLjYxNTA4LDAsLjA4MzM0XSwxMTc6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMTg6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDExOTpbMCwuNDMwNTYsLjAyNjkxLC4wODMzNF0sMTIwOlswLC40MzA1NiwwLC4wMjc3OF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDEyMjpbMCwuNDMwNTYsLjA0Mzk4LC4wNTU1Nl0sOTE1OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw5MTY6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjA6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDkyMzpbMCwuNjgzMzMsMCwuMTY2NjddLDkyNjpbMCwuNjgzMzMsLjA3NTY5LC4wODMzNF0sOTI4OlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw5MzE6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDkzMzpbMCwuNjgzMzMsLjEzODg5LC4wNTU1Nl0sOTM0OlswLC42ODMzMywwLC4wODMzNF0sOTM2OlswLC42ODMzMywuMTEsLjA1NTU2XSw5Mzc6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDk0NTpbMCwuNDMwNTYsLjAwMzcsLjAyNzc4XSw5NDY6Wy4xOTQ0NCwuNjk0NDQsLjA1Mjc4LC4wODMzNF0sOTQ3OlsuMTk0NDQsLjQzMDU2LC4wNTU1NiwwXSw5NDg6WzAsLjY5NDQ0LC4wMzc4NSwuMDU1NTZdLDk0OTpbMCwuNDMwNTYsMCwuMDgzMzRdLDk1MDpbLjE5NDQ0LC42OTQ0NCwuMDczNzgsLjA4MzM0XSw5NTE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sOTUyOlswLC42OTQ0NCwuMDI3NzgsLjA4MzM0XSw5NTM6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NTQ6WzAsLjQzMDU2LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40MzA1NiwwLC4wMjc3OF0sOTU3OlswLC40MzA1NiwuMDYzNjYsLjAyNzc4XSw5NTg6Wy4xOTQ0NCwuNjk0NDQsLjA0NjAxLC4xMTExMV0sOTU5OlswLC40MzA1NiwwLC4wNTU1Nl0sOTYwOlswLC40MzA1NiwuMDM1ODgsMF0sOTYxOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5NjI6Wy4wOTcyMiwuNDMwNTYsLjA3OTg2LC4wODMzNF0sOTYzOlswLC40MzA1NiwuMDM1ODgsMF0sOTY0OlswLC40MzA1NiwuMTEzMiwuMDI3NzhdLDk2NTpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sOTY2OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5Njc6Wy4xOTQ0NCwuNDMwNTYsMCwuMDU1NTZdLDk2ODpbLjE5NDQ0LC42OTQ0NCwuMDM1ODgsLjExMTExXSw5Njk6WzAsLjQzMDU2LC4wMzU4OCwwXSw5Nzc6WzAsLjY5NDQ0LDAsLjA4MzM0XSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwuMDgzMzRdLDk4MjpbMCwuNDMwNTYsLjAyNzc4LDBdLDEwMDk6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDEwMTM6WzAsLjQzMDU2LDAsLjA1NTU2XX0sXCJNYXRoLVJlZ3VsYXJcIjp7NjU6WzAsLjY4MzMzLDAsLjEzODg5XSw2NjpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sNjc6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDY4OlswLC42ODMzMywuMDI3NzgsLjA1NTU2XSw2OTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sNzA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDcxOlswLC42ODMzMywwLC4wODMzNF0sNzI6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDczOlswLC42ODMzMywuMDc4NDcsLjExMTExXSw3NDpbMCwuNjgzMzMsLjA5NjE4LC4xNjY2N10sNzU6WzAsLjY4MzMzLC4wNzE1MywuMDU1NTZdLDc2OlswLC42ODMzMywwLC4wMjc3OF0sNzc6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc4OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3OTpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sODA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDgxOlsuMTk0NDQsLjY4MzMzLDAsLjA4MzM0XSw4MjpbMCwuNjgzMzMsLjAwNzczLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDg0OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4NTpbMCwuNjgzMzMsLjEwOTAzLC4wMjc3OF0sODY6WzAsLjY4MzMzLC4yMjIyMiwwXSw4NzpbMCwuNjgzMzMsLjEzODg5LDBdLDg4OlswLC42ODMzMywuMDc4NDcsLjA4MzM0XSw4OTpbMCwuNjgzMzMsLjIyMjIyLDBdLDkwOlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMDpbMCwuNjk0NDQsMCwuMTY2NjddLDEwMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTA3NjQsLjE2NjY3XSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjU5NTIsMCwwXSwxMDY6Wy4xOTQ0NCwuNjU5NTIsLjA1NzI0LDBdLDEwNzpbMCwuNjk0NDQsLjAzMTQ4LDBdLDEwODpbMCwuNjk0NDQsLjAxOTY4LC4wODMzNF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDExMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA4MzM0XSwxMTQ6WzAsLjQzMDU2LC4wMjc3OCwuMDU1NTZdLDExNTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExNjpbMCwuNjE1MDgsMCwuMDgzMzRdLDExNzpbMCwuNDMwNTYsMCwuMDI3NzhdLDExODpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTE5OlswLC40MzA1NiwuMDI2OTEsLjA4MzM0XSwxMjA6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sMTIyOlswLC40MzA1NiwuMDQzOTgsLjA1NTU2XSw5MTU6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDkxNjpbMCwuNjgzMzMsMCwuMTY2NjddLDkyMDpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sOTIzOlswLC42ODMzMywwLC4xNjY2N10sOTI2OlswLC42ODMzMywuMDc1NjksLjA4MzM0XSw5Mjg6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDkzMTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sOTMzOlswLC42ODMzMywuMTM4ODksLjA1NTU2XSw5MzQ6WzAsLjY4MzMzLDAsLjA4MzM0XSw5MzY6WzAsLjY4MzMzLC4xMSwuMDU1NTZdLDkzNzpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sOTQ1OlswLC40MzA1NiwuMDAzNywuMDI3NzhdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDUyNzgsLjA4MzM0XSw5NDc6Wy4xOTQ0NCwuNDMwNTYsLjA1NTU2LDBdLDk0ODpbMCwuNjk0NDQsLjAzNzg1LC4wNTU1Nl0sOTQ5OlswLC40MzA1NiwwLC4wODMzNF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNzM3OCwuMDgzMzRdLDk1MTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSw5NTI6WzAsLjY5NDQ0LC4wMjc3OCwuMDgzMzRdLDk1MzpbMCwuNDMwNTYsMCwuMDU1NTZdLDk1NDpbMCwuNDMwNTYsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQzMDU2LDAsLjAyNzc4XSw5NTc6WzAsLjQzMDU2LC4wNjM2NiwuMDI3NzhdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDQ2MDEsLjExMTExXSw5NTk6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NjA6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjE6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2MjpbLjA5NzIyLC40MzA1NiwuMDc5ODYsLjA4MzM0XSw5NjM6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjQ6WzAsLjQzMDU2LC4xMTMyLC4wMjc3OF0sOTY1OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSw5NjY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2NzpbLjE5NDQ0LC40MzA1NiwwLC4wNTU1Nl0sOTY4OlsuMTk0NDQsLjY5NDQ0LC4wMzU4OCwuMTExMTFdLDk2OTpbMCwuNDMwNTYsLjAzNTg4LDBdLDk3NzpbMCwuNjk0NDQsMCwuMDgzMzRdLDk4MTpbLjE5NDQ0LC42OTQ0NCwwLC4wODMzNF0sOTgyOlswLC40MzA1NiwuMDI3NzgsMF0sMTAwOTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTAxMzpbMCwuNDMwNTYsMCwuMDU1NTZdfSxcIlNhbnNTZXJpZi1SZWd1bGFyXCI6ezMzOlswLC42OTQ0NCwwLDBdLDM0OlswLC42OTQ0NCwwLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMzY6Wy4wNTU1NiwuNzUsMCwwXSwzNzpbLjA1NTU2LC43NSwwLDBdLDM4OlswLC42OTQ0NCwwLDBdLDM5OlswLC42OTQ0NCwwLDBdLDQwOlsuMjUsLjc1LDAsMF0sNDE6Wy4yNSwuNzUsMCwwXSw0MjpbMCwuNzUsMCwwXSw0MzpbLjA4MzMzLC41ODMzMywwLDBdLDQ0OlsuMTI1LC4wODMzMywwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4wODMzMywwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY1NTU2LDAsMF0sNDk6WzAsLjY1NTU2LDAsMF0sNTA6WzAsLjY1NTU2LDAsMF0sNTE6WzAsLjY1NTU2LDAsMF0sNTI6WzAsLjY1NTU2LDAsMF0sNTM6WzAsLjY1NTU2LDAsMF0sNTQ6WzAsLjY1NTU2LDAsMF0sNTU6WzAsLjY1NTU2LDAsMF0sNTY6WzAsLjY1NTU2LDAsMF0sNTc6WzAsLjY1NTU2LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xMjUsLjQ0NDQ0LDAsMF0sNjE6Wy0uMTMsLjM3LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY5NDQ0LDAsMF0sNjY6WzAsLjY5NDQ0LDAsMF0sNjc6WzAsLjY5NDQ0LDAsMF0sNjg6WzAsLjY5NDQ0LDAsMF0sNjk6WzAsLjY5NDQ0LDAsMF0sNzA6WzAsLjY5NDQ0LDAsMF0sNzE6WzAsLjY5NDQ0LDAsMF0sNzI6WzAsLjY5NDQ0LDAsMF0sNzM6WzAsLjY5NDQ0LDAsMF0sNzQ6WzAsLjY5NDQ0LDAsMF0sNzU6WzAsLjY5NDQ0LDAsMF0sNzY6WzAsLjY5NDQ0LDAsMF0sNzc6WzAsLjY5NDQ0LDAsMF0sNzg6WzAsLjY5NDQ0LDAsMF0sNzk6WzAsLjY5NDQ0LDAsMF0sODA6WzAsLjY5NDQ0LDAsMF0sODE6Wy4xMjUsLjY5NDQ0LDAsMF0sODI6WzAsLjY5NDQ0LDAsMF0sODM6WzAsLjY5NDQ0LDAsMF0sODQ6WzAsLjY5NDQ0LDAsMF0sODU6WzAsLjY5NDQ0LDAsMF0sODY6WzAsLjY5NDQ0LC4wMTM4OSwwXSw4NzpbMCwuNjk0NDQsLjAxMzg5LDBdLDg4OlswLC42OTQ0NCwwLDBdLDg5OlswLC42OTQ0NCwuMDI1LDBdLDkwOlswLC42OTQ0NCwwLDBdLDkxOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjM1LC4wOTQ0NCwuMDI3NzgsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNjk0NCwwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY3OTM3LDAsMF0sMTA2OlsuMTk0NDQsLjY3OTM3LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTU6WzAsLjQ0NDQ0LDAsMF0sMTE2OlswLC41NzE0MywwLDBdLDExNzpbMCwuNDQ0NDQsMCwwXSwxMTg6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTk6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMjA6WzAsLjQ0NDQ0LDAsMF0sMTIxOlsuMTk0NDQsLjQ0NDQ0LC4wMTM4OSwwXSwxMjI6WzAsLjQ0NDQ0LDAsMF0sMTI2OlsuMzUsLjMyNjU5LDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjc2NTksMCwwXSw3NzI6WzAsLjYwODg5LDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjc5MzcsMCwwXSw3NzY6WzAsLjY3OTM3LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sOTE1OlswLC42OTQ0NCwwLDBdLDkxNjpbMCwuNjk0NDQsMCwwXSw5MjA6WzAsLjY5NDQ0LDAsMF0sOTIzOlswLC42OTQ0NCwwLDBdLDkyNjpbMCwuNjk0NDQsMCwwXSw5Mjg6WzAsLjY5NDQ0LDAsMF0sOTMxOlswLC42OTQ0NCwwLDBdLDkzMzpbMCwuNjk0NDQsMCwwXSw5MzQ6WzAsLjY5NDQ0LDAsMF0sOTM2OlswLC42OTQ0NCwwLDBdLDkzNzpbMCwuNjk0NDQsMCwwXSw4MjExOlswLC40NDQ0NCwuMDI3NzgsMF0sODIxMjpbMCwuNDQ0NDQsLjAyNzc4LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF19LFwiU2NyaXB0LVJlZ3VsYXJcIjp7NjU6WzAsLjcsLjIyOTI1LDBdLDY2OlswLC43LC4wNDA4NywwXSw2NzpbMCwuNywuMTY4OSwwXSw2ODpbMCwuNywuMDkzNzEsMF0sNjk6WzAsLjcsLjE4NTgzLDBdLDcwOlswLC43LC4xMzYzNCwwXSw3MTpbMCwuNywuMTczMjIsMF0sNzI6WzAsLjcsLjI5Njk0LDBdLDczOlswLC43LC4xOTE4OSwwXSw3NDpbLjI3Nzc4LC43LC4xOTE4OSwwXSw3NTpbMCwuNywuMzEyNTksMF0sNzY6WzAsLjcsLjE5MTg5LDBdLDc3OlswLC43LC4xNTk4MSwwXSw3ODpbMCwuNywuMzUyNSwwXSw3OTpbMCwuNywuMDgwNzgsMF0sODA6WzAsLjcsLjA4MDc4LDBdLDgxOlswLC43LC4wMzMwNSwwXSw4MjpbMCwuNywuMDYyNTksMF0sODM6WzAsLjcsLjE5MTg5LDBdLDg0OlswLC43LC4yOTA4NywwXSw4NTpbMCwuNywuMjU4MTUsMF0sODY6WzAsLjcsLjI3NTIzLDBdLDg3OlswLC43LC4yNzUyMywwXSw4ODpbMCwuNywuMjYwMDYsMF0sODk6WzAsLjcsLjI5MzksMF0sOTA6WzAsLjcsLjI0MDM3LDBdfSxcIlNpemUxLVJlZ3VsYXJcIjp7NDA6Wy4zNTAwMSwuODUsMCwwXSw0MTpbLjM1MDAxLC44NSwwLDBdLDQ3OlsuMzUwMDEsLjg1LDAsMF0sOTE6Wy4zNTAwMSwuODUsMCwwXSw5MjpbLjM1MDAxLC44NSwwLDBdLDkzOlsuMzUwMDEsLjg1LDAsMF0sMTIzOlsuMzUwMDEsLjg1LDAsMF0sMTI1OlsuMzUwMDEsLjg1LDAsMF0sNzEwOlswLC43MjIyMiwwLDBdLDczMjpbMCwuNzIyMjIsMCwwXSw3NzA6WzAsLjcyMjIyLDAsMF0sNzcxOlswLC43MjIyMiwwLDBdLDgyMTQ6Wy05OWUtNSwuNjAxLDAsMF0sODU5MzpbMWUtNSwuNiwwLDBdLDg1OTU6WzFlLTUsLjYsMCwwXSw4NjU3OlsxZS01LC42LDAsMF0sODY1OTpbMWUtNSwuNiwwLDBdLDg3MTk6Wy4yNTAwMSwuNzUsMCwwXSw4NzIwOlsuMjUwMDEsLjc1LDAsMF0sODcyMTpbLjI1MDAxLC43NSwwLDBdLDg3MzA6Wy4zNTAwMSwuODUsMCwwXSw4NzM5OlstLjAwNTk5LC42MDYsMCwwXSw4NzQxOlstLjAwNTk5LC42MDYsMCwwXSw4NzQ3OlsuMzA2MTIsLjgwNSwuMTk0NDUsMF0sODc0ODpbLjMwNiwuODA1LC4xOTQ0NSwwXSw4NzQ5OlsuMzA2LC44MDUsLjE5NDQ1LDBdLDg3NTA6Wy4zMDYxMiwuODA1LC4xOTQ0NSwwXSw4ODk2OlsuMjUwMDEsLjc1LDAsMF0sODg5NzpbLjI1MDAxLC43NSwwLDBdLDg4OTg6Wy4yNTAwMSwuNzUsMCwwXSw4ODk5OlsuMjUwMDEsLjc1LDAsMF0sODk2ODpbLjM1MDAxLC44NSwwLDBdLDg5Njk6Wy4zNTAwMSwuODUsMCwwXSw4OTcwOlsuMzUwMDEsLjg1LDAsMF0sODk3MTpbLjM1MDAxLC44NSwwLDBdLDkxNjg6Wy05OWUtNSwuNjAxLDAsMF0sMTAyMTY6Wy4zNTAwMSwuODUsMCwwXSwxMDIxNzpbLjM1MDAxLC44NSwwLDBdLDEwNzUyOlsuMjUwMDEsLjc1LDAsMF0sMTA3NTM6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1NDpbLjI1MDAxLC43NSwwLDBdLDEwNzU2OlsuMjUwMDEsLjc1LDAsMF0sMTA3NTg6Wy4yNTAwMSwuNzUsMCwwXX0sXCJTaXplMi1SZWd1bGFyXCI6ezQwOlsuNjUwMDIsMS4xNSwwLDBdLDQxOlsuNjUwMDIsMS4xNSwwLDBdLDQ3OlsuNjUwMDIsMS4xNSwwLDBdLDkxOlsuNjUwMDIsMS4xNSwwLDBdLDkyOlsuNjUwMDIsMS4xNSwwLDBdLDkzOlsuNjUwMDIsMS4xNSwwLDBdLDEyMzpbLjY1MDAyLDEuMTUsMCwwXSwxMjU6Wy42NTAwMiwxLjE1LDAsMF0sNzEwOlswLC43NSwwLDBdLDczMjpbMCwuNzUsMCwwXSw3NzA6WzAsLjc1LDAsMF0sNzcxOlswLC43NSwwLDBdLDg3MTk6Wy41NTAwMSwxLjA1LDAsMF0sODcyMDpbLjU1MDAxLDEuMDUsMCwwXSw4NzIxOlsuNTUwMDEsMS4wNSwwLDBdLDg3MzA6Wy42NTAwMiwxLjE1LDAsMF0sODc0NzpbLjg2MjI1LDEuMzYsLjQ0NDQ1LDBdLDg3NDg6Wy44NjIsMS4zNiwuNDQ0NDUsMF0sODc0OTpbLjg2MiwxLjM2LC40NDQ0NSwwXSw4NzUwOlsuODYyMjUsMS4zNiwuNDQ0NDUsMF0sODg5NjpbLjU1MDAxLDEuMDUsMCwwXSw4ODk3OlsuNTUwMDEsMS4wNSwwLDBdLDg4OTg6Wy41NTAwMSwxLjA1LDAsMF0sODg5OTpbLjU1MDAxLDEuMDUsMCwwXSw4OTY4OlsuNjUwMDIsMS4xNSwwLDBdLDg5Njk6Wy42NTAwMiwxLjE1LDAsMF0sODk3MDpbLjY1MDAyLDEuMTUsMCwwXSw4OTcxOlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE2OlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE3OlsuNjUwMDIsMS4xNSwwLDBdLDEwNzUyOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzUzOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU0OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU2OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU4OlsuNTUwMDEsMS4wNSwwLDBdfSxcIlNpemUzLVJlZ3VsYXJcIjp7NDA6Wy45NTAwMywxLjQ1LDAsMF0sNDE6Wy45NTAwMywxLjQ1LDAsMF0sNDc6Wy45NTAwMywxLjQ1LDAsMF0sOTE6Wy45NTAwMywxLjQ1LDAsMF0sOTI6Wy45NTAwMywxLjQ1LDAsMF0sOTM6Wy45NTAwMywxLjQ1LDAsMF0sMTIzOlsuOTUwMDMsMS40NSwwLDBdLDEyNTpbLjk1MDAzLDEuNDUsMCwwXSw3MTA6WzAsLjc1LDAsMF0sNzMyOlswLC43NSwwLDBdLDc3MDpbMCwuNzUsMCwwXSw3NzE6WzAsLjc1LDAsMF0sODczMDpbLjk1MDAzLDEuNDUsMCwwXSw4OTY4OlsuOTUwMDMsMS40NSwwLDBdLDg5Njk6Wy45NTAwMywxLjQ1LDAsMF0sODk3MDpbLjk1MDAzLDEuNDUsMCwwXSw4OTcxOlsuOTUwMDMsMS40NSwwLDBdLDEwMjE2OlsuOTUwMDMsMS40NSwwLDBdLDEwMjE3OlsuOTUwMDMsMS40NSwwLDBdfSxcIlNpemU0LVJlZ3VsYXJcIjp7NDA6WzEuMjUwMDMsMS43NSwwLDBdLDQxOlsxLjI1MDAzLDEuNzUsMCwwXSw0NzpbMS4yNTAwMywxLjc1LDAsMF0sOTE6WzEuMjUwMDMsMS43NSwwLDBdLDkyOlsxLjI1MDAzLDEuNzUsMCwwXSw5MzpbMS4yNTAwMywxLjc1LDAsMF0sMTIzOlsxLjI1MDAzLDEuNzUsMCwwXSwxMjU6WzEuMjUwMDMsMS43NSwwLDBdLDcxMDpbMCwuODI1LDAsMF0sNzMyOlswLC44MjUsMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuODI1LDAsMF0sODczMDpbMS4yNTAwMywxLjc1LDAsMF0sODk2ODpbMS4yNTAwMywxLjc1LDAsMF0sODk2OTpbMS4yNTAwMywxLjc1LDAsMF0sODk3MDpbMS4yNTAwMywxLjc1LDAsMF0sODk3MTpbMS4yNTAwMywxLjc1LDAsMF0sOTExNTpbLjY0NTAyLDEuMTU1LDAsMF0sOTExNjpbMWUtNSwuNiwwLDBdLDkxMTc6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTg6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTk6WzFlLTUsLjYsMCwwXSw5MTIwOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIxOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIyOlstOTllLTUsLjYwMSwwLDBdLDkxMjM6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjQ6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjU6Wy05OWUtNSwuNjAxLDAsMF0sOTEyNjpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyNzpbMWUtNSwuOSwwLDBdLDkxMjg6Wy42NTAwMiwxLjE1LDAsMF0sOTEyOTpbLjkwMDAxLDAsMCwwXSw5MTMwOlswLC4zLDAsMF0sOTEzMTpbMWUtNSwuOSwwLDBdLDkxMzI6Wy42NTAwMiwxLjE1LDAsMF0sOTEzMzpbLjkwMDAxLDAsMCwwXSw5MTQzOlsuODg1MDIsLjkxNSwwLDBdLDEwMjE2OlsxLjI1MDAzLDEuNzUsMCwwXSwxMDIxNzpbMS4yNTAwMywxLjc1LDAsMF0sNTczNDQ6Wy0uMDA0OTksLjYwNSwwLDBdLDU3MzQ1OlstLjAwNDk5LC42MDUsMCwwXSw1NzY4MDpbMCwuMTIsMCwwXSw1NzY4MTpbMCwuMTIsMCwwXSw1NzY4MjpbMCwuMTIsMCwwXSw1NzY4MzpbMCwuMTIsMCwwXX0sXCJUeXBld3JpdGVyLVJlZ3VsYXJcIjp7MzM6WzAsLjYxMTExLDAsMF0sMzQ6WzAsLjYxMTExLDAsMF0sMzU6WzAsLjYxMTExLDAsMF0sMzY6Wy4wODMzMywuNjk0NDQsMCwwXSwzNzpbLjA4MzMzLC42OTQ0NCwwLDBdLDM4OlswLC42MTExMSwwLDBdLDM5OlswLC42MTExMSwwLDBdLDQwOlsuMDgzMzMsLjY5NDQ0LDAsMF0sNDE6Wy4wODMzMywuNjk0NDQsMCwwXSw0MjpbMCwuNTIwODMsMCwwXSw0MzpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NDpbLjEzODg5LC4xMjUsMCwwXSw0NTpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NjpbMCwuMTI1LDAsMF0sNDc6Wy4wODMzMywuNjk0NDQsMCwwXSw0ODpbMCwuNjExMTEsMCwwXSw0OTpbMCwuNjExMTEsMCwwXSw1MDpbMCwuNjExMTEsMCwwXSw1MTpbMCwuNjExMTEsMCwwXSw1MjpbMCwuNjExMTEsMCwwXSw1MzpbMCwuNjExMTEsMCwwXSw1NDpbMCwuNjExMTEsMCwwXSw1NTpbMCwuNjExMTEsMCwwXSw1NjpbMCwuNjExMTEsMCwwXSw1NzpbMCwuNjExMTEsMCwwXSw1ODpbMCwuNDMwNTYsMCwwXSw1OTpbLjEzODg5LC40MzA1NiwwLDBdLDYwOlstLjA1NTU2LC41NTU1NiwwLDBdLDYxOlstLjE5NTQ5LC40MTU2MiwwLDBdLDYyOlstLjA1NTU2LC41NTU1NiwwLDBdLDYzOlswLC42MTExMSwwLDBdLDY0OlswLC42MTExMSwwLDBdLDY1OlswLC42MTExMSwwLDBdLDY2OlswLC42MTExMSwwLDBdLDY3OlswLC42MTExMSwwLDBdLDY4OlswLC42MTExMSwwLDBdLDY5OlswLC42MTExMSwwLDBdLDcwOlswLC42MTExMSwwLDBdLDcxOlswLC42MTExMSwwLDBdLDcyOlswLC42MTExMSwwLDBdLDczOlswLC42MTExMSwwLDBdLDc0OlswLC42MTExMSwwLDBdLDc1OlswLC42MTExMSwwLDBdLDc2OlswLC42MTExMSwwLDBdLDc3OlswLC42MTExMSwwLDBdLDc4OlswLC42MTExMSwwLDBdLDc5OlswLC42MTExMSwwLDBdLDgwOlswLC42MTExMSwwLDBdLDgxOlsuMTM4ODksLjYxMTExLDAsMF0sODI6WzAsLjYxMTExLDAsMF0sODM6WzAsLjYxMTExLDAsMF0sODQ6WzAsLjYxMTExLDAsMF0sODU6WzAsLjYxMTExLDAsMF0sODY6WzAsLjYxMTExLDAsMF0sODc6WzAsLjYxMTExLDAsMF0sODg6WzAsLjYxMTExLDAsMF0sODk6WzAsLjYxMTExLDAsMF0sOTA6WzAsLjYxMTExLDAsMF0sOTE6Wy4wODMzMywuNjk0NDQsMCwwXSw5MjpbLjA4MzMzLC42OTQ0NCwwLDBdLDkzOlsuMDgzMzMsLjY5NDQ0LDAsMF0sOTQ6WzAsLjYxMTExLDAsMF0sOTU6Wy4wOTUxNCwwLDAsMF0sOTY6WzAsLjYxMTExLDAsMF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjYxMTExLDAsMF0sOTk6WzAsLjQzMDU2LDAsMF0sMTAwOlswLC42MTExMSwwLDBdLDEwMTpbMCwuNDMwNTYsMCwwXSwxMDI6WzAsLjYxMTExLDAsMF0sMTAzOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTA0OlswLC42MTExMSwwLDBdLDEwNTpbMCwuNjExMTEsMCwwXSwxMDY6Wy4yMjIyMiwuNjExMTEsMCwwXSwxMDc6WzAsLjYxMTExLDAsMF0sMTA4OlswLC42MTExMSwwLDBdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLDBdLDExMjpbLjIyMjIyLC40MzA1NiwwLDBdLDExMzpbLjIyMjIyLC40MzA1NiwwLDBdLDExNDpbMCwuNDMwNTYsMCwwXSwxMTU6WzAsLjQzMDU2LDAsMF0sMTE2OlswLC41NTM1OCwwLDBdLDExNzpbMCwuNDMwNTYsMCwwXSwxMTg6WzAsLjQzMDU2LDAsMF0sMTE5OlswLC40MzA1NiwwLDBdLDEyMDpbMCwuNDMwNTYsMCwwXSwxMjE6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMjI6WzAsLjQzMDU2LDAsMF0sMTIzOlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI0OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI1OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI2OlswLC42MTExMSwwLDBdLDEyNzpbMCwuNjExMTEsMCwwXSwzMDU6WzAsLjQzMDU2LDAsMF0sNTY3OlsuMjIyMjIsLjQzMDU2LDAsMF0sNzY4OlswLC42MTExMSwwLDBdLDc2OTpbMCwuNjExMTEsMCwwXSw3NzA6WzAsLjYxMTExLDAsMF0sNzcxOlswLC42MTExMSwwLDBdLDc3MjpbMCwuNTY1NTUsMCwwXSw3NzQ6WzAsLjYxMTExLDAsMF0sNzc2OlswLC42MTExMSwwLDBdLDc3ODpbMCwuNjExMTEsMCwwXSw3ODA6WzAsLjU2NTk3LDAsMF0sOTE1OlswLC42MTExMSwwLDBdLDkxNjpbMCwuNjExMTEsMCwwXSw5MjA6WzAsLjYxMTExLDAsMF0sOTIzOlswLC42MTExMSwwLDBdLDkyNjpbMCwuNjExMTEsMCwwXSw5Mjg6WzAsLjYxMTExLDAsMF0sOTMxOlswLC42MTExMSwwLDBdLDkzMzpbMCwuNjExMTEsMCwwXSw5MzQ6WzAsLjYxMTExLDAsMF0sOTM2OlswLC42MTExMSwwLDBdLDkzNzpbMCwuNjExMTEsMCwwXSwyMDE4OlswLC42MTExMSwwLDBdLDIwMTk6WzAsLjYxMTExLDAsMF0sODIxNjpbMCwuNjExMTEsMCwwXSw4MjE3OlswLC42MTExMSwwLDBdLDgyNDI6WzAsLjYxMTExLDAsMF0sOTI1MTpbLjExMTExLC4yMTk0NCwwLDBdfX07ci5kZWZhdWx0PWF9LHt9XSwxMDM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPWUoXCIuL3V0aWxzXCIpO3ZhciBuPWQoYSk7dmFyIGk9ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgbD1kKGkpO3ZhciBvPWUoXCIuL1BhcnNlTm9kZVwiKTt2YXIgdT1kKG8pO3ZhciBzPWUoXCIuL2RlZmluZUZ1bmN0aW9uXCIpO3ZhciBmPWQocyk7ZShcIi4vZnVuY3Rpb25zL2thdGV4XCIpO2UoXCIuL2Z1bmN0aW9ucy9waGFudG9tXCIpO2UoXCIuL2Z1bmN0aW9ucy9tb2RcIik7ZShcIi4vZnVuY3Rpb25zL29wXCIpO2UoXCIuL2Z1bmN0aW9ucy9vcGVyYXRvcm5hbWVcIik7ZShcIi4vZnVuY3Rpb25zL2dlbmZyYWNcIik7ZShcIi4vZnVuY3Rpb25zL2xhcFwiKTtlKFwiLi9mdW5jdGlvbnMvc21hc2hcIik7ZShcIi4vZnVuY3Rpb25zL2RlbGltc2l6aW5nXCIpO2Z1bmN0aW9uIGQoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBjPXMuX2Z1bmN0aW9ucztyLmRlZmF1bHQ9Yzt2YXIgaD1mdW5jdGlvbiBlKHQscixhKXsoMCxmLmRlZmF1bHQpKHtuYW1lczp0LHByb3BzOnIsaGFuZGxlcjphfSl9O2goW1wiXFxcXHNxcnRcIl0se251bUFyZ3M6MSxudW1PcHRpb25hbEFyZ3M6MX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXJbMF07dmFyIG49dFswXTtyZXR1cm57dHlwZTpcInNxcnRcIixib2R5Om4saW5kZXg6YX19KTt2YXIgdj17XCJcXFxcdGV4dFwiOnVuZGVmaW5lZCxcIlxcXFx0ZXh0cm1cIjpcIm1hdGhybVwiLFwiXFxcXHRleHRzZlwiOlwibWF0aHNmXCIsXCJcXFxcdGV4dHR0XCI6XCJtYXRodHRcIixcIlxcXFx0ZXh0bm9ybWFsXCI6XCJtYXRocm1cIixcIlxcXFx0ZXh0YmZcIjpcIm1hdGhiZlwiLFwiXFxcXHRleHRpdFwiOlwidGV4dGl0XCJ9O2goW1wiXFxcXHRleHRcIixcIlxcXFx0ZXh0cm1cIixcIlxcXFx0ZXh0c2ZcIixcIlxcXFx0ZXh0dHRcIixcIlxcXFx0ZXh0bm9ybWFsXCIsXCJcXFxcdGV4dGJmXCIsXCJcXFxcdGV4dGl0XCJdLHtudW1BcmdzOjEsYXJnVHlwZXM6W1widGV4dFwiXSxncmVlZGluZXNzOjIsYWxsb3dlZEluVGV4dDp0cnVlfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJ0ZXh0XCIsYm9keTooMCxzLm9yZGFyZ3VtZW50KShyKSxmb250OnZbZS5mdW5jTmFtZV19fSk7aChbXCJcXFxceG1sQ2xhc3NcIl0se251bUFyZ3M6MixhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcInN0cmluZ1wiLFwib3JpZ2luYWxcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBuPXZvaWQgMDtpZihhLnR5cGU9PT1cIm9yZGdyb3VwXCIpe249YS52YWx1ZX1lbHNle249W2FdfXJldHVybnt0eXBlOlwieG1sQ2xhc3NcIixjbDpyLHZhbHVlOm59fSk7aChbXCJcXFxcdGV4dGNvbG9yXCJdLHtudW1BcmdzOjIsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJjb2xvclwiLFwib3JpZ2luYWxcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwiY29sb3JcIixjb2xvcjpyLnZhbHVlLHZhbHVlOigwLHMub3JkYXJndW1lbnQpKGEpfX0pO2goW1wiXFxcXGNvbG9yXCJdLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJjb2xvclwiXX0sbnVsbCk7aChbXCJcXFxcY29sb3Jib3hcIl0se251bUFyZ3M6MixhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcImNvbG9yXCIsXCJ0ZXh0XCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcImVuY2xvc2VcIixsYWJlbDplLmZ1bmNOYW1lLGJhY2tncm91bmRDb2xvcjpyLGJvZHk6YX19KTtoKFtcIlxcXFxmY29sb3Jib3hcIl0se251bUFyZ3M6MyxhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcImNvbG9yXCIsXCJjb2xvclwiLFwidGV4dFwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIG49dFsyXTtyZXR1cm57dHlwZTpcImVuY2xvc2VcIixsYWJlbDplLmZ1bmNOYW1lLGJhY2tncm91bmRDb2xvcjphLGJvcmRlckNvbG9yOnIsYm9keTpufX0pO2goW1wiXFxcXG92ZXJsaW5lXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcIm92ZXJsaW5lXCIsYm9keTpyfX0pO2goW1wiXFxcXHVuZGVybGluZVwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJ1bmRlcmxpbmVcIixib2R5OnJ9fSk7aChbXCJcXFxccnVsZVwiXSx7bnVtQXJnczoyLG51bU9wdGlvbmFsQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIixcInNpemVcIixcInNpemVcIl19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1yWzBdO3ZhciBuPXRbMF07dmFyIGk9dFsxXTtyZXR1cm57dHlwZTpcInJ1bGVcIixzaGlmdDphJiZhLnZhbHVlLHdpZHRoOm4udmFsdWUsaGVpZ2h0OmkudmFsdWV9fSk7aChbXCJcXFxcY3Vyc29yXCJdLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiLFwic2l6ZVwiXX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXJbMF07dmFyIG49dFswXTtyZXR1cm57dHlwZTpcImN1cnNvclwiLHNoaWZ0OmEmJmEudmFsdWUsaGVpZ2h0Om4udmFsdWV9fSk7aChbXCJcXFxca2VyblwiLFwiXFxcXG1rZXJuXCJdLHtudW1BcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXtyZXR1cm57dHlwZTpcImtlcm5cIixkaW1lbnNpb246dFswXS52YWx1ZX19KTtoKFtcIlxcXFxtYXRob3JkXCIsXCJcXFxcbWF0aGJpblwiLFwiXFxcXG1hdGhyZWxcIixcIlxcXFxtYXRob3BlblwiLFwiXFxcXG1hdGhjbG9zZVwiLFwiXFxcXG1hdGhwdW5jdFwiLFwiXFxcXG1hdGhpbm5lclwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJtY2xhc3NcIixtY2xhc3M6XCJtXCIrZS5mdW5jTmFtZS5zdWJzdHIoNSksdmFsdWU6KDAscy5vcmRhcmd1bWVudCkocil9fSk7aChbXCJcXFxcc3RhY2tyZWxcIl0se251bUFyZ3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIG49bmV3IHUuZGVmYXVsdChcIm9wXCIse3R5cGU6XCJvcFwiLGxpbWl0czp0cnVlLGFsd2F5c0hhbmRsZVN1cFN1Yjp0cnVlLHN5bWJvbDpmYWxzZSx2YWx1ZTooMCxzLm9yZGFyZ3VtZW50KShhKX0sYS5tb2RlKTt2YXIgaT1uZXcgdS5kZWZhdWx0KFwic3Vwc3ViXCIse2Jhc2U6bixzdXA6cixzdWI6bnVsbH0sci5tb2RlKTtyZXR1cm57dHlwZTpcIm1jbGFzc1wiLG1jbGFzczpcIm1yZWxcIix2YWx1ZTpbaV19fSk7dmFyIHA9e1wiXFxcXEJiYlwiOlwiXFxcXG1hdGhiYlwiLFwiXFxcXGJvbGRcIjpcIlxcXFxtYXRoYmZcIixcIlxcXFxmcmFrXCI6XCJcXFxcbWF0aGZyYWtcIn07aChbXCJcXFxcYmx1ZVwiLFwiXFxcXG9yYW5nZVwiLFwiXFxcXHBpbmtcIixcIlxcXFxyZWRcIixcIlxcXFxncmVlblwiLFwiXFxcXGdyYXlcIixcIlxcXFxwdXJwbGVcIixcIlxcXFxibHVlQVwiLFwiXFxcXGJsdWVCXCIsXCJcXFxcYmx1ZUNcIixcIlxcXFxibHVlRFwiLFwiXFxcXGJsdWVFXCIsXCJcXFxcdGVhbEFcIixcIlxcXFx0ZWFsQlwiLFwiXFxcXHRlYWxDXCIsXCJcXFxcdGVhbERcIixcIlxcXFx0ZWFsRVwiLFwiXFxcXGdyZWVuQVwiLFwiXFxcXGdyZWVuQlwiLFwiXFxcXGdyZWVuQ1wiLFwiXFxcXGdyZWVuRFwiLFwiXFxcXGdyZWVuRVwiLFwiXFxcXGdvbGRBXCIsXCJcXFxcZ29sZEJcIixcIlxcXFxnb2xkQ1wiLFwiXFxcXGdvbGREXCIsXCJcXFxcZ29sZEVcIixcIlxcXFxyZWRBXCIsXCJcXFxccmVkQlwiLFwiXFxcXHJlZENcIixcIlxcXFxyZWREXCIsXCJcXFxccmVkRVwiLFwiXFxcXG1hcm9vbkFcIixcIlxcXFxtYXJvb25CXCIsXCJcXFxcbWFyb29uQ1wiLFwiXFxcXG1hcm9vbkRcIixcIlxcXFxtYXJvb25FXCIsXCJcXFxccHVycGxlQVwiLFwiXFxcXHB1cnBsZUJcIixcIlxcXFxwdXJwbGVDXCIsXCJcXFxccHVycGxlRFwiLFwiXFxcXHB1cnBsZUVcIixcIlxcXFxtaW50QVwiLFwiXFxcXG1pbnRCXCIsXCJcXFxcbWludENcIixcIlxcXFxncmF5QVwiLFwiXFxcXGdyYXlCXCIsXCJcXFxcZ3JheUNcIixcIlxcXFxncmF5RFwiLFwiXFxcXGdyYXlFXCIsXCJcXFxcZ3JheUZcIixcIlxcXFxncmF5R1wiLFwiXFxcXGdyYXlIXCIsXCJcXFxcZ3JheUlcIixcIlxcXFxrYUJsdWVcIixcIlxcXFxrYUdyZWVuXCJdLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6M30sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiY29sb3JcIixjb2xvcjpcImthdGV4LVwiK2UuZnVuY05hbWUuc2xpY2UoMSksdmFsdWU6KDAscy5vcmRhcmd1bWVudCkocil9fSk7aChbXCJcXFxcYXJjc2luXCIsXCJcXFxcYXJjY29zXCIsXCJcXFxcYXJjdGFuXCIsXCJcXFxcYXJjdGdcIixcIlxcXFxhcmNjdGdcIixcIlxcXFxhcmdcIixcIlxcXFxjaFwiLFwiXFxcXGNvc1wiLFwiXFxcXGNvc2VjXCIsXCJcXFxcY29zaFwiLFwiXFxcXGNvdFwiLFwiXFxcXGNvdGdcIixcIlxcXFxjb3RoXCIsXCJcXFxcY3NjXCIsXCJcXFxcY3RnXCIsXCJcXFxcY3RoXCIsXCJcXFxcZGVnXCIsXCJcXFxcZGltXCIsXCJcXFxcZXhwXCIsXCJcXFxcaG9tXCIsXCJcXFxca2VyXCIsXCJcXFxcbGdcIixcIlxcXFxsblwiLFwiXFxcXGxvZ1wiLFwiXFxcXHNlY1wiLFwiXFxcXHNpblwiLFwiXFxcXHNpbmhcIixcIlxcXFxzaFwiLFwiXFxcXHRhblwiLFwiXFxcXHRhbmhcIixcIlxcXFx0Z1wiLFwiXFxcXHRoXCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6ZmFsc2Usc3ltYm9sOmZhbHNlLGJvZHk6ZS5mdW5jTmFtZX19KTtoKFtcIlxcXFxkZXRcIixcIlxcXFxnY2RcIixcIlxcXFxpbmZcIixcIlxcXFxsaW1cIixcIlxcXFxsaW1pbmZcIixcIlxcXFxsaW1zdXBcIixcIlxcXFxtYXhcIixcIlxcXFxtaW5cIixcIlxcXFxQclwiLFwiXFxcXHN1cFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsc3ltYm9sOmZhbHNlLGJvZHk6ZS5mdW5jTmFtZX19KTtoKFtcIlxcXFxpbnRcIixcIlxcXFxpaW50XCIsXCJcXFxcaWlpbnRcIixcIlxcXFxvaW50XCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6ZmFsc2Usc3ltYm9sOnRydWUsYm9keTplLmZ1bmNOYW1lfX0pO2goW1wiXFxcXHRpbnlcIixcIlxcXFxzY3JpcHRzaXplXCIsXCJcXFxcZm9vdG5vdGVzaXplXCIsXCJcXFxcc21hbGxcIixcIlxcXFxub3JtYWxzaXplXCIsXCJcXFxcbGFyZ2VcIixcIlxcXFxMYXJnZVwiLFwiXFxcXExBUkdFXCIsXCJcXFxcaHVnZVwiLFwiXFxcXEh1Z2VcIl0se251bUFyZ3M6MH0sbnVsbCk7aChbXCJcXFxcZGlzcGxheXN0eWxlXCIsXCJcXFxcdGV4dHN0eWxlXCIsXCJcXFxcc2NyaXB0c3R5bGVcIixcIlxcXFxzY3JpcHRzY3JpcHRzdHlsZVwiXSx7bnVtQXJnczowfSxudWxsKTtoKFtcIlxcXFxybVwiLFwiXFxcXHNmXCIsXCJcXFxcdHRcIixcIlxcXFxiZlwiLFwiXFxcXGl0XCJdLHtudW1BcmdzOjB9LG51bGwpO2goW1wiXFxcXG1hdGhybVwiLFwiXFxcXG1hdGhpdFwiLFwiXFxcXG1hdGhiZlwiLFwiXFxcXG1hdGhiYlwiLFwiXFxcXG1hdGhjYWxcIixcIlxcXFxtYXRoZnJha1wiLFwiXFxcXG1hdGhzY3JcIixcIlxcXFxtYXRoc2ZcIixcIlxcXFxtYXRodHRcIixcIlxcXFxCYmJcIixcIlxcXFxib2xkXCIsXCJcXFxcZnJha1wiXSx7bnVtQXJnczoxLGdyZWVkaW5lc3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPWUuZnVuY05hbWU7aWYoYSBpbiBwKXthPXBbYV19cmV0dXJue3R5cGU6XCJmb250XCIsZm9udDphLnNsaWNlKDEpLGJvZHk6cn19KTtoKFtcIlxcXFxhY3V0ZVwiLFwiXFxcXGdyYXZlXCIsXCJcXFxcZGRvdFwiLFwiXFxcXHRpbGRlXCIsXCJcXFxcYmFyXCIsXCJcXFxcYnJldmVcIixcIlxcXFxjaGVja1wiLFwiXFxcXGhhdFwiLFwiXFxcXHZlY1wiLFwiXFxcXGRvdFwiLFwiXFxcXHdpZGVoYXRcIixcIlxcXFx3aWRldGlsZGVcIixcIlxcXFxvdmVycmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJsZWZ0YXJyb3dcIixcIlxcXFxPdmVycmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJsZWZ0cmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJncm91cFwiLFwiXFxcXG92ZXJsaW5lc2VnbWVudFwiLFwiXFxcXG92ZXJsZWZ0aGFycG9vblwiLFwiXFxcXG92ZXJyaWdodGhhcnBvb25cIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPSFuLmRlZmF1bHQuY29udGFpbnMoW1wiXFxcXGFjdXRlXCIsXCJcXFxcZ3JhdmVcIixcIlxcXFxkZG90XCIsXCJcXFxcdGlsZGVcIixcIlxcXFxiYXJcIixcIlxcXFxicmV2ZVwiLFwiXFxcXGNoZWNrXCIsXCJcXFxcaGF0XCIsXCJcXFxcdmVjXCIsXCJcXFxcZG90XCJdLGUuZnVuY05hbWUpO3ZhciBpPSFhfHxuLmRlZmF1bHQuY29udGFpbnMoW1wiXFxcXHdpZGVoYXRcIixcIlxcXFx3aWRldGlsZGVcIl0sZS5mdW5jTmFtZSk7cmV0dXJue3R5cGU6XCJhY2NlbnRcIixsYWJlbDplLmZ1bmNOYW1lLGlzU3RyZXRjaHk6YSxpc1NoaWZ0eTppLGJhc2U6cn19KTtoKFtcIlxcXFwnXCIsXCJcXFxcYFwiLFwiXFxcXF5cIixcIlxcXFx+XCIsXCJcXFxcPVwiLFwiXFxcXHVcIixcIlxcXFwuXCIsJ1xcXFxcIicsXCJcXFxcclwiLFwiXFxcXEhcIixcIlxcXFx2XCJdLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlLGFsbG93ZWRJbk1hdGg6ZmFsc2V9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImFjY2VudFwiLGxhYmVsOmUuZnVuY05hbWUsaXNTdHJldGNoeTpmYWxzZSxpc1NoaWZ0eTp0cnVlLGJhc2U6cn19KTtoKFtcIlxcXFxvdmVyYnJhY2VcIixcIlxcXFx1bmRlcmJyYWNlXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImhvcml6QnJhY2VcIixsYWJlbDplLmZ1bmNOYW1lLGlzT3ZlcjovXlxcXFxvdmVyLy50ZXN0KGUuZnVuY05hbWUpLGJhc2U6cn19KTtoKFtcIlxcXFx1bmRlcmxlZnRhcnJvd1wiLFwiXFxcXHVuZGVycmlnaHRhcnJvd1wiLFwiXFxcXHVuZGVybGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx1bmRlcmdyb3VwXCIsXCJcXFxcdW5kZXJsaW5lc2VnbWVudFwiLFwiXFxcXHVuZGVydGlsZGVcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiYWNjZW50VW5kZXJcIixsYWJlbDplLmZ1bmNOYW1lLGJhc2U6cn19KTtoKFtcIlxcXFx4bGVmdGFycm93XCIsXCJcXFxceHJpZ2h0YXJyb3dcIixcIlxcXFx4TGVmdGFycm93XCIsXCJcXFxceFJpZ2h0YXJyb3dcIixcIlxcXFx4bGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx4TGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx4aG9va2xlZnRhcnJvd1wiLFwiXFxcXHhob29rcmlnaHRhcnJvd1wiLFwiXFxcXHhtYXBzdG9cIixcIlxcXFx4cmlnaHRoYXJwb29uZG93blwiLFwiXFxcXHhyaWdodGhhcnBvb251cFwiLFwiXFxcXHhsZWZ0aGFycG9vbmRvd25cIixcIlxcXFx4bGVmdGhhcnBvb251cFwiLFwiXFxcXHhyaWdodGxlZnRoYXJwb29uc1wiLFwiXFxcXHhsZWZ0cmlnaHRoYXJwb29uc1wiLFwiXFxcXHhMb25nZXF1YWxcIixcIlxcXFx4dHdvaGVhZHJpZ2h0YXJyb3dcIixcIlxcXFx4dHdvaGVhZGxlZnRhcnJvd1wiLFwiXFxcXHhMb25nZXF1YWxcIixcIlxcXFx4dG9mcm9tXCJdLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjF9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1yWzBdO3ZhciBuPXRbMF07cmV0dXJue3R5cGU6XCJ4QXJyb3dcIixsYWJlbDplLmZ1bmNOYW1lLGJvZHk6bixiZWxvdzphfX0pO2goW1wiXFxcXGNhbmNlbFwiLFwiXFxcXGJjYW5jZWxcIixcIlxcXFx4Y2FuY2VsXCIsXCJcXFxcc291dFwiLFwiXFxcXGZib3hcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiZW5jbG9zZVwiLGxhYmVsOmUuZnVuY05hbWUsYm9keTpyfX0pO2goW1wiXFxcXG92ZXJcIixcIlxcXFxjaG9vc2VcIixcIlxcXFxhdG9wXCJdLHtudW1BcmdzOjAsaW5maXg6dHJ1ZX0sZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO3N3aXRjaChlLmZ1bmNOYW1lKXtjYXNlXCJcXFxcb3ZlclwiOnQ9XCJcXFxcZnJhY1wiO2JyZWFrO2Nhc2VcIlxcXFxjaG9vc2VcIjp0PVwiXFxcXGJpbm9tXCI7YnJlYWs7Y2FzZVwiXFxcXGF0b3BcIjp0PVwiXFxcXFxcXFxhdG9wZnJhY1wiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIGluZml4IGdlbmZyYWMgY29tbWFuZFwiKX1yZXR1cm57dHlwZTpcImluZml4XCIscmVwbGFjZVdpdGg6dCx0b2tlbjplLnRva2VufX0pO2goW1wiXFxcXFxcXFxcIixcIlxcXFxjclwiXSx7bnVtQXJnczowLG51bU9wdGlvbmFsQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIl19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1yWzBdO3JldHVybnt0eXBlOlwiY3JcIixzaXplOmF9fSk7aChbXCJcXFxcYmVnaW5cIixcIlxcXFxlbmRcIl0se251bUFyZ3M6MSxhcmdUeXBlczpbXCJ0ZXh0XCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07aWYoci50eXBlIT09XCJvcmRncm91cFwiKXt0aHJvdyBuZXcgbC5kZWZhdWx0KFwiSW52YWxpZCBlbnZpcm9ubWVudCBuYW1lXCIscil9dmFyIGE9XCJcIjtmb3IodmFyIG49MDtuPHIudmFsdWUubGVuZ3RoOysrbil7YSs9ci52YWx1ZVtuXS52YWx1ZX1yZXR1cm57dHlwZTpcImVudmlyb25tZW50XCIsbmFtZTphLG5hbWVHcm91cDpyfX0pO2goW1wiXFxcXHJhaXNlYm94XCJdLHtudW1BcmdzOjIsYXJnVHlwZXM6W1wic2l6ZVwiLFwidGV4dFwiXSxhbGxvd2VkSW5UZXh0OnRydWV9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwicmFpc2Vib3hcIixkeTpyLGJvZHk6YSx2YWx1ZTooMCxzLm9yZGFyZ3VtZW50KShhKX19KTtoKFtcIlxcXFx2ZXJiXCJdLHtudW1BcmdzOjAsYWxsb3dlZEluVGV4dDp0cnVlfSxmdW5jdGlvbihlKXt0aHJvdyBuZXcgbC5kZWZhdWx0KFwiXFxcXHZlcmIgZW5kZWQgYnkgZW5kIG9mIGxpbmUgaW5zdGVhZCBvZiBtYXRjaGluZyBkZWxpbWl0ZXJcIil9KX0se1wiLi9QYXJzZUVycm9yXCI6ODQsXCIuL1BhcnNlTm9kZVwiOjg1LFwiLi9kZWZpbmVGdW5jdGlvblwiOjk2LFwiLi9mdW5jdGlvbnMvZGVsaW1zaXppbmdcIjoxMDQsXCIuL2Z1bmN0aW9ucy9nZW5mcmFjXCI6MTA1LFwiLi9mdW5jdGlvbnMva2F0ZXhcIjoxMDYsXCIuL2Z1bmN0aW9ucy9sYXBcIjoxMDcsXCIuL2Z1bmN0aW9ucy9tb2RcIjoxMDgsXCIuL2Z1bmN0aW9ucy9vcFwiOjEwOSxcIi4vZnVuY3Rpb25zL29wZXJhdG9ybmFtZVwiOjExMCxcIi4vZnVuY3Rpb25zL3BoYW50b21cIjoxMTEsXCIuL2Z1bmN0aW9ucy9zbWFzaFwiOjExMixcIi4vdXRpbHNcIjoxMjF9XSwxMDQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi4vYnVpbGRDb21tb25cIik7dmFyIG49eChhKTt2YXIgaT1lKFwiLi4vZGVmaW5lRnVuY3Rpb25cIik7dmFyIGw9eChpKTt2YXIgbz1lKFwiLi4vZGVsaW1pdGVyXCIpO3ZhciB1PXgobyk7dmFyIHM9ZShcIi4uL21hdGhNTFRyZWVcIik7dmFyIGY9eChzKTt2YXIgZD1lKFwiLi4vUGFyc2VFcnJvclwiKTt2YXIgYz14KGQpO3ZhciBoPWUoXCIuLi91dGlsc1wiKTt2YXIgdj14KGgpO3ZhciBwPWUoXCIuLi9idWlsZEhUTUxcIik7dmFyIG09eShwKTt2YXIgZz1lKFwiLi4vYnVpbGRNYXRoTUxcIik7dmFyIGI9eShnKTtmdW5jdGlvbiB5KGUpe2lmKGUmJmUuX19lc01vZHVsZSl7cmV0dXJuIGV9ZWxzZXt2YXIgdD17fTtpZihlIT1udWxsKXtmb3IodmFyIHIgaW4gZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpdFtyXT1lW3JdfX10LmRlZmF1bHQ9ZTtyZXR1cm4gdH19ZnVuY3Rpb24geChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHc9e1wiXFxcXGJpZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjF9LFwiXFxcXEJpZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjJ9LFwiXFxcXGJpZ2dsXCI6e21jbGFzczpcIm1vcGVuXCIsc2l6ZTozfSxcIlxcXFxCaWdnbFwiOnttY2xhc3M6XCJtb3BlblwiLHNpemU6NH0sXCJcXFxcYmlnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjF9LFwiXFxcXEJpZ3JcIjp7bWNsYXNzOlwibWNsb3NlXCIsc2l6ZToyfSxcIlxcXFxiaWdnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjN9LFwiXFxcXEJpZ2dyXCI6e21jbGFzczpcIm1jbG9zZVwiLHNpemU6NH0sXCJcXFxcYmlnbVwiOnttY2xhc3M6XCJtcmVsXCIsc2l6ZToxfSxcIlxcXFxCaWdtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjJ9LFwiXFxcXGJpZ2dtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjN9LFwiXFxcXEJpZ2dtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjR9LFwiXFxcXGJpZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZToxfSxcIlxcXFxCaWdcIjp7bWNsYXNzOlwibW9yZFwiLHNpemU6Mn0sXCJcXFxcYmlnZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZTozfSxcIlxcXFxCaWdnXCI6e21jbGFzczpcIm1vcmRcIixzaXplOjR9fTt2YXIgaz1bXCIoXCIsXCIpXCIsXCJbXCIsXCJcXFxcbGJyYWNrXCIsXCJdXCIsXCJcXFxccmJyYWNrXCIsXCJcXFxce1wiLFwiXFxcXGxicmFjZVwiLFwiXFxcXH1cIixcIlxcXFxyYnJhY2VcIixcIlxcXFxsZmxvb3JcIixcIlxcXFxyZmxvb3JcIixcIlxcXFxsY2VpbFwiLFwiXFxcXHJjZWlsXCIsXCI8XCIsXCI+XCIsXCJcXFxcbGFuZ2xlXCIsXCJcXFxccmFuZ2xlXCIsXCJcXFxcbHRcIixcIlxcXFxndFwiLFwiXFxcXGx2ZXJ0XCIsXCJcXFxccnZlcnRcIixcIlxcXFxsVmVydFwiLFwiXFxcXHJWZXJ0XCIsXCJcXFxcbGdyb3VwXCIsXCJcXFxccmdyb3VwXCIsXCJcXFxcbG1vdXN0YWNoZVwiLFwiXFxcXHJtb3VzdGFjaGVcIixcIi9cIixcIlxcXFxiYWNrc2xhc2hcIixcInxcIixcIlxcXFx2ZXJ0XCIsXCJcXFxcfFwiLFwiXFxcXFZlcnRcIixcIlxcXFx1cGFycm93XCIsXCJcXFxcVXBhcnJvd1wiLFwiXFxcXGRvd25hcnJvd1wiLFwiXFxcXERvd25hcnJvd1wiLFwiXFxcXHVwZG93bmFycm93XCIsXCJcXFxcVXBkb3duYXJyb3dcIixcIi5cIl07ZnVuY3Rpb24gTShlLHQpe2lmKHYuZGVmYXVsdC5jb250YWlucyhrLGUudmFsdWUpKXtyZXR1cm4gZX1lbHNle3Rocm93IG5ldyBjLmRlZmF1bHQoXCJJbnZhbGlkIGRlbGltaXRlcjogJ1wiK2UudmFsdWUrXCInIGFmdGVyICdcIit0LmZ1bmNOYW1lK1wiJ1wiLGUpfX0oMCxsLmRlZmF1bHQpKHt0eXBlOlwiZGVsaW1zaXppbmdcIixuYW1lczpbXCJcXFxcYmlnbFwiLFwiXFxcXEJpZ2xcIixcIlxcXFxiaWdnbFwiLFwiXFxcXEJpZ2dsXCIsXCJcXFxcYmlnclwiLFwiXFxcXEJpZ3JcIixcIlxcXFxiaWdnclwiLFwiXFxcXEJpZ2dyXCIsXCJcXFxcYmlnbVwiLFwiXFxcXEJpZ21cIixcIlxcXFxiaWdnbVwiLFwiXFxcXEJpZ2dtXCIsXCJcXFxcYmlnXCIsXCJcXFxcQmlnXCIsXCJcXFxcYmlnZ1wiLFwiXFxcXEJpZ2dcIl0scHJvcHM6e251bUFyZ3M6MX0saGFuZGxlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9TShyWzBdLHQpO3JldHVybnt0eXBlOlwiZGVsaW1zaXppbmdcIixzaXplOndbdC5mdW5jTmFtZV0uc2l6ZSxtY2xhc3M6d1t0LmZ1bmNOYW1lXS5tY2xhc3MsdmFsdWU6YS52YWx1ZX19LGh0bWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT10LnZhbHVlLnZhbHVlO2lmKGE9PT1cIi5cIil7cmV0dXJuIG4uZGVmYXVsdC5tYWtlU3BhbihbdC52YWx1ZS5tY2xhc3NdKX1yZXR1cm4gdS5kZWZhdWx0LnNpemVkRGVsaW0oYSx0LnZhbHVlLnNpemUscix0Lm1vZGUsW3QudmFsdWUubWNsYXNzXSl9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0KXt2YXIgcj1bXTtpZih0LnZhbHVlLnZhbHVlIT09XCIuXCIpe3IucHVzaChiLm1ha2VUZXh0KHQudmFsdWUudmFsdWUsdC5tb2RlKSl9dmFyIGE9bmV3IGYuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIscik7aWYodC52YWx1ZS5tY2xhc3M9PT1cIm1vcGVuXCJ8fHQudmFsdWUubWNsYXNzPT09XCJtY2xvc2VcIil7YS5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKX1lbHNle2Euc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcImZhbHNlXCIpfXJldHVybiBhfX0pOygwLGwuZGVmYXVsdCkoe3R5cGU6XCJsZWZ0cmlnaHRcIixuYW1lczpbXCJcXFxcbGVmdFwiLFwiXFxcXHJpZ2h0XCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPU0oclswXSx0KTtyZXR1cm57dHlwZTpcImxlZnRyaWdodFwiLHZhbHVlOmEudmFsdWV9fSxodG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9bS5idWlsZEV4cHJlc3Npb24odC52YWx1ZS5ib2R5LHIsdHJ1ZSk7dmFyIGk9MDt2YXIgbD0wO3ZhciBvPWZhbHNlO2Zvcih2YXIgcz0wO3M8YS5sZW5ndGg7cysrKXtpZihhW3NdLmlzTWlkZGxlKXtvPXRydWV9ZWxzZXtpPU1hdGgubWF4KGFbc10uaGVpZ2h0LGkpO2w9TWF0aC5tYXgoYVtzXS5kZXB0aCxsKX19aSo9ci5zaXplTXVsdGlwbGllcjtsKj1yLnNpemVNdWx0aXBsaWVyO3ZhciBmPXZvaWQgMDtpZih0LnZhbHVlLmxlZnQ9PT1cIi5cIil7Zj1tLm1ha2VOdWxsRGVsaW1pdGVyKHIsW1wibW9wZW5cIl0pfWVsc2V7Zj11LmRlZmF1bHQubGVmdFJpZ2h0RGVsaW0odC52YWx1ZS5sZWZ0LGksbCxyLHQubW9kZSxbXCJtb3BlblwiXSl9YS51bnNoaWZ0KGYpO2lmKG8pe2Zvcih2YXIgZD0xO2Q8YS5sZW5ndGg7ZCsrKXt2YXIgYz1hW2RdO2lmKGMuaXNNaWRkbGUpe2FbZF09dS5kZWZhdWx0LmxlZnRSaWdodERlbGltKGMuaXNNaWRkbGUudmFsdWUsaSxsLGMuaXNNaWRkbGUub3B0aW9ucyx0Lm1vZGUsW10pO3ZhciBoPW0uc3BsaWNlU3BhY2VzKGMuY2hpbGRyZW4sMCk7aWYoaCl7bi5kZWZhdWx0LnByZXBlbmRDaGlsZHJlbihhW2RdLGgpfX19fXZhciB2PXZvaWQgMDtpZih0LnZhbHVlLnJpZ2h0PT09XCIuXCIpe3Y9bS5tYWtlTnVsbERlbGltaXRlcihyLFtcIm1jbG9zZVwiXSl9ZWxzZXt2PXUuZGVmYXVsdC5sZWZ0UmlnaHREZWxpbSh0LnZhbHVlLnJpZ2h0LGksbCxyLHQubW9kZSxbXCJtY2xvc2VcIl0pfWEucHVzaCh2KTtyZXR1cm4gbi5kZWZhdWx0Lm1ha2VTcGFuKFtcIm1pbm5lclwiXSxhLHIpfSxtYXRobWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1iLmJ1aWxkRXhwcmVzc2lvbih0LnZhbHVlLmJvZHkscik7aWYodC52YWx1ZS5sZWZ0IT09XCIuXCIpe3ZhciBuPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLFtiLm1ha2VUZXh0KHQudmFsdWUubGVmdCx0Lm1vZGUpXSk7bi5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTthLnVuc2hpZnQobil9aWYodC52YWx1ZS5yaWdodCE9PVwiLlwiKXt2YXIgaT1uZXcgZi5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbYi5tYWtlVGV4dCh0LnZhbHVlLnJpZ2h0LHQubW9kZSldKTtpLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO2EucHVzaChpKX12YXIgbD1uZXcgZi5kZWZhdWx0Lk1hdGhOb2RlKFwibXJvd1wiLGEpO3JldHVybiBsfX0pOygwLGwuZGVmYXVsdCkoe3R5cGU6XCJtaWRkbGVcIixuYW1lczpbXCJcXFxcbWlkZGxlXCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPU0oclswXSx0KTtpZighdC5wYXJzZXIubGVmdHJpZ2h0RGVwdGgpe3Rocm93IG5ldyBjLmRlZmF1bHQoXCJcXFxcbWlkZGxlIHdpdGhvdXQgcHJlY2VkaW5nIFxcXFxsZWZ0XCIsYSl9cmV0dXJue3R5cGU6XCJtaWRkbGVcIix2YWx1ZTphLnZhbHVlfX0saHRtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXZvaWQgMDtpZih0LnZhbHVlLnZhbHVlPT09XCIuXCIpe2E9bS5tYWtlTnVsbERlbGltaXRlcihyLFtdKX1lbHNle2E9dS5kZWZhdWx0LnNpemVkRGVsaW0odC52YWx1ZS52YWx1ZSwxLHIsdC5tb2RlLFtdKTthLmlzTWlkZGxlPXt2YWx1ZTp0LnZhbHVlLnZhbHVlLG9wdGlvbnM6cn19cmV0dXJuIGF9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLFtiLm1ha2VUZXh0KHQudmFsdWUubWlkZGxlLHQubW9kZSldKTthLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO3JldHVybiBhfX0pfSx7XCIuLi9QYXJzZUVycm9yXCI6ODQsXCIuLi9idWlsZENvbW1vblwiOjkxLFwiLi4vYnVpbGRIVE1MXCI6OTIsXCIuLi9idWlsZE1hdGhNTFwiOjkzLFwiLi4vZGVmaW5lRnVuY3Rpb25cIjo5NixcIi4uL2RlbGltaXRlclwiOjk3LFwiLi4vbWF0aE1MVHJlZVwiOjExNCxcIi4uL3V0aWxzXCI6MTIxfV0sMTA1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4uL2RlZmluZUZ1bmN0aW9uXCIpO3ZhciBuPWIoYSk7dmFyIGk9ZShcIi4uL2J1aWxkQ29tbW9uXCIpO3ZhciBsPWIoaSk7dmFyIG89ZShcIi4uL2RlbGltaXRlclwiKTt2YXIgdT1iKG8pO3ZhciBzPWUoXCIuLi9tYXRoTUxUcmVlXCIpO3ZhciBmPWIocyk7dmFyIGQ9ZShcIi4uL1N0eWxlXCIpO3ZhciBjPWIoZCk7dmFyIGg9ZShcIi4uL2J1aWxkSFRNTFwiKTt2YXIgdj1nKGgpO3ZhciBwPWUoXCIuLi9idWlsZE1hdGhNTFwiKTt2YXIgbT1nKHApO2Z1bmN0aW9uIGcoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXtyZXR1cm4gZX1lbHNle3ZhciB0PXt9O2lmKGUhPW51bGwpe2Zvcih2YXIgciBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl0W3JdPWVbcl19fXQuZGVmYXVsdD1lO3JldHVybiB0fX1mdW5jdGlvbiBiKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0oMCxuLmRlZmF1bHQpKHt0eXBlOlwiZ2VuZnJhY1wiLG5hbWVzOltcIlxcXFxkZnJhY1wiLFwiXFxcXGZyYWNcIixcIlxcXFx0ZnJhY1wiLFwiXFxcXGRiaW5vbVwiLFwiXFxcXGJpbm9tXCIsXCJcXFxcdGJpbm9tXCIsXCJcXFxcXFxcXGF0b3BmcmFjXCJdLHByb3BzOntudW1BcmdzOjIsZ3JlZWRpbmVzczoyfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yWzBdO3ZhciBuPXJbMV07dmFyIGk9dm9pZCAwO3ZhciBsPW51bGw7dmFyIG89bnVsbDt2YXIgdT1cImF1dG9cIjtzd2l0Y2godC5mdW5jTmFtZSl7Y2FzZVwiXFxcXGRmcmFjXCI6Y2FzZVwiXFxcXGZyYWNcIjpjYXNlXCJcXFxcdGZyYWNcIjppPXRydWU7YnJlYWs7Y2FzZVwiXFxcXFxcXFxhdG9wZnJhY1wiOmk9ZmFsc2U7YnJlYWs7Y2FzZVwiXFxcXGRiaW5vbVwiOmNhc2VcIlxcXFxiaW5vbVwiOmNhc2VcIlxcXFx0Ymlub21cIjppPWZhbHNlO2w9XCIoXCI7bz1cIilcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBnZW5mcmFjIGNvbW1hbmRcIil9c3dpdGNoKHQuZnVuY05hbWUpe2Nhc2VcIlxcXFxkZnJhY1wiOmNhc2VcIlxcXFxkYmlub21cIjp1PVwiZGlzcGxheVwiO2JyZWFrO2Nhc2VcIlxcXFx0ZnJhY1wiOmNhc2VcIlxcXFx0Ymlub21cIjp1PVwidGV4dFwiO2JyZWFrfXJldHVybnt0eXBlOlwiZ2VuZnJhY1wiLG51bWVyOmEsZGVub206bixoYXNCYXJMaW5lOmksbGVmdERlbGltOmwscmlnaHREZWxpbTpvLHNpemU6dX19LGh0bWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yLnN0eWxlO2lmKHQudmFsdWUuc2l6ZT09PVwiZGlzcGxheVwiKXthPWMuZGVmYXVsdC5ESVNQTEFZfWVsc2UgaWYodC52YWx1ZS5zaXplPT09XCJ0ZXh0XCIpe2E9Yy5kZWZhdWx0LlRFWFR9dmFyIG49YS5mcmFjTnVtKCk7dmFyIGk9YS5mcmFjRGVuKCk7dmFyIG89dm9pZCAwO289ci5oYXZpbmdTdHlsZShuKTt2YXIgcz12LmJ1aWxkR3JvdXAodC52YWx1ZS5udW1lcixvLHIpO289ci5oYXZpbmdTdHlsZShpKTt2YXIgZj12LmJ1aWxkR3JvdXAodC52YWx1ZS5kZW5vbSxvLHIpO3ZhciBkPXZvaWQgMDt2YXIgaD12b2lkIDA7dmFyIHA9dm9pZCAwO2lmKHQudmFsdWUuaGFzQmFyTGluZSl7ZD12Lm1ha2VMaW5lU3BhbihcImZyYWMtbGluZVwiLHIpO2g9ZC5oZWlnaHQ7cD1kLmhlaWdodH1lbHNle2Q9bnVsbDtoPTA7cD1yLmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3N9dmFyIG09dm9pZCAwO3ZhciBnPXZvaWQgMDt2YXIgYj12b2lkIDA7aWYoYS5zaXplPT09Yy5kZWZhdWx0LkRJU1BMQVkuc2l6ZSl7bT1yLmZvbnRNZXRyaWNzKCkubnVtMTtpZihoPjApe2c9MypwfWVsc2V7Zz03KnB9Yj1yLmZvbnRNZXRyaWNzKCkuZGVub20xfWVsc2V7aWYoaD4wKXttPXIuZm9udE1ldHJpY3MoKS5udW0yO2c9cH1lbHNle209ci5mb250TWV0cmljcygpLm51bTM7Zz0zKnB9Yj1yLmZvbnRNZXRyaWNzKCkuZGVub20yfXZhciB5PXZvaWQgMDtpZihoPT09MCl7dmFyIHg9bS1zLmRlcHRoLShmLmhlaWdodC1iKTtpZih4PGcpe20rPS41KihnLXgpO2IrPS41KihnLXgpfXk9bC5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiaW5kaXZpZHVhbFNoaWZ0XCIsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06ZixzaGlmdDpifSx7dHlwZTpcImVsZW1cIixlbGVtOnMsc2hpZnQ6LW19XX0scil9ZWxzZXt2YXIgdz1yLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDtpZihtLXMuZGVwdGgtKHcrLjUqaCk8Zyl7bSs9Zy0obS1zLmRlcHRoLSh3Ky41KmgpKX1pZih3LS41KmgtKGYuaGVpZ2h0LWIpPGcpe2IrPWctKHctLjUqaC0oZi5oZWlnaHQtYikpfXZhciBrPS0ody0uNSpoKTt5PWwuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImluZGl2aWR1YWxTaGlmdFwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOmYsc2hpZnQ6Yn0se3R5cGU6XCJlbGVtXCIsZWxlbTpkLHNoaWZ0Omt9LHt0eXBlOlwiZWxlbVwiLGVsZW06cyxzaGlmdDotbX1dfSxyKX1vPXIuaGF2aW5nU3R5bGUoYSk7eS5oZWlnaHQqPW8uc2l6ZU11bHRpcGxpZXIvci5zaXplTXVsdGlwbGllcjt5LmRlcHRoKj1vLnNpemVNdWx0aXBsaWVyL3Iuc2l6ZU11bHRpcGxpZXI7dmFyIE09dm9pZCAwO2lmKGEuc2l6ZT09PWMuZGVmYXVsdC5ESVNQTEFZLnNpemUpe009ci5mb250TWV0cmljcygpLmRlbGltMX1lbHNle009ci5mb250TWV0cmljcygpLmRlbGltMn12YXIgXz12b2lkIDA7dmFyIFM9dm9pZCAwO2lmKHQudmFsdWUubGVmdERlbGltPT1udWxsKXtfPXYubWFrZU51bGxEZWxpbWl0ZXIocixbXCJtb3BlblwiXSl9ZWxzZXtfPXUuZGVmYXVsdC5jdXN0b21TaXplZERlbGltKHQudmFsdWUubGVmdERlbGltLE0sdHJ1ZSxyLmhhdmluZ1N0eWxlKGEpLHQubW9kZSxbXCJtb3BlblwiXSl9aWYodC52YWx1ZS5yaWdodERlbGltPT1udWxsKXtTPXYubWFrZU51bGxEZWxpbWl0ZXIocixbXCJtY2xvc2VcIl0pfWVsc2V7Uz11LmRlZmF1bHQuY3VzdG9tU2l6ZWREZWxpbSh0LnZhbHVlLnJpZ2h0RGVsaW0sTSx0cnVlLHIuaGF2aW5nU3R5bGUoYSksdC5tb2RlLFtcIm1jbG9zZVwiXSl9cmV0dXJuIGwuZGVmYXVsdC5tYWtlU3BhbihbXCJtb3JkXCJdLmNvbmNhdChvLnNpemluZ0NsYXNzZXMocikpLFtfLGwuZGVmYXVsdC5tYWtlU3BhbihbXCJtZnJhY1wiXSxbeV0pLFNdLHIpfSxtYXRobWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1uZXcgZi5kZWZhdWx0Lk1hdGhOb2RlKFwibWZyYWNcIixbbS5idWlsZEdyb3VwKHQudmFsdWUubnVtZXIsciksbS5idWlsZEdyb3VwKHQudmFsdWUuZGVub20scildKTtpZighdC52YWx1ZS5oYXNCYXJMaW5lKXthLnNldEF0dHJpYnV0ZShcImxpbmV0aGlja25lc3NcIixcIjBweFwiKX1pZih0LnZhbHVlLmxlZnREZWxpbSE9bnVsbHx8dC52YWx1ZS5yaWdodERlbGltIT1udWxsKXt2YXIgbj1bXTtpZih0LnZhbHVlLmxlZnREZWxpbSE9bnVsbCl7dmFyIGk9bmV3IGYuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW25ldyBmLmRlZmF1bHQuVGV4dE5vZGUodC52YWx1ZS5sZWZ0RGVsaW0pXSk7aS5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTtuLnB1c2goaSl9bi5wdXNoKGEpO2lmKHQudmFsdWUucmlnaHREZWxpbSE9bnVsbCl7dmFyIGw9bmV3IGYuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW25ldyBmLmRlZmF1bHQuVGV4dE5vZGUodC52YWx1ZS5yaWdodERlbGltKV0pO2wuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7bi5wdXNoKGwpfXZhciBvPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtcm93XCIsbik7cmV0dXJuIG99cmV0dXJuIGF9fSl9LHtcIi4uL1N0eWxlXCI6ODksXCIuLi9idWlsZENvbW1vblwiOjkxLFwiLi4vYnVpbGRIVE1MXCI6OTIsXCIuLi9idWlsZE1hdGhNTFwiOjkzLFwiLi4vZGVmaW5lRnVuY3Rpb25cIjo5NixcIi4uL2RlbGltaXRlclwiOjk3LFwiLi4vbWF0aE1MVHJlZVwiOjExNH1dLDEwNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuLi9kZWZpbmVGdW5jdGlvblwiKTt2YXIgbj1zKGEpO3ZhciBpPWUoXCIuLi9idWlsZENvbW1vblwiKTt2YXIgbD1zKGkpO3ZhciBvPWUoXCIuLi9tYXRoTUxUcmVlXCIpO3ZhciB1PXMobyk7ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KDAsbi5kZWZhdWx0KSh7dHlwZTpcImthdGV4XCIsbmFtZXM6W1wiXFxcXEthVGVYXCJdLHByb3BzOntudW1BcmdzOjAsYWxsb3dlZEluVGV4dDp0cnVlfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXtyZXR1cm57dHlwZTpcImthdGV4XCJ9fSxodG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9bC5kZWZhdWx0Lm1ha2VTcGFuKFtcImtcIl0sW2wuZGVmYXVsdC5tYXRoc3ltKFwiS1wiLHQubW9kZSldLHIpO3ZhciBuPWwuZGVmYXVsdC5tYWtlU3BhbihbXCJhXCJdLFtsLmRlZmF1bHQubWF0aHN5bShcIkFcIix0Lm1vZGUpXSxyKTtuLmhlaWdodD0obi5oZWlnaHQrLjIpKi43NTtuLmRlcHRoPShuLmhlaWdodC0uMikqLjc1O3ZhciBpPWwuZGVmYXVsdC5tYWtlU3BhbihbXCJ0XCJdLFtsLmRlZmF1bHQubWF0aHN5bShcIlRcIix0Lm1vZGUpXSxyKTt2YXIgbz1sLmRlZmF1bHQubWFrZVNwYW4oW1wiZVwiXSxbbC5kZWZhdWx0Lm1hdGhzeW0oXCJFXCIsdC5tb2RlKV0scik7by5oZWlnaHQ9by5oZWlnaHQtLjIxNTU7by5kZXB0aD1vLmRlcHRoKy4yMTU1O3ZhciB1PWwuZGVmYXVsdC5tYWtlU3BhbihbXCJ4XCJdLFtsLmRlZmF1bHQubWF0aHN5bShcIlhcIix0Lm1vZGUpXSxyKTtyZXR1cm4gbC5kZWZhdWx0Lm1ha2VTcGFuKFtcIm1vcmRcIixcImthdGV4LWxvZ29cIl0sW2EsbixpLG8sdV0scil9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtdGV4dFwiLFtuZXcgdS5kZWZhdWx0LlRleHROb2RlKFwiS2FUZVhcIildKTtyZXR1cm4gYX19KX0se1wiLi4vYnVpbGRDb21tb25cIjo5MSxcIi4uL2RlZmluZUZ1bmN0aW9uXCI6OTYsXCIuLi9tYXRoTUxUcmVlXCI6MTE0fV0sMTA3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4uL2RlZmluZUZ1bmN0aW9uXCIpO3ZhciBuPXYoYSk7dmFyIGk9ZShcIi4uL2J1aWxkQ29tbW9uXCIpO3ZhciBsPXYoaSk7dmFyIG89ZShcIi4uL21hdGhNTFRyZWVcIik7dmFyIHU9dihvKTt2YXIgcz1lKFwiLi4vYnVpbGRIVE1MXCIpO3ZhciBmPWgocyk7dmFyIGQ9ZShcIi4uL2J1aWxkTWF0aE1MXCIpO3ZhciBjPWgoZCk7ZnVuY3Rpb24gaChlKXtpZihlJiZlLl9fZXNNb2R1bGUpe3JldHVybiBlfWVsc2V7dmFyIHQ9e307aWYoZSE9bnVsbCl7Zm9yKHZhciByIGluIGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXRbcl09ZVtyXX19dC5kZWZhdWx0PWU7cmV0dXJuIHR9fWZ1bmN0aW9uIHYoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fSgwLG4uZGVmYXVsdCkoe3R5cGU6XCJsYXBcIixuYW1lczpbXCJcXFxcbWF0aGxsYXBcIixcIlxcXFxtYXRocmxhcFwiLFwiXFxcXG1hdGhjbGFwXCJdLHByb3BzOntcbm51bUFyZ3M6MSxhbGxvd2VkSW5UZXh0OnRydWV9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXJbMF07cmV0dXJue3R5cGU6XCJsYXBcIixhbGlnbm1lbnQ6dC5mdW5jTmFtZS5zbGljZSg1KSxib2R5OmF9fSxodG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9dm9pZCAwO2lmKHQudmFsdWUuYWxpZ25tZW50PT09XCJjbGFwXCIpe2E9bC5kZWZhdWx0Lm1ha2VTcGFuKFtdLFtmLmJ1aWxkR3JvdXAodC52YWx1ZS5ib2R5LHIpXSk7YT1sLmRlZmF1bHQubWFrZVNwYW4oW1wiaW5uZXJcIl0sW2FdLHIpfWVsc2V7YT1sLmRlZmF1bHQubWFrZVNwYW4oW1wiaW5uZXJcIl0sW2YuYnVpbGRHcm91cCh0LnZhbHVlLmJvZHkscildKX12YXIgbj1sLmRlZmF1bHQubWFrZVNwYW4oW1wiZml4XCJdLFtdKTtyZXR1cm4gbC5kZWZhdWx0Lm1ha2VTcGFuKFtcIm1vcmRcIix0LnZhbHVlLmFsaWdubWVudF0sW2Esbl0scil9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtcGFkZGVkXCIsW2MuYnVpbGRHcm91cCh0LnZhbHVlLmJvZHkscildKTtpZih0LnZhbHVlLmFsaWdubWVudCE9PVwicmxhcFwiKXt2YXIgbj10LnZhbHVlLmFsaWdubWVudD09PVwibGxhcFwiP1wiLTFcIjpcIi0wLjVcIjthLnNldEF0dHJpYnV0ZShcImxzcGFjZVwiLG4rXCJ3aWR0aFwiKX1hLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwcHhcIik7cmV0dXJuIGF9fSl9LHtcIi4uL2J1aWxkQ29tbW9uXCI6OTEsXCIuLi9idWlsZEhUTUxcIjo5MixcIi4uL2J1aWxkTWF0aE1MXCI6OTMsXCIuLi9kZWZpbmVGdW5jdGlvblwiOjk2LFwiLi4vbWF0aE1MVHJlZVwiOjExNH1dLDEwODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuLi9kZWZpbmVGdW5jdGlvblwiKTt2YXIgbj1tKGEpO3ZhciBpPWUoXCIuLi9idWlsZENvbW1vblwiKTt2YXIgbD1tKGkpO3ZhciBvPWUoXCIuLi9tYXRoTUxUcmVlXCIpO3ZhciB1PW0obyk7dmFyIHM9ZShcIi4uL1N0eWxlXCIpO3ZhciBmPW0ocyk7dmFyIGQ9ZShcIi4uL2J1aWxkSFRNTFwiKTt2YXIgYz1wKGQpO3ZhciBoPWUoXCIuLi9idWlsZE1hdGhNTFwiKTt2YXIgdj1wKGgpO2Z1bmN0aW9uIHAoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXtyZXR1cm4gZX1lbHNle3ZhciB0PXt9O2lmKGUhPW51bGwpe2Zvcih2YXIgciBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl0W3JdPWVbcl19fXQuZGVmYXVsdD1lO3JldHVybiB0fX1mdW5jdGlvbiBtKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgZz1mdW5jdGlvbiBlKHQscil7dmFyIGE9W107aWYodC52YWx1ZS5tb2RUeXBlPT09XCJibW9kXCIpe2lmKCFyLnN0eWxlLmlzVGlnaHQoKSl7YS5wdXNoKGwuZGVmYXVsdC5tYWtlU3BhbihbXCJtc3BhY2VcIixcIm5lZ2F0aXZlbWVkaXVtc3BhY2VcIl0sW10scikpfWEucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJ0aGlja3NwYWNlXCJdLFtdLHIpKX1lbHNlIGlmKHIuc3R5bGUuc2l6ZT09PWYuZGVmYXVsdC5ESVNQTEFZLnNpemUpe2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJxdWFkXCJdLFtdLHIpKX1lbHNlIGlmKHQudmFsdWUubW9kVHlwZT09PVwibW9kXCIpe2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJ0d2VsdmVtdXNwYWNlXCJdLFtdLHIpKX1lbHNle2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJlaWdodG11c3BhY2VcIl0sW10scikpfWlmKHQudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fHQudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXthLnB1c2gobC5kZWZhdWx0Lm1hdGhzeW0oXCIoXCIsdC5tb2RlKSl9aWYodC52YWx1ZS5tb2RUeXBlIT09XCJwb2RcIil7dmFyIG49W2wuZGVmYXVsdC5tYXRoc3ltKFwibVwiLHQubW9kZSksbC5kZWZhdWx0Lm1hdGhzeW0oXCJvXCIsdC5tb2RlKSxsLmRlZmF1bHQubWF0aHN5bShcImRcIix0Lm1vZGUpXTtpZih0LnZhbHVlLm1vZFR5cGU9PT1cImJtb2RcIil7YS5wdXNoKGwuZGVmYXVsdC5tYWtlU3BhbihbXCJtYmluXCJdLG4scikpO2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJ0aGlja3NwYWNlXCJdLFtdLHIpKTtpZighci5zdHlsZS5pc1RpZ2h0KCkpe2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJuZWdhdGl2ZW1lZGl1bXNwYWNlXCJdLFtdLHIpKX19ZWxzZXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhLG4pO2EucHVzaChsLmRlZmF1bHQubWFrZVNwYW4oW1wibXNwYWNlXCIsXCJzaXhtdXNwYWNlXCJdLFtdLHIpKX19aWYodC52YWx1ZS52YWx1ZSl7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYSxjLmJ1aWxkRXhwcmVzc2lvbih0LnZhbHVlLnZhbHVlLHIsZmFsc2UpKX1pZih0LnZhbHVlLm1vZFR5cGU9PT1cInBvZFwifHx0LnZhbHVlLm1vZFR5cGU9PT1cInBtb2RcIil7YS5wdXNoKGwuZGVmYXVsdC5tYXRoc3ltKFwiKVwiLHQubW9kZSkpfXJldHVybiBsLmRlZmF1bHQubWFrZUZyYWdtZW50KGEpfTt2YXIgYj1mdW5jdGlvbiBlKHQscil7dmFyIGE9W107aWYodC52YWx1ZS5tb2RUeXBlPT09XCJwb2RcInx8dC52YWx1ZS5tb2RUeXBlPT09XCJwbW9kXCIpe2EucHVzaChuZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbdi5tYWtlVGV4dChcIihcIix0Lm1vZGUpXSkpfWlmKHQudmFsdWUubW9kVHlwZSE9PVwicG9kXCIpe2EucHVzaChuZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbdi5tYWtlVGV4dChcIm1vZFwiLHQubW9kZSldKSl9aWYodC52YWx1ZS52YWx1ZSl7dmFyIG49bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1zcGFjZVwiKTtuLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwLjMzMzMzM2VtXCIpO2EucHVzaChuKTthPWEuY29uY2F0KHYuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscikpfWlmKHQudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fHQudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXthLnB1c2gobmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsW3YubWFrZVRleHQoXCIpXCIsdC5tb2RlKV0pKX1yZXR1cm4gbmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1vXCIsYSl9OygwLG4uZGVmYXVsdCkoe3R5cGU6XCJtb2RcIixuYW1lczpbXCJcXFxcYm1vZFwiXSxwcm9wczp7bnVtQXJnczowfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXtyZXR1cm57dHlwZTpcIm1vZFwiLG1vZFR5cGU6XCJibW9kXCIsdmFsdWU6bnVsbH19LGh0bWxCdWlsZGVyOmcsbWF0aG1sQnVpbGRlcjpifSk7KDAsbi5kZWZhdWx0KSh7dHlwZTpcIm1vZFwiLG5hbWVzOltcIlxcXFxwb2RcIixcIlxcXFxwbW9kXCIsXCJcXFxcbW9kXCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBuPXJbMF07cmV0dXJue3R5cGU6XCJtb2RcIixtb2RUeXBlOnQuZnVuY05hbWUuc3Vic3RyKDEpLHZhbHVlOigwLGEub3JkYXJndW1lbnQpKG4pfX0saHRtbEJ1aWxkZXI6ZyxtYXRobWxCdWlsZGVyOmJ9KX0se1wiLi4vU3R5bGVcIjo4OSxcIi4uL2J1aWxkQ29tbW9uXCI6OTEsXCIuLi9idWlsZEhUTUxcIjo5MixcIi4uL2J1aWxkTWF0aE1MXCI6OTMsXCIuLi9kZWZpbmVGdW5jdGlvblwiOjk2LFwiLi4vbWF0aE1MVHJlZVwiOjExNH1dLDEwOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuLi9kZWZpbmVGdW5jdGlvblwiKTt2YXIgbj14KGEpO3ZhciBpPWUoXCIuLi9idWlsZENvbW1vblwiKTt2YXIgbD14KGkpO3ZhciBvPWUoXCIuLi9kb21UcmVlXCIpO3ZhciB1PXgobyk7dmFyIHM9ZShcIi4uL21hdGhNTFRyZWVcIik7dmFyIGY9eChzKTt2YXIgZD1lKFwiLi4vdXRpbHNcIik7dmFyIGM9eChkKTt2YXIgaD1lKFwiLi4vU3R5bGVcIik7dmFyIHY9eChoKTt2YXIgcD1lKFwiLi4vYnVpbGRIVE1MXCIpO3ZhciBtPXkocCk7dmFyIGc9ZShcIi4uL2J1aWxkTWF0aE1MXCIpO3ZhciBiPXkoZyk7ZnVuY3Rpb24geShlKXtpZihlJiZlLl9fZXNNb2R1bGUpe3JldHVybiBlfWVsc2V7dmFyIHQ9e307aWYoZSE9bnVsbCl7Zm9yKHZhciByIGluIGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXRbcl09ZVtyXX19dC5kZWZhdWx0PWU7cmV0dXJuIHR9fWZ1bmN0aW9uIHgoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB3PWZ1bmN0aW9uIGUodCxyKXt2YXIgYT12b2lkIDA7dmFyIG49dm9pZCAwO3ZhciBpPWZhbHNlO2lmKHQudHlwZT09PVwic3Vwc3ViXCIpe2E9dC52YWx1ZS5zdXA7bj10LnZhbHVlLnN1Yjt0PXQudmFsdWUuYmFzZTtpPXRydWV9dmFyIG89ci5zdHlsZTt2YXIgcz1bXCJcXFxcc21hbGxpbnRcIl07dmFyIGY9ZmFsc2U7aWYoby5zaXplPT09di5kZWZhdWx0LkRJU1BMQVkuc2l6ZSYmdC52YWx1ZS5zeW1ib2wmJiFjLmRlZmF1bHQuY29udGFpbnMocyx0LnZhbHVlLmJvZHkpKXtmPXRydWV9dmFyIGQ9dm9pZCAwO2lmKHQudmFsdWUuc3ltYm9sKXt2YXIgaD1mP1wiU2l6ZTItUmVndWxhclwiOlwiU2l6ZTEtUmVndWxhclwiO2Q9bC5kZWZhdWx0Lm1ha2VTeW1ib2wodC52YWx1ZS5ib2R5LGgsXCJtYXRoXCIscixbXCJtb3BcIixcIm9wLXN5bWJvbFwiLGY/XCJsYXJnZS1vcFwiOlwic21hbGwtb3BcIl0pfWVsc2UgaWYodC52YWx1ZS52YWx1ZSl7dmFyIHA9bS5idWlsZEV4cHJlc3Npb24odC52YWx1ZS52YWx1ZSxyLHRydWUpO2lmKHAubGVuZ3RoPT09MSYmcFswXWluc3RhbmNlb2YgdS5kZWZhdWx0LnN5bWJvbE5vZGUpe2Q9cFswXTtkLmNsYXNzZXNbMF09XCJtb3BcIn1lbHNle2Q9bC5kZWZhdWx0Lm1ha2VTcGFuKFtcIm1vcFwiXSxwLHIpfX1lbHNle3ZhciBnPVtdO2Zvcih2YXIgYj0xO2I8dC52YWx1ZS5ib2R5Lmxlbmd0aDtiKyspe2cucHVzaChsLmRlZmF1bHQubWF0aHN5bSh0LnZhbHVlLmJvZHlbYl0sdC5tb2RlKSl9ZD1sLmRlZmF1bHQubWFrZVNwYW4oW1wibW9wXCJdLGcscil9dmFyIHk9MDt2YXIgeD0wO2lmKGQgaW5zdGFuY2VvZiB1LmRlZmF1bHQuc3ltYm9sTm9kZSl7eT0oZC5oZWlnaHQtZC5kZXB0aCkvMi1yLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDt4PWQuaXRhbGljfWlmKGkpe2Q9bC5kZWZhdWx0Lm1ha2VTcGFuKFtdLFtkXSk7dmFyIHc9dm9pZCAwO3ZhciBrPXZvaWQgMDt2YXIgTT17aGVpZ2h0OjAsZGVwdGg6MH07dmFyIF89dm9pZCAwO3ZhciBTPXZvaWQgMDtpZihhKXtTPXIuaGF2aW5nU3R5bGUoby5zdXAoKSk7dz1tLmJ1aWxkR3JvdXAoYSxTLHIpO2s9TWF0aC5tYXgoci5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzEsci5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzMtdy5kZXB0aCl9aWYobil7Uz1yLmhhdmluZ1N0eWxlKG8uc3ViKCkpO009bS5idWlsZEdyb3VwKG4sUyxyKTtfPU1hdGgubWF4KHIuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmcyLHIuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc0LU0uaGVpZ2h0KX12YXIgej12b2lkIDA7dmFyIFQ9dm9pZCAwO3ZhciBDPXZvaWQgMDtpZighYSl7VD1kLmhlaWdodC15O3o9bC5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwidG9wXCIscG9zaXRpb25EYXRhOlQsY2hpbGRyZW46W3t0eXBlOlwia2VyblwiLHNpemU6ci5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzV9LHt0eXBlOlwiZWxlbVwiLGVsZW06TSxtYXJnaW5MZWZ0Oi14K1wiZW1cIn0se3R5cGU6XCJrZXJuXCIsc2l6ZTpffSx7dHlwZTpcImVsZW1cIixlbGVtOmR9XX0scil9ZWxzZSBpZighbil7Qz1kLmRlcHRoK3k7ej1sLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJib3R0b21cIixwb3NpdGlvbkRhdGE6QyxjaGlsZHJlbjpbe3R5cGU6XCJlbGVtXCIsZWxlbTpkfSx7dHlwZTpcImtlcm5cIixzaXplOmt9LHt0eXBlOlwiZWxlbVwiLGVsZW06dyxtYXJnaW5MZWZ0OngrXCJlbVwifSx7dHlwZTpcImtlcm5cIixzaXplOnIuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fV19LHIpfWVsc2UgaWYoIWEmJiFuKXtyZXR1cm4gZH1lbHNle0M9ci5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzUrTS5oZWlnaHQrTS5kZXB0aCtfK2QuZGVwdGgreTt6PWwuZGVmYXVsdC5tYWtlVkxpc3Qoe3Bvc2l0aW9uVHlwZTpcImJvdHRvbVwiLHBvc2l0aW9uRGF0YTpDLGNoaWxkcmVuOlt7dHlwZTpcImtlcm5cIixzaXplOnIuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fSx7dHlwZTpcImVsZW1cIixlbGVtOk0sbWFyZ2luTGVmdDoteCtcImVtXCJ9LHt0eXBlOlwia2VyblwiLHNpemU6X30se3R5cGU6XCJlbGVtXCIsZWxlbTpkfSx7dHlwZTpcImtlcm5cIixzaXplOmt9LHt0eXBlOlwiZWxlbVwiLGVsZW06dyxtYXJnaW5MZWZ0OngrXCJlbVwifSx7dHlwZTpcImtlcm5cIixzaXplOnIuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fV19LHIpfXJldHVybiBsLmRlZmF1bHQubWFrZVNwYW4oW1wibW9wXCIsXCJvcC1saW1pdHNcIl0sW3pdLHIpfWVsc2V7aWYoeSl7ZC5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCI7ZC5zdHlsZS50b3A9eStcImVtXCJ9cmV0dXJuIGR9fTt2YXIgaz1mdW5jdGlvbiBlKHQscil7dmFyIGE9dm9pZCAwO2lmKHQudmFsdWUuc3ltYm9sKXthPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLFtiLm1ha2VUZXh0KHQudmFsdWUuYm9keSx0Lm1vZGUpXSl9ZWxzZSBpZih0LnZhbHVlLnZhbHVlKXthPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLGIuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscikpfWVsc2V7YT1uZXcgZi5kZWZhdWx0Lk1hdGhOb2RlKFwibWlcIixbbmV3IGYuZGVmYXVsdC5UZXh0Tm9kZSh0LnZhbHVlLmJvZHkuc2xpY2UoMSkpXSl9cmV0dXJuIGF9OygwLG4uZGVmYXVsdCkoe3R5cGU6XCJvcFwiLG5hbWVzOltcIlxcXFxjb3Byb2RcIixcIlxcXFxiaWd2ZWVcIixcIlxcXFxiaWd3ZWRnZVwiLFwiXFxcXGJpZ3VwbHVzXCIsXCJcXFxcYmlnY2FwXCIsXCJcXFxcYmlnY3VwXCIsXCJcXFxcaW50b3BcIixcIlxcXFxwcm9kXCIsXCJcXFxcc3VtXCIsXCJcXFxcYmlnb3RpbWVzXCIsXCJcXFxcYmlnb3BsdXNcIixcIlxcXFxiaWdvZG90XCIsXCJcXFxcYmlnc3FjdXBcIixcIlxcXFxzbWFsbGludFwiXSxwcm9wczp7bnVtQXJnczowfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsc3ltYm9sOnRydWUsYm9keTp0LmZ1bmNOYW1lfX0saHRtbEJ1aWxkZXI6dyxtYXRobWxCdWlsZGVyOmt9KTsoMCxuLmRlZmF1bHQpKHt0eXBlOlwib3BcIixuYW1lczpbXCJcXFxcbWF0aG9wXCJdLHByb3BzOntudW1BcmdzOjF9LGhhbmRsZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBuPXJbMF07cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czpmYWxzZSxzeW1ib2w6ZmFsc2UsdmFsdWU6KDAsYS5vcmRhcmd1bWVudCkobil9fSxodG1sQnVpbGRlcjp3LG1hdGhtbEJ1aWxkZXI6a30pfSx7XCIuLi9TdHlsZVwiOjg5LFwiLi4vYnVpbGRDb21tb25cIjo5MSxcIi4uL2J1aWxkSFRNTFwiOjkyLFwiLi4vYnVpbGRNYXRoTUxcIjo5MyxcIi4uL2RlZmluZUZ1bmN0aW9uXCI6OTYsXCIuLi9kb21UcmVlXCI6OTgsXCIuLi9tYXRoTUxUcmVlXCI6MTE0LFwiLi4vdXRpbHNcIjoxMjF9XSwxMTA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi4vZGVmaW5lRnVuY3Rpb25cIik7dmFyIG49bShhKTt2YXIgaT1lKFwiLi4vYnVpbGRDb21tb25cIik7dmFyIGw9bShpKTt2YXIgbz1lKFwiLi4vbWF0aE1MVHJlZVwiKTt2YXIgdT1tKG8pO3ZhciBzPWUoXCIuLi9kb21UcmVlXCIpO3ZhciBmPW0ocyk7dmFyIGQ9ZShcIi4uL2J1aWxkSFRNTFwiKTt2YXIgYz1wKGQpO3ZhciBoPWUoXCIuLi9idWlsZE1hdGhNTFwiKTt2YXIgdj1wKGgpO2Z1bmN0aW9uIHAoZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXtyZXR1cm4gZX1lbHNle3ZhciB0PXt9O2lmKGUhPW51bGwpe2Zvcih2YXIgciBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl0W3JdPWVbcl19fXQuZGVmYXVsdD1lO3JldHVybiB0fX1mdW5jdGlvbiBtKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0oMCxuLmRlZmF1bHQpKHt0eXBlOlwib3BlcmF0b3JuYW1lXCIsbmFtZXM6W1wiXFxcXG9wZXJhdG9ybmFtZVwiXSxwcm9wczp7bnVtQXJnczoxfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgbj1yWzBdO3JldHVybnt0eXBlOlwib3BlcmF0b3JuYW1lXCIsdmFsdWU6KDAsYS5vcmRhcmd1bWVudCkobil9fSxodG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9W107aWYodC52YWx1ZS52YWx1ZS5sZW5ndGg+MCl7dmFyIG49XCJcIjt2YXIgaT1cIlwiO3ZhciBvPWMuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscix0cnVlKTtmb3IodmFyIHU9MDt1PG8ubGVuZ3RoO3UrKyl7bj1vW3VdLnZhbHVlO249bi5yZXBsYWNlKC9cXHUyMjEyLyxcIi1cIik7bj1uLnJlcGxhY2UoL1xcdTIyMTcvLFwiKlwiKTtpPS9bXFx1MDM5MS1cXHUwM0Q3XS8udGVzdChuKT9cIm1hdGhcIjpcInRleHRcIjthLnB1c2gobC5kZWZhdWx0Lm1hdGhzeW0obixpKSl9fXJldHVybiBsLmRlZmF1bHQubWFrZVNwYW4oW1wibW9wXCJdLGEscil9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPVtdO2lmKHQudmFsdWUudmFsdWUubGVuZ3RoPjApe3ZhciBuPXYuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscik7dmFyIGk9XCJcIjtmb3IodmFyIGw9MDtsPG4ubGVuZ3RoO2wrKyl7aSs9bltsXS5jaGlsZHJlblswXS50ZXh0fWk9aS5yZXBsYWNlKC9cXHUyMjEyL2csXCItXCIpO2k9aS5yZXBsYWNlKC9cXHUyMjE3L2csXCIqXCIpO2E9W25ldyB1LmRlZmF1bHQuVGV4dE5vZGUoaSldfXZhciBvPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtaVwiLGEpO28uc2V0QXR0cmlidXRlKFwibWF0aHZhcmlhbnRcIixcIm5vcm1hbFwiKTt2YXIgcz1uZXcgdS5kZWZhdWx0Lk1hdGhOb2RlKFwibW9cIixbdi5tYWtlVGV4dChcIiZBcHBseUZ1bmN0aW9uO1wiLFwidGV4dFwiKV0pO3JldHVybiBuZXcgZi5kZWZhdWx0LmRvY3VtZW50RnJhZ21lbnQoW28sc10pfX0pfSx7XCIuLi9idWlsZENvbW1vblwiOjkxLFwiLi4vYnVpbGRIVE1MXCI6OTIsXCIuLi9idWlsZE1hdGhNTFwiOjkzLFwiLi4vZGVmaW5lRnVuY3Rpb25cIjo5NixcIi4uL2RvbVRyZWVcIjo5OCxcIi4uL21hdGhNTFRyZWVcIjoxMTR9XSwxMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi4vZGVmaW5lRnVuY3Rpb25cIik7dmFyIG49dihhKTt2YXIgaT1lKFwiLi4vYnVpbGRDb21tb25cIik7dmFyIGw9dihpKTt2YXIgbz1lKFwiLi4vbWF0aE1MVHJlZVwiKTt2YXIgdT12KG8pO3ZhciBzPWUoXCIuLi9idWlsZEhUTUxcIik7dmFyIGY9aChzKTt2YXIgZD1lKFwiLi4vYnVpbGRNYXRoTUxcIik7dmFyIGM9aChkKTtmdW5jdGlvbiBoKGUpe2lmKGUmJmUuX19lc01vZHVsZSl7cmV0dXJuIGV9ZWxzZXt2YXIgdD17fTtpZihlIT1udWxsKXtmb3IodmFyIHIgaW4gZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpdFtyXT1lW3JdfX10LmRlZmF1bHQ9ZTtyZXR1cm4gdH19ZnVuY3Rpb24gdihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KDAsbi5kZWZhdWx0KSh7dHlwZTpcInBoYW50b21cIixuYW1lczpbXCJcXFxccGhhbnRvbVwiXSxwcm9wczp7bnVtQXJnczoxfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgbj1yWzBdO3JldHVybnt0eXBlOlwicGhhbnRvbVwiLHZhbHVlOigwLGEub3JkYXJndW1lbnQpKG4pfX0saHRtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPWYuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUsci53aXRoUGhhbnRvbSgpLGZhbHNlKTtyZXR1cm4gbmV3IGwuZGVmYXVsdC5tYWtlRnJhZ21lbnQoYSl9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPWMuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscik7cmV0dXJuIG5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtcGhhbnRvbVwiLGEpfX0pOygwLG4uZGVmYXVsdCkoe3R5cGU6XCJocGhhbnRvbVwiLG5hbWVzOltcIlxcXFxocGhhbnRvbVwiXSxwcm9wczp7bnVtQXJnczoxfSxoYW5kbGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgbj1yWzBdO3JldHVybnt0eXBlOlwiaHBoYW50b21cIix2YWx1ZTooMCxhLm9yZGFyZ3VtZW50KShuKSxib2R5Om59fSxodG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9bC5kZWZhdWx0Lm1ha2VTcGFuKFtdLFtmLmJ1aWxkR3JvdXAodC52YWx1ZS5ib2R5LHIud2l0aFBoYW50b20oKSldKTthLmhlaWdodD0wO2EuZGVwdGg9MDtpZihhLmNoaWxkcmVuKXtmb3IodmFyIG49MDtuPGEuY2hpbGRyZW4ubGVuZ3RoO24rKyl7YS5jaGlsZHJlbltuXS5oZWlnaHQ9MDthLmNoaWxkcmVuW25dLmRlcHRoPTB9fWE9bC5kZWZhdWx0Lm1ha2VWTGlzdCh7cG9zaXRpb25UeXBlOlwiZmlyc3RCYXNlbGluZVwiLGNoaWxkcmVuOlt7dHlwZTpcImVsZW1cIixlbGVtOmF9XX0scik7cmV0dXJuIGF9LG1hdGhtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPWMuYnVpbGRFeHByZXNzaW9uKHQudmFsdWUudmFsdWUscik7dmFyIG49bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1waGFudG9tXCIsYSk7bi5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIixcIjBweFwiKTtyZXR1cm4gbn19KTsoMCxuLmRlZmF1bHQpKHt0eXBlOlwidnBoYW50b21cIixuYW1lczpbXCJcXFxcdnBoYW50b21cIl0scHJvcHM6e251bUFyZ3M6MX0saGFuZGxlcjpmdW5jdGlvbiBlKHQscil7dmFyIG49clswXTtyZXR1cm57dHlwZTpcInZwaGFudG9tXCIsdmFsdWU6KDAsYS5vcmRhcmd1bWVudCkobiksYm9keTpufX0saHRtbEJ1aWxkZXI6ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPWwuZGVmYXVsdC5tYWtlU3BhbihbXCJpbm5lclwiXSxbZi5idWlsZEdyb3VwKHQudmFsdWUuYm9keSxyLndpdGhQaGFudG9tKCkpXSk7dmFyIG49bC5kZWZhdWx0Lm1ha2VTcGFuKFtcImZpeFwiXSxbXSk7cmV0dXJuIGwuZGVmYXVsdC5tYWtlU3BhbihbXCJtb3JkXCIsXCJybGFwXCJdLFthLG5dLHIpfSxtYXRobWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1jLmJ1aWxkRXhwcmVzc2lvbih0LnZhbHVlLnZhbHVlLHIpO3ZhciBuPW5ldyB1LmRlZmF1bHQuTWF0aE5vZGUoXCJtcGhhbnRvbVwiLGEpO24uc2V0QXR0cmlidXRlKFwid2lkdGhcIixcIjBweFwiKTtyZXR1cm4gbn19KX0se1wiLi4vYnVpbGRDb21tb25cIjo5MSxcIi4uL2J1aWxkSFRNTFwiOjkyLFwiLi4vYnVpbGRNYXRoTUxcIjo5MyxcIi4uL2RlZmluZUZ1bmN0aW9uXCI6OTYsXCIuLi9tYXRoTUxUcmVlXCI6MTE0fV0sMTEyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4uL2RlZmluZUZ1bmN0aW9uXCIpO3ZhciBuPXYoYSk7dmFyIGk9ZShcIi4uL2J1aWxkQ29tbW9uXCIpO3ZhciBsPXYoaSk7dmFyIG89ZShcIi4uL21hdGhNTFRyZWVcIik7dmFyIHU9dihvKTt2YXIgcz1lKFwiLi4vYnVpbGRIVE1MXCIpO3ZhciBmPWgocyk7dmFyIGQ9ZShcIi4uL2J1aWxkTWF0aE1MXCIpO3ZhciBjPWgoZCk7ZnVuY3Rpb24gaChlKXtpZihlJiZlLl9fZXNNb2R1bGUpe3JldHVybiBlfWVsc2V7dmFyIHQ9e307aWYoZSE9bnVsbCl7Zm9yKHZhciByIGluIGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXRbcl09ZVtyXX19dC5kZWZhdWx0PWU7cmV0dXJuIHR9fWZ1bmN0aW9uIHYoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fSgwLG4uZGVmYXVsdCkoe3R5cGU6XCJzbWFzaFwiLG5hbWVzOltcIlxcXFxzbWFzaFwiXSxwcm9wczp7bnVtQXJnczoxLG51bU9wdGlvbmFsQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZX0saGFuZGxlcjpmdW5jdGlvbiBlKHQscixhKXt2YXIgbj1mYWxzZTt2YXIgaT1mYWxzZTt2YXIgbD1hWzBdO2lmKGwpe3ZhciBvPVwiXCI7Zm9yKHZhciB1PTA7dTxsLnZhbHVlLmxlbmd0aDsrK3Upe289bC52YWx1ZVt1XS52YWx1ZTtpZihvPT09XCJ0XCIpe249dHJ1ZX1lbHNlIGlmKG89PT1cImJcIil7aT10cnVlfWVsc2V7bj1mYWxzZTtpPWZhbHNlO2JyZWFrfX19ZWxzZXtuPXRydWU7aT10cnVlfXZhciBzPXJbMF07cmV0dXJue3R5cGU6XCJzbWFzaFwiLGJvZHk6cyxzbWFzaEhlaWdodDpuLHNtYXNoRGVwdGg6aX19LGh0bWxCdWlsZGVyOmZ1bmN0aW9uIGUodCxyKXt2YXIgYT1sLmRlZmF1bHQubWFrZVNwYW4oW1wibW9yZFwiXSxbZi5idWlsZEdyb3VwKHQudmFsdWUuYm9keSxyKV0pO2lmKCF0LnZhbHVlLnNtYXNoSGVpZ2h0JiYhdC52YWx1ZS5zbWFzaERlcHRoKXtyZXR1cm4gYX1pZih0LnZhbHVlLnNtYXNoSGVpZ2h0KXthLmhlaWdodD0wO2lmKGEuY2hpbGRyZW4pe2Zvcih2YXIgbj0wO248YS5jaGlsZHJlbi5sZW5ndGg7bisrKXthLmNoaWxkcmVuW25dLmhlaWdodD0wfX19aWYodC52YWx1ZS5zbWFzaERlcHRoKXthLmRlcHRoPTA7aWYoYS5jaGlsZHJlbil7Zm9yKHZhciBpPTA7aTxhLmNoaWxkcmVuLmxlbmd0aDtpKyspe2EuY2hpbGRyZW5baV0uZGVwdGg9MH19fXJldHVybiBsLmRlZmF1bHQubWFrZVZMaXN0KHtwb3NpdGlvblR5cGU6XCJmaXJzdEJhc2VsaW5lXCIsY2hpbGRyZW46W3t0eXBlOlwiZWxlbVwiLGVsZW06YX1dfSxyKX0sbWF0aG1sQnVpbGRlcjpmdW5jdGlvbiBlKHQscil7dmFyIGE9bmV3IHUuZGVmYXVsdC5NYXRoTm9kZShcIm1wYWRkZWRcIixbYy5idWlsZEdyb3VwKHQudmFsdWUuYm9keSxyKV0pO2lmKHQudmFsdWUuc21hc2hIZWlnaHQpe2Euc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsXCIwcHhcIil9aWYodC52YWx1ZS5zbWFzaERlcHRoKXthLnNldEF0dHJpYnV0ZShcImRlcHRoXCIsXCIwcHhcIil9cmV0dXJuIGF9fSl9LHtcIi4uL2J1aWxkQ29tbW9uXCI6OTEsXCIuLi9idWlsZEhUTUxcIjo5MixcIi4uL2J1aWxkTWF0aE1MXCI6OTMsXCIuLi9kZWZpbmVGdW5jdGlvblwiOjk2LFwiLi4vbWF0aE1MVHJlZVwiOjExNH1dLDExMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcIi4vc3ltYm9sc1wiKTt2YXIgbj11KGEpO3ZhciBpPWUoXCIuL3V0aWxzXCIpO3ZhciBsPXUoaSk7dmFyIG89ZShcIi4vVG9rZW5cIik7ZnVuY3Rpb24gdShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHM9e307ci5kZWZhdWx0PXM7ZnVuY3Rpb24gZihlLHQpe3NbZV09dH1mKFwiXFxcXGJncm91cFwiLFwie1wiKTtmKFwiXFxcXGVncm91cFwiLFwifVwiKTtmKFwiXFxcXGJlZ2luZ3JvdXBcIixcIntcIik7ZihcIlxcXFxlbmRncm91cFwiLFwifVwiKTtmKFwiXFxcXG1rZXJuXCIsXCJcXFxca2VyblwiKTtmKFwiXFxcXGxsYXBcIixcIlxcXFxtYXRobGxhcHtcXFxcdGV4dHJteyMxfX1cIik7ZihcIlxcXFxybGFwXCIsXCJcXFxcbWF0aHJsYXB7XFxcXHRleHRybXsjMX19XCIpO2YoXCJcXFxcY2xhcFwiLFwiXFxcXG1hdGhjbGFwe1xcXFx0ZXh0cm17IzF9fVwiKTtmKFwiXFxcXG92ZXJzZXRcIixcIlxcXFxtYXRob3B7IzJ9XFxcXGxpbWl0c157IzF9XCIpO2YoXCJcXFxcdW5kZXJzZXRcIixcIlxcXFxtYXRob3B7IzJ9XFxcXGxpbWl0c197IzF9XCIpO2YoXCJcXFxcYm94ZWRcIixcIlxcXFxmYm94e1xcXFxkaXNwbGF5c3R5bGV7IzF9fVwiKTtmKFwiXFxcXGlmZlwiLFwiXFxcXERPVFNCXFxcXDtcXFxcTG9uZ2xlZnRyaWdodGFycm93XFxcXDtcIik7ZihcIlxcXFxpbXBsaWVzXCIsXCJcXFxcRE9UU0JcXFxcO1xcXFxMb25ncmlnaHRhcnJvd1xcXFw7XCIpO2YoXCJcXFxcaW1wbGllZGJ5XCIsXCJcXFxcRE9UU0JcXFxcO1xcXFxMb25nbGVmdGFycm93XFxcXDtcIik7dmFyIGQ9e1wiLFwiOlwiXFxcXGRvdHNjXCIsXCJcXFxcbm90XCI6XCJcXFxcZG90c2JcIixcIitcIjpcIlxcXFxkb3RzYlwiLFwiPVwiOlwiXFxcXGRvdHNiXCIsXCI8XCI6XCJcXFxcZG90c2JcIixcIj5cIjpcIlxcXFxkb3RzYlwiLFwiLVwiOlwiXFxcXGRvdHNiXCIsXCIqXCI6XCJcXFxcZG90c2JcIixcIjpcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXERPVFNCXCI6XCJcXFxcZG90c2JcIixcIlxcXFxjb3Byb2RcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGJpZ3ZlZVwiOlwiXFxcXGRvdHNiXCIsXCJcXFxcYmlnd2VkZ2VcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGJpZ3VwbHVzXCI6XCJcXFxcZG90c2JcIixcIlxcXFxiaWdjYXBcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGJpZ2N1cFwiOlwiXFxcXGRvdHNiXCIsXCJcXFxccHJvZFwiOlwiXFxcXGRvdHNiXCIsXCJcXFxcc3VtXCI6XCJcXFxcZG90c2JcIixcIlxcXFxiaWdvdGltZXNcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGJpZ29wbHVzXCI6XCJcXFxcZG90c2JcIixcIlxcXFxiaWdvZG90XCI6XCJcXFxcZG90c2JcIixcIlxcXFxiaWdzcWN1cFwiOlwiXFxcXGRvdHNiXCIsXCJcXFxcaW1wbGllc1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcaW1wbGllZGJ5XCI6XCJcXFxcZG90c2JcIixcIlxcXFxBbmRcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGxvbmdyaWdodGFycm93XCI6XCJcXFxcZG90c2JcIixcIlxcXFxMb25ncmlnaHRhcnJvd1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcbG9uZ2xlZnRhcnJvd1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcTG9uZ2xlZnRhcnJvd1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcbG9uZ2xlZnRyaWdodGFycm93XCI6XCJcXFxcZG90c2JcIixcIlxcXFxMb25nbGVmdHJpZ2h0YXJyb3dcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXG1hcHN0b1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcbG9uZ21hcHN0b1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcaG9va3JpZ2h0YXJyb3dcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGlmZlwiOlwiXFxcXGRvdHNiXCIsXCJcXFxcZG90ZXFcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXG1hdGhiaW5cIjpcIlxcXFxkb3RzYlwiLFwiXFxcXGJtb2RcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXG1hdGhyZWxcIjpcIlxcXFxkb3RzYlwiLFwiXFxcXHJlbGJhclwiOlwiXFxcXGRvdHNiXCIsXCJcXFxcUmVsYmFyXCI6XCJcXFxcZG90c2JcIixcIlxcXFx4cmlnaHRhcnJvd1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxceGxlZnRhcnJvd1wiOlwiXFxcXGRvdHNiXCIsXCJcXFxcRE9UU0lcIjpcIlxcXFxkb3RzaVwiLFwiXFxcXGludFwiOlwiXFxcXGRvdHNpXCIsXCJcXFxcb2ludFwiOlwiXFxcXGRvdHNpXCIsXCJcXFxcaWludFwiOlwiXFxcXGRvdHNpXCIsXCJcXFxcaWlpbnRcIjpcIlxcXFxkb3RzaVwiLFwiXFxcXGlpaWludFwiOlwiXFxcXGRvdHNpXCIsXCJcXFxcaWRvdHNpbnRcIjpcIlxcXFxkb3RzaVwiLFwiXFxcXERPVFNYXCI6XCJcXFxcZG90c3hcIn07ZihcIlxcXFxkb3RzXCIsZnVuY3Rpb24oZSl7dmFyIHQ9XCJcXFxcZG90c29cIjt2YXIgcj1lLmV4cGFuZEFmdGVyRnV0dXJlKCkudGV4dDtpZihyIGluIGQpe3Q9ZFtyXX1lbHNlIGlmKHIuc3Vic3RyKDAsNCk9PT1cIlxcXFxub3RcIil7dD1cIlxcXFxkb3RzYlwifWVsc2UgaWYociBpbiBuLmRlZmF1bHQubWF0aCl7aWYobC5kZWZhdWx0LmNvbnRhaW5zKFtcImJpblwiLFwicmVsXCJdLG4uZGVmYXVsdC5tYXRoW3JdLmdyb3VwKSl7dD1cIlxcXFxkb3RzYlwifX1yZXR1cm4gdH0pO3ZhciBjPXtcIilcIjp0cnVlLFwiXVwiOnRydWUsXCJcXFxccmJyYWNrXCI6dHJ1ZSxcIlxcXFx9XCI6dHJ1ZSxcIlxcXFxyYnJhY2VcIjp0cnVlLFwiXFxcXHJhbmdsZVwiOnRydWUsXCJcXFxccmNlaWxcIjp0cnVlLFwiXFxcXHJmbG9vclwiOnRydWUsXCJcXFxccmdyb3VwXCI6dHJ1ZSxcIlxcXFxybW91c3RhY2hlXCI6dHJ1ZSxcIlxcXFxyaWdodFwiOnRydWUsXCJcXFxcYmlnclwiOnRydWUsXCJcXFxcYmlnZ3JcIjp0cnVlLFwiXFxcXEJpZ3JcIjp0cnVlLFwiXFxcXEJpZ2dyXCI6dHJ1ZSwkOnRydWUsXCI7XCI6dHJ1ZSxcIi5cIjp0cnVlLFwiLFwiOnRydWV9O2YoXCJcXFxcZG90c29cIixmdW5jdGlvbihlKXt2YXIgdD1lLmZ1dHVyZSgpLnRleHQ7aWYodCBpbiBjKXtyZXR1cm5cIlxcXFxsZG90c1xcXFwsXCJ9ZWxzZXtyZXR1cm5cIlxcXFxsZG90c1wifX0pO2YoXCJcXFxcZG90c2NcIixmdW5jdGlvbihlKXt2YXIgdD1lLmZ1dHVyZSgpLnRleHQ7aWYodCBpbiBjJiZ0IT09XCIsXCIpe3JldHVyblwiXFxcXGxkb3RzXFxcXCxcIn1lbHNle3JldHVyblwiXFxcXGxkb3RzXCJ9fSk7ZihcIlxcXFxjZG90c1wiLGZ1bmN0aW9uKGUpe3ZhciB0PWUuZnV0dXJlKCkudGV4dDtpZih0IGluIGMpe3JldHVyblwiXFxcXEBjZG90c1xcXFwsXCJ9ZWxzZXtyZXR1cm5cIlxcXFxAY2RvdHNcIn19KTtmKFwiXFxcXGRvdHNiXCIsXCJcXFxcY2RvdHNcIik7ZihcIlxcXFxkb3RzbVwiLFwiXFxcXGNkb3RzXCIpO2YoXCJcXFxcZG90c2lcIixcIlxcXFwhXFxcXGNkb3RzXCIpO2YoXCJcXFxcZG90c3hcIixcIlxcXFxsZG90c1xcXFwsXCIpO2YoXCJcXFxcRE9UU0lcIixcIlxcXFxyZWxheFwiKTtmKFwiXFxcXERPVFNCXCIsXCJcXFxccmVsYXhcIik7ZihcIlxcXFxET1RTWFwiLFwiXFxcXHJlbGF4XCIpO2YoXCJcXFxcdGhpbnNwYWNlXCIsXCJcXFxcLFwiKTtmKFwiXFxcXG1lZHNwYWNlXCIsXCJcXFxcOlwiKTtmKFwiXFxcXHRoaWNrc3BhY2VcIixcIlxcXFw7XCIpO2YoXCJcXFxcaHNwYWNlXCIsXCJcXFxca2VybnsjMX1cIik7ZihcIlxcXFxvcmRpbmFyeWNvbG9uXCIsXCI6XCIpO2YoXCJcXFxcdmNlbnRjb2xvblwiLFwiXFxcXG1hdGhyZWx7XFxcXG1hdGhvcFxcXFxvcmRpbmFyeWNvbG9ufVwiKTtmKFwiXFxcXGRibGNvbG9uXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0uOW11fVxcXFx2Y2VudGNvbG9uXCIpO2YoXCJcXFxcY29sb25lcXFcIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fT1cIik7ZihcIlxcXFxDb2xvbmVxcVwiLFwiXFxcXGRibGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fT1cIik7ZihcIlxcXFxjb2xvbmVxXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcbWF0aHJlbHstfVwiKTtmKFwiXFxcXENvbG9uZXFcIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcbWF0aHJlbHstfVwiKTtmKFwiXFxcXGVxcWNvbG9uXCIsXCI9XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFx2Y2VudGNvbG9uXCIpO2YoXCJcXFxcRXFxY29sb25cIixcIj1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpO2YoXCJcXFxcZXFjb2xvblwiLFwiXFxcXG1hdGhyZWx7LX1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7ZihcIlxcXFxFcWNvbG9uXCIsXCJcXFxcbWF0aHJlbHstfVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcZGJsY29sb25cIik7ZihcIlxcXFxjb2xvbmFwcHJveFwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGFwcHJveFwiKTtmKFwiXFxcXENvbG9uYXBwcm94XCIsXCJcXFxcZGJsY29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGFwcHJveFwiKTtmKFwiXFxcXGNvbG9uc2ltXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcc2ltXCIpO2YoXCJcXFxcQ29sb25zaW1cIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcc2ltXCIpO2YoXCJcXFxccmF0aW9cIixcIlxcXFx2Y2VudGNvbG9uXCIpO2YoXCJcXFxcY29sb25jb2xvblwiLFwiXFxcXGRibGNvbG9uXCIpO2YoXCJcXFxcY29sb25lcXVhbHNcIixcIlxcXFxjb2xvbmVxcVwiKTtmKFwiXFxcXGNvbG9uY29sb25lcXVhbHNcIixcIlxcXFxDb2xvbmVxcVwiKTtmKFwiXFxcXGVxdWFsc2NvbG9uXCIsXCJcXFxcZXFxY29sb25cIik7ZihcIlxcXFxlcXVhbHNjb2xvbmNvbG9uXCIsXCJcXFxcRXFxY29sb25cIik7ZihcIlxcXFxjb2xvbm1pbnVzXCIsXCJcXFxcY29sb25lcVwiKTtmKFwiXFxcXGNvbG9uY29sb25taW51c1wiLFwiXFxcXENvbG9uZXFcIik7ZihcIlxcXFxtaW51c2NvbG9uXCIsXCJcXFxcZXFjb2xvblwiKTtmKFwiXFxcXG1pbnVzY29sb25jb2xvblwiLFwiXFxcXEVxY29sb25cIik7ZihcIlxcXFxjb2xvbmNvbG9uYXBwcm94XCIsXCJcXFxcQ29sb25hcHByb3hcIik7ZihcIlxcXFxjb2xvbmNvbG9uc2ltXCIsXCJcXFxcQ29sb25zaW1cIik7ZihcIlxcXFxzaW1jb2xvblwiLFwiXFxcXHNpbVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcdmNlbnRjb2xvblwiKTtmKFwiXFxcXHNpbWNvbG9uY29sb25cIixcIlxcXFxzaW1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpO2YoXCJcXFxcYXBwcm94Y29sb25cIixcIlxcXFxhcHByb3hcXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7ZihcIlxcXFxhcHByb3hjb2xvbmNvbG9uXCIsXCJcXFxcYXBwcm94XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxkYmxjb2xvblwiKX0se1wiLi9Ub2tlblwiOjkwLFwiLi9zeW1ib2xzXCI6MTE4LFwiLi91dGlsc1wiOjEyMX1dLDExNDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9nZXQtaXRlcmF0b3JcIik7dmFyIG49ZChhKTt2YXIgaT1lKFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCIpO3ZhciBsPWQoaSk7dmFyIG89ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiKTt2YXIgdT1kKG8pO3ZhciBzPWUoXCIuL3V0aWxzXCIpO3ZhciBmPWQocyk7ZnVuY3Rpb24gZChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscil7KDAsbC5kZWZhdWx0KSh0aGlzLGUpO3RoaXMudHlwZT10O3RoaXMuYXR0cmlidXRlcz17fTt0aGlzLmNoaWxkcmVuPXJ8fFtdfSgwLHUuZGVmYXVsdCkoZSxbe2tleTpcInNldEF0dHJpYnV0ZVwiLHZhbHVlOmZ1bmN0aW9uIGUodCxyKXt0aGlzLmF0dHJpYnV0ZXNbdF09cn19LHtrZXk6XCJ0b05vZGVcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHRoaXMudHlwZSk7Zm9yKHZhciByIGluIHRoaXMuYXR0cmlidXRlcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuYXR0cmlidXRlcyxyKSl7dC5zZXRBdHRyaWJ1dGUocix0aGlzLmF0dHJpYnV0ZXNbcl0pfX12YXIgYT10cnVlO3ZhciBpPWZhbHNlO3ZhciBsPXVuZGVmaW5lZDt0cnl7Zm9yKHZhciBvPSgwLG4uZGVmYXVsdCkodGhpcy5jaGlsZHJlbiksdTshKGE9KHU9by5uZXh0KCkpLmRvbmUpO2E9dHJ1ZSl7dmFyIHM9dS52YWx1ZTt0LmFwcGVuZENoaWxkKHMudG9Ob2RlKCkpfX1jYXRjaChlKXtpPXRydWU7bD1lfWZpbmFsbHl7dHJ5e2lmKCFhJiZvLnJldHVybil7by5yZXR1cm4oKX19ZmluYWxseXtpZihpKXt0aHJvdyBsfX19cmV0dXJuIHR9fSx7a2V5OlwidG9NYXJrdXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7dmFyIHQ9XCI8XCIrdGhpcy50eXBlO2Zvcih2YXIgciBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMscikpe3QrPVwiIFwiK3IrJz1cIic7dCs9Zi5kZWZhdWx0LmVzY2FwZSh0aGlzLmF0dHJpYnV0ZXNbcl0pO3QrPSdcIid9fXQrPVwiPlwiO2Zvcih2YXIgYT0wO2E8dGhpcy5jaGlsZHJlbi5sZW5ndGg7YSsrKXt0Kz10aGlzLmNoaWxkcmVuW2FdLnRvTWFya3VwKCl9dCs9XCI8L1wiK3RoaXMudHlwZStcIj5cIjtyZXR1cm4gdH19XSk7cmV0dXJuIGV9KCk7dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpeygwLGwuZGVmYXVsdCkodGhpcyxlKTt0aGlzLnRleHQ9dH0oMCx1LmRlZmF1bHQpKGUsW3trZXk6XCJ0b05vZGVcIix2YWx1ZTpmdW5jdGlvbiBlKCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRoaXMudGV4dCl9fSx7a2V5OlwidG9NYXJrdXBcIix2YWx1ZTpmdW5jdGlvbiBlKCl7cmV0dXJuIGYuZGVmYXVsdC5lc2NhcGUodGhpcy50ZXh0KX19XSk7cmV0dXJuIGV9KCk7ci5kZWZhdWx0PXtNYXRoTm9kZTpjLFRleHROb2RlOmh9fSx7XCIuL3V0aWxzXCI6MTIxLFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2dldC1pdGVyYXRvclwiOjMsXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjo4LFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI6OX1dLDExNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcIi4vUGFyc2VyXCIpO3ZhciBuPWkoYSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGw9ZnVuY3Rpb24gZSh0LHIpe2lmKCEodHlwZW9mIHQ9PT1cInN0cmluZ1wifHx0IGluc3RhbmNlb2YgU3RyaW5nKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkthVGVYIGNhbiBvbmx5IHBhcnNlIHN0cmluZyB0eXBlZCBleHByZXNzaW9uXCIpfXZhciBhPW5ldyBuLmRlZmF1bHQodCxyKTtyZXR1cm4gYS5wYXJzZSgpfTtyLmRlZmF1bHQ9bH0se1wiLi9QYXJzZXJcIjo4Nn1dLDExNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpO3ZhciBuPWgoYSk7dmFyIGk9ZShcIi4vZG9tVHJlZVwiKTt2YXIgbD1oKGkpO3ZhciBvPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciB1PWgobyk7dmFyIHM9ZShcIi4vbWF0aE1MVHJlZVwiKTt2YXIgZj1oKHMpO3ZhciBkPWUoXCIuL3V0aWxzXCIpO3ZhciBjPWgoZCk7ZnVuY3Rpb24gaChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHY9e3dpZGVoYXQ6XCJeXCIsd2lkZXRpbGRlOlwiflwiLHVuZGVydGlsZGU6XCJ+XCIsb3ZlcmxlZnRhcnJvdzpcIlxcdTIxOTBcIix1bmRlcmxlZnRhcnJvdzpcIlxcdTIxOTBcIix4bGVmdGFycm93OlwiXFx1MjE5MFwiLG92ZXJyaWdodGFycm93OlwiXFx1MjE5MlwiLHVuZGVycmlnaHRhcnJvdzpcIlxcdTIxOTJcIix4cmlnaHRhcnJvdzpcIlxcdTIxOTJcIix1bmRlcmJyYWNlOlwiXFx1MjNiNVwiLG92ZXJicmFjZTpcIlxcdTIzZGVcIixvdmVybGVmdHJpZ2h0YXJyb3c6XCJcXHUyMTk0XCIsdW5kZXJsZWZ0cmlnaHRhcnJvdzpcIlxcdTIxOTRcIix4bGVmdHJpZ2h0YXJyb3c6XCJcXHUyMTk0XCIsT3ZlcnJpZ2h0YXJyb3c6XCJcXHUyMWQyXCIseFJpZ2h0YXJyb3c6XCJcXHUyMWQyXCIsb3ZlcmxlZnRoYXJwb29uOlwiXFx1MjFiY1wiLHhsZWZ0aGFycG9vbnVwOlwiXFx1MjFiY1wiLG92ZXJyaWdodGhhcnBvb246XCJcXHUyMWMwXCIseHJpZ2h0aGFycG9vbnVwOlwiXFx1MjFjMFwiLHhMZWZ0YXJyb3c6XCJcXHUyMWQwXCIseExlZnRyaWdodGFycm93OlwiXFx1MjFkNFwiLHhob29rbGVmdGFycm93OlwiXFx1MjFhOVwiLHhob29rcmlnaHRhcnJvdzpcIlxcdTIxYWFcIix4bWFwc3RvOlwiXFx1MjFhNlwiLHhyaWdodGhhcnBvb25kb3duOlwiXFx1MjFjMVwiLHhsZWZ0aGFycG9vbmRvd246XCJcXHUyMWJkXCIseHJpZ2h0bGVmdGhhcnBvb25zOlwiXFx1MjFjY1wiLHhsZWZ0cmlnaHRoYXJwb29uczpcIlxcdTIxY2JcIix4dHdvaGVhZGxlZnRhcnJvdzpcIlxcdTIxOWVcIix4dHdvaGVhZHJpZ2h0YXJyb3c6XCJcXHUyMWEwXCIseExvbmdlcXVhbDpcIj1cIix4dG9mcm9tOlwiXFx1MjFjNFwifTt2YXIgcD1mdW5jdGlvbiBlKHQpe3ZhciByPW5ldyBmLmRlZmF1bHQuTWF0aE5vZGUoXCJtb1wiLFtuZXcgZi5kZWZhdWx0LlRleHROb2RlKHZbdC5zdWJzdHIoMSldKV0pO3Iuc2V0QXR0cmlidXRlKFwic3RyZXRjaHlcIixcInRydWVcIik7cmV0dXJuIHJ9O3ZhciBtPXtvdmVycmlnaHRhcnJvdzpbW1wicmlnaHRhcnJvd1wiXSwuODg4LDUyMixcInhNYXhZTWluXCJdLG92ZXJsZWZ0YXJyb3c6W1tcImxlZnRhcnJvd1wiXSwuODg4LDUyMixcInhNaW5ZTWluXCJdLHVuZGVycmlnaHRhcnJvdzpbW1wicmlnaHRhcnJvd1wiXSwuODg4LDUyMixcInhNYXhZTWluXCJdLHVuZGVybGVmdGFycm93OltbXCJsZWZ0YXJyb3dcIl0sLjg4OCw1MjIsXCJ4TWluWU1pblwiXSx4cmlnaHRhcnJvdzpbW1wicmlnaHRhcnJvd1wiXSwxLjQ2OSw1MjIsXCJ4TWF4WU1pblwiXSx4bGVmdGFycm93OltbXCJsZWZ0YXJyb3dcIl0sMS40NjksNTIyLFwieE1pbllNaW5cIl0sT3ZlcnJpZ2h0YXJyb3c6W1tcImRvdWJsZXJpZ2h0YXJyb3dcIl0sLjg4OCw1NjAsXCJ4TWF4WU1pblwiXSx4UmlnaHRhcnJvdzpbW1wiZG91YmxlcmlnaHRhcnJvd1wiXSwxLjUyNiw1NjAsXCJ4TWF4WU1pblwiXSx4TGVmdGFycm93OltbXCJkb3VibGVsZWZ0YXJyb3dcIl0sMS41MjYsNTYwLFwieE1pbllNaW5cIl0sb3ZlcmxlZnRoYXJwb29uOltbXCJsZWZ0aGFycG9vblwiXSwuODg4LDUyMixcInhNaW5ZTWluXCJdLHhsZWZ0aGFycG9vbnVwOltbXCJsZWZ0aGFycG9vblwiXSwuODg4LDUyMixcInhNaW5ZTWluXCJdLHhsZWZ0aGFycG9vbmRvd246W1tcImxlZnRoYXJwb29uZG93blwiXSwuODg4LDUyMixcInhNaW5ZTWluXCJdLG92ZXJyaWdodGhhcnBvb246W1tcInJpZ2h0aGFycG9vblwiXSwuODg4LDUyMixcInhNYXhZTWluXCJdLHhyaWdodGhhcnBvb251cDpbW1wicmlnaHRoYXJwb29uXCJdLC44ODgsNTIyLFwieE1heFlNaW5cIl0seHJpZ2h0aGFycG9vbmRvd246W1tcInJpZ2h0aGFycG9vbmRvd25cIl0sLjg4OCw1MjIsXCJ4TWF4WU1pblwiXSx4TG9uZ2VxdWFsOltbXCJsb25nZXF1YWxcIl0sLjg4OCwzMzQsXCJ4TWluWU1pblwiXSx4dHdvaGVhZGxlZnRhcnJvdzpbW1widHdvaGVhZGxlZnRhcnJvd1wiXSwuODg4LDMzNCxcInhNaW5ZTWluXCJdLHh0d29oZWFkcmlnaHRhcnJvdzpbW1widHdvaGVhZHJpZ2h0YXJyb3dcIl0sLjg4OCwzMzQsXCJ4TWF4WU1pblwiXSxvdmVybGVmdHJpZ2h0YXJyb3c6W1tcImxlZnRhcnJvd1wiLFwicmlnaHRhcnJvd1wiXSwuODg4LDUyMl0sb3ZlcmJyYWNlOltbXCJsZWZ0YnJhY2VcIixcIm1pZGJyYWNlXCIsXCJyaWdodGJyYWNlXCJdLDEuNiw1NDhdLHVuZGVyYnJhY2U6W1tcImxlZnRicmFjZXVuZGVyXCIsXCJtaWRicmFjZXVuZGVyXCIsXCJyaWdodGJyYWNldW5kZXJcIl0sMS42LDU0OF0sdW5kZXJsZWZ0cmlnaHRhcnJvdzpbW1wibGVmdGFycm93XCIsXCJyaWdodGFycm93XCJdLC44ODgsNTIyXSx4bGVmdHJpZ2h0YXJyb3c6W1tcImxlZnRhcnJvd1wiLFwicmlnaHRhcnJvd1wiXSwxLjc1LDUyMl0seExlZnRyaWdodGFycm93OltbXCJkb3VibGVsZWZ0YXJyb3dcIixcImRvdWJsZXJpZ2h0YXJyb3dcIl0sMS43NSw1NjBdLHhyaWdodGxlZnRoYXJwb29uczpbW1wibGVmdGhhcnBvb25kb3ducGx1c1wiLFwicmlnaHRoYXJwb29ucGx1c1wiXSwxLjc1LDcxNl0seGxlZnRyaWdodGhhcnBvb25zOltbXCJsZWZ0aGFycG9vbnBsdXNcIixcInJpZ2h0aGFycG9vbmRvd25wbHVzXCJdLDEuNzUsNzE2XSx4aG9va2xlZnRhcnJvdzpbW1wibGVmdGFycm93XCIsXCJyaWdodGhvb2tcIl0sMS4wOCw1MjJdLHhob29rcmlnaHRhcnJvdzpbW1wibGVmdGhvb2tcIixcInJpZ2h0YXJyb3dcIl0sMS4wOCw1MjJdLG92ZXJsaW5lc2VnbWVudDpbW1wibGVmdGxpbmVzZWdtZW50XCIsXCJyaWdodGxpbmVzZWdtZW50XCJdLC44ODgsNTIyXSx1bmRlcmxpbmVzZWdtZW50OltbXCJsZWZ0bGluZXNlZ21lbnRcIixcInJpZ2h0bGluZXNlZ21lbnRcIl0sLjg4OCw1MjJdLG92ZXJncm91cDpbW1wibGVmdGdyb3VwXCIsXCJyaWdodGdyb3VwXCJdLC44ODgsMzQyXSx1bmRlcmdyb3VwOltbXCJsZWZ0Z3JvdXB1bmRlclwiLFwicmlnaHRncm91cHVuZGVyXCJdLC44ODgsMzQyXSx4bWFwc3RvOltbXCJsZWZ0bWFwc3RvXCIsXCJyaWdodGFycm93XCJdLDEuNSw1MjJdLHh0b2Zyb206W1tcImxlZnRUb0Zyb21cIixcInJpZ2h0VG9Gcm9tXCJdLDEuNzUsNTI4XX07dmFyIGc9ZnVuY3Rpb24gZSh0KXtpZih0LnR5cGU9PT1cIm9yZGdyb3VwXCIpe3JldHVybiB0LnZhbHVlLmxlbmd0aH1lbHNle3JldHVybiAxfX07dmFyIGI9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXQudmFsdWUubGFiZWwuc3Vic3RyKDEpO3ZhciBpPVtdO3ZhciBvPXZvaWQgMDt2YXIgcz00ZTU7dmFyIGY9MDt2YXIgZD0wO3ZhciBoPXZvaWQgMDt2YXIgdj12b2lkIDA7dmFyIHA9dm9pZCAwO3ZhciBiPXZvaWQgMDt2YXIgeT12b2lkIDA7aWYoYy5kZWZhdWx0LmNvbnRhaW5zKFtcIndpZGVoYXRcIixcIndpZGV0aWxkZVwiLFwidW5kZXJ0aWxkZVwiXSxhKSl7dmFyIHg9Zyh0LnZhbHVlLmJhc2UpO3ZhciB3PXZvaWQgMDtpZih4PjUpe3c9YT09PVwid2lkZWhhdFwiPzQyMDozMTI7cz1hPT09XCJ3aWRlaGF0XCI/MjM2NDoyMzQwO289YT09PVwid2lkZWhhdFwiPy40MjouMzQ7cD0oYT09PVwid2lkZWhhdFwiP1wid2lkZWhhdFwiOlwidGlsZGVcIikrXCI0XCJ9ZWxzZXt2YXIgaz1bMSwxLDIsMiwzLDNdW3hdO2lmKGE9PT1cIndpZGVoYXRcIil7cz1bMCwxMDYyLDIzNjQsMjM2NCwyMzY0XVtrXTt3PVswLDIzOSwzMDAsMzYwLDQyMF1ba107bz1bMCwuMjQsLjMsLjMsLjM2LC40Ml1ba107cD1cIndpZGVoYXRcIitrfWVsc2V7cz1bMCw2MDAsMTAzMywyMzM5LDIzNDBdW2tdO3c9WzAsMjYwLDI4NiwzMDYsMzEyXVtrXTtvPVswLC4yNiwuMjg2LC4zLC4zMDYsLjM0XVtrXTtwPVwidGlsZGVcIitrfX1oPW5ldyBsLmRlZmF1bHQucGF0aE5vZGUocCk7aS5wdXNoKFtcIndpZHRoXCIsXCIxMDAlXCJdKTtpLnB1c2goW1wiaGVpZ2h0XCIsbytcImVtXCJdKTtpLnB1c2goW1widmlld0JveFwiLFwiMCAwIFwiK3MrXCIgXCIrd10pO2kucHVzaChbXCJwcmVzZXJ2ZUFzcGVjdFJhdGlvXCIsXCJub25lXCJdKTtiPW5ldyBsLmRlZmF1bHQuc3ZnTm9kZShbaF0saSk7eT11LmRlZmF1bHQubWFrZVNwYW4oW10sW2JdLHIpfWVsc2V7dmFyIE09dm9pZCAwO3ZhciBfPXZvaWQgMDt2YXIgUz1bXTt2YXIgej0oMCxuLmRlZmF1bHQpKG1bYV0sNCk7dj16WzBdO2Q9elsxXTtmPXpbMl07Xz16WzNdO3ZhciBUPXYubGVuZ3RoO2lmKDE+VHx8VD4zKXt0aHJvdyBuZXcgRXJyb3IoXCJDb3JyZWN0IGthdGV4SW1hZ2VzRGF0YSBvciB1cGRhdGUgY29kZSBiZWxvdyB0byBzdXBwb3J0XFxuICAgICAgICAgICAgICAgIFwiK1QrXCIgY2hpbGRyZW4uXCIpfW89Zi8xZTM7Zm9yKHZhciBDPTA7QzxUO0MrKyl7aD1uZXcgbC5kZWZhdWx0LnBhdGhOb2RlKHZbQ10pO2k9W1tcIndpZHRoXCIsXCI0MDBlbVwiXSxbXCJoZWlnaHRcIixvK1wiZW1cIl1dO2kucHVzaChbXCJ2aWV3Qm94XCIsXCIwIDAgXCIrcytcIiBcIitmXSk7aWYoVD09PTIpe009W1wiaGFsZmFycm93LWxlZnRcIixcImhhbGZhcnJvdy1yaWdodFwiXVtDXTtfPVtcInhNaW5ZTWluXCIsXCJ4TWF4WU1pblwiXVtDXX1lbHNlIGlmKFQ9PT0zKXtNPVtcImJyYWNlLWxlZnRcIixcImJyYWNlLWNlbnRlclwiLFwiYnJhY2UtcmlnaHRcIl1bQ107Xz1bXCJ4TWluWU1pblwiLFwieE1pZFlNaW5cIixcInhNYXhZTWluXCJdW0NdfWkucHVzaChbXCJwcmVzZXJ2ZUFzcGVjdFJhdGlvXCIsXytcIiBzbGljZVwiXSk7Yj1uZXcgbC5kZWZhdWx0LnN2Z05vZGUoW2hdLGkpO2lmKFQ9PT0xKXtTLnB1c2godS5kZWZhdWx0Lm1ha2VTcGFuKFtcImhpZGUtdGFpbFwiXSxbYl0scikpfWVsc2V7dmFyIEE9dS5kZWZhdWx0Lm1ha2VTcGFuKFtNXSxbYl0scik7QS5zdHlsZS5oZWlnaHQ9bytcImVtXCI7Uy5wdXNoKEEpfX15PVQ9PT0xP1NbMF06dS5kZWZhdWx0Lm1ha2VTcGFuKFtcInN0cmV0Y2h5XCJdLFMscil9eS5oZWlnaHQ9bzt5LnN0eWxlLmhlaWdodD1vK1wiZW1cIjtpZihkPjApe3kuc3R5bGUubWluV2lkdGg9ZCtcImVtXCJ9cmV0dXJuIHl9O3ZhciB5PWZ1bmN0aW9uIGUodCxyLGEsbil7dmFyIGk9dm9pZCAwO3ZhciBvPXQuaGVpZ2h0K3QuZGVwdGgrMiphO2lmKC8oZmJveCl8KGNvbG9yKS8udGVzdChyKSl7aT11LmRlZmF1bHQubWFrZVNwYW4oW1wic3RyZXRjaHlcIixyXSxbXSxuKTtpZihyPT09XCJmYm94XCImJm4uY29sb3Ipe2kuc3R5bGUuYm9yZGVyQ29sb3I9bi5nZXRDb2xvcigpfX1lbHNle3ZhciBzPVtbXCJ4MVwiLFwiMFwiXV07dmFyIGY9W107aWYociE9PVwiY2FuY2VsXCIpe3MucHVzaChbXCJ5MVwiLFwiMFwiXSk7cy5wdXNoKFtcIngyXCIsXCIxMDAlXCJdKTtzLnB1c2goW1wieTJcIixcIjEwMCVcIl0pO3MucHVzaChbXCJzdHJva2Utd2lkdGhcIixcIjAuMDQ2ZW1cIl0pO2YucHVzaChuZXcgbC5kZWZhdWx0LmxpbmVOb2RlKHMpKX1pZihyPT09XCJ4Y2FuY2VsXCIpe3M9W1tcIngxXCIsXCIwXCJdXX1pZihyIT09XCJiY2FuY2VsXCIpe3MucHVzaChbXCJ5MVwiLFwiMTAwJVwiXSk7cy5wdXNoKFtcIngyXCIsXCIxMDAlXCJdKTtzLnB1c2goW1wieTJcIixcIjBcIl0pO3MucHVzaChbXCJzdHJva2Utd2lkdGhcIixcIjAuMDQ2ZW1cIl0pO2YucHVzaChuZXcgbC5kZWZhdWx0LmxpbmVOb2RlKHMpKX1zPVtbXCJ3aWR0aFwiLFwiMTAwJVwiXSxbXCJoZWlnaHRcIixvK1wiZW1cIl1dO3ZhciBkPW5ldyBsLmRlZmF1bHQuc3ZnTm9kZShmLHMpO2k9dS5kZWZhdWx0Lm1ha2VTcGFuKFtdLFtkXSxuKX1pLmhlaWdodD1vO2kuc3R5bGUuaGVpZ2h0PW8rXCJlbVwiO3JldHVybiBpfTtyLmRlZmF1bHQ9e2VuY2xvc2VTcGFuOnksbWF0aE1Mbm9kZTpwLHN2Z1NwYW46Yn19LHtcIi4vYnVpbGRDb21tb25cIjo5MSxcIi4vZG9tVHJlZVwiOjk4LFwiLi9tYXRoTUxUcmVlXCI6MTE0LFwiLi91dGlsc1wiOjEyMSxcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCI6MTB9XSwxMTc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPXtzcXJ0TWFpbjpcIk05NSA2MjJjLTIuNjY3IDAtNy4xNjctMi42NjctMTMuNVxcbi04UzcyIDYwNCA3MiA2MDBjMC0yIC4zMzMtMy4zMzMgMS00IDEuMzMzLTIuNjY3IDIzLjgzMy0yMC42NjcgNjcuNS01NHNcXG42NS44MzMtNTAuMzMzIDY2LjUtNTFjMS4zMzMtMS4zMzMgMy0yIDUtMiA0LjY2NyAwIDguNjY3IDMuMzMzIDEyIDEwbDE3M1xcbjM3OGMuNjY3IDAgMzUuMzMzLTcxIDEwNC0yMTNzMTM3LjUtMjg1IDIwNi41LTQyOVM4MTIgMTcuMzMzIDgxMiAxNGM1LjMzM1xcbi05LjMzMyAxMi0xNCAyMC0xNGgzOTkxNjZ2NDBIODQ1LjI3Mkw2MjAgNTA3IDM4NSA5OTNjLTIuNjY3IDQuNjY3LTkgNy0xOVxcbjctNiAwLTEwLTEtMTItM0wxNjAgNTc1bC02NSA0N3pNODM0IDBoMzk5MTY2djQwSDg0NXpcIixzcXJ0U2l6ZTE6XCJNMjYzIDYwMWMuNjY3IDAgMTggMzkuNjY3IDUyIDExOXM2OC4xNjdcXG4gMTU4LjY2NyAxMDIuNSAyMzggNTEuODMzIDExOS4zMzMgNTIuNSAxMjBDODEwIDM3My4zMzMgOTgwLjY2NyAxNy42NjcgOTgyIDExXFxuYzQuNjY3LTcuMzMzIDExLTExIDE5LTExaDM5ODk5OXY0MEgxMDEyLjMzM0w3NDEgNjA3Yy0zOC42NjcgODAuNjY3LTg0IDE3NS0xMzZcXG4gMjgzcy04OS4xNjcgMTg1LjMzMy0xMTEuNSAyMzItMzMuODMzIDcwLjMzMy0zNC41IDcxYy00LjY2NyA0LjY2Ny0xMi4zMzMgNy0yM1xcbiA3bC0xMi0xLTEwOS0yNTNjLTcyLjY2Ny0xNjgtMTA5LjMzMy0yNTItMTEwLTI1Mi0xMC42NjcgOC0yMiAxNi42NjctMzQgMjYtMjJcXG4gMTcuMzMzLTMzLjMzMyAyNi0zNCAyNmwtMjYtMjYgNzYtNTkgNzYtNjB6TTEwMDEgMGgzOTg5OTl2NDBIMTAxMnpcIixzcXJ0U2l6ZTI6XCJNMTAwMSAwaDM5ODk5OXY0MEgxMDEzLjA4NFM5MjkuNjY3IDMwOCA3NDlcXG4gODgwcy0yNzcgODc2LjMzMy0yODkgOTEzYy00LjY2NyA0LjY2Ny0xMi42NjcgNy0yNCA3aC0xMmMtMS4zMzMtMy4zMzMtMy42NjdcXG4tMTEuNjY3LTctMjUtMzUuMzMzLTEyNS4zMzMtMTA2LjY2Ny0zNzMuMzMzLTIxNC03NDQtMTAgMTItMjEgMjUtMzMgMzlsLTMyIDM5XFxuYy02LTUuMzMzLTE1LTE0LTI3LTI2bDI1LTMwYzI2LjY2Ny0zMi42NjcgNTItNjMgNzYtOTFsNTItNjAgMjA4IDcyMmM1Ni0xNzUuMzMzXFxuIDEyNi4zMzMtMzk3LjMzMyAyMTEtNjY2czE1My44MzMtNDg4LjE2NyAyMDcuNS02NTguNUM5NDQuMTY3IDEyOS4xNjcgOTc1IDMyLjY2N1xcbiA5ODMgMTBjNC02LjY2NyAxMC0xMCAxOC0xMHptMCAwaDM5ODk5OXY0MEgxMDEzelwiLHNxcnRTaXplMzpcIk00MjQgMjM5OGMtMS4zMzMtLjY2Ny0zOC41LTE3Mi0xMTEuNS01MTQgUzIwMi42NjcgMTM3MC42NjcgMjAyXFxuIDEzNzBjMC0yLTEwLjY2NyAxNC4zMzMtMzIgNDktNC42NjcgNy4zMzMtOS44MzMgMTUuNjY3LTE1LjUgMjVzLTkuODMzIDE2LTEyLjVcXG4gMjBsLTUgN2MtNC0zLjMzMy04LjMzMy03LjY2Ny0xMy0xM2wtMTMtMTMgNzYtMTIyIDc3LTEyMSAyMDkgOTY4YzAtMiA4NC42NjdcXG4tMzYxLjY2NyAyNTQtMTA3OUM4OTYuMzMzIDM3My42NjcgOTgxLjY2NyAxMy4zMzMgOTgzIDEwYzQtNi42NjcgMTAtMTAgMTgtMTBcXG5oMzk4OTk5djQwSDEwMTQuNjIyUzkyNy4zMzIgNDE4LjY2NyA3NDIgMTIwNmMtMTg1LjMzMyA3ODcuMzMzLTI3OS4zMzMgMTE4Mi4zMzNcXG4tMjgyIDExODUtMiA2LTEwIDktMjQgOS04IDAtMTItLjY2Ny0xMi0yek0xMDAxIDBoMzk4OTk5djQwSDEwMTR6XCIsc3FydFNpemU0OlwiTTQ3MyAyNzEzQzgxMi4zMzMgOTEzLjY2NyA5ODIuMzMzIDEzIDk4MyAxMWMzLjMzMy03LjMzMyA5LjMzM1xcbi0xMSAxOC0xMWgzOTkxMTB2NDBIMTAxNy42OThTOTI3LjE2OCA1MTggNzQxLjUgMTUwNkM1NTUuODMzIDI0OTQgNDYyIDI5ODkgNDYwXFxuIDI5OTFjLTIgNi0xMCA5LTI0IDktOCAwLTEyLS42NjctMTItMnMtNS4zMzMtMzItMTYtOTJjLTUwLjY2Ny0yOTMuMzMzLTExOS42NjdcXG4tNjkzLjMzMy0yMDctMTIwMCAwLTEuMzMzLTUuMzMzIDguNjY3LTE2IDMwbC0zMiA2NC0xNiAzMy0yNi0yNiA3Ni0xNTMgNzctMTUxXFxuYy42NjcuNjY3IDM1LjY2NyAyMDIgMTA1IDYwNCA2Ny4zMzMgNDAwLjY2NyAxMDIgNjAyLjY2NyAxMDQgNjA2elxcbk0xMDAxIDBoMzk4OTk5djQwSDEwMTd6XCIsZG91YmxlbGVmdGFycm93OlwiTTI2MiAxNTdcXG5sMTAtMTBjMzQtMzYgNjIuNy03NyA4Ni0xMjMgMy4zLTggNS0xMy4zIDUtMTYgMC01LjMtNi43LTgtMjAtOC03LjNcXG4gMC0xMi4yLjUtMTQuNSAxLjUtMi4zIDEtNC44IDQuNS03LjUgMTAuNS00OS4zIDk3LjMtMTIxLjcgMTY5LjMtMjE3IDIxNi0yOFxcbiAxNC01Ny4zIDI1LTg4IDMzLTYuNyAyLTExIDMuOC0xMyA1LjUtMiAxLjctMyA0LjItMyA3LjVzMSA1LjggMyA3LjVcXG5jMiAxLjcgNi4zIDMuNSAxMyA1LjUgNjggMTcuMyAxMjguMiA0Ny44IDE4MC41IDkxLjUgNTIuMyA0My43IDkzLjggOTYuMiAxMjQuNVxcbiAxNTcuNSA5LjMgOCAxNS4zIDEyLjMgMTggMTNoNmMxMi0uNyAxOC00IDE4LTEwIDAtMi0xLjctNy01LTE1LTIzLjMtNDYtNTItODdcXG4tODYtMTIzbC0xMC0xMGgzOTk3Mzh2LTQwSDIxOGMzMjggMCAwIDAgMCAwbC0xMC04Yy0yNi43LTIwLTY1LjctNDMtMTE3LTY5IDIuN1xcbi0yIDYtMy43IDEwLTUgMzYuNy0xNiA3Mi4zLTM3LjMgMTA3LTY0bDEwLThoMzk5Nzgydi00MHpcXG5tOCAwdjQwaDM5OTczMHYtNDB6bTAgMTk0djQwaDM5OTczMHYtNDB6XCIsZG91YmxlcmlnaHRhcnJvdzpcIk0zOTk3MzggMzkybFxcbi0xMCAxMGMtMzQgMzYtNjIuNyA3Ny04NiAxMjMtMy4zIDgtNSAxMy4zLTUgMTYgMCA1LjMgNi43IDggMjAgOCA3LjMgMCAxMi4yLS41XFxuIDE0LjUtMS41IDIuMy0xIDQuOC00LjUgNy41LTEwLjUgNDkuMy05Ny4zIDEyMS43LTE2OS4zIDIxNy0yMTYgMjgtMTQgNTcuMy0yNSA4OFxcbi0zMyA2LjctMiAxMS0zLjggMTMtNS41IDItMS43IDMtNC4yIDMtNy41cy0xLTUuOC0zLTcuNWMtMi0xLjctNi4zLTMuNS0xMy01LjUtNjhcXG4tMTcuMy0xMjguMi00Ny44LTE4MC41LTkxLjUtNTIuMy00My43LTkzLjgtOTYuMi0xMjQuNS0xNTcuNS05LjMtOC0xNS4zLTEyLjMtMThcXG4tMTNoLTZjLTEyIC43LTE4IDQtMTggMTAgMCAyIDEuNyA3IDUgMTUgMjMuMyA0NiA1MiA4NyA4NiAxMjNsMTAgMTBIMHY0MGgzOTk3ODJcXG5jLTMyOCAwIDAgMCAwIDBsMTAgOGMyNi43IDIwIDY1LjcgNDMgMTE3IDY5LTIuNyAyLTYgMy43LTEwIDUtMzYuNyAxNi03Mi4zIDM3LjNcXG4tMTA3IDY0bC0xMCA4SDB2NDB6TTAgMTU3djQwaDM5OTczMHYtNDB6bTAgMTk0djQwaDM5OTczMHYtNDB6XCIsbGVmdGFycm93OlwiTTQwMDAwMCAyNDFIMTEwbDMtM2M2OC43LTUyLjcgMTEzLjctMTIwXFxuIDEzNS0yMDIgNC0xNC43IDYtMjMgNi0yNSAwLTcuMy03LTExLTIxLTExLTggMC0xMy4yLjgtMTUuNSAyLjUtMi4zIDEuNy00LjIgNS44XFxuLTUuNSAxMi41LTEuMyA0LjctMi43IDEwLjMtNCAxNy0xMiA0OC43LTM0LjggOTItNjguNSAxMzBTNjUuMyAyMjguMyAxOCAyNDdcXG5jLTEwIDQtMTYgNy43LTE4IDExIDAgOC43IDYgMTQuMyAxOCAxNyA0Ny4zIDE4LjcgODcuOCA0NyAxMjEuNSA4NVMxOTYgNDQxLjMgMjA4XFxuIDQ5MGMuNyAyIDEuMyA1IDIgOXMxLjIgNi43IDEuNSA4Yy4zIDEuMyAxIDMuMyAyIDZzMi4yIDQuNSAzLjUgNS41YzEuMyAxIDMuM1xcbiAxLjggNiAyLjVzNiAxIDEwIDFjMTQgMCAyMS0zLjcgMjEtMTEgMC0yLTItMTAuMy02LTI1LTIwLTc5LjMtNjUtMTQ2LjctMTM1LTIwMlxcbiBsLTMtM2gzOTk4OTB6TTEwMCAyNDF2NDBoMzk5OTAwdi00MHpcIixsZWZ0YnJhY2U6XCJNNiA1NDhsLTYtNnYtMzVsNi0xMWM1Ni0xMDQgMTM1LjMtMTgxLjMgMjM4LTIzMiA1Ny4zLTI4LjcgMTE3XFxuLTQ1IDE3OS01MGgzOTk1Nzd2MTIwSDQwM2MtNDMuMyA3LTgxIDE1LTExMyAyNi0xMDAuNyAzMy0xNzkuNyA5MS0yMzcgMTc0LTIuN1xcbiA1LTYgOS0xMCAxMy0uNyAxLTcuMyAxLTIwIDFINnpcIixsZWZ0YnJhY2V1bmRlcjpcIk0wIDZsNi02aDE3YzEyLjY4OCAwIDE5LjMxMy4zIDIwIDEgNCA0IDcuMzEzIDguMyAxMCAxM1xcbiAzNS4zMTMgNTEuMyA4MC44MTMgOTMuOCAxMzYuNSAxMjcuNSA1NS42ODggMzMuNyAxMTcuMTg4IDU1LjggMTg0LjUgNjYuNS42ODhcXG4gMCAyIC4zIDQgMSAxOC42ODggMi43IDc2IDQuMyAxNzIgNWgzOTk0NTB2MTIwSDQyOWwtNi0xYy0xMjQuNjg4LTgtMjM1LTYxLjdcXG4tMzMxLTE2MUM2MC42ODcgMTM4LjcgMzIuMzEyIDk5LjMgNyA1NEwwIDQxVjZ6XCIsbGVmdGdyb3VwOlwiTTQwMDAwMCA4MFxcbkg0MzVDNjQgODAgMTY4LjMgMjI5LjQgMjEgMjYwYy01LjkgMS4yLTE4IDAtMTggMC0yIDAtMy0xLTMtM3YtMzhDNzYgNjEgMjU3IDBcXG4gNDM1IDBoMzk5NTY1elwiLGxlZnRncm91cHVuZGVyOlwiTTQwMDAwMCAyNjJcXG5INDM1QzY0IDI2MiAxNjguMyAxMTIuNiAyMSA4MmMtNS45LTEuMi0xOCAwLTE4IDAtMiAwLTMgMS0zIDN2MzhjNzYgMTU4IDI1NyAyMTlcXG4gNDM1IDIxOWgzOTk1NjV6XCIsbGVmdGhhcnBvb246XCJNMCAyNjdjLjcgNS4zIDMgMTAgNyAxNGgzOTk5OTN2LTQwSDkzYzMuM1xcbi0zLjMgMTAuMi05LjUgMjAuNS0xOC41czE3LjgtMTUuOCAyMi41LTIwLjVjNTAuNy01MiA4OC0xMTAuMyAxMTItMTc1IDQtMTEuMyA1XFxuLTE4LjMgMy0yMS0xLjMtNC03LjMtNi0xOC02LTggMC0xMyAuNy0xNSAycy00LjcgNi43LTggMTZjLTQyIDk4LjctMTA3LjMgMTc0LjdcXG4tMTk2IDIyOC02LjcgNC43LTEwLjcgOC0xMiAxMC0xLjMgMi0yIDUuNy0yIDExem0xMDAtMjZ2NDBoMzk5OTAwdi00MHpcIixsZWZ0aGFycG9vbnBsdXM6XCJNMCAyNjdjLjcgNS4zIDMgMTAgNyAxNGgzOTk5OTN2LTQwSDkzYzMuMy0zLjMgMTAuMi05LjVcXG4gMjAuNS0xOC41czE3LjgtMTUuOCAyMi41LTIwLjVjNTAuNy01MiA4OC0xMTAuMyAxMTItMTc1IDQtMTEuMyA1LTE4LjMgMy0yMS0xLjNcXG4tNC03LjMtNi0xOC02LTggMC0xMyAuNy0xNSAycy00LjcgNi43LTggMTZjLTQyIDk4LjctMTA3LjMgMTc0LjctMTk2IDIyOC02LjcgNC43XFxuLTEwLjcgOC0xMiAxMC0xLjMgMi0yIDUuNy0yIDExem0xMDAtMjZ2NDBoMzk5OTAwdi00MHpNMCA0MzV2NDBoNDAwMDAwdi00MHpcXG5tMCAwdjQwaDQwMDAwMHYtNDB6XCIsbGVmdGhhcnBvb25kb3duOlwiTTcgMjQxYy00IDQtNi4zMzMgOC42NjctNyAxNCAwIDUuMzMzLjY2NyA5IDIgMTFzNS4zMzNcXG4gNS4zMzMgMTIgMTBjOTAuNjY3IDU0IDE1NiAxMzAgMTk2IDIyOCAzLjMzMyAxMC42NjcgNi4zMzMgMTYuMzMzIDkgMTcgMiAuNjY3IDVcXG4gMSA5IDFoNWMxMC42NjcgMCAxNi42NjctMiAxOC02IDItMi42NjcgMS05LjY2Ny0zLTIxLTMyLTg3LjMzMy04Mi42NjctMTU3LjY2N1xcbi0xNTItMjExbC0zLTNoMzk5OTA3di00MHpNOTMgMjgxIEg0MDAwMDAgdi00MEw3IDI0MXpcIixsZWZ0aGFycG9vbmRvd25wbHVzOlwiTTcgNDM1Yy00IDQtNi4zIDguNy03IDE0IDAgNS4zLjcgOSAyIDExczUuMyA1LjMgMTJcXG4gMTBjOTAuNyA1NCAxNTYgMTMwIDE5NiAyMjggMy4zIDEwLjcgNi4zIDE2LjMgOSAxNyAyIC43IDUgMSA5IDFoNWMxMC43IDAgMTYuN1xcbi0yIDE4LTYgMi0yLjcgMS05LjctMy0yMS0zMi04Ny4zLTgyLjctMTU3LjctMTUyLTIxMWwtMy0zaDM5OTkwN3YtNDBIN3ptOTMgMFxcbnY0MGgzOTk5MDB2LTQwek0wIDI0MXY0MGgzOTk5MDB2LTQwem0wIDB2NDBoMzk5OTAwdi00MHpcIixsZWZ0aG9vazpcIk00MDAwMDAgMjgxIEgxMDNzLTMzLTExLjItNjEtMzMuNVMwIDE5Ny4zIDAgMTY0czE0LjItNjEuMiA0Mi41XFxuLTgzLjVDNzAuOCA1OC4yIDEwNCA0NyAxNDIgNDcgYzE2LjcgMCAyNSA2LjcgMjUgMjAgMCAxMi04LjcgMTguNy0yNiAyMC00MCAzLjNcXG4tNjguNyAxNS43LTg2IDM3LTEwIDEyLTE1IDI1LjMtMTUgNDAgMCAyMi43IDkuOCA0MC43IDI5LjUgNTQgMTkuNyAxMy4zIDQzLjUgMjFcXG4gNzEuNSAyM2gzOTk4NTl6TTEwMyAyODF2LTQwaDM5OTg5N3Y0MHpcIixsZWZ0bGluZXNlZ21lbnQ6XCJNNDAgMjgxIFY0MjggSDAgVjk0IEg0MCBWMjQxIEg0MDAwMDAgdjQwelxcbk00MCAyODEgVjQyOCBIMCBWOTQgSDQwIFYyNDEgSDQwMDAwMCB2NDB6XCIsbGVmdG1hcHN0bzpcIk00MCAyODEgVjQ0OEgwVjc0SDQwVjI0MUg0MDAwMDB2NDB6XFxuTTQwIDI4MSBWNDQ4SDBWNzRINDBWMjQxSDQwMDAwMHY0MHpcIixsZWZ0VG9Gcm9tOlwiTTAgMTQ3aDQwMDAwMHY0MEgwem0wIDIxNGM2OCA0MCAxMTUuNyA5NS43IDE0MyAxNjdoMjJjMTUuMyAwIDIzXFxuLS4zIDIzLTEgMC0xLjMtNS4zLTEzLjctMTYtMzctMTgtMzUuMy00MS4zLTY5LTcwLTEwMWwtNy04aDM5OTkwNXYtNDBIOTVsNy04XFxuYzI4LjctMzIgNTItNjUuNyA3MC0xMDEgMTAuNy0yMy4zIDE2LTM1LjcgMTYtMzcgMC0uNy03LjctMS0yMy0xaC0yMkMxMTUuNyAyNjUuM1xcbiA2OCAzMjEgMCAzNjF6bTAtMTc0di00MGgzOTk5MDB2NDB6bTEwMCAxNTR2NDBoMzk5OTAwdi00MHpcIixsb25nZXF1YWw6XCJNMCA1MCBoNDAwMDAwIHY0MEgweiBtMCAxOTRoNDAwMDB2NDBIMHpcXG5NMCA1MCBoNDAwMDAwIHY0MEgweiBtMCAxOTRoNDAwMDB2NDBIMHpcIixtaWRicmFjZTpcIk0yMDA0MjggMzM0XFxuYy0xMDAuNy04LjMtMTk1LjMtNDQtMjgwLTEwOC01NS4zLTQyLTEwMS43LTkzLTEzOS0xNTNsLTktMTRjLTIuNyA0LTUuNyA4LjctOSAxNFxcbi01My4zIDg2LjctMTIzLjcgMTUzLTIxMSAxOTktNjYuNyAzNi0xMzcuMyA1Ni4zLTIxMiA2MkgwVjIxNGgxOTk1NjhjMTc4LjMtMTEuN1xcbiAzMTEuNy03OC4zIDQwMy0yMDEgNi04IDkuNy0xMiAxMS0xMiAuNy0uNyA2LjctMSAxOC0xczE3LjMuMyAxOCAxYzEuMyAwIDUgNCAxMVxcbiAxMiA0NC43IDU5LjMgMTAxLjMgMTA2LjMgMTcwIDE0MXMxNDUuMyA1NC4zIDIyOSA2MGgxOTk1NzJ2MTIwelwiLG1pZGJyYWNldW5kZXI6XCJNMTk5NTcyIDIxNFxcbmMxMDAuNyA4LjMgMTk1LjMgNDQgMjgwIDEwOCA1NS4zIDQyIDEwMS43IDkzIDEzOSAxNTNsOSAxNGMyLjctNCA1LjctOC43IDktMTRcXG4gNTMuMy04Ni43IDEyMy43LTE1MyAyMTEtMTk5IDY2LjctMzYgMTM3LjMtNTYuMyAyMTItNjJoMTk5NTY4djEyMEgyMDA0MzJjLTE3OC4zXFxuIDExLjctMzExLjcgNzguMy00MDMgMjAxLTYgOC05LjcgMTItMTEgMTItLjcuNy02LjcgMS0xOCAxcy0xNy4zLS4zLTE4LTFjLTEuMyAwXFxuLTUtNC0xMS0xMi00NC43LTU5LjMtMTAxLjMtMTA2LjMtMTcwLTE0MXMtMTQ1LjMtNTQuMy0yMjktNjBIMFYyMTR6XCIsXG5yaWdodGFycm93OlwiTTAgMjQxdjQwaDM5OTg5MWMtNDcuMyAzNS4zLTg0IDc4LTExMCAxMjhcXG4tMTYuNyAzMi0yNy43IDYzLjctMzMgOTUgMCAxLjMtLjIgMi43LS41IDQtLjMgMS4zLS41IDIuMy0uNSAzIDAgNy4zIDYuNyAxMSAyMFxcbiAxMSA4IDAgMTMuMi0uOCAxNS41LTIuNSAyLjMtMS43IDQuMi01LjUgNS41LTExLjUgMi0xMy4zIDUuNy0yNyAxMS00MSAxNC43LTQ0LjdcXG4gMzktODQuNSA3My0xMTkuNXM3My43LTYwLjIgMTE5LTc1LjVjNi0yIDktNS43IDktMTFzLTMtOS05LTExYy00NS4zLTE1LjMtODVcXG4tNDAuNS0xMTktNzUuNXMtNTguMy03NC44LTczLTExOS41Yy00LjctMTQtOC4zLTI3LjMtMTEtNDAtMS4zLTYuNy0zLjItMTAuOC01LjVcXG4tMTIuNS0yLjMtMS43LTcuNS0yLjUtMTUuNS0yLjUtMTQgMC0yMSAzLjctMjEgMTEgMCAyIDIgMTAuMyA2IDI1IDIwLjcgODMuMyA2N1xcbiAxNTEuNyAxMzkgMjA1em0wIDB2NDBoMzk5OTAwdi00MHpcIixyaWdodGJyYWNlOlwiTTQwMDAwMCA1NDJsXFxuLTYgNmgtMTdjLTEyLjcgMC0xOS4zLS4zLTIwLTEtNC00LTcuMy04LjMtMTAtMTMtMzUuMy01MS4zLTgwLjgtOTMuOC0xMzYuNS0xMjcuNVxcbnMtMTE3LjItNTUuOC0xODQuNS02Ni41Yy0uNyAwLTItLjMtNC0xLTE4LjctMi43LTc2LTQuMy0xNzItNUgwVjIxNGgzOTk1NzFsNiAxXFxuYzEyNC43IDggMjM1IDYxLjcgMzMxIDE2MSAzMS4zIDMzLjMgNTkuNyA3Mi43IDg1IDExOGw3IDEzdjM1elwiLHJpZ2h0YnJhY2V1bmRlcjpcIk0zOTk5OTQgMGw2IDZ2MzVsLTYgMTFjLTU2IDEwNC0xMzUuMyAxODEuMy0yMzggMjMyLTU3LjNcXG4gMjguNy0xMTcgNDUtMTc5IDUwSC0zMDBWMjE0aDM5OTg5N2M0My4zLTcgODEtMTUgMTEzLTI2IDEwMC43LTMzIDE3OS43LTkxIDIzN1xcbi0xNzQgMi43LTUgNi05IDEwLTEzIC43LTEgNy4zLTEgMjAtMWgxN3pcIixyaWdodGdyb3VwOlwiTTAgODBoMzk5NTY1YzM3MSAwIDI2Ni43IDE0OS40IDQxNCAxODAgNS45IDEuMiAxOCAwIDE4IDAgMiAwXFxuIDMtMSAzLTN2LTM4Yy03Ni0xNTgtMjU3LTIxOS00MzUtMjE5SDB6XCIscmlnaHRncm91cHVuZGVyOlwiTTAgMjYyaDM5OTU2NWMzNzEgMCAyNjYuNy0xNDkuNCA0MTQtMTgwIDUuOS0xLjIgMTggMCAxOFxcbiAwIDIgMCAzIDEgMyAzdjM4Yy03NiAxNTgtMjU3IDIxOS00MzUgMjE5SDB6XCIscmlnaHRoYXJwb29uOlwiTTAgMjQxdjQwaDM5OTk5M2M0LjctNC43IDctOS4zIDctMTQgMC05LjNcXG4tMy43LTE1LjMtMTEtMTgtOTIuNy01Ni43LTE1OS0xMzMuNy0xOTktMjMxLTMuMy05LjMtNi0xNC43LTgtMTYtMi0xLjMtNy0yLTE1LTJcXG4tMTAuNyAwLTE2LjcgMi0xOCA2LTIgMi43LTEgOS43IDMgMjEgMTUuMyA0MiAzNi43IDgxLjggNjQgMTE5LjUgMjcuMyAzNy43IDU4XFxuIDY5LjIgOTIgOTQuNXptMCAwdjQwaDM5OTkwMHYtNDB6XCIscmlnaHRoYXJwb29ucGx1czpcIk0wIDI0MXY0MGgzOTk5OTNjNC43LTQuNyA3LTkuMyA3LTE0IDAtOS4zLTMuNy0xNS4zLTExXFxuLTE4LTkyLjctNTYuNy0xNTktMTMzLjctMTk5LTIzMS0zLjMtOS4zLTYtMTQuNy04LTE2LTItMS4zLTctMi0xNS0yLTEwLjcgMC0xNi43XFxuIDItMTggNi0yIDIuNy0xIDkuNyAzIDIxIDE1LjMgNDIgMzYuNyA4MS44IDY0IDExOS41IDI3LjMgMzcuNyA1OCA2OS4yIDkyIDk0LjV6XFxubTAgMHY0MGgzOTk5MDB2LTQweiBtMTAwIDE5NHY0MGgzOTk5MDB2LTQwem0wIDB2NDBoMzk5OTAwdi00MHpcIixyaWdodGhhcnBvb25kb3duOlwiTTM5OTc0NyA1MTFjMCA3LjMgNi43IDExIDIwIDExIDggMCAxMy0uOCAxNS0yLjVzNC43LTYuOFxcbiA4LTE1LjVjNDAtOTQgOTkuMy0xNjYuMyAxNzgtMjE3IDEzLjMtOCAyMC4zLTEyLjMgMjEtMTMgNS4zLTMuMyA4LjUtNS44IDkuNVxcbi03LjUgMS0xLjcgMS41LTUuMiAxLjUtMTAuNXMtMi4zLTEwLjMtNy0xNUgwdjQwaDM5OTkwOGMtMzQgMjUuMy02NC43IDU3LTkyIDk1XFxuLTI3LjMgMzgtNDguNyA3Ny43LTY0IDExOS0zLjMgOC43LTUgMTQtNSAxNnpNMCAyNDF2NDBoMzk5OTAwdi00MHpcIixyaWdodGhhcnBvb25kb3ducGx1czpcIk0zOTk3NDcgNzA1YzAgNy4zIDYuNyAxMSAyMCAxMSA4IDAgMTMtLjhcXG4gMTUtMi41czQuNy02LjggOC0xNS41YzQwLTk0IDk5LjMtMTY2LjMgMTc4LTIxNyAxMy4zLTggMjAuMy0xMi4zIDIxLTEzIDUuMy0zLjNcXG4gOC41LTUuOCA5LjUtNy41IDEtMS43IDEuNS01LjIgMS41LTEwLjVzLTIuMy0xMC4zLTctMTVIMHY0MGgzOTk5MDhjLTM0IDI1LjNcXG4tNjQuNyA1Ny05MiA5NS0yNy4zIDM4LTQ4LjcgNzcuNy02NCAxMTktMy4zIDguNy01IDE0LTUgMTZ6TTAgNDM1djQwaDM5OTkwMHYtNDB6XFxubTAtMTk0djQwaDQwMDAwMHYtNDB6bTAgMHY0MGg0MDAwMDB2LTQwelwiLHJpZ2h0aG9vazpcIk0zOTk4NTkgMjQxYy03NjQgMCAwIDAgMCAwIDQwLTMuMyA2OC43LTE1LjcgODYtMzcgMTAtMTIgMTUtMjUuM1xcbiAxNS00MCAwLTIyLjctOS44LTQwLjctMjkuNS01NC0xOS43LTEzLjMtNDMuNS0yMS03MS41LTIzLTE3LjMtMS4zLTI2LTgtMjYtMjAgMFxcbi0xMy4zIDguNy0yMCAyNi0yMCAzOCAwIDcxIDExLjIgOTkgMzMuNSAwIDAgNyA1LjYgMjEgMTYuNyAxNCAxMS4yIDIxIDMzLjUgMjFcXG4gNjYuOHMtMTQgNjEuMi00MiA4My41Yy0yOCAyMi4zLTYxIDMzLjUtOTkgMzMuNUwwIDI0MXogTTAgMjgxdi00MGgzOTk4NTl2NDB6XCIscmlnaHRsaW5lc2VnbWVudDpcIk0zOTk5NjAgMjQxIFY5NCBoNDAgVjQyOCBoLTQwIFYyODEgSDAgdi00MHpcXG5NMzk5OTYwIDI0MSBWOTQgaDQwIFY0MjggaC00MCBWMjgxIEgwIHYtNDB6XCIscmlnaHRUb0Zyb206XCJNNDAwMDAwIDE2N2MtNzAuNy00Mi0xMTgtOTcuNy0xNDItMTY3aC0yM2MtMTUuMyAwLTIzIC4zLTIzXFxuIDEgMCAxLjMgNS4zIDEzLjcgMTYgMzcgMTggMzUuMyA0MS4zIDY5IDcwIDEwMWw3IDhIMHY0MGgzOTk5MDVsLTcgOGMtMjguNyAzMlxcbi01MiA2NS43LTcwIDEwMS0xMC43IDIzLjMtMTYgMzUuNy0xNiAzNyAwIC43IDcuNyAxIDIzIDFoMjNjMjQtNjkuMyA3MS4zLTEyNSAxNDJcXG4tMTY3eiBNMTAwIDE0N3Y0MGgzOTk5MDB2LTQwek0wIDM0MXY0MGgzOTk5MDB2LTQwelwiLHR3b2hlYWRsZWZ0YXJyb3c6XCJNMCAxNjdjNjggNDBcXG4gMTE1LjcgOTUuNyAxNDMgMTY3aDIyYzE1LjMgMCAyMy0uMyAyMy0xIDAtMS4zLTUuMy0xMy43LTE2LTM3LTE4LTM1LjMtNDEuMy02OVxcbi03MC0xMDFsLTctOGgxMjVsOSA3YzUwLjcgMzkuMyA4NSA4NiAxMDMgMTQwaDQ2YzAtNC43LTYuMy0xOC43LTE5LTQyLTE4LTM1LjNcXG4tNDAtNjcuMy02Ni05NmwtOS05aDM5OTcxNnYtNDBIMjg0bDktOWMyNi0yOC43IDQ4LTYwLjcgNjYtOTYgMTIuNy0yMy4zMzMgMTlcXG4tMzcuMzMzIDE5LTQyaC00NmMtMTggNTQtNTIuMyAxMDAuNy0xMDMgMTQwbC05IDdIOTVsNy04YzI4LjctMzIgNTItNjUuNyA3MC0xMDFcXG4gMTAuNy0yMy4zMzMgMTYtMzUuNyAxNi0zNyAwLS43LTcuNy0xLTIzLTFoLTIyQzExNS43IDcxLjMgNjggMTI3IDAgMTY3elwiLHR3b2hlYWRyaWdodGFycm93OlwiTTQwMDAwMCAxNjdcXG5jLTY4LTQwLTExNS43LTk1LjctMTQzLTE2N2gtMjJjLTE1LjMgMC0yMyAuMy0yMyAxIDAgMS4zIDUuMyAxMy43IDE2IDM3IDE4IDM1LjNcXG4gNDEuMyA2OSA3MCAxMDFsNyA4aC0xMjVsLTktN2MtNTAuNy0zOS4zLTg1LTg2LTEwMy0xNDBoLTQ2YzAgNC43IDYuMyAxOC43IDE5IDQyXFxuIDE4IDM1LjMgNDAgNjcuMyA2NiA5Nmw5IDlIMHY0MGgzOTk3MTZsLTkgOWMtMjYgMjguNy00OCA2MC43LTY2IDk2LTEyLjcgMjMuMzMzXFxuLTE5IDM3LjMzMy0xOSA0Mmg0NmMxOC01NCA1Mi4zLTEwMC43IDEwMy0xNDBsOS03aDEyNWwtNyA4Yy0yOC43IDMyLTUyIDY1LjctNzBcXG4gMTAxLTEwLjcgMjMuMzMzLTE2IDM1LjctMTYgMzcgMCAuNyA3LjcgMSAyMyAxaDIyYzI3LjMtNzEuMyA3NS0xMjcgMTQzLTE2N3pcIix0aWxkZTE6XCJNMjAwIDU1LjUzOGMtNzcgMC0xNjggNzMuOTUzLTE3NyA3My45NTMtMyAwLTdcXG4tMi4xNzUtOS01LjQzN0wyIDk3Yy0xLTItMi00LTItNiAwLTQgMi03IDUtOWwyMC0xMkMxMTYgMTIgMTcxIDAgMjA3IDBjODYgMFxcbiAxMTQgNjggMTkxIDY4IDc4IDAgMTY4LTY4IDE3Ny02OCA0IDAgNyAyIDkgNWwxMiAxOWMxIDIuMTc1IDIgNC4zNSAyIDYuNTI1IDBcXG4gNC4zNS0yIDcuNjEzLTUgOS43ODhsLTE5IDEzLjA1Yy05MiA2My4wNzctMTE2LjkzNyA3NS4zMDgtMTgzIDc2LjEyOFxcbi02OC4yNjcuODQ3LTExMy03My45NTItMTkxLTczLjk1MnpcIix0aWxkZTI6XCJNMzQ0IDU1LjI2NmMtMTQyIDAtMzAwLjYzOCA4MS4zMTYtMzExLjUgODYuNDE4XFxuLTguMDEgMy43NjItMjIuNSAxMC45MS0yMy41IDUuNTYyTDEgMTIwYy0xLTItMS0zLTEtNCAwLTUgMy05IDgtMTBsMTguNC05QzE2MC45XFxuIDMxLjkgMjgzIDAgMzU4IDBjMTQ4IDAgMTg4IDEyMiAzMzEgMTIyczMxNC05NyAzMjYtOTdjNCAwIDggMiAxMCA3bDcgMjEuMTE0XFxuYzEgMi4xNCAxIDMuMjEgMSA0LjI4IDAgNS4zNDctMyA5LjYyNi03IDEwLjY5NmwtMjIuMyAxMi42MjJDODUyLjYgMTU4LjM3MiA3NTFcXG4gMTgxLjQ3NiA2NzYgMTgxLjQ3NmMtMTQ5IDAtMTg5LTEyNi4yMS0zMzItMTI2LjIxelwiLHRpbGRlMzpcIk03ODYgNTlDNDU3IDU5IDMyIDE3NS4yNDIgMTMgMTc1LjI0MmMtNiAwLTEwLTMuNDU3XFxuLTExLTEwLjM3TC4xNSAxMzhjLTEtNyAzLTEyIDEwLTEzbDE5LjItNi40QzM3OC40IDQwLjcgNjM0LjMgMCA4MDQuMyAwYzMzNyAwXFxuIDQxMS44IDE1NyA3NDYuOCAxNTcgMzI4IDAgNzU0LTExMiA3NzMtMTEyIDUgMCAxMCAzIDExIDlsMSAxNC4wNzVjMSA4LjA2Ni0uNjk3XFxuIDE2LjU5NS02LjY5NyAxNy40OTJsLTIxLjA1MiA3LjMxYy0zNjcuOSA5OC4xNDYtNjA5LjE1IDEyMi42OTYtNzc4LjE1IDEyMi42OTZcXG4gLTMzOCAwLTQwOS0xNTYuNTczLTc0NC0xNTYuNTczelwiLHRpbGRlNDpcIk03ODYgNThDNDU3IDU4IDMyIDE3Ny40ODcgMTMgMTc3LjQ4N2MtNiAwLTEwLTMuMzQ1XFxuLTExLTEwLjAzNUwuMTUgMTQzYy0xLTcgMy0xMiAxMC0xM2wyMi02LjdDMzgxLjIgMzUgNjM3LjE1IDAgODA3LjE1IDBjMzM3IDAgNDA5XFxuIDE3NyA3NDQgMTc3IDMyOCAwIDc1NC0xMjcgNzczLTEyNyA1IDAgMTAgMyAxMSA5bDEgMTQuNzk0YzEgNy44MDUtMyAxMy4zOC05XFxuIDE0LjQ5NWwtMjAuNyA1LjU3NGMtMzY2Ljg1IDk5Ljc5LTYwNy4zIDEzOS4zNzItNzc2LjMgMTM5LjM3Mi0zMzggMC00MDlcXG4gLTE3NS4yMzYtNzQ0LTE3NS4yMzZ6XCIsd2lkZWhhdDE6XCJNNTI5IDBoNWw1MTkgMTE1YzUgMSA5IDUgOSAxMCAwIDEtMSAyLTEgM2wtNCAyMlxcbmMtMSA1LTUgOS0xMSA5aC0yTDUzMiA2NyAxOSAxNTloLTJjLTUgMC05LTQtMTEtOWwtNS0yMmMtMS02IDItMTIgOC0xM3pcIix3aWRlaGF0MjpcIk0xMTgxIDBoMmwxMTcxIDE3NmM2IDAgMTAgNSAxMCAxMWwtMiAyM2MtMSA2LTUgMTBcXG4tMTEgMTBoLTFMMTE4MiA2NyAxNSAyMjBoLTFjLTYgMC0xMC00LTExLTEwbC0yLTIzYy0xLTYgNC0xMSAxMC0xMXpcIix3aWRlaGF0MzpcIk0xMTgxIDBoMmwxMTcxIDIzNmM2IDAgMTAgNSAxMCAxMWwtMiAyM2MtMSA2LTUgMTBcXG4tMTEgMTBoLTFMMTE4MiA2NyAxNSAyODBoLTFjLTYgMC0xMC00LTExLTEwbC0yLTIzYy0xLTYgNC0xMSAxMC0xMXpcIix3aWRlaGF0NDpcIk0xMTgxIDBoMmwxMTcxIDI5NmM2IDAgMTAgNSAxMCAxMWwtMiAyM2MtMSA2LTUgMTBcXG4tMTEgMTBoLTFMMTE4MiA2NyAxNSAzNDBoLTFjLTYgMC0xMC00LTExLTEwbC0yLTIzYy0xLTYgNC0xMSAxMC0xMXpcIn07ci5kZWZhdWx0PXtwYXRoOmF9fSx7fV0sMTE4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT17bWF0aDp7fSx0ZXh0Ont9fTtyLmRlZmF1bHQ9YTtmdW5jdGlvbiBuKGUsdCxyLG4saSxsKXthW2VdW2ldPXtmb250OnQsZ3JvdXA6cixyZXBsYWNlOm59O2lmKGwmJm4pe2FbZV1bbl09YVtlXVtpXX19dmFyIGk9XCJtYXRoXCI7dmFyIGw9XCJ0ZXh0XCI7dmFyIG89XCJtYWluXCI7dmFyIHU9XCJhbXNcIjt2YXIgcz1cImFjY2VudFwiO3ZhciBmPVwiYmluXCI7dmFyIGQ9XCJjbG9zZVwiO3ZhciBjPVwiaW5uZXJcIjt2YXIgaD1cIm1hdGhvcmRcIjt2YXIgdj1cIm9wXCI7dmFyIHA9XCJvcGVuXCI7dmFyIG09XCJwdW5jdFwiO3ZhciBnPVwicmVsXCI7dmFyIGI9XCJzcGFjaW5nXCI7dmFyIHk9XCJ0ZXh0b3JkXCI7bihpLG8sZyxcIlxcdTIyNjFcIixcIlxcXFxlcXVpdlwiLHRydWUpO24oaSxvLGcsXCJcXHUyMjdhXCIsXCJcXFxccHJlY1wiLHRydWUpO24oaSxvLGcsXCJcXHUyMjdiXCIsXCJcXFxcc3VjY1wiLHRydWUpO24oaSxvLGcsXCJcXHUyMjNjXCIsXCJcXFxcc2ltXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyYTVcIixcIlxcXFxwZXJwXCIpO24oaSxvLGcsXCJcXHUyYWFmXCIsXCJcXFxccHJlY2VxXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTJhYjBcIixcIlxcXFxzdWNjZXFcIix0cnVlKTtuKGksbyxnLFwiXFx1MjI0M1wiLFwiXFxcXHNpbWVxXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyMjNcIixcIlxcXFxtaWRcIik7bihpLG8sZyxcIlxcdTIyNmFcIixcIlxcXFxsbFwiKTtuKGksbyxnLFwiXFx1MjI2YlwiLFwiXFxcXGdnXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyNGRcIixcIlxcXFxhc3ltcFwiLHRydWUpO24oaSxvLGcsXCJcXHUyMjI1XCIsXCJcXFxccGFyYWxsZWxcIik7bihpLG8sZyxcIlxcdTIyYzhcIixcIlxcXFxib3d0aWVcIix0cnVlKTtuKGksbyxnLFwiXFx1MjMyM1wiLFwiXFxcXHNtaWxlXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyOTFcIixcIlxcXFxzcXN1YnNldGVxXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyOTJcIixcIlxcXFxzcXN1cHNldGVxXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyNTBcIixcIlxcXFxkb3RlcVwiLHRydWUpO24oaSxvLGcsXCJcXHUyMzIyXCIsXCJcXFxcZnJvd25cIix0cnVlKTtuKGksbyxnLFwiXFx1MjIwYlwiLFwiXFxcXG5pXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyMWRcIixcIlxcXFxwcm9wdG9cIix0cnVlKTtuKGksbyxnLFwiXFx1MjJhMlwiLFwiXFxcXHZkYXNoXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyYTNcIixcIlxcXFxkYXNodlwiLHRydWUpO24oaSxvLGcsXCJcXHUyMjBiXCIsXCJcXFxcb3duc1wiKTtuKGksbyxtLFwiLlwiLFwiXFxcXGxkb3RwXCIpO24oaSxvLG0sXCJcXHUyMmM1XCIsXCJcXFxcY2RvdHBcIik7bihpLG8seSxcIiNcIixcIlxcXFwjXCIpO24obCxvLHksXCIjXCIsXCJcXFxcI1wiKTtuKGksbyx5LFwiJlwiLFwiXFxcXCZcIik7bihsLG8seSxcIiZcIixcIlxcXFwmXCIpO24oaSxvLHksXCJcXHUyMTM1XCIsXCJcXFxcYWxlcGhcIik7bihpLG8seSxcIlxcdTIyMDBcIixcIlxcXFxmb3JhbGxcIik7bihpLG8seSxcIlxcdTIxMGZcIixcIlxcXFxoYmFyXCIpO24oaSxvLHksXCJcXHUyMjAzXCIsXCJcXFxcZXhpc3RzXCIpO24oaSxvLHksXCJcXHUyMjA3XCIsXCJcXFxcbmFibGFcIik7bihpLG8seSxcIlxcdTI2NmRcIixcIlxcXFxmbGF0XCIpO24oaSxvLHksXCJcXHUyMTEzXCIsXCJcXFxcZWxsXCIpO24oaSxvLHksXCJcXHUyNjZlXCIsXCJcXFxcbmF0dXJhbFwiKTtuKGksbyx5LFwiXFx1MjY2M1wiLFwiXFxcXGNsdWJzdWl0XCIpO24oaSxvLHksXCJcXHUyMTE4XCIsXCJcXFxcd3BcIik7bihpLG8seSxcIlxcdTI2NmZcIixcIlxcXFxzaGFycFwiKTtuKGksbyx5LFwiXFx1MjY2MlwiLFwiXFxcXGRpYW1vbmRzdWl0XCIpO24oaSxvLHksXCJcXHUyMTFjXCIsXCJcXFxcUmVcIik7bihpLG8seSxcIlxcdTI2NjFcIixcIlxcXFxoZWFydHN1aXRcIik7bihpLG8seSxcIlxcdTIxMTFcIixcIlxcXFxJbVwiKTtuKGksbyx5LFwiXFx1MjY2MFwiLFwiXFxcXHNwYWRlc3VpdFwiKTtuKGksbyx5LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ1wiKTtuKGwsbyx5LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ1wiKTtuKGwsbyx5LFwiXFx1MjAyMFwiLFwiXFxcXHRleHRkYWdnZXJcIik7bihpLG8seSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnXCIpO24obCxvLHksXCJcXHUyMDIxXCIsXCJcXFxcZGRhZ1wiKTtuKGwsbyx5LFwiXFx1MjAyMFwiLFwiXFxcXHRleHRkYWdnZXJkYmxcIik7bihpLG8sZCxcIlxcdTIzYjFcIixcIlxcXFxybW91c3RhY2hlXCIpO24oaSxvLHAsXCJcXHUyM2IwXCIsXCJcXFxcbG1vdXN0YWNoZVwiKTtuKGksbyxkLFwiXFx1MjdlZlwiLFwiXFxcXHJncm91cFwiKTtuKGksbyxwLFwiXFx1MjdlZVwiLFwiXFxcXGxncm91cFwiKTtuKGksbyxmLFwiXFx1MjIxM1wiLFwiXFxcXG1wXCIpO24oaSxvLGYsXCJcXHUyMjk2XCIsXCJcXFxcb21pbnVzXCIpO24oaSxvLGYsXCJcXHUyMjhlXCIsXCJcXFxcdXBsdXNcIik7bihpLG8sZixcIlxcdTIyOTNcIixcIlxcXFxzcWNhcFwiKTtuKGksbyxmLFwiXFx1MjIxN1wiLFwiXFxcXGFzdFwiKTtuKGksbyxmLFwiXFx1MjI5NFwiLFwiXFxcXHNxY3VwXCIpO24oaSxvLGYsXCJcXHUyNWVmXCIsXCJcXFxcYmlnY2lyY1wiKTtuKGksbyxmLFwiXFx1MjIxOVwiLFwiXFxcXGJ1bGxldFwiKTtuKGksbyxmLFwiXFx1MjAyMVwiLFwiXFxcXGRkYWdnZXJcIik7bihpLG8sZixcIlxcdTIyNDBcIixcIlxcXFx3clwiKTtuKGksbyxmLFwiXFx1MmEzZlwiLFwiXFxcXGFtYWxnXCIpO24oaSxvLGYsXCImXCIsXCJcXFxcQW5kXCIpO24oaSxvLGcsXCJcXHUyN2Y1XCIsXCJcXFxcbG9uZ2xlZnRhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjFkMFwiLFwiXFxcXExlZnRhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjdmOFwiLFwiXFxcXExvbmdsZWZ0YXJyb3dcIik7bihpLG8sZyxcIlxcdTI3ZjZcIixcIlxcXFxsb25ncmlnaHRhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjFkMlwiLFwiXFxcXFJpZ2h0YXJyb3dcIik7bihpLG8sZyxcIlxcdTI3ZjlcIixcIlxcXFxMb25ncmlnaHRhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjE5NFwiLFwiXFxcXGxlZnRyaWdodGFycm93XCIpO24oaSxvLGcsXCJcXHUyN2Y3XCIsXCJcXFxcbG9uZ2xlZnRyaWdodGFycm93XCIpO24oaSxvLGcsXCJcXHUyMWQ0XCIsXCJcXFxcTGVmdHJpZ2h0YXJyb3dcIik7bihpLG8sZyxcIlxcdTI3ZmFcIixcIlxcXFxMb25nbGVmdHJpZ2h0YXJyb3dcIik7bihpLG8sZyxcIlxcdTIxYTZcIixcIlxcXFxtYXBzdG9cIik7bihpLG8sZyxcIlxcdTI3ZmNcIixcIlxcXFxsb25nbWFwc3RvXCIpO24oaSxvLGcsXCJcXHUyMTk3XCIsXCJcXFxcbmVhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjFhOVwiLFwiXFxcXGhvb2tsZWZ0YXJyb3dcIik7bihpLG8sZyxcIlxcdTIxYWFcIixcIlxcXFxob29rcmlnaHRhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjE5OFwiLFwiXFxcXHNlYXJyb3dcIik7bihpLG8sZyxcIlxcdTIxYmNcIixcIlxcXFxsZWZ0aGFycG9vbnVwXCIpO24oaSxvLGcsXCJcXHUyMWMwXCIsXCJcXFxccmlnaHRoYXJwb29udXBcIik7bihpLG8sZyxcIlxcdTIxOTlcIixcIlxcXFxzd2Fycm93XCIpO24oaSxvLGcsXCJcXHUyMWJkXCIsXCJcXFxcbGVmdGhhcnBvb25kb3duXCIpO24oaSxvLGcsXCJcXHUyMWMxXCIsXCJcXFxccmlnaHRoYXJwb29uZG93blwiKTtuKGksbyxnLFwiXFx1MjE5NlwiLFwiXFxcXG53YXJyb3dcIik7bihpLG8sZyxcIlxcdTIxY2NcIixcIlxcXFxyaWdodGxlZnRoYXJwb29uc1wiKTtuKGksdSxnLFwiXFx1MjI2ZVwiLFwiXFxcXG5sZXNzXCIpO24oaSx1LGcsXCJcXHVlMDEwXCIsXCJcXFxcbmxlcXNsYW50XCIpO24oaSx1LGcsXCJcXHVlMDExXCIsXCJcXFxcbmxlcXFcIik7bihpLHUsZyxcIlxcdTJhODdcIixcIlxcXFxsbmVxXCIpO24oaSx1LGcsXCJcXHUyMjY4XCIsXCJcXFxcbG5lcXFcIik7bihpLHUsZyxcIlxcdWUwMGNcIixcIlxcXFxsdmVydG5lcXFcIik7bihpLHUsZyxcIlxcdTIyZTZcIixcIlxcXFxsbnNpbVwiKTtuKGksdSxnLFwiXFx1MmE4OVwiLFwiXFxcXGxuYXBwcm94XCIpO24oaSx1LGcsXCJcXHUyMjgwXCIsXCJcXFxcbnByZWNcIik7bihpLHUsZyxcIlxcdTIyZTBcIixcIlxcXFxucHJlY2VxXCIpO24oaSx1LGcsXCJcXHUyMmU4XCIsXCJcXFxccHJlY25zaW1cIik7bihpLHUsZyxcIlxcdTJhYjlcIixcIlxcXFxwcmVjbmFwcHJveFwiKTtuKGksdSxnLFwiXFx1MjI0MVwiLFwiXFxcXG5zaW1cIik7bihpLHUsZyxcIlxcdWUwMDZcIixcIlxcXFxuc2hvcnRtaWRcIik7bihpLHUsZyxcIlxcdTIyMjRcIixcIlxcXFxubWlkXCIpO24oaSx1LGcsXCJcXHUyMmFjXCIsXCJcXFxcbnZkYXNoXCIpO24oaSx1LGcsXCJcXHUyMmFkXCIsXCJcXFxcbnZEYXNoXCIpO24oaSx1LGcsXCJcXHUyMmVhXCIsXCJcXFxcbnRyaWFuZ2xlbGVmdFwiKTtuKGksdSxnLFwiXFx1MjJlY1wiLFwiXFxcXG50cmlhbmdsZWxlZnRlcVwiKTtuKGksdSxnLFwiXFx1MjI4YVwiLFwiXFxcXHN1YnNldG5lcVwiKTtuKGksdSxnLFwiXFx1ZTAxYVwiLFwiXFxcXHZhcnN1YnNldG5lcVwiKTtuKGksdSxnLFwiXFx1MmFjYlwiLFwiXFxcXHN1YnNldG5lcXFcIik7bihpLHUsZyxcIlxcdWUwMTdcIixcIlxcXFx2YXJzdWJzZXRuZXFxXCIpO24oaSx1LGcsXCJcXHUyMjZmXCIsXCJcXFxcbmd0clwiKTtuKGksdSxnLFwiXFx1ZTAwZlwiLFwiXFxcXG5nZXFzbGFudFwiKTtuKGksdSxnLFwiXFx1ZTAwZVwiLFwiXFxcXG5nZXFxXCIpO24oaSx1LGcsXCJcXHUyYTg4XCIsXCJcXFxcZ25lcVwiKTtuKGksdSxnLFwiXFx1MjI2OVwiLFwiXFxcXGduZXFxXCIpO24oaSx1LGcsXCJcXHVlMDBkXCIsXCJcXFxcZ3ZlcnRuZXFxXCIpO24oaSx1LGcsXCJcXHUyMmU3XCIsXCJcXFxcZ25zaW1cIik7bihpLHUsZyxcIlxcdTJhOGFcIixcIlxcXFxnbmFwcHJveFwiKTtuKGksdSxnLFwiXFx1MjI4MVwiLFwiXFxcXG5zdWNjXCIpO24oaSx1LGcsXCJcXHUyMmUxXCIsXCJcXFxcbnN1Y2NlcVwiKTtuKGksdSxnLFwiXFx1MjJlOVwiLFwiXFxcXHN1Y2Nuc2ltXCIpO24oaSx1LGcsXCJcXHUyYWJhXCIsXCJcXFxcc3VjY25hcHByb3hcIik7bihpLHUsZyxcIlxcdTIyNDZcIixcIlxcXFxuY29uZ1wiKTtuKGksdSxnLFwiXFx1ZTAwN1wiLFwiXFxcXG5zaG9ydHBhcmFsbGVsXCIpO24oaSx1LGcsXCJcXHUyMjI2XCIsXCJcXFxcbnBhcmFsbGVsXCIpO24oaSx1LGcsXCJcXHUyMmFmXCIsXCJcXFxcblZEYXNoXCIpO24oaSx1LGcsXCJcXHUyMmViXCIsXCJcXFxcbnRyaWFuZ2xlcmlnaHRcIik7bihpLHUsZyxcIlxcdTIyZWRcIixcIlxcXFxudHJpYW5nbGVyaWdodGVxXCIpO24oaSx1LGcsXCJcXHVlMDE4XCIsXCJcXFxcbnN1cHNldGVxcVwiKTtuKGksdSxnLFwiXFx1MjI4YlwiLFwiXFxcXHN1cHNldG5lcVwiKTtuKGksdSxnLFwiXFx1ZTAxYlwiLFwiXFxcXHZhcnN1cHNldG5lcVwiKTtuKGksdSxnLFwiXFx1MmFjY1wiLFwiXFxcXHN1cHNldG5lcXFcIik7bihpLHUsZyxcIlxcdWUwMTlcIixcIlxcXFx2YXJzdXBzZXRuZXFxXCIpO24oaSx1LGcsXCJcXHUyMmFlXCIsXCJcXFxcblZkYXNoXCIpO24oaSx1LGcsXCJcXHUyYWI1XCIsXCJcXFxccHJlY25lcXFcIik7bihpLHUsZyxcIlxcdTJhYjZcIixcIlxcXFxzdWNjbmVxcVwiKTtuKGksdSxnLFwiXFx1ZTAxNlwiLFwiXFxcXG5zdWJzZXRlcXFcIik7bihpLHUsZixcIlxcdTIyYjRcIixcIlxcXFx1bmxoZFwiKTtuKGksdSxmLFwiXFx1MjJiNVwiLFwiXFxcXHVucmhkXCIpO24oaSx1LGcsXCJcXHUyMTlhXCIsXCJcXFxcbmxlZnRhcnJvd1wiKTtuKGksdSxnLFwiXFx1MjE5YlwiLFwiXFxcXG5yaWdodGFycm93XCIpO24oaSx1LGcsXCJcXHUyMWNkXCIsXCJcXFxcbkxlZnRhcnJvd1wiKTtuKGksdSxnLFwiXFx1MjFjZlwiLFwiXFxcXG5SaWdodGFycm93XCIpO24oaSx1LGcsXCJcXHUyMWFlXCIsXCJcXFxcbmxlZnRyaWdodGFycm93XCIpO24oaSx1LGcsXCJcXHUyMWNlXCIsXCJcXFxcbkxlZnRyaWdodGFycm93XCIpO24oaSx1LGcsXCJcXHUyNWIzXCIsXCJcXFxcdmFydHJpYW5nbGVcIik7bihpLHUseSxcIlxcdTIxMGZcIixcIlxcXFxoc2xhc2hcIik7bihpLHUseSxcIlxcdTI1YmRcIixcIlxcXFx0cmlhbmdsZWRvd25cIik7bihpLHUseSxcIlxcdTI1Y2FcIixcIlxcXFxsb3plbmdlXCIpO24oaSx1LHksXCJcXHUyNGM4XCIsXCJcXFxcY2lyY2xlZFNcIik7bihpLHUseSxcIlxceGFlXCIsXCJcXFxcY2lyY2xlZFJcIik7bihsLHUseSxcIlxceGFlXCIsXCJcXFxcY2lyY2xlZFJcIik7bihpLHUseSxcIlxcdTIyMjFcIixcIlxcXFxtZWFzdXJlZGFuZ2xlXCIpO24oaSx1LHksXCJcXHUyMjA0XCIsXCJcXFxcbmV4aXN0c1wiKTtuKGksdSx5LFwiXFx1MjEyN1wiLFwiXFxcXG1ob1wiKTtuKGksdSx5LFwiXFx1MjEzMlwiLFwiXFxcXEZpbnZcIik7bihpLHUseSxcIlxcdTIxNDFcIixcIlxcXFxHYW1lXCIpO24oaSx1LHksXCJrXCIsXCJcXFxcQmJia1wiKTtuKGksdSx5LFwiXFx1MjAzNVwiLFwiXFxcXGJhY2twcmltZVwiKTtuKGksdSx5LFwiXFx1MjViMlwiLFwiXFxcXGJsYWNrdHJpYW5nbGVcIik7bihpLHUseSxcIlxcdTI1YmNcIixcIlxcXFxibGFja3RyaWFuZ2xlZG93blwiKTtuKGksdSx5LFwiXFx1MjVhMFwiLFwiXFxcXGJsYWNrc3F1YXJlXCIpO24oaSx1LHksXCJcXHUyOWViXCIsXCJcXFxcYmxhY2tsb3plbmdlXCIpO24oaSx1LHksXCJcXHUyNjA1XCIsXCJcXFxcYmlnc3RhclwiKTtuKGksdSx5LFwiXFx1MjIyMlwiLFwiXFxcXHNwaGVyaWNhbGFuZ2xlXCIpO24oaSx1LHksXCJcXHUyMjAxXCIsXCJcXFxcY29tcGxlbWVudFwiKTtuKGksdSx5LFwiXFx4ZjBcIixcIlxcXFxldGhcIik7bihpLHUseSxcIlxcdTI1NzFcIixcIlxcXFxkaWFndXBcIik7bihpLHUseSxcIlxcdTI1NzJcIixcIlxcXFxkaWFnZG93blwiKTtuKGksdSx5LFwiXFx1MjVhMVwiLFwiXFxcXHNxdWFyZVwiKTtuKGksdSx5LFwiXFx1MjVhMVwiLFwiXFxcXEJveFwiKTtuKGksdSx5LFwiXFx1MjVjYVwiLFwiXFxcXERpYW1vbmRcIik7bihpLHUseSxcIlxceGE1XCIsXCJcXFxceWVuXCIpO24oaSx1LHksXCJcXHUyNzEzXCIsXCJcXFxcY2hlY2ttYXJrXCIpO24obCx1LHksXCJcXHUyNzEzXCIsXCJcXFxcY2hlY2ttYXJrXCIpO24oaSx1LHksXCJcXHUyMTM2XCIsXCJcXFxcYmV0aFwiKTtuKGksdSx5LFwiXFx1MjEzOFwiLFwiXFxcXGRhbGV0aFwiKTtuKGksdSx5LFwiXFx1MjEzN1wiLFwiXFxcXGdpbWVsXCIpO24oaSx1LHksXCJcXHUwM2RkXCIsXCJcXFxcZGlnYW1tYVwiKTtuKGksdSx5LFwiXFx1MDNmMFwiLFwiXFxcXHZhcmthcHBhXCIpO24oaSx1LHAsXCJcXHUyNTBjXCIsXCJcXFxcdWxjb3JuZXJcIik7bihpLHUsZCxcIlxcdTI1MTBcIixcIlxcXFx1cmNvcm5lclwiKTtuKGksdSxwLFwiXFx1MjUxNFwiLFwiXFxcXGxsY29ybmVyXCIpO24oaSx1LGQsXCJcXHUyNTE4XCIsXCJcXFxcbHJjb3JuZXJcIik7bihpLHUsZyxcIlxcdTIyNjZcIixcIlxcXFxsZXFxXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTJhN2RcIixcIlxcXFxsZXFzbGFudFwiKTtuKGksdSxnLFwiXFx1MmE5NVwiLFwiXFxcXGVxc2xhbnRsZXNzXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyNzJcIixcIlxcXFxsZXNzc2ltXCIpO24oaSx1LGcsXCJcXHUyYTg1XCIsXCJcXFxcbGVzc2FwcHJveFwiKTtuKGksdSxnLFwiXFx1MjI0YVwiLFwiXFxcXGFwcHJveGVxXCIsdHJ1ZSk7bihpLHUsZixcIlxcdTIyZDZcIixcIlxcXFxsZXNzZG90XCIpO24oaSx1LGcsXCJcXHUyMmQ4XCIsXCJcXFxcbGxsXCIpO24oaSx1LGcsXCJcXHUyMjc2XCIsXCJcXFxcbGVzc2d0clwiKTtuKGksdSxnLFwiXFx1MjJkYVwiLFwiXFxcXGxlc3NlcWd0clwiKTtuKGksdSxnLFwiXFx1MmE4YlwiLFwiXFxcXGxlc3NlcXFndHJcIik7bihpLHUsZyxcIlxcdTIyNTFcIixcIlxcXFxkb3RlcWRvdFwiKTtuKGksdSxnLFwiXFx1MjI1M1wiLFwiXFxcXHJpc2luZ2RvdHNlcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjUyXCIsXCJcXFxcZmFsbGluZ2RvdHNlcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjNkXCIsXCJcXFxcYmFja3NpbVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMmNkXCIsXCJcXFxcYmFja3NpbWVxXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTJhYzVcIixcIlxcXFxzdWJzZXRlcXFcIix0cnVlKTtuKGksdSxnLFwiXFx1MjJkMFwiLFwiXFxcXFN1YnNldFwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjhmXCIsXCJcXFxcc3FzdWJzZXRcIix0cnVlKTtuKGksdSxnLFwiXFx1MjI3Y1wiLFwiXFxcXHByZWNjdXJseWVxXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyZGVcIixcIlxcXFxjdXJseWVxcHJlY1wiLHRydWUpO24oaSx1LGcsXCJcXHUyMjdlXCIsXCJcXFxccHJlY3NpbVwiLHRydWUpO24oaSx1LGcsXCJcXHUyYWI3XCIsXCJcXFxccHJlY2FwcHJveFwiLHRydWUpO24oaSx1LGcsXCJcXHUyMmIyXCIsXCJcXFxcdmFydHJpYW5nbGVsZWZ0XCIpO24oaSx1LGcsXCJcXHUyMmI0XCIsXCJcXFxcdHJpYW5nbGVsZWZ0ZXFcIik7bihpLHUsZyxcIlxcdTIyYThcIixcIlxcXFx2RGFzaFwiKTtuKGksdSxnLFwiXFx1MjJhYVwiLFwiXFxcXFZ2ZGFzaFwiLHRydWUpO24oaSx1LGcsXCJcXHUyMzIzXCIsXCJcXFxcc21hbGxzbWlsZVwiKTtuKGksdSxnLFwiXFx1MjMyMlwiLFwiXFxcXHNtYWxsZnJvd25cIik7bihpLHUsZyxcIlxcdTIyNGZcIixcIlxcXFxidW1wZXFcIix0cnVlKTtuKGksdSxnLFwiXFx1MjI0ZVwiLFwiXFxcXEJ1bXBlcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjY3XCIsXCJcXFxcZ2VxcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyYTdlXCIsXCJcXFxcZ2Vxc2xhbnRcIix0cnVlKTtuKGksdSxnLFwiXFx1MmE5NlwiLFwiXFxcXGVxc2xhbnRndHJcIix0cnVlKTtuKGksdSxnLFwiXFx1MjI3M1wiLFwiXFxcXGd0cnNpbVwiLHRydWUpO24oaSx1LGcsXCJcXHUyYTg2XCIsXCJcXFxcZ3RyYXBwcm94XCIsdHJ1ZSk7bihpLHUsZixcIlxcdTIyZDdcIixcIlxcXFxndHJkb3RcIik7bihpLHUsZyxcIlxcdTIyZDlcIixcIlxcXFxnZ2dcIix0cnVlKTtuKGksdSxnLFwiXFx1MjI3N1wiLFwiXFxcXGd0cmxlc3NcIix0cnVlKTtuKGksdSxnLFwiXFx1MjJkYlwiLFwiXFxcXGd0cmVxbGVzc1wiLHRydWUpO24oaSx1LGcsXCJcXHUyYThjXCIsXCJcXFxcZ3RyZXFxbGVzc1wiLHRydWUpO24oaSx1LGcsXCJcXHUyMjU2XCIsXCJcXFxcZXFjaXJjXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyNTdcIixcIlxcXFxjaXJjZXFcIix0cnVlKTtuKGksdSxnLFwiXFx1MjI1Y1wiLFwiXFxcXHRyaWFuZ2xlcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjNjXCIsXCJcXFxcdGhpY2tzaW1cIik7bihpLHUsZyxcIlxcdTIyNDhcIixcIlxcXFx0aGlja2FwcHJveFwiKTtuKGksdSxnLFwiXFx1MmFjNlwiLFwiXFxcXHN1cHNldGVxcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMmQxXCIsXCJcXFxcU3Vwc2V0XCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyOTBcIixcIlxcXFxzcXN1cHNldFwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjdkXCIsXCJcXFxcc3VjY2N1cmx5ZXFcIix0cnVlKTtuKGksdSxnLFwiXFx1MjJkZlwiLFwiXFxcXGN1cmx5ZXFzdWNjXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyN2ZcIixcIlxcXFxzdWNjc2ltXCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTJhYjhcIixcIlxcXFxzdWNjYXBwcm94XCIsdHJ1ZSk7bihpLHUsZyxcIlxcdTIyYjNcIixcIlxcXFx2YXJ0cmlhbmdsZXJpZ2h0XCIpO24oaSx1LGcsXCJcXHUyMmI1XCIsXCJcXFxcdHJpYW5nbGVyaWdodGVxXCIpO24oaSx1LGcsXCJcXHUyMmE5XCIsXCJcXFxcVmRhc2hcIix0cnVlKTtuKGksdSxnLFwiXFx1MjIyM1wiLFwiXFxcXHNob3J0bWlkXCIpO24oaSx1LGcsXCJcXHUyMjI1XCIsXCJcXFxcc2hvcnRwYXJhbGxlbFwiKTtuKGksdSxnLFwiXFx1MjI2Y1wiLFwiXFxcXGJldHdlZW5cIix0cnVlKTtuKGksdSxnLFwiXFx1MjJkNFwiLFwiXFxcXHBpdGNoZm9ya1wiLHRydWUpO24oaSx1LGcsXCJcXHUyMjFkXCIsXCJcXFxcdmFycHJvcHRvXCIpO24oaSx1LGcsXCJcXHUyNWMwXCIsXCJcXFxcYmxhY2t0cmlhbmdsZWxlZnRcIik7bihpLHUsZyxcIlxcdTIyMzRcIixcIlxcXFx0aGVyZWZvcmVcIik7bihpLHUsZyxcIlxcdTIyMGRcIixcIlxcXFxiYWNrZXBzaWxvblwiKTtuKGksdSxnLFwiXFx1MjViNlwiLFwiXFxcXGJsYWNrdHJpYW5nbGVyaWdodFwiKTtuKGksdSxnLFwiXFx1MjIzNVwiLFwiXFxcXGJlY2F1c2VcIik7bihpLHUsZyxcIlxcdTIyZDhcIixcIlxcXFxsbGxlc3NcIik7bihpLHUsZyxcIlxcdTIyZDlcIixcIlxcXFxnZ2d0clwiKTtuKGksdSxmLFwiXFx1MjJiMlwiLFwiXFxcXGxoZFwiKTtuKGksdSxmLFwiXFx1MjJiM1wiLFwiXFxcXHJoZFwiKTtuKGksdSxnLFwiXFx1MjI0MlwiLFwiXFxcXGVxc2ltXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyYzhcIixcIlxcXFxKb2luXCIpO24oaSx1LGcsXCJcXHUyMjUxXCIsXCJcXFxcRG90ZXFcIix0cnVlKTtuKGksdSxmLFwiXFx1MjIxNFwiLFwiXFxcXGRvdHBsdXNcIik7bihpLHUsZixcIlxcdTIyMTZcIixcIlxcXFxzbWFsbHNldG1pbnVzXCIpO24oaSx1LGYsXCJcXHUyMmQyXCIsXCJcXFxcQ2FwXCIpO24oaSx1LGYsXCJcXHUyMmQzXCIsXCJcXFxcQ3VwXCIpO24oaSx1LGYsXCJcXHUyYTVlXCIsXCJcXFxcZG91YmxlYmFyd2VkZ2VcIik7bihpLHUsZixcIlxcdTIyOWZcIixcIlxcXFxib3htaW51c1wiKTtuKGksdSxmLFwiXFx1MjI5ZVwiLFwiXFxcXGJveHBsdXNcIik7bihpLHUsZixcIlxcdTIyYzdcIixcIlxcXFxkaXZpZGVvbnRpbWVzXCIpO24oaSx1LGYsXCJcXHUyMmM5XCIsXCJcXFxcbHRpbWVzXCIpO24oaSx1LGYsXCJcXHUyMmNhXCIsXCJcXFxccnRpbWVzXCIpO24oaSx1LGYsXCJcXHUyMmNiXCIsXCJcXFxcbGVmdHRocmVldGltZXNcIik7bihpLHUsZixcIlxcdTIyY2NcIixcIlxcXFxyaWdodHRocmVldGltZXNcIik7bihpLHUsZixcIlxcdTIyY2ZcIixcIlxcXFxjdXJseXdlZGdlXCIpO24oaSx1LGYsXCJcXHUyMmNlXCIsXCJcXFxcY3VybHl2ZWVcIik7bihpLHUsZixcIlxcdTIyOWRcIixcIlxcXFxjaXJjbGVkZGFzaFwiKTtuKGksdSxmLFwiXFx1MjI5YlwiLFwiXFxcXGNpcmNsZWRhc3RcIik7bihpLHUsZixcIlxcdTIyYzVcIixcIlxcXFxjZW50ZXJkb3RcIik7bihpLHUsZixcIlxcdTIyYmFcIixcIlxcXFxpbnRlcmNhbFwiKTtuKGksdSxmLFwiXFx1MjJkMlwiLFwiXFxcXGRvdWJsZWNhcFwiKTtuKGksdSxmLFwiXFx1MjJkM1wiLFwiXFxcXGRvdWJsZWN1cFwiKTtuKGksdSxmLFwiXFx1MjJhMFwiLFwiXFxcXGJveHRpbWVzXCIpO24oaSx1LGcsXCJcXHUyMWUyXCIsXCJcXFxcZGFzaHJpZ2h0YXJyb3dcIik7bihpLHUsZyxcIlxcdTIxZTBcIixcIlxcXFxkYXNobGVmdGFycm93XCIpO24oaSx1LGcsXCJcXHUyMWM3XCIsXCJcXFxcbGVmdGxlZnRhcnJvd3NcIik7bihpLHUsZyxcIlxcdTIxYzZcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd3NcIik7bihpLHUsZyxcIlxcdTIxZGFcIixcIlxcXFxMbGVmdGFycm93XCIpO24oaSx1LGcsXCJcXHUyMTllXCIsXCJcXFxcdHdvaGVhZGxlZnRhcnJvd1wiKTtuKGksdSxnLFwiXFx1MjFhMlwiLFwiXFxcXGxlZnRhcnJvd3RhaWxcIik7bihpLHUsZyxcIlxcdTIxYWJcIixcIlxcXFxsb29wYXJyb3dsZWZ0XCIpO24oaSx1LGcsXCJcXHUyMWNiXCIsXCJcXFxcbGVmdHJpZ2h0aGFycG9vbnNcIik7bihpLHUsZyxcIlxcdTIxYjZcIixcIlxcXFxjdXJ2ZWFycm93bGVmdFwiKTtuKGksdSxnLFwiXFx1MjFiYVwiLFwiXFxcXGNpcmNsZWFycm93bGVmdFwiKTtuKGksdSxnLFwiXFx1MjFiMFwiLFwiXFxcXExzaFwiKTtuKGksdSxnLFwiXFx1MjFjOFwiLFwiXFxcXHVwdXBhcnJvd3NcIik7bihpLHUsZyxcIlxcdTIxYmZcIixcIlxcXFx1cGhhcnBvb25sZWZ0XCIpO24oaSx1LGcsXCJcXHUyMWMzXCIsXCJcXFxcZG93bmhhcnBvb25sZWZ0XCIpO24oaSx1LGcsXCJcXHUyMmI4XCIsXCJcXFxcbXVsdGltYXBcIix0cnVlKTtuKGksdSxnLFwiXFx1MjFhZFwiLFwiXFxcXGxlZnRyaWdodHNxdWlnYXJyb3dcIik7bihpLHUsZyxcIlxcdTIxYzlcIixcIlxcXFxyaWdodHJpZ2h0YXJyb3dzXCIpO24oaSx1LGcsXCJcXHUyMWM0XCIsXCJcXFxccmlnaHRsZWZ0YXJyb3dzXCIpO24oaSx1LGcsXCJcXHUyMWEwXCIsXCJcXFxcdHdvaGVhZHJpZ2h0YXJyb3dcIik7bihpLHUsZyxcIlxcdTIxYTNcIixcIlxcXFxyaWdodGFycm93dGFpbFwiKTtuKGksdSxnLFwiXFx1MjFhY1wiLFwiXFxcXGxvb3BhcnJvd3JpZ2h0XCIpO24oaSx1LGcsXCJcXHUyMWI3XCIsXCJcXFxcY3VydmVhcnJvd3JpZ2h0XCIpO24oaSx1LGcsXCJcXHUyMWJiXCIsXCJcXFxcY2lyY2xlYXJyb3dyaWdodFwiKTtuKGksdSxnLFwiXFx1MjFiMVwiLFwiXFxcXFJzaFwiKTtuKGksdSxnLFwiXFx1MjFjYVwiLFwiXFxcXGRvd25kb3duYXJyb3dzXCIpO24oaSx1LGcsXCJcXHUyMWJlXCIsXCJcXFxcdXBoYXJwb29ucmlnaHRcIik7bihpLHUsZyxcIlxcdTIxYzJcIixcIlxcXFxkb3duaGFycG9vbnJpZ2h0XCIpO24oaSx1LGcsXCJcXHUyMWRkXCIsXCJcXFxccmlnaHRzcXVpZ2Fycm93XCIpO24oaSx1LGcsXCJcXHUyMWRkXCIsXCJcXFxcbGVhZHN0b1wiKTtuKGksdSxnLFwiXFx1MjFkYlwiLFwiXFxcXFJyaWdodGFycm93XCIpO24oaSx1LGcsXCJcXHUyMWJlXCIsXCJcXFxccmVzdHJpY3Rpb25cIik7bihpLG8seSxcIlxcdTIwMThcIixcImBcIik7bihpLG8seSxcIiRcIixcIlxcXFwkXCIpO24obCxvLHksXCIkXCIsXCJcXFxcJFwiKTtuKGwsbyx5LFwiJFwiLFwiXFxcXHRleHRkb2xsYXJcIik7bihpLG8seSxcIiVcIixcIlxcXFwlXCIpO24obCxvLHksXCIlXCIsXCJcXFxcJVwiKTtuKGksbyx5LFwiX1wiLFwiXFxcXF9cIik7bihsLG8seSxcIl9cIixcIlxcXFxfXCIpO24obCxvLHksXCJfXCIsXCJcXFxcdGV4dHVuZGVyc2NvcmVcIik7bihpLG8seSxcIlxcdTIyMjBcIixcIlxcXFxhbmdsZVwiKTtuKGksbyx5LFwiXFx1MjIxZVwiLFwiXFxcXGluZnR5XCIpO24oaSxvLHksXCJcXHUyMDMyXCIsXCJcXFxccHJpbWVcIik7bihpLG8seSxcIlxcdTI1YjNcIixcIlxcXFx0cmlhbmdsZVwiKTtuKGksbyx5LFwiXFx1MDM5M1wiLFwiXFxcXEdhbW1hXCIsdHJ1ZSk7bihpLG8seSxcIlxcdTAzOTRcIixcIlxcXFxEZWx0YVwiLHRydWUpO24oaSxvLHksXCJcXHUwMzk4XCIsXCJcXFxcVGhldGFcIix0cnVlKTtuKGksbyx5LFwiXFx1MDM5YlwiLFwiXFxcXExhbWJkYVwiLHRydWUpO24oaSxvLHksXCJcXHUwMzllXCIsXCJcXFxcWGlcIix0cnVlKTtuKGksbyx5LFwiXFx1MDNhMFwiLFwiXFxcXFBpXCIsdHJ1ZSk7bihpLG8seSxcIlxcdTAzYTNcIixcIlxcXFxTaWdtYVwiLHRydWUpO24oaSxvLHksXCJcXHUwM2E1XCIsXCJcXFxcVXBzaWxvblwiLHRydWUpO24oaSxvLHksXCJcXHUwM2E2XCIsXCJcXFxcUGhpXCIsdHJ1ZSk7bihpLG8seSxcIlxcdTAzYThcIixcIlxcXFxQc2lcIix0cnVlKTtuKGksbyx5LFwiXFx1MDNhOVwiLFwiXFxcXE9tZWdhXCIsdHJ1ZSk7bihpLG8seSxcIlxceGFjXCIsXCJcXFxcbmVnXCIpO24oaSxvLHksXCJcXHhhY1wiLFwiXFxcXGxub3RcIik7bihpLG8seSxcIlxcdTIyYTRcIixcIlxcXFx0b3BcIik7bihpLG8seSxcIlxcdTIyYTVcIixcIlxcXFxib3RcIik7bihpLG8seSxcIlxcdTIyMDVcIixcIlxcXFxlbXB0eXNldFwiKTtuKGksdSx5LFwiXFx1MjIwNVwiLFwiXFxcXHZhcm5vdGhpbmdcIik7bihpLG8saCxcIlxcdTAzYjFcIixcIlxcXFxhbHBoYVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2IyXCIsXCJcXFxcYmV0YVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2IzXCIsXCJcXFxcZ2FtbWFcIix0cnVlKTtuKGksbyxoLFwiXFx1MDNiNFwiLFwiXFxcXGRlbHRhXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzZjVcIixcIlxcXFxlcHNpbG9uXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYjZcIixcIlxcXFx6ZXRhXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYjdcIixcIlxcXFxldGFcIix0cnVlKTtuKGksbyxoLFwiXFx1MDNiOFwiLFwiXFxcXHRoZXRhXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYjlcIixcIlxcXFxpb3RhXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYmFcIixcIlxcXFxrYXBwYVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2JiXCIsXCJcXFxcbGFtYmRhXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYmNcIixcIlxcXFxtdVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2JkXCIsXCJcXFxcbnVcIix0cnVlKTtuKGksbyxoLFwiXFx1MDNiZVwiLFwiXFxcXHhpXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYmZcIixcIlxcXFxvbWljcm9uXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYzBcIixcIlxcXFxwaVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2MxXCIsXCJcXFxccmhvXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYzNcIixcIlxcXFxzaWdtYVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2M0XCIsXCJcXFxcdGF1XCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYzVcIixcIlxcXFx1cHNpbG9uXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzZDVcIixcIlxcXFxwaGlcIix0cnVlKTtuKGksbyxoLFwiXFx1MDNjN1wiLFwiXFxcXGNoaVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2M4XCIsXCJcXFxccHNpXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYzlcIixcIlxcXFxvbWVnYVwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2I1XCIsXCJcXFxcdmFyZXBzaWxvblwiLHRydWUpO24oaSxvLGgsXCJcXHUwM2QxXCIsXCJcXFxcdmFydGhldGFcIix0cnVlKTtuKGksbyxoLFwiXFx1MDNkNlwiLFwiXFxcXHZhcnBpXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzZjFcIixcIlxcXFx2YXJyaG9cIix0cnVlKTtuKGksbyxoLFwiXFx1MDNjMlwiLFwiXFxcXHZhcnNpZ21hXCIsdHJ1ZSk7bihpLG8saCxcIlxcdTAzYzZcIixcIlxcXFx2YXJwaGlcIix0cnVlKTtuKGksbyxmLFwiXFx1MjIxN1wiLFwiKlwiKTtuKGksbyxmLFwiK1wiLFwiK1wiKTtuKGksbyxmLFwiXFx1MjIxMlwiLFwiLVwiKTtuKGksbyxmLFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RcIik7bihpLG8sZixcIlxcdTIyMThcIixcIlxcXFxjaXJjXCIpO24oaSxvLGYsXCJcXHhmN1wiLFwiXFxcXGRpdlwiKTtuKGksbyxmLFwiXFx4YjFcIixcIlxcXFxwbVwiKTtuKGksbyxmLFwiXFx4ZDdcIixcIlxcXFx0aW1lc1wiKTtuKGksbyxmLFwiXFx1MjIyOVwiLFwiXFxcXGNhcFwiKTtuKGksbyxmLFwiXFx1MjIyYVwiLFwiXFxcXGN1cFwiKTtuKGksbyxmLFwiXFx1MjIxNlwiLFwiXFxcXHNldG1pbnVzXCIpO24oaSxvLGYsXCJcXHUyMjI3XCIsXCJcXFxcbGFuZFwiKTtuKGksbyxmLFwiXFx1MjIyOFwiLFwiXFxcXGxvclwiKTtuKGksbyxmLFwiXFx1MjIyN1wiLFwiXFxcXHdlZGdlXCIpO24oaSxvLGYsXCJcXHUyMjI4XCIsXCJcXFxcdmVlXCIpO24oaSxvLHksXCJcXHUyMjFhXCIsXCJcXFxcc3VyZFwiKTtuKGksbyxwLFwiKFwiLFwiKFwiKTtuKGksbyxwLFwiW1wiLFwiW1wiKTtuKGksbyxwLFwiXFx1MjdlOFwiLFwiXFxcXGxhbmdsZVwiKTtuKGksbyxwLFwiXFx1MjIyM1wiLFwiXFxcXGx2ZXJ0XCIpO24oaSxvLHAsXCJcXHUyMjI1XCIsXCJcXFxcbFZlcnRcIik7bihpLG8sZCxcIilcIixcIilcIik7bihpLG8sZCxcIl1cIixcIl1cIik7bihpLG8sZCxcIj9cIixcIj9cIik7bihpLG8sZCxcIiFcIixcIiFcIik7bihpLG8sZCxcIlxcdTI3ZTlcIixcIlxcXFxyYW5nbGVcIik7bihpLG8sZCxcIlxcdTIyMjNcIixcIlxcXFxydmVydFwiKTtuKGksbyxkLFwiXFx1MjIyNVwiLFwiXFxcXHJWZXJ0XCIpO24oaSxvLGcsXCI9XCIsXCI9XCIpO24oaSxvLGcsXCI8XCIsXCI8XCIpO24oaSxvLGcsXCI+XCIsXCI+XCIpO24oaSxvLGcsXCI6XCIsXCI6XCIpO24oaSxvLGcsXCJcXHUyMjQ4XCIsXCJcXFxcYXBwcm94XCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyNDVcIixcIlxcXFxjb25nXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyNjVcIixcIlxcXFxnZVwiKTtuKGksbyxnLFwiXFx1MjI2NVwiLFwiXFxcXGdlcVwiLHRydWUpO24oaSxvLGcsXCJcXHUyMTkwXCIsXCJcXFxcZ2V0c1wiKTtuKGksbyxnLFwiPlwiLFwiXFxcXGd0XCIpO24oaSxvLGcsXCJcXHUyMjA4XCIsXCJcXFxcaW5cIix0cnVlKTtuKGksbyxnLFwiXFx1MjIwOVwiLFwiXFxcXG5vdGluXCIpO24oaSxvLGcsXCJcXHUwMzM4XCIsXCJcXFxcbm90XCIpO24oaSxvLGcsXCJcXHUyMjgyXCIsXCJcXFxcc3Vic2V0XCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyODNcIixcIlxcXFxzdXBzZXRcIix0cnVlKTtuKGksbyxnLFwiXFx1MjI4NlwiLFwiXFxcXHN1YnNldGVxXCIsdHJ1ZSk7bihpLG8sZyxcIlxcdTIyODdcIixcIlxcXFxzdXBzZXRlcVwiLHRydWUpO24oaSx1LGcsXCJcXHUyMjg4XCIsXCJcXFxcbnN1YnNldGVxXCIpO24oaSx1LGcsXCJcXHUyMjg5XCIsXCJcXFxcbnN1cHNldGVxXCIpO24oaSxvLGcsXCJcXHUyMmE4XCIsXCJcXFxcbW9kZWxzXCIpO24oaSxvLGcsXCJcXHUyMTkwXCIsXCJcXFxcbGVmdGFycm93XCIpO24oaSxvLGcsXCJcXHUyMjY0XCIsXCJcXFxcbGVcIik7bihpLG8sZyxcIlxcdTIyNjRcIixcIlxcXFxsZXFcIix0cnVlKTtuKGksbyxnLFwiPFwiLFwiXFxcXGx0XCIpO24oaSxvLGcsXCJcXHUyMjYwXCIsXCJcXFxcbmVcIik7bihpLG8sZyxcIlxcdTIyNjBcIixcIlxcXFxuZXFcIik7bihpLG8sZyxcIlxcdTIxOTJcIixcIlxcXFxyaWdodGFycm93XCIpO24oaSxvLGcsXCJcXHUyMTkyXCIsXCJcXFxcdG9cIik7bihpLHUsZyxcIlxcdTIyNzFcIixcIlxcXFxuZ2VxXCIpO24oaSx1LGcsXCJcXHUyMjcwXCIsXCJcXFxcbmxlcVwiKTtuKGksbyxiLG51bGwsXCJcXFxcIVwiKTtuKGksbyxiLFwiXFx4YTBcIixcIlxcXFwgXCIpO24oaSxvLGIsXCJcXHhhMFwiLFwiflwiKTtuKGksbyxiLG51bGwsXCJcXFxcLFwiKTtuKGksbyxiLG51bGwsXCJcXFxcOlwiKTtuKGksbyxiLG51bGwsXCJcXFxcO1wiKTtuKGksbyxiLG51bGwsXCJcXFxcZW5zcGFjZVwiKTtuKGksbyxiLG51bGwsXCJcXFxccXF1YWRcIik7bihpLG8sYixudWxsLFwiXFxcXHF1YWRcIik7bihpLG8sYixcIlxceGEwXCIsXCJcXFxcc3BhY2VcIik7bihpLG8sbSxcIixcIixcIixcIik7bihpLG8sbSxcIjtcIixcIjtcIik7bihpLG8sbSxcIjpcIixcIlxcXFxjb2xvblwiKTtuKGksdSxmLFwiXFx1MjJiY1wiLFwiXFxcXGJhcndlZGdlXCIpO24oaSx1LGYsXCJcXHUyMmJiXCIsXCJcXFxcdmVlYmFyXCIpO24oaSxvLGYsXCJcXHUyMjk5XCIsXCJcXFxcb2RvdFwiKTtuKGksbyxmLFwiXFx1MjI5NVwiLFwiXFxcXG9wbHVzXCIpO24oaSxvLGYsXCJcXHUyMjk3XCIsXCJcXFxcb3RpbWVzXCIpO24oaSxvLHksXCJcXHUyMjAyXCIsXCJcXFxccGFydGlhbFwiKTtuKGksbyxmLFwiXFx1MjI5OFwiLFwiXFxcXG9zbGFzaFwiKTtuKGksdSxmLFwiXFx1MjI5YVwiLFwiXFxcXGNpcmNsZWRjaXJjXCIpO24oaSx1LGYsXCJcXHUyMmExXCIsXCJcXFxcYm94ZG90XCIpO24oaSxvLGYsXCJcXHUyNWIzXCIsXCJcXFxcYmlndHJpYW5nbGV1cFwiKTtuKGksbyxmLFwiXFx1MjViZFwiLFwiXFxcXGJpZ3RyaWFuZ2xlZG93blwiKTtuKGksbyxmLFwiXFx1MjAyMFwiLFwiXFxcXGRhZ2dlclwiKTtuKGksbyxmLFwiXFx1MjJjNFwiLFwiXFxcXGRpYW1vbmRcIik7bihpLG8sZixcIlxcdTIyYzZcIixcIlxcXFxzdGFyXCIpO24oaSxvLGYsXCJcXHUyNWMzXCIsXCJcXFxcdHJpYW5nbGVsZWZ0XCIpO24oaSxvLGYsXCJcXHUyNWI5XCIsXCJcXFxcdHJpYW5nbGVyaWdodFwiKTtuKGksbyxwLFwie1wiLFwiXFxcXHtcIik7bihsLG8seSxcIntcIixcIlxcXFx7XCIpO24obCxvLHksXCJ7XCIsXCJcXFxcdGV4dGJyYWNlbGVmdFwiKTtuKGksbyxkLFwifVwiLFwiXFxcXH1cIik7bihsLG8seSxcIn1cIixcIlxcXFx9XCIpO24obCxvLHksXCJ9XCIsXCJcXFxcdGV4dGJyYWNlcmlnaHRcIik7bihpLG8scCxcIntcIixcIlxcXFxsYnJhY2VcIik7bihpLG8sZCxcIn1cIixcIlxcXFxyYnJhY2VcIik7bihpLG8scCxcIltcIixcIlxcXFxsYnJhY2tcIik7bihpLG8sZCxcIl1cIixcIlxcXFxyYnJhY2tcIik7bihsLG8seSxcIjxcIixcIlxcXFx0ZXh0bGVzc1wiKTtuKGwsbyx5LFwiPlwiLFwiXFxcXHRleHRncmVhdGVyXCIpO24oaSxvLHAsXCJcXHUyMzBhXCIsXCJcXFxcbGZsb29yXCIpO24oaSxvLGQsXCJcXHUyMzBiXCIsXCJcXFxccmZsb29yXCIpO24oaSxvLHAsXCJcXHUyMzA4XCIsXCJcXFxcbGNlaWxcIik7bihpLG8sZCxcIlxcdTIzMDlcIixcIlxcXFxyY2VpbFwiKTtuKGksbyx5LFwiXFxcXFwiLFwiXFxcXGJhY2tzbGFzaFwiKTtuKGksbyx5LFwiXFx1MjIyM1wiLFwifFwiKTtuKGksbyx5LFwiXFx1MjIyM1wiLFwiXFxcXHZlcnRcIik7bihsLG8seSxcInxcIixcIlxcXFx0ZXh0YmFyXCIpO24oaSxvLHksXCJcXHUyMjI1XCIsXCJcXFxcfFwiKTtuKGksbyx5LFwiXFx1MjIyNVwiLFwiXFxcXFZlcnRcIik7bihsLG8seSxcIlxcdTIyMjVcIixcIlxcXFx0ZXh0YmFyZGJsXCIpO24oaSxvLGcsXCJcXHUyMTkxXCIsXCJcXFxcdXBhcnJvd1wiKTtuKGksbyxnLFwiXFx1MjFkMVwiLFwiXFxcXFVwYXJyb3dcIik7bihpLG8sZyxcIlxcdTIxOTNcIixcIlxcXFxkb3duYXJyb3dcIik7bihpLG8sZyxcIlxcdTIxZDNcIixcIlxcXFxEb3duYXJyb3dcIik7bihpLG8sZyxcIlxcdTIxOTVcIixcIlxcXFx1cGRvd25hcnJvd1wiKTtuKGksbyxnLFwiXFx1MjFkNVwiLFwiXFxcXFVwZG93bmFycm93XCIpO24oaSxvLHYsXCJcXHUyMjEwXCIsXCJcXFxcY29wcm9kXCIpO24oaSxvLHYsXCJcXHUyMmMxXCIsXCJcXFxcYmlndmVlXCIpO24oaSxvLHYsXCJcXHUyMmMwXCIsXCJcXFxcYmlnd2VkZ2VcIik7bihpLG8sdixcIlxcdTJhMDRcIixcIlxcXFxiaWd1cGx1c1wiKTtuKGksbyx2LFwiXFx1MjJjMlwiLFwiXFxcXGJpZ2NhcFwiKTtuKGksbyx2LFwiXFx1MjJjM1wiLFwiXFxcXGJpZ2N1cFwiKTtuKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludFwiKTtuKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludG9wXCIpO24oaSxvLHYsXCJcXHUyMjJjXCIsXCJcXFxcaWludFwiKTtuKGksbyx2LFwiXFx1MjIyZFwiLFwiXFxcXGlpaW50XCIpO24oaSxvLHYsXCJcXHUyMjBmXCIsXCJcXFxccHJvZFwiKTtuKGksbyx2LFwiXFx1MjIxMVwiLFwiXFxcXHN1bVwiKTtuKGksbyx2LFwiXFx1MmEwMlwiLFwiXFxcXGJpZ290aW1lc1wiKTtuKGksbyx2LFwiXFx1MmEwMVwiLFwiXFxcXGJpZ29wbHVzXCIpO24oaSxvLHYsXCJcXHUyYTAwXCIsXCJcXFxcYmlnb2RvdFwiKTtuKGksbyx2LFwiXFx1MjIyZVwiLFwiXFxcXG9pbnRcIik7bihpLG8sdixcIlxcdTJhMDZcIixcIlxcXFxiaWdzcWN1cFwiKTtuKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXHNtYWxsaW50XCIpO24obCxvLGMsXCJcXHUyMDI2XCIsXCJcXFxcdGV4dGVsbGlwc2lzXCIpO24oaSxvLGMsXCJcXHUyMDI2XCIsXCJcXFxcbWF0aGVsbGlwc2lzXCIpO24obCxvLGMsXCJcXHUyMDI2XCIsXCJcXFxcbGRvdHNcIix0cnVlKTtuKGksbyxjLFwiXFx1MjAyNlwiLFwiXFxcXGxkb3RzXCIsdHJ1ZSk7bihpLG8sYyxcIlxcdTIyZWZcIixcIlxcXFxAY2RvdHNcIix0cnVlKTtuKGksbyxjLFwiXFx1MjJmMVwiLFwiXFxcXGRkb3RzXCIsdHJ1ZSk7bihpLG8seSxcIlxcdTIyZWVcIixcIlxcXFx2ZG90c1wiLHRydWUpO24oaSxvLHMsXCJcXHhiNFwiLFwiXFxcXGFjdXRlXCIpO24oaSxvLHMsXCJgXCIsXCJcXFxcZ3JhdmVcIik7bihpLG8scyxcIlxceGE4XCIsXCJcXFxcZGRvdFwiKTtuKGksbyxzLFwiflwiLFwiXFxcXHRpbGRlXCIpO24oaSxvLHMsXCJcXHhhZlwiLFwiXFxcXGJhclwiKTtuKGksbyxzLFwiXFx1MDJkOFwiLFwiXFxcXGJyZXZlXCIpO24oaSxvLHMsXCJcXHUwMmM3XCIsXCJcXFxcY2hlY2tcIik7bihpLG8scyxcIl5cIixcIlxcXFxoYXRcIik7bihpLG8scyxcIlxcdTIwZDdcIixcIlxcXFx2ZWNcIik7bihpLG8scyxcIlxcdTAyZDlcIixcIlxcXFxkb3RcIik7bihpLG8saCxcIlxcdTAxMzFcIixcIlxcXFxpbWF0aFwiKTtuKGksbyxoLFwiXFx1MDIzN1wiLFwiXFxcXGptYXRoXCIpO24obCxvLHMsXCJcXHUwMmNhXCIsXCJcXFxcJ1wiKTtuKGwsbyxzLFwiXFx1MDJjYlwiLFwiXFxcXGBcIik7bihsLG8scyxcIlxcdTAyYzZcIixcIlxcXFxeXCIpO24obCxvLHMsXCJcXHUwMmRjXCIsXCJcXFxcflwiKTtuKGwsbyxzLFwiXFx1MDJjOVwiLFwiXFxcXD1cIik7bihsLG8scyxcIlxcdTAyZDhcIixcIlxcXFx1XCIpO24obCxvLHMsXCJcXHUwMmQ5XCIsXCJcXFxcLlwiKTtuKGwsbyxzLFwiXFx1MDJkYVwiLFwiXFxcXHJcIik7bihsLG8scyxcIlxcdTAyYzdcIixcIlxcXFx2XCIpO24obCxvLHMsXCJcXHhhOFwiLCdcXFxcXCInKTtuKGwsbyxzLFwiXFx1MDMwYlwiLFwiXFxcXEhcIik7bihsLG8seSxcIlxcdTIwMTNcIixcIi0tXCIpO24obCxvLHksXCJcXHUyMDEzXCIsXCJcXFxcdGV4dGVuZGFzaFwiKTtuKGwsbyx5LFwiXFx1MjAxNFwiLFwiLS0tXCIpO24obCxvLHksXCJcXHUyMDE0XCIsXCJcXFxcdGV4dGVtZGFzaFwiKTtuKGwsbyx5LFwiXFx1MjAxOFwiLFwiYFwiKTtuKGwsbyx5LFwiXFx1MjAxOFwiLFwiXFxcXHRleHRxdW90ZWxlZnRcIik7bihsLG8seSxcIlxcdTIwMTlcIixcIidcIik7bihsLG8seSxcIlxcdTIwMTlcIixcIlxcXFx0ZXh0cXVvdGVyaWdodFwiKTtuKGwsbyx5LFwiXFx1MjAxY1wiLFwiYGBcIik7bihsLG8seSxcIlxcdTIwMWNcIixcIlxcXFx0ZXh0cXVvdGVkYmxsZWZ0XCIpO24obCxvLHksXCJcXHUyMDFkXCIsXCInJ1wiKTtuKGwsbyx5LFwiXFx1MjAxZFwiLFwiXFxcXHRleHRxdW90ZWRibHJpZ2h0XCIpO24oaSxvLHksXCJcXHhiMFwiLFwiXFxcXGRlZ3JlZVwiKTtuKGwsbyx5LFwiXFx4YjBcIixcIlxcXFxkZWdyZWVcIik7bihpLG8saCxcIlxceGEzXCIsXCJcXFxccG91bmRzXCIpO24oaSxvLGgsXCJcXHhhM1wiLFwiXFxcXG1hdGhzdGVybGluZ1wiKTtuKGwsbyxoLFwiXFx4YTNcIixcIlxcXFxwb3VuZHNcIik7bihsLG8saCxcIlxceGEzXCIsXCJcXFxcdGV4dHN0ZXJsaW5nXCIpO24oaSx1LHksXCJcXHUyNzIwXCIsXCJcXFxcbWFsdGVzZVwiKTtuKGwsdSx5LFwiXFx1MjcyMFwiLFwiXFxcXG1hbHRlc2VcIik7bihsLG8sYixcIlxceGEwXCIsXCJcXFxcIFwiKTtuKGwsbyxiLFwiXFx4YTBcIixcIiBcIik7bihsLG8sYixcIlxceGEwXCIsXCJ+XCIpO3ZhciB4PScwMTIzNDU2Nzg5L0AuXCInO2Zvcih2YXIgdz0wO3c8eC5sZW5ndGg7dysrKXt2YXIgaz14LmNoYXJBdCh3KTtuKGksbyx5LGssayl9dmFyIE09JzAxMjM0NTY3ODkhQCooKS09K1tdPD58XCI7Oj8vLiwnO2Zvcih2YXIgXz0wO188TS5sZW5ndGg7XysrKXt2YXIgUz1NLmNoYXJBdChfKTtuKGwsbyx5LFMsUyl9dmFyIHo9XCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCI7Zm9yKHZhciBUPTA7VDx6Lmxlbmd0aDtUKyspe3ZhciBDPXouY2hhckF0KFQpO24oaSxvLGgsQyxDKTtuKGwsbyx5LEMsQyl9Zm9yKHZhciBBPTE5MjtBPD0yMTQ7QSsrKXt2YXIgTj1TdHJpbmcuZnJvbUNoYXJDb2RlKEEpO24oaSxvLGgsTixOKTtuKGwsbyx5LE4sTil9Zm9yKHZhciBPPTIxNjtPPD0yNDY7TysrKXt2YXIgaj1TdHJpbmcuZnJvbUNoYXJDb2RlKE8pO24oaSxvLGgsaixqKTtuKGwsbyx5LGosail9Zm9yKHZhciBMPTI0ODtMPD0yNTU7TCsrKXt2YXIgRT1TdHJpbmcuZnJvbUNoYXJDb2RlKEwpO24oaSxvLGgsRSxFKTtuKGwsbyx5LEUsRSl9Zm9yKHZhciBxPTEwNDA7cTw9MTEwMztxKyspe3ZhciBQPVN0cmluZy5mcm9tQ2hhckNvZGUocSk7bihsLG8seSxQLFApfW4obCxvLHksXCJcXHUyMDEzXCIsXCJcXHUyMDEzXCIpO24obCxvLHksXCJcXHUyMDE0XCIsXCJcXHUyMDE0XCIpO24obCxvLHksXCJcXHUyMDE4XCIsXCJcXHUyMDE4XCIpO24obCxvLHksXCJcXHUyMDE5XCIsXCJcXHUyMDE5XCIpO24obCxvLHksXCJcXHUyMDFjXCIsXCJcXHUyMDFjXCIpO24obCxvLHksXCJcXHUyMDFkXCIsXCJcXHUyMDFkXCIpfSx7fV0sMTE5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTt2YXIgYT1yLmhhbmd1bFJlZ2V4PS9bXFx1QUMwMC1cXHVEN0FGXS87dmFyIG49ci5jamtSZWdleD0vW1xcdTMwMDAtXFx1MzBGRlxcdTRFMDAtXFx1OUZBRlxcdUFDMDAtXFx1RDdBRlxcdUZGMDAtXFx1RkY2MF0vfSx7fV0sMTIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTtyLmNhbGN1bGF0ZVNpemU9ci52YWxpZFVuaXQ9dW5kZWZpbmVkO3ZhciBhPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG49byhhKTt2YXIgaT1lKFwiLi9PcHRpb25zXCIpO3ZhciBsPW8oaSk7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHU9e3B0OjEsbW06NzIyNy8yNTQwLGNtOjcyMjcvMjU0LGluOjcyLjI3LGJwOjgwMy84MDAscGM6MTIsZGQ6MTIzOC8xMTU3LGNjOjE0ODU2LzExNTcsbmQ6Njg1LzY0MixuYzoxMzcwLzEwNyxzcDoxLzY1NTM2LHB4OjgwMy84MDB9O3ZhciBzPXtleDp0cnVlLGVtOnRydWUsbXU6dHJ1ZX07dmFyIGY9ci52YWxpZFVuaXQ9ZnVuY3Rpb24gZSh0KXtpZih0eXBlb2YgdCE9PVwic3RyaW5nXCIpe3Q9dC51bml0fXJldHVybiB0IGluIHV8fHQgaW4gc3x8dD09PVwiZXhcIn07dmFyIGQ9ci5jYWxjdWxhdGVTaXplPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT12b2lkIDA7aWYodC51bml0IGluIHUpe2E9dVt0LnVuaXRdL3IuZm9udE1ldHJpY3MoKS5wdFBlckVtL3Iuc2l6ZU11bHRpcGxpZXJ9ZWxzZSBpZih0LnVuaXQ9PT1cIm11XCIpe2E9ci5mb250TWV0cmljcygpLmNzc0VtUGVyTXV9ZWxzZXt2YXIgaT12b2lkIDA7aWYoci5zdHlsZS5pc1RpZ2h0KCkpe2k9ci5oYXZpbmdTdHlsZShyLnN0eWxlLnRleHQoKSl9ZWxzZXtpPXJ9aWYodC51bml0PT09XCJleFwiKXthPWkuZm9udE1ldHJpY3MoKS54SGVpZ2h0fWVsc2UgaWYodC51bml0PT09XCJlbVwiKXthPWkuZm9udE1ldHJpY3MoKS5xdWFkfWVsc2V7dGhyb3cgbmV3IG4uZGVmYXVsdChcIkludmFsaWQgdW5pdDogJ1wiK3QudW5pdCtcIidcIil9aWYoaSE9PXIpe2EqPWkuc2l6ZU11bHRpcGxpZXIvci5zaXplTXVsdGlwbGllcn19cmV0dXJuIE1hdGgubWluKHQubnVtYmVyKmEsci5tYXhTaXplKX19LHtcIi4vT3B0aW9uc1wiOjgzLFwiLi9QYXJzZUVycm9yXCI6ODR9XSwxMjE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO3ZhciBhPUFycmF5LnByb3RvdHlwZS5pbmRleE9mO3ZhciBuPWZ1bmN0aW9uIGUodCxyKXtpZih0PT1udWxsKXtyZXR1cm4tMX1pZihhJiZ0LmluZGV4T2Y9PT1hKXtyZXR1cm4gdC5pbmRleE9mKHIpfXZhciBuPXQubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bjtpKyspe2lmKHRbaV09PT1yKXtyZXR1cm4gaX19cmV0dXJuLTF9O3ZhciBpPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gbih0LHIpIT09LTF9O3ZhciBsPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gdD09PXVuZGVmaW5lZD9yOnR9O3ZhciBvPS8oW0EtWl0pL2c7dmFyIHU9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdC5yZXBsYWNlKG8sXCItJDFcIikudG9Mb3dlckNhc2UoKX07dmFyIHM9e1wiJlwiOlwiJmFtcDtcIixcIj5cIjpcIiZndDtcIixcIjxcIjpcIiZsdDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImI3gyNztcIn07dmFyIGY9L1smPjxcIiddL2c7ZnVuY3Rpb24gZChlKXtyZXR1cm4gU3RyaW5nKGUpLnJlcGxhY2UoZixmdW5jdGlvbihlKXtyZXR1cm4gc1tlXX0pfXZhciBjPXZvaWQgMDtpZih0eXBlb2YgZG9jdW1lbnQhPT1cInVuZGVmaW5lZFwiKXt2YXIgaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtpZihcInRleHRDb250ZW50XCJpbiBoKXtjPWZ1bmN0aW9uIGUodCxyKXt0LnRleHRDb250ZW50PXJ9fWVsc2V7Yz1mdW5jdGlvbiBlKHQscil7dC5pbm5lclRleHQ9cn19fWZ1bmN0aW9uIHYoZSl7YyhlLFwiXCIpfXIuZGVmYXVsdD17Y29udGFpbnM6aSxkZWZsdDpsLGVzY2FwZTpkLGh5cGhlbmF0ZTp1LGluZGV4T2Y6bixzZXRUZXh0Q29udGVudDpjLGNsZWFyTm9kZTp2fX0se31dfSx7fSxbMV0pKDEpfSk7XG4iLCIvKmdsb2JhbCBkZWZpbmU6ZmFsc2UgKi9cbi8qKlxuICogQ29weXJpZ2h0IDIwMTYgQ3JhaWcgQ2FtcGJlbGxcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKiBNb3VzZXRyYXAgaXMgYSBzaW1wbGUga2V5Ym9hcmQgc2hvcnRjdXQgbGlicmFyeSBmb3IgSmF2YXNjcmlwdCB3aXRoXG4gKiBubyBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqXG4gKiBAdmVyc2lvbiAxLjYuMFxuICogQHVybCBjcmFpZy5pcy9raWxsaW5nL21pY2VcbiAqL1xuKGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgLy8gQ2hlY2sgaWYgbW91c2V0cmFwIGlzIHVzZWQgaW5zaWRlIGJyb3dzZXIsIGlmIG5vdCwgcmV0dXJuXG4gICAgaWYgKCF3aW5kb3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIG1hcHBpbmcgb2Ygc3BlY2lhbCBrZXljb2RlcyB0byB0aGVpciBjb3JyZXNwb25kaW5nIGtleXNcbiAgICAgKlxuICAgICAqIGV2ZXJ5dGhpbmcgaW4gdGhpcyBkaWN0aW9uYXJ5IGNhbm5vdCB1c2Uga2V5cHJlc3MgZXZlbnRzXG4gICAgICogc28gaXQgaGFzIHRvIGJlIGhlcmUgdG8gbWFwIHRvIHRoZSBjb3JyZWN0IGtleWNvZGVzIGZvclxuICAgICAqIGtleXVwL2tleWRvd24gZXZlbnRzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfTUFQID0ge1xuICAgICAgICA4OiAnYmFja3NwYWNlJyxcbiAgICAgICAgOTogJ3RhYicsXG4gICAgICAgIDEzOiAnZW50ZXInLFxuICAgICAgICAxNjogJ3NoaWZ0JyxcbiAgICAgICAgMTc6ICdjdHJsJyxcbiAgICAgICAgMTg6ICdhbHQnLFxuICAgICAgICAyMDogJ2NhcHNsb2NrJyxcbiAgICAgICAgMjc6ICdlc2MnLFxuICAgICAgICAzMjogJ3NwYWNlJyxcbiAgICAgICAgMzM6ICdwYWdldXAnLFxuICAgICAgICAzNDogJ3BhZ2Vkb3duJyxcbiAgICAgICAgMzU6ICdlbmQnLFxuICAgICAgICAzNjogJ2hvbWUnLFxuICAgICAgICAzNzogJ2xlZnQnLFxuICAgICAgICAzODogJ3VwJyxcbiAgICAgICAgMzk6ICdyaWdodCcsXG4gICAgICAgIDQwOiAnZG93bicsXG4gICAgICAgIDQ1OiAnaW5zJyxcbiAgICAgICAgNDY6ICdkZWwnLFxuICAgICAgICA5MTogJ21ldGEnLFxuICAgICAgICA5MzogJ21ldGEnLFxuICAgICAgICAyMjQ6ICdtZXRhJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBtYXBwaW5nIGZvciBzcGVjaWFsIGNoYXJhY3RlcnMgc28gdGhleSBjYW4gc3VwcG9ydFxuICAgICAqXG4gICAgICogdGhpcyBkaWN0aW9uYXJ5IGlzIG9ubHkgdXNlZCBpbmNhc2UgeW91IHdhbnQgdG8gYmluZCBhXG4gICAgICoga2V5dXAgb3Iga2V5ZG93biBldmVudCB0byBvbmUgb2YgdGhlc2Uga2V5c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX0tFWUNPREVfTUFQID0ge1xuICAgICAgICAxMDY6ICcqJyxcbiAgICAgICAgMTA3OiAnKycsXG4gICAgICAgIDEwOTogJy0nLFxuICAgICAgICAxMTA6ICcuJyxcbiAgICAgICAgMTExIDogJy8nLFxuICAgICAgICAxODY6ICc7JyxcbiAgICAgICAgMTg3OiAnPScsXG4gICAgICAgIDE4ODogJywnLFxuICAgICAgICAxODk6ICctJyxcbiAgICAgICAgMTkwOiAnLicsXG4gICAgICAgIDE5MTogJy8nLFxuICAgICAgICAxOTI6ICdgJyxcbiAgICAgICAgMjE5OiAnWycsXG4gICAgICAgIDIyMDogJ1xcXFwnLFxuICAgICAgICAyMjE6ICddJyxcbiAgICAgICAgMjIyOiAnXFwnJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB0aGlzIGlzIGEgbWFwcGluZyBvZiBrZXlzIHRoYXQgcmVxdWlyZSBzaGlmdCBvbiBhIFVTIGtleXBhZFxuICAgICAqIGJhY2sgdG8gdGhlIG5vbiBzaGlmdCBlcXVpdmVsZW50c1xuICAgICAqXG4gICAgICogdGhpcyBpcyBzbyB5b3UgY2FuIHVzZSBrZXl1cCBldmVudHMgd2l0aCB0aGVzZSBrZXlzXG4gICAgICpcbiAgICAgKiBub3RlIHRoYXQgdGhpcyB3aWxsIG9ubHkgd29yayByZWxpYWJseSBvbiBVUyBrZXlib2FyZHNcbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIF9TSElGVF9NQVAgPSB7XG4gICAgICAgICd+JzogJ2AnLFxuICAgICAgICAnISc6ICcxJyxcbiAgICAgICAgJ0AnOiAnMicsXG4gICAgICAgICcjJzogJzMnLFxuICAgICAgICAnJCc6ICc0JyxcbiAgICAgICAgJyUnOiAnNScsXG4gICAgICAgICdeJzogJzYnLFxuICAgICAgICAnJic6ICc3JyxcbiAgICAgICAgJyonOiAnOCcsXG4gICAgICAgICcoJzogJzknLFxuICAgICAgICAnKSc6ICcwJyxcbiAgICAgICAgJ18nOiAnLScsXG4gICAgICAgICcrJzogJz0nLFxuICAgICAgICAnOic6ICc7JyxcbiAgICAgICAgJ1xcXCInOiAnXFwnJyxcbiAgICAgICAgJzwnOiAnLCcsXG4gICAgICAgICc+JzogJy4nLFxuICAgICAgICAnPyc6ICcvJyxcbiAgICAgICAgJ3wnOiAnXFxcXCdcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdGhpcyBpcyBhIGxpc3Qgb2Ygc3BlY2lhbCBzdHJpbmdzIHlvdSBjYW4gdXNlIHRvIG1hcFxuICAgICAqIHRvIG1vZGlmaWVyIGtleXMgd2hlbiB5b3Ugc3BlY2lmeSB5b3VyIGtleWJvYXJkIHNob3J0Y3V0c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX1NQRUNJQUxfQUxJQVNFUyA9IHtcbiAgICAgICAgJ29wdGlvbic6ICdhbHQnLFxuICAgICAgICAnY29tbWFuZCc6ICdtZXRhJyxcbiAgICAgICAgJ3JldHVybic6ICdlbnRlcicsXG4gICAgICAgICdlc2NhcGUnOiAnZXNjJyxcbiAgICAgICAgJ3BsdXMnOiAnKycsXG4gICAgICAgICdtb2QnOiAvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSA/ICdtZXRhJyA6ICdjdHJsJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB2YXJpYWJsZSB0byBzdG9yZSB0aGUgZmxpcHBlZCB2ZXJzaW9uIG9mIF9NQVAgZnJvbSBhYm92ZVxuICAgICAqIG5lZWRlZCB0byBjaGVjayBpZiB3ZSBzaG91bGQgdXNlIGtleXByZXNzIG9yIG5vdCB3aGVuIG5vIGFjdGlvblxuICAgICAqIGlzIHNwZWNpZmllZFxuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdHx1bmRlZmluZWR9XG4gICAgICovXG4gICAgdmFyIF9SRVZFUlNFX01BUDtcblxuICAgIC8qKlxuICAgICAqIGxvb3AgdGhyb3VnaCB0aGUgZiBrZXlzLCBmMSB0byBmMTkgYW5kIGFkZCB0aGVtIHRvIHRoZSBtYXBcbiAgICAgKiBwcm9ncmFtYXRpY2FsbHlcbiAgICAgKi9cbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IDIwOyArK2kpIHtcbiAgICAgICAgX01BUFsxMTEgKyBpXSA9ICdmJyArIGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9vcCB0aHJvdWdoIHRvIG1hcCBudW1iZXJzIG9uIHRoZSBudW1lcmljIGtleXBhZFxuICAgICAqL1xuICAgIGZvciAoaSA9IDA7IGkgPD0gOTsgKytpKSB7XG4gICAgICAgIF9NQVBbaSArIDk2XSA9IGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3Jvc3MgYnJvd3NlciBhZGQgZXZlbnQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0VsZW1lbnR8SFRNTERvY3VtZW50fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9hZGRFdmVudChvYmplY3QsIHR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG9iamVjdC5hdHRhY2hFdmVudCgnb24nICsgdHlwZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRha2VzIHRoZSBldmVudCBhbmQgcmV0dXJucyB0aGUga2V5IGNoYXJhY3RlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpIHtcblxuICAgICAgICAvLyBmb3Iga2V5cHJlc3MgZXZlbnRzIHdlIHNob3VsZCByZXR1cm4gdGhlIGNoYXJhY3RlciBhcyBpc1xuICAgICAgICBpZiAoZS50eXBlID09ICdrZXlwcmVzcycpIHtcbiAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgc2hpZnQga2V5IGlzIG5vdCBwcmVzc2VkIHRoZW4gaXQgaXMgc2FmZSB0byBhc3N1bWVcbiAgICAgICAgICAgIC8vIHRoYXQgd2Ugd2FudCB0aGUgY2hhcmFjdGVyIHRvIGJlIGxvd2VyY2FzZS4gIHRoaXMgbWVhbnMgaWZcbiAgICAgICAgICAgIC8vIHlvdSBhY2NpZGVudGFsbHkgaGF2ZSBjYXBzIGxvY2sgb24gdGhlbiB5b3VyIGtleSBiaW5kaW5nc1xuICAgICAgICAgICAgLy8gd2lsbCBjb250aW51ZSB0byB3b3JrXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhlIG9ubHkgc2lkZSBlZmZlY3QgdGhhdCBtaWdodCBub3QgYmUgZGVzaXJlZCBpcyBpZiB5b3VcbiAgICAgICAgICAgIC8vIGJpbmQgc29tZXRoaW5nIGxpa2UgJ0EnIGNhdXNlIHlvdSB3YW50IHRvIHRyaWdnZXIgYW5cbiAgICAgICAgICAgIC8vIGV2ZW50IHdoZW4gY2FwaXRhbCBBIGlzIHByZXNzZWQgY2FwcyBsb2NrIHdpbGwgbm8gbG9uZ2VyXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIHRoZSBldmVudC4gIHNoaWZ0K2Egd2lsbCB0aG91Z2guXG4gICAgICAgICAgICBpZiAoIWUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgPSBjaGFyYWN0ZXIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNoYXJhY3RlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZvciBub24ga2V5cHJlc3MgZXZlbnRzIHRoZSBzcGVjaWFsIG1hcHMgYXJlIG5lZWRlZFxuICAgICAgICBpZiAoX01BUFtlLndoaWNoXSkge1xuICAgICAgICAgICAgcmV0dXJuIF9NQVBbZS53aGljaF07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX0tFWUNPREVfTUFQW2Uud2hpY2hdKSB7XG4gICAgICAgICAgICByZXR1cm4gX0tFWUNPREVfTUFQW2Uud2hpY2hdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgaXQgaXMgbm90IGluIHRoZSBzcGVjaWFsIG1hcFxuXG4gICAgICAgIC8vIHdpdGgga2V5ZG93biBhbmQga2V5dXAgZXZlbnRzIHRoZSBjaGFyYWN0ZXIgc2VlbXMgdG8gYWx3YXlzXG4gICAgICAgIC8vIGNvbWUgaW4gYXMgYW4gdXBwZXJjYXNlIGNoYXJhY3RlciB3aGV0aGVyIHlvdSBhcmUgcHJlc3Npbmcgc2hpZnRcbiAgICAgICAgLy8gb3Igbm90LiAgd2Ugc2hvdWxkIG1ha2Ugc3VyZSBpdCBpcyBhbHdheXMgbG93ZXJjYXNlIGZvciBjb21wYXJpc29uc1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGNoZWNrcyBpZiB0d28gYXJyYXlzIGFyZSBlcXVhbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzMVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyczJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfbW9kaWZpZXJzTWF0Y2gobW9kaWZpZXJzMSwgbW9kaWZpZXJzMikge1xuICAgICAgICByZXR1cm4gbW9kaWZpZXJzMS5zb3J0KCkuam9pbignLCcpID09PSBtb2RpZmllcnMyLnNvcnQoKS5qb2luKCcsJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdGFrZXMgYSBrZXkgZXZlbnQgYW5kIGZpZ3VyZXMgb3V0IHdoYXQgdGhlIG1vZGlmaWVycyBhcmVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2V2ZW50TW9kaWZpZXJzKGUpIHtcbiAgICAgICAgdmFyIG1vZGlmaWVycyA9IFtdO1xuXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2FsdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2N0cmwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLm1ldGFLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdtZXRhJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbW9kaWZpZXJzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByZXZlbnRzIGRlZmF1bHQgZm9yIHRoaXMgZXZlbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3ByZXZlbnREZWZhdWx0KGUpIHtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzdG9wcyBwcm9wb2dhdGlvbiBmb3IgdGhpcyBldmVudFxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfc3RvcFByb3BhZ2F0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgdGhlIGtleWNvZGUgc3BlY2lmaWVkIGlzIGEgbW9kaWZpZXIga2V5IG9yIG5vdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9pc01vZGlmaWVyKGtleSkge1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzaGlmdCcgfHwga2V5ID09ICdjdHJsJyB8fCBrZXkgPT0gJ2FsdCcgfHwga2V5ID09ICdtZXRhJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXZlcnNlcyB0aGUgbWFwIGxvb2t1cCBzbyB0aGF0IHdlIGNhbiBsb29rIGZvciBzcGVjaWZpYyBrZXlzXG4gICAgICogdG8gc2VlIHdoYXQgY2FuIGFuZCBjYW4ndCB1c2Uga2V5cHJlc3NcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfZ2V0UmV2ZXJzZU1hcCgpIHtcbiAgICAgICAgaWYgKCFfUkVWRVJTRV9NQVApIHtcbiAgICAgICAgICAgIF9SRVZFUlNFX01BUCA9IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIF9NQVApIHtcblxuICAgICAgICAgICAgICAgIC8vIHB1bGwgb3V0IHRoZSBudW1lcmljIGtleXBhZCBmcm9tIGhlcmUgY2F1c2Uga2V5cHJlc3Mgc2hvdWxkXG4gICAgICAgICAgICAgICAgLy8gYmUgYWJsZSB0byBkZXRlY3QgdGhlIGtleXMgZnJvbSB0aGUgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSA+IDk1ICYmIGtleSA8IDExMikge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX01BUC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIF9SRVZFUlNFX01BUFtfTUFQW2tleV1dID0ga2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX1JFVkVSU0VfTUFQO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBpY2tzIHRoZSBiZXN0IGFjdGlvbiBiYXNlZCBvbiB0aGUga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gY2hhcmFjdGVyIGZvciBrZXlcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiBwYXNzZWQgaW5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfcGlja0Jlc3RBY3Rpb24oa2V5LCBtb2RpZmllcnMsIGFjdGlvbikge1xuXG4gICAgICAgIC8vIGlmIG5vIGFjdGlvbiB3YXMgcGlja2VkIGluIHdlIHNob3VsZCB0cnkgdG8gcGljayB0aGUgb25lXG4gICAgICAgIC8vIHRoYXQgd2UgdGhpbmsgd291bGQgd29yayBiZXN0IGZvciB0aGlzIGtleVxuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgYWN0aW9uID0gX2dldFJldmVyc2VNYXAoKVtrZXldID8gJ2tleWRvd24nIDogJ2tleXByZXNzJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1vZGlmaWVyIGtleXMgZG9uJ3Qgd29yayBhcyBleHBlY3RlZCB3aXRoIGtleXByZXNzLFxuICAgICAgICAvLyBzd2l0Y2ggdG8ga2V5ZG93blxuICAgICAgICBpZiAoYWN0aW9uID09ICdrZXlwcmVzcycgJiYgbW9kaWZpZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgYWN0aW9uID0gJ2tleWRvd24nO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBmcm9tIGEgc3RyaW5nIGtleSBjb21iaW5hdGlvbiB0byBhbiBhcnJheVxuICAgICAqXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjb21iaW5hdGlvbiBsaWtlIFwiY29tbWFuZCtzaGlmdCtsXCJcbiAgICAgKiBAcmV0dXJuIHtBcnJheX1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfa2V5c0Zyb21TdHJpbmcoY29tYmluYXRpb24pIHtcbiAgICAgICAgaWYgKGNvbWJpbmF0aW9uID09PSAnKycpIHtcbiAgICAgICAgICAgIHJldHVybiBbJysnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbWJpbmF0aW9uID0gY29tYmluYXRpb24ucmVwbGFjZSgvXFwrezJ9L2csICcrcGx1cycpO1xuICAgICAgICByZXR1cm4gY29tYmluYXRpb24uc3BsaXQoJysnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGluZm8gZm9yIGEgc3BlY2lmaWMga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNvbWJpbmF0aW9uIGtleSBjb21iaW5hdGlvbiAoXCJjb21tYW5kK3NcIiBvciBcImFcIiBvciBcIipcIilcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmc9fSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIGtleXM7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIHZhciBpO1xuICAgICAgICB2YXIgbW9kaWZpZXJzID0gW107XG5cbiAgICAgICAgLy8gdGFrZSB0aGUga2V5cyBmcm9tIHRoaXMgcGF0dGVybiBhbmQgZmlndXJlIG91dCB3aGF0IHRoZSBhY3R1YWxcbiAgICAgICAgLy8gcGF0dGVybiBpcyBhbGwgYWJvdXRcbiAgICAgICAga2V5cyA9IF9rZXlzRnJvbVN0cmluZyhjb21iaW5hdGlvbik7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBrZXkgbmFtZXNcbiAgICAgICAgICAgIGlmIChfU1BFQ0lBTF9BTElBU0VTW2tleV0pIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBfU1BFQ0lBTF9BTElBU0VTW2tleV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgbm90IGEga2V5cHJlc3MgZXZlbnQgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIGJlIHNtYXJ0IGFib3V0IHVzaW5nIHNoaWZ0IGtleXNcbiAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBvbmx5IHdvcmsgZm9yIFVTIGtleWJvYXJkcyBob3dldmVyXG4gICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAna2V5cHJlc3MnICYmIF9TSElGVF9NQVBba2V5XSkge1xuICAgICAgICAgICAgICAgIGtleSA9IF9TSElGVF9NQVBba2V5XTtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBrZXkgaXMgYSBtb2RpZmllciB0aGVuIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBtb2RpZmllcnNcbiAgICAgICAgICAgIGlmIChfaXNNb2RpZmllcihrZXkpKSB7XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlcGVuZGluZyBvbiB3aGF0IHRoZSBrZXkgY29tYmluYXRpb24gaXNcbiAgICAgICAgLy8gd2Ugd2lsbCB0cnkgdG8gcGljayB0aGUgYmVzdCBldmVudCBmb3IgaXRcbiAgICAgICAgYWN0aW9uID0gX3BpY2tCZXN0QWN0aW9uKGtleSwgbW9kaWZpZXJzLCBhY3Rpb24pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzLFxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb25cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfYmVsb25nc1RvKGVsZW1lbnQsIGFuY2VzdG9yKSB7XG4gICAgICAgIGlmIChlbGVtZW50ID09PSBudWxsIHx8IGVsZW1lbnQgPT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxlbWVudCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9iZWxvbmdzVG8oZWxlbWVudC5wYXJlbnROb2RlLCBhbmNlc3Rvcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gTW91c2V0cmFwKHRhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIHRhcmdldEVsZW1lbnQgPSB0YXJnZXRFbGVtZW50IHx8IGRvY3VtZW50O1xuXG4gICAgICAgIGlmICghKHNlbGYgaW5zdGFuY2VvZiBNb3VzZXRyYXApKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vdXNldHJhcCh0YXJnZXRFbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBlbGVtZW50IHRvIGF0dGFjaCBrZXkgZXZlbnRzIHRvXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXRFbGVtZW50O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhIGxpc3Qgb2YgYWxsIHRoZSBjYWxsYmFja3Mgc2V0dXAgdmlhIE1vdXNldHJhcC5iaW5kKClcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2NhbGxiYWNrcyA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkaXJlY3QgbWFwIG9mIHN0cmluZyBjb21iaW5hdGlvbnMgdG8gY2FsbGJhY2tzIHVzZWQgZm9yIHRyaWdnZXIoKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGtlZXBzIHRyYWNrIG9mIHdoYXQgbGV2ZWwgZWFjaCBzZXF1ZW5jZSBpcyBhdCBzaW5jZSBtdWx0aXBsZVxuICAgICAgICAgKiBzZXF1ZW5jZXMgY2FuIHN0YXJ0IG91dCB3aXRoIHRoZSBzYW1lIHNlcXVlbmNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgX3NlcXVlbmNlTGV2ZWxzID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHZhcmlhYmxlIHRvIHN0b3JlIHRoZSBzZXRUaW1lb3V0IGNhbGxcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge251bGx8bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9yZXNldFRpbWVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiB0ZW1wb3Jhcnkgc3RhdGUgd2hlcmUgd2Ugd2lsbCBpZ25vcmUgdGhlIG5leHQga2V5dXBcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW58c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5dXAgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVtcG9yYXJ5IHN0YXRlIHdoZXJlIHdlIHdpbGwgaWdub3JlIHRoZSBuZXh0IGtleXByZXNzXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5cHJlc3MgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogYXJlIHdlIGN1cnJlbnRseSBpbnNpZGUgb2YgYSBzZXF1ZW5jZT9cbiAgICAgICAgICogdHlwZSBvZiBhY3Rpb24gKFwia2V5dXBcIiBvciBcImtleWRvd25cIiBvciBcImtleXByZXNzXCIpIG9yIGZhbHNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufHN0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfbmV4dEV4cGVjdGVkQWN0aW9uID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHJlc2V0cyBhbGwgc2VxdWVuY2UgY291bnRlcnMgZXhjZXB0IGZvciB0aGUgb25lcyBwYXNzZWQgaW5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRvTm90UmVzZXRcbiAgICAgICAgICogQHJldHVybnMgdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpIHtcbiAgICAgICAgICAgIGRvTm90UmVzZXQgPSBkb05vdFJlc2V0IHx8IHt9O1xuXG4gICAgICAgICAgICB2YXIgYWN0aXZlU2VxdWVuY2VzID0gZmFsc2UsXG4gICAgICAgICAgICAgICAga2V5O1xuXG4gICAgICAgICAgICBmb3IgKGtleSBpbiBfc2VxdWVuY2VMZXZlbHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9Ob3RSZXNldFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNlcXVlbmNlcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfc2VxdWVuY2VMZXZlbHNba2V5XSA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghYWN0aXZlU2VxdWVuY2VzKSB7XG4gICAgICAgICAgICAgICAgX25leHRFeHBlY3RlZEFjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGZpbmRzIGFsbCBjYWxsYmFja3MgdGhhdCBtYXRjaCBiYXNlZCBvbiB0aGUga2V5Y29kZSwgbW9kaWZpZXJzLFxuICAgICAgICAgKiBhbmQgYWN0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyYWN0ZXJcbiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAgICAgICAqIEBwYXJhbSB7RXZlbnR8T2JqZWN0fSBlXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiB0aGUgc2VxdWVuY2Ugd2UgYXJlIGxvb2tpbmcgZm9yXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gY29tYmluYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtudW1iZXI9fSBsZXZlbFxuICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfZ2V0TWF0Y2hlcyhjaGFyYWN0ZXIsIG1vZGlmaWVycywgZSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrO1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBlLnR5cGU7XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZSBubyBldmVudHMgcmVsYXRlZCB0byB0aGlzIGtleWNvZGVcbiAgICAgICAgICAgIGlmICghc2VsZi5fY2FsbGJhY2tzW2NoYXJhY3Rlcl0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIGEgbW9kaWZpZXIga2V5IGlzIGNvbWluZyB1cCBvbiBpdHMgb3duIHdlIHNob3VsZCBhbGxvdyBpdFxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PSAna2V5dXAnICYmIF9pc01vZGlmaWVyKGNoYXJhY3RlcikpIHtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMgPSBbY2hhcmFjdGVyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIGFsbCBjYWxsYmFja3MgZm9yIHRoZSBrZXkgdGhhdCB3YXMgcHJlc3NlZFxuICAgICAgICAgICAgLy8gYW5kIHNlZSBpZiBhbnkgb2YgdGhlbSBtYXRjaFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXVtpXTtcblxuICAgICAgICAgICAgICAgIC8vIGlmIGEgc2VxdWVuY2UgbmFtZSBpcyBub3Qgc3BlY2lmaWVkLCBidXQgdGhpcyBpcyBhIHNlcXVlbmNlIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIHdyb25nIGxldmVsIHRoZW4gbW92ZSBvbnRvIHRoZSBuZXh0IG1hdGNoXG4gICAgICAgICAgICAgICAgaWYgKCFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suc2VxICYmIF9zZXF1ZW5jZUxldmVsc1tjYWxsYmFjay5zZXFdICE9IGNhbGxiYWNrLmxldmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBhY3Rpb24gd2UgYXJlIGxvb2tpbmcgZm9yIGRvZXNuJ3QgbWF0Y2ggdGhlIGFjdGlvbiB3ZSBnb3RcbiAgICAgICAgICAgICAgICAvLyB0aGVuIHdlIHNob3VsZCBrZWVwIGdvaW5nXG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiAhPSBjYWxsYmFjay5hY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhIGtleXByZXNzIGV2ZW50IGFuZCB0aGUgbWV0YSBrZXkgYW5kIGNvbnRyb2wga2V5XG4gICAgICAgICAgICAgICAgLy8gYXJlIG5vdCBwcmVzc2VkIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIG9ubHkgbG9vayBhdCB0aGVcbiAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIsIG90aGVyd2lzZSBjaGVjayB0aGUgbW9kaWZpZXJzIGFzIHdlbGxcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIGNocm9tZSB3aWxsIG5vdCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBjb250cm9sIGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBzYWZhcmkgd2lsbCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBtZXRhK3NoaWZ0IGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBmaXJlZm94IHdpbGwgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgY29udHJvbCBpcyBkb3duXG4gICAgICAgICAgICAgICAgaWYgKChhY3Rpb24gPT0gJ2tleXByZXNzJyAmJiAhZS5tZXRhS2V5ICYmICFlLmN0cmxLZXkpIHx8IF9tb2RpZmllcnNNYXRjaChtb2RpZmllcnMsIGNhbGxiYWNrLm1vZGlmaWVycykpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHlvdSBiaW5kIGEgY29tYmluYXRpb24gb3Igc2VxdWVuY2UgYSBzZWNvbmQgdGltZSBpdFxuICAgICAgICAgICAgICAgICAgICAvLyBzaG91bGQgb3ZlcndyaXRlIHRoZSBmaXJzdCBvbmUuICBpZiBhIHNlcXVlbmNlTmFtZSBvclxuICAgICAgICAgICAgICAgICAgICAvLyBjb21iaW5hdGlvbiBpcyBzcGVjaWZpZWQgaW4gdGhpcyBjYWxsIGl0IGRvZXMganVzdCB0aGF0XG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0b2RvIG1ha2UgZGVsZXRpbmcgaXRzIG93biBtZXRob2Q/XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVDb21ibyA9ICFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suY29tYm8gPT0gY29tYmluYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVTZXF1ZW5jZSA9IHNlcXVlbmNlTmFtZSAmJiBjYWxsYmFjay5zZXEgPT0gc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLmxldmVsID09IGxldmVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlQ29tYm8gfHwgZGVsZXRlU2VxdWVuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhY3R1YWxseSBjYWxscyB0aGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgICpcbiAgICAgICAgICogaWYgeW91ciBjYWxsYmFjayBmdW5jdGlvbiByZXR1cm5zIGZhbHNlIHRoaXMgd2lsbCB1c2UgdGhlIGpxdWVyeVxuICAgICAgICAgKiBjb252ZW50aW9uIC0gcHJldmVudCBkZWZhdWx0IGFuZCBzdG9wIHByb3BvZ2F0aW9uIG9uIHRoZSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvLCBzZXF1ZW5jZSkge1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGV2ZW50IHNob3VsZCBub3QgaGFwcGVuIHN0b3AgaGVyZVxuICAgICAgICAgICAgaWYgKHNlbGYuc3RvcENhbGxiYWNrKGUsIGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCwgY29tYm8sIHNlcXVlbmNlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGUsIGNvbWJvKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfcHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgX3N0b3BQcm9wYWdhdGlvbihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEgY2hhcmFjdGVyIGtleSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2hhbmRsZUtleSA9IGZ1bmN0aW9uKGNoYXJhY3RlciwgbW9kaWZpZXJzLCBlKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gX2dldE1hdGNoZXMoY2hhcmFjdGVyLCBtb2RpZmllcnMsIGUpO1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICB2YXIgZG9Ob3RSZXNldCA9IHt9O1xuICAgICAgICAgICAgdmFyIG1heExldmVsID0gMDtcbiAgICAgICAgICAgIHZhciBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gZmFsc2U7XG5cbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbWF4TGV2ZWwgZm9yIHNlcXVlbmNlcyBzbyB3ZSBjYW4gb25seSBleGVjdXRlIHRoZSBsb25nZXN0IGNhbGxiYWNrIHNlcXVlbmNlXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5zZXEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4TGV2ZWwgPSBNYXRoLm1heChtYXhMZXZlbCwgY2FsbGJhY2tzW2ldLmxldmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCBtYXRjaGluZyBjYWxsYmFja3MgZm9yIHRoaXMga2V5IGV2ZW50XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBmaXJlIGZvciBhbGwgc2VxdWVuY2UgY2FsbGJhY2tzXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBiZWNhdXNlIGlmIGZvciBleGFtcGxlIHlvdSBoYXZlIG11bHRpcGxlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIGJvdW5kIHN1Y2ggYXMgXCJnIGlcIiBhbmQgXCJnIHRcIiB0aGV5IGJvdGggbmVlZCB0byBmaXJlIHRoZVxuICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZvciBtYXRjaGluZyBnIGNhdXNlIG90aGVyd2lzZSB5b3UgY2FuIG9ubHkgZXZlclxuICAgICAgICAgICAgICAgIC8vIG1hdGNoIHRoZSBmaXJzdCBvbmVcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tzW2ldLnNlcSkge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgZmlyZSBjYWxsYmFja3MgZm9yIHRoZSBtYXhMZXZlbCB0byBwcmV2ZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIHN1YnNlcXVlbmNlcyBmcm9tIGFsc28gZmlyaW5nXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGZvciBleGFtcGxlICdhIG9wdGlvbiBiJyBzaG91bGQgbm90IGNhdXNlICdvcHRpb24gYicgdG8gZmlyZVxuICAgICAgICAgICAgICAgICAgICAvLyBldmVuIHRob3VnaCAnb3B0aW9uIGInIGlzIHBhcnQgb2YgdGhlIG90aGVyIHNlcXVlbmNlXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGFueSBzZXF1ZW5jZXMgdGhhdCBkbyBub3QgbWF0Y2ggaGVyZSB3aWxsIGJlIGRpc2NhcmRlZFxuICAgICAgICAgICAgICAgICAgICAvLyBiZWxvdyBieSB0aGUgX3Jlc2V0U2VxdWVuY2VzIGNhbGxcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5sZXZlbCAhPSBtYXhMZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgbGlzdCBvZiB3aGljaCBzZXF1ZW5jZXMgd2VyZSBtYXRjaGVzIGZvciBsYXRlclxuICAgICAgICAgICAgICAgICAgICBkb05vdFJlc2V0W2NhbGxiYWNrc1tpXS5zZXFdID0gMTtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibywgY2FsbGJhY2tzW2ldLnNlcSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlIHdlcmUgbm8gc2VxdWVuY2UgbWF0Y2hlcyBidXQgd2UgYXJlIHN0aWxsIGhlcmVcbiAgICAgICAgICAgICAgICAvLyB0aGF0IG1lYW5zIHRoaXMgaXMgYSByZWd1bGFyIG1hdGNoIHNvIHdlIHNob3VsZCBmaXJlIHRoYXRcbiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NlZFNlcXVlbmNlQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiB0aGUga2V5IHlvdSBwcmVzc2VkIG1hdGNoZXMgdGhlIHR5cGUgb2Ygc2VxdWVuY2Ugd2l0aG91dFxuICAgICAgICAgICAgLy8gYmVpbmcgYSBtb2RpZmllciAoaWUgXCJrZXl1cFwiIG9yIFwia2V5cHJlc3NcIikgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIHJlc2V0IGFsbCBzZXF1ZW5jZXMgdGhhdCB3ZXJlIG5vdCBtYXRjaGVkIGJ5IHRoaXMgZXZlbnRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIHNvLCBmb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgdGhlIHNlcXVlbmNlIFwiaCBhIHRcIiBhbmQgeW91XG4gICAgICAgICAgICAvLyB0eXBlIFwiaCBlIGEgciB0XCIgaXQgZG9lcyBub3QgbWF0Y2guICBpbiB0aGlzIGNhc2UgdGhlIFwiZVwiIHdpbGxcbiAgICAgICAgICAgIC8vIGNhdXNlIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIG1vZGlmaWVyIGtleXMgYXJlIGlnbm9yZWQgYmVjYXVzZSB5b3UgY2FuIGhhdmUgYSBzZXF1ZW5jZVxuICAgICAgICAgICAgLy8gdGhhdCBjb250YWlucyBtb2RpZmllcnMgc3VjaCBhcyBcImVudGVyIGN0cmwrc3BhY2VcIiBhbmQgaW4gbW9zdFxuICAgICAgICAgICAgLy8gY2FzZXMgdGhlIG1vZGlmaWVyIGtleSB3aWxsIGJlIHByZXNzZWQgYmVmb3JlIHRoZSBuZXh0IGtleVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIGFsc28gaWYgeW91IGhhdmUgYSBzZXF1ZW5jZSBzdWNoIGFzIFwiY3RybCtiIGFcIiB0aGVuIHByZXNzaW5nIHRoZVxuICAgICAgICAgICAgLy8gXCJiXCIga2V5IHdpbGwgdHJpZ2dlciBhIFwia2V5cHJlc3NcIiBhbmQgYSBcImtleWRvd25cIlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHRoZSBcImtleWRvd25cIiBpcyBleHBlY3RlZCB3aGVuIHRoZXJlIGlzIGEgbW9kaWZpZXIsIGJ1dCB0aGVcbiAgICAgICAgICAgIC8vIFwia2V5cHJlc3NcIiBlbmRzIHVwIG1hdGNoaW5nIHRoZSBfbmV4dEV4cGVjdGVkQWN0aW9uIHNpbmNlIGl0IG9jY3Vyc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgYW5kIHRoYXQgY2F1c2VzIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHdlIGlnbm9yZSBrZXlwcmVzc2VzIGluIGEgc2VxdWVuY2UgdGhhdCBkaXJlY3RseSBmb2xsb3cgYSBrZXlkb3duXG4gICAgICAgICAgICAvLyBmb3IgdGhlIHNhbWUgY2hhcmFjdGVyXG4gICAgICAgICAgICB2YXIgaWdub3JlVGhpc0tleXByZXNzID0gZS50eXBlID09ICdrZXlwcmVzcycgJiYgX2lnbm9yZU5leHRLZXlwcmVzcztcbiAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gX25leHRFeHBlY3RlZEFjdGlvbiAmJiAhX2lzTW9kaWZpZXIoY2hhcmFjdGVyKSAmJiAhaWdub3JlVGhpc0tleXByZXNzKSB7XG4gICAgICAgICAgICAgICAgX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfaWdub3JlTmV4dEtleXByZXNzID0gcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayAmJiBlLnR5cGUgPT0gJ2tleWRvd24nO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEga2V5ZG93biBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9oYW5kbGVLZXlFdmVudChlKSB7XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBlLndoaWNoIGZvciBrZXkgZXZlbnRzXG4gICAgICAgICAgICAvLyBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDI4NTYyNy9qYXZhc2NyaXB0LWtleWNvZGUtdnMtY2hhcmNvZGUtdXR0ZXItY29uZnVzaW9uXG4gICAgICAgICAgICBpZiAodHlwZW9mIGUud2hpY2ggIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgZS53aGljaCA9IGUua2V5Q29kZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNoYXJhY3RlciA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG5cbiAgICAgICAgICAgIC8vIG5vIGNoYXJhY3RlciBmb3VuZCB0aGVuIHN0b3BcbiAgICAgICAgICAgIGlmICghY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBuZWVkIHRvIHVzZSA9PT0gZm9yIHRoZSBjaGFyYWN0ZXIgY2hlY2sgYmVjYXVzZSB0aGUgY2hhcmFjdGVyIGNhbiBiZSAwXG4gICAgICAgICAgICBpZiAoZS50eXBlID09ICdrZXl1cCcgJiYgX2lnbm9yZU5leHRLZXl1cCA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi5oYW5kbGVLZXkoY2hhcmFjdGVyLCBfZXZlbnRNb2RpZmllcnMoZSksIGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNhbGxlZCB0byBzZXQgYSAxIHNlY29uZCB0aW1lb3V0IG9uIHRoZSBzcGVjaWZpZWQgc2VxdWVuY2VcbiAgICAgICAgICpcbiAgICAgICAgICogdGhpcyBpcyBzbyBhZnRlciBlYWNoIGtleSBwcmVzcyBpbiB0aGUgc2VxdWVuY2UgeW91IGhhdmUgMSBzZWNvbmRcbiAgICAgICAgICogdG8gcHJlc3MgdGhlIG5leHQga2V5IGJlZm9yZSB5b3UgaGF2ZSB0byBzdGFydCBvdmVyXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9yZXNldFNlcXVlbmNlVGltZXIoKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoX3Jlc2V0VGltZXIpO1xuICAgICAgICAgICAgX3Jlc2V0VGltZXIgPSBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBrZXkgc2VxdWVuY2UgdG8gYW4gZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJvIC0gY29tYm8gc3BlY2lmaWVkIGluIGJpbmQgY2FsbFxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBrZXlzXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2VxdWVuY2UoY29tYm8sIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcblxuICAgICAgICAgICAgLy8gc3RhcnQgb2ZmIGJ5IGFkZGluZyBhIHNlcXVlbmNlIGxldmVsIHJlY29yZCBmb3IgdGhpcyBjb21iaW5hdGlvblxuICAgICAgICAgICAgLy8gYW5kIHNldHRpbmcgdGhlIGxldmVsIHRvIDBcbiAgICAgICAgICAgIF9zZXF1ZW5jZUxldmVsc1tjb21ib10gPSAwO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIGNhbGxiYWNrIHRvIGluY3JlYXNlIHRoZSBzZXF1ZW5jZSBsZXZlbCBmb3IgdGhpcyBzZXF1ZW5jZSBhbmQgcmVzZXRcbiAgICAgICAgICAgICAqIGFsbCBvdGhlciBzZXF1ZW5jZXMgdGhhdCB3ZXJlIGFjdGl2ZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuZXh0QWN0aW9uXG4gICAgICAgICAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIF9pbmNyZWFzZVNlcXVlbmNlKG5leHRBY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIF9uZXh0RXhwZWN0ZWRBY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgICAgICAgICAgICAgICAgICArK19zZXF1ZW5jZUxldmVsc1tjb21ib107XG4gICAgICAgICAgICAgICAgICAgIF9yZXNldFNlcXVlbmNlVGltZXIoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIHdyYXBzIHRoZSBzcGVjaWZpZWQgY2FsbGJhY2sgaW5zaWRlIG9mIGFub3RoZXIgZnVuY3Rpb24gaW4gb3JkZXJcbiAgICAgICAgICAgICAqIHRvIHJlc2V0IGFsbCBzZXF1ZW5jZSBjb3VudGVycyBhcyBzb29uIGFzIHRoaXMgc2VxdWVuY2UgaXMgZG9uZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gX2NhbGxiYWNrQW5kUmVzZXQoZSkge1xuICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvKTtcblxuICAgICAgICAgICAgICAgIC8vIHdlIHNob3VsZCBpZ25vcmUgdGhlIG5leHQga2V5IHVwIGlmIHRoZSBhY3Rpb24gaXMga2V5IGRvd25cbiAgICAgICAgICAgICAgICAvLyBvciBrZXlwcmVzcy4gIHRoaXMgaXMgc28gaWYgeW91IGZpbmlzaCBhIHNlcXVlbmNlIGFuZFxuICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGtleSB0aGUgZmluYWwga2V5IHdpbGwgbm90IHRyaWdnZXIgYSBrZXl1cFxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gIT09ICdrZXl1cCcpIHtcbiAgICAgICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gd2VpcmQgcmFjZSBjb25kaXRpb24gaWYgYSBzZXF1ZW5jZSBlbmRzIHdpdGggdGhlIGtleVxuICAgICAgICAgICAgICAgIC8vIGFub3RoZXIgc2VxdWVuY2UgYmVnaW5zIHdpdGhcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBsb29wIHRocm91Z2gga2V5cyBvbmUgYXQgYSB0aW1lIGFuZCBiaW5kIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja1xuICAgICAgICAgICAgLy8gZnVuY3Rpb24uICBmb3IgYW55IGtleSBsZWFkaW5nIHVwIHRvIHRoZSBmaW5hbCBvbmUgaXQgc2hvdWxkXG4gICAgICAgICAgICAvLyBpbmNyZWFzZSB0aGUgc2VxdWVuY2UuIGFmdGVyIHRoZSBmaW5hbCwgaXQgc2hvdWxkIHJlc2V0IGFsbCBzZXF1ZW5jZXNcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBpZiBhbiBhY3Rpb24gaXMgc3BlY2lmaWVkIGluIHRoZSBvcmlnaW5hbCBiaW5kIGNhbGwgdGhlbiB0aGF0IHdpbGxcbiAgICAgICAgICAgIC8vIGJlIHVzZWQgdGhyb3VnaG91dC4gIG90aGVyd2lzZSB3ZSB3aWxsIHBhc3MgdGhlIGFjdGlvbiB0aGF0IHRoZVxuICAgICAgICAgICAgLy8gbmV4dCBrZXkgaW4gdGhlIHNlcXVlbmNlIHNob3VsZCBtYXRjaC4gIHRoaXMgYWxsb3dzIGEgc2VxdWVuY2VcbiAgICAgICAgICAgIC8vIHRvIG1peCBhbmQgbWF0Y2gga2V5cHJlc3MgYW5kIGtleWRvd24gZXZlbnRzIGRlcGVuZGluZyBvbiB3aGljaFxuICAgICAgICAgICAgLy8gb25lcyBhcmUgYmV0dGVyIHN1aXRlZCB0byB0aGUga2V5IHByb3ZpZGVkXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXNGaW5hbCA9IGkgKyAxID09PSBrZXlzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlZENhbGxiYWNrID0gaXNGaW5hbCA/IF9jYWxsYmFja0FuZFJlc2V0IDogX2luY3JlYXNlU2VxdWVuY2UoYWN0aW9uIHx8IF9nZXRLZXlJbmZvKGtleXNbaSArIDFdKS5hY3Rpb24pO1xuICAgICAgICAgICAgICAgIF9iaW5kU2luZ2xlKGtleXNbaV0sIHdyYXBwZWRDYWxsYmFjaywgYWN0aW9uLCBjb21ibywgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBzaW5nbGUga2V5Ym9hcmQgY29tYmluYXRpb25cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJpbmF0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiBzZXF1ZW5jZSBpZiBwYXJ0IG9mIHNlcXVlbmNlXG4gICAgICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gbGV2ZWwgLSB3aGF0IHBhcnQgb2YgdGhlIHNlcXVlbmNlIHRoZSBjb21tYW5kIGlzXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2luZ2xlKGNvbWJpbmF0aW9uLCBjYWxsYmFjaywgYWN0aW9uLCBzZXF1ZW5jZU5hbWUsIGxldmVsKSB7XG5cbiAgICAgICAgICAgIC8vIHN0b3JlIGEgZGlyZWN0IG1hcHBlZCByZWZlcmVuY2UgZm9yIHVzZSB3aXRoIE1vdXNldHJhcC50cmlnZ2VyXG4gICAgICAgICAgICBzZWxmLl9kaXJlY3RNYXBbY29tYmluYXRpb24gKyAnOicgKyBhY3Rpb25dID0gY2FsbGJhY2s7XG5cbiAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBtdWx0aXBsZSBzcGFjZXMgaW4gYSByb3cgYmVjb21lIGEgc2luZ2xlIHNwYWNlXG4gICAgICAgICAgICBjb21iaW5hdGlvbiA9IGNvbWJpbmF0aW9uLnJlcGxhY2UoL1xccysvZywgJyAnKTtcblxuICAgICAgICAgICAgdmFyIHNlcXVlbmNlID0gY29tYmluYXRpb24uc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIHZhciBpbmZvO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIHBhdHRlcm4gaXMgYSBzZXF1ZW5jZSBvZiBrZXlzIHRoZW4gcnVuIHRocm91Z2ggdGhpcyBtZXRob2RcbiAgICAgICAgICAgIC8vIHRvIHJlcHJvY2VzcyBlYWNoIHBhdHRlcm4gb25lIGtleSBhdCBhIHRpbWVcbiAgICAgICAgICAgIGlmIChzZXF1ZW5jZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTZXF1ZW5jZShjb21iaW5hdGlvbiwgc2VxdWVuY2UsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5mbyA9IF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pO1xuXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaW5pdGlhbGl6ZSBhcnJheSBpZiB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lXG4gICAgICAgICAgICAvLyBhIGNhbGxiYWNrIGlzIGFkZGVkIGZvciB0aGlzIGtleVxuICAgICAgICAgICAgc2VsZi5fY2FsbGJhY2tzW2luZm8ua2V5XSA9IHNlbGYuX2NhbGxiYWNrc1tpbmZvLmtleV0gfHwgW107XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBhbiBleGlzdGluZyBtYXRjaCBpZiB0aGVyZSBpcyBvbmVcbiAgICAgICAgICAgIF9nZXRNYXRjaGVzKGluZm8ua2V5LCBpbmZvLm1vZGlmaWVycywge3R5cGU6IGluZm8uYWN0aW9ufSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpO1xuXG4gICAgICAgICAgICAvLyBhZGQgdGhpcyBjYWxsIGJhY2sgdG8gdGhlIGFycmF5XG4gICAgICAgICAgICAvLyBpZiBpdCBpcyBhIHNlcXVlbmNlIHB1dCBpdCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAvLyBpZiBub3QgcHV0IGl0IGF0IHRoZSBlbmRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIHRoZSB3YXkgdGhlc2UgYXJlIHByb2Nlc3NlZCBleHBlY3RzXG4gICAgICAgICAgICAvLyB0aGUgc2VxdWVuY2Ugb25lcyB0byBjb21lIGZpcnN0XG4gICAgICAgICAgICBzZWxmLl9jYWxsYmFja3NbaW5mby5rZXldW3NlcXVlbmNlTmFtZSA/ICd1bnNoaWZ0JyA6ICdwdXNoJ10oe1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgICAgICBtb2RpZmllcnM6IGluZm8ubW9kaWZpZXJzLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogaW5mby5hY3Rpb24sXG4gICAgICAgICAgICAgICAgc2VxOiBzZXF1ZW5jZU5hbWUsXG4gICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgICAgIGNvbWJvOiBjb21iaW5hdGlvblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgbXVsdGlwbGUgY29tYmluYXRpb25zIHRvIHRoZSBzYW1lIGNhbGxiYWNrXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGNvbWJpbmF0aW9uc1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGFjdGlvblxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9iaW5kTXVsdGlwbGUgPSBmdW5jdGlvbihjb21iaW5hdGlvbnMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tYmluYXRpb25zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTaW5nbGUoY29tYmluYXRpb25zW2ldLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBzdGFydCFcbiAgICAgICAgX2FkZEV2ZW50KHRhcmdldEVsZW1lbnQsICdrZXlwcmVzcycsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5ZG93bicsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5dXAnLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGJpbmRzIGFuIGV2ZW50IHRvIG1vdXNldHJhcFxuICAgICAqXG4gICAgICogY2FuIGJlIGEgc2luZ2xlIGtleSwgYSBjb21iaW5hdGlvbiBvZiBrZXlzIHNlcGFyYXRlZCB3aXRoICssXG4gICAgICogYW4gYXJyYXkgb2Yga2V5cywgb3IgYSBzZXF1ZW5jZSBvZiBrZXlzIHNlcGFyYXRlZCBieSBzcGFjZXNcbiAgICAgKlxuICAgICAqIGJlIHN1cmUgdG8gbGlzdCB0aGUgbW9kaWZpZXIga2V5cyBmaXJzdCB0byBtYWtlIHN1cmUgdGhhdCB0aGVcbiAgICAgKiBjb3JyZWN0IGtleSBlbmRzIHVwIGdldHRpbmcgYm91bmQgKHRoZSBsYXN0IGtleSBpbiB0aGUgcGF0dGVybilcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBrZXlzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiAtICdrZXlwcmVzcycsICdrZXlkb3duJywgb3IgJ2tleXVwJ1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbihrZXlzLCBjYWxsYmFjaywgYWN0aW9uKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAga2V5cyA9IGtleXMgaW5zdGFuY2VvZiBBcnJheSA/IGtleXMgOiBba2V5c107XG4gICAgICAgIHNlbGYuX2JpbmRNdWx0aXBsZS5jYWxsKHNlbGYsIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdW5iaW5kcyBhbiBldmVudCB0byBtb3VzZXRyYXBcbiAgICAgKlxuICAgICAqIHRoZSB1bmJpbmRpbmcgc2V0cyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHNwZWNpZmllZCBrZXkgY29tYm9cbiAgICAgKiB0byBhbiBlbXB0eSBmdW5jdGlvbiBhbmQgZGVsZXRlcyB0aGUgY29ycmVzcG9uZGluZyBrZXkgaW4gdGhlXG4gICAgICogX2RpcmVjdE1hcCBkaWN0LlxuICAgICAqXG4gICAgICogVE9ETzogYWN0dWFsbHkgcmVtb3ZlIHRoaXMgZnJvbSB0aGUgX2NhbGxiYWNrcyBkaWN0aW9uYXJ5IGluc3RlYWRcbiAgICAgKiBvZiBiaW5kaW5nIGFuIGVtcHR5IGZ1bmN0aW9uXG4gICAgICpcbiAgICAgKiB0aGUga2V5Y29tYm8rYWN0aW9uIGhhcyB0byBiZSBleGFjdGx5IHRoZSBzYW1lIGFzXG4gICAgICogaXQgd2FzIGRlZmluZWQgaW4gdGhlIGJpbmQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbihrZXlzLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICByZXR1cm4gc2VsZi5iaW5kLmNhbGwoc2VsZiwga2V5cywgZnVuY3Rpb24oKSB7fSwgYWN0aW9uKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdHJpZ2dlcnMgYW4gZXZlbnQgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGJvdW5kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKGtleXMsIGFjdGlvbikge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChzZWxmLl9kaXJlY3RNYXBba2V5cyArICc6JyArIGFjdGlvbl0pIHtcbiAgICAgICAgICAgIHNlbGYuX2RpcmVjdE1hcFtrZXlzICsgJzonICsgYWN0aW9uXSh7fSwga2V5cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHJlc2V0cyB0aGUgbGlicmFyeSBiYWNrIHRvIGl0cyBpbml0aWFsIHN0YXRlLiAgdGhpcyBpcyB1c2VmdWxcbiAgICAgKiBpZiB5b3Ugd2FudCB0byBjbGVhciBvdXQgdGhlIGN1cnJlbnQga2V5Ym9hcmQgc2hvcnRjdXRzIGFuZCBiaW5kXG4gICAgICogbmV3IG9uZXMgLSBmb3IgZXhhbXBsZSBpZiB5b3Ugc3dpdGNoIHRvIGFub3RoZXIgcGFnZVxuICAgICAqXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBzZWxmLl9jYWxsYmFja3MgPSB7fTtcbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBzaG91bGQgd2Ugc3RvcCB0aGlzIGV2ZW50IGJlZm9yZSBmaXJpbmcgb2ZmIGNhbGxiYWNrc1xuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS5zdG9wQ2FsbGJhY2sgPSBmdW5jdGlvbihlLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICAvLyBpZiB0aGUgZWxlbWVudCBoYXMgdGhlIGNsYXNzIFwibW91c2V0cmFwXCIgdGhlbiBubyBuZWVkIHRvIHN0b3BcbiAgICAgICAgaWYgKCgnICcgKyBlbGVtZW50LmNsYXNzTmFtZSArICcgJykuaW5kZXhPZignIG1vdXNldHJhcCAnKSA+IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX2JlbG9uZ3NUbyhlbGVtZW50LCBzZWxmLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHN0b3AgZm9yIGlucHV0LCBzZWxlY3QsIGFuZCB0ZXh0YXJlYVxuICAgICAgICByZXR1cm4gZWxlbWVudC50YWdOYW1lID09ICdJTlBVVCcgfHwgZWxlbWVudC50YWdOYW1lID09ICdTRUxFQ1QnIHx8IGVsZW1lbnQudGFnTmFtZSA9PSAnVEVYVEFSRUEnIHx8IGVsZW1lbnQuaXNDb250ZW50RWRpdGFibGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGV4cG9zZXMgX2hhbmRsZUtleSBwdWJsaWNseSBzbyBpdCBjYW4gYmUgb3ZlcndyaXR0ZW4gYnkgZXh0ZW5zaW9uc1xuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUuaGFuZGxlS2V5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuX2hhbmRsZUtleS5hcHBseShzZWxmLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBhbGxvdyBjdXN0b20ga2V5IG1hcHBpbmdzXG4gICAgICovXG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIF9NQVBba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9SRVZFUlNFX01BUCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXQgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBuZWVkZWQgdG8gYWxsb3cgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zIHRvIHdvcmtcbiAgICAgKiBub3cgdGhhdCBtb3VzZXRyYXAgaXMgYSBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBNb3VzZXRyYXAuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZG9jdW1lbnRNb3VzZXRyYXAgPSBNb3VzZXRyYXAoZG9jdW1lbnQpO1xuICAgICAgICBmb3IgKHZhciBtZXRob2QgaW4gZG9jdW1lbnRNb3VzZXRyYXApIHtcbiAgICAgICAgICAgIGlmIChtZXRob2QuY2hhckF0KDApICE9PSAnXycpIHtcbiAgICAgICAgICAgICAgICBNb3VzZXRyYXBbbWV0aG9kXSA9IChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50TW91c2V0cmFwW21ldGhvZF0uYXBwbHkoZG9jdW1lbnRNb3VzZXRyYXAsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSAobWV0aG9kKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgTW91c2V0cmFwLmluaXQoKTtcblxuICAgIC8vIGV4cG9zZSBtb3VzZXRyYXAgdG8gdGhlIGdsb2JhbCBvYmplY3RcbiAgICB3aW5kb3cuTW91c2V0cmFwID0gTW91c2V0cmFwO1xuXG4gICAgLy8gZXhwb3NlIGFzIGEgY29tbW9uIGpzIG1vZHVsZVxuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IE1vdXNldHJhcDtcbiAgICB9XG5cbiAgICAvLyBleHBvc2UgbW91c2V0cmFwIGFzIGFuIEFNRCBtb2R1bGVcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBNb3VzZXRyYXA7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IG51bGwsIHR5cGVvZiAgd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogbnVsbCk7XG4iLCJHdXBweUFTVCA9IHt9O1xuXG5HdXBweUFTVC50b2tlbmlzZSA9IGZ1bmN0aW9uKHMsIHRva2Vucyl7XG4gICB2YXIgYW5zID0gW107XG4gICAgd2hpbGUocy5sZW5ndGggPiAwKXtcblx0dmFyIG9rID0gZmFsc2U7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspe1xuXHQgICAgdmFyIHQgPSB0b2tlbnNbaV07XG5cdCAgICByZSA9IFJlZ0V4cCh0LnJlKTtcblx0ICAgIHZhciBtID0gcmUuZXhlYyhzKTtcblx0ICAgIGlmKG0pe1xuXHRcdG0gPSBtWzBdO1xuXHRcdHMgPSBzLnN1YnN0cmluZyhtLmxlbmd0aCk7XG5cdFx0b2sgPSB0cnVlO1xuXHRcdGlmKHQudHlwZSAhPSBcInNwYWNlXCIpIGFucy5wdXNoKHtcInR5cGVcIjp0LnR5cGUsIFwidmFsdWVcIjogdC52YWx1ZShtKX0pXG5cdFx0YnJlYWs7XG5cdCAgICB9XG5cdH1cblx0aWYoIW9rKXtcblx0ICAgIGNvbnNvbGUubG9nKFwiVG9rZW5pc2luZyBlcnJvclwiKTtcblx0ICAgIHJldHVybiBbXTtcblx0fVxuICAgIH1cbiAgICByZXR1cm4gYW5zO1xufVxuXG5HdXBweUFTVC50b2tlbmlzZV9lID0gZnVuY3Rpb24ocyl7XG4gICAgcmV0dXJuIEd1cHB5QVNULnRva2VuaXNlKHMsIFtcblx0e1widHlwZVwiOlwibnVtYmVyXCIsIFwicmVcIjpcIl5bMC05Ll0rXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtcblx0ICAgIGlmKGlzTmFOKE51bWJlcihtKSkpIHRocm93IEV4Y2VwdGlvbihcIkludmFsaWQgbnVtYmVyOiBcIittKTtcblx0ICAgIHJldHVybiBOdW1iZXIobSk7XG5cdH19LFxuXHR7XCJ0eXBlXCI6XCJvcGVyYXRvclwiLCBcInJlXCI6XCJeKDw9fD49fCE9fD58PHw9KVwiLCBcInZhbHVlXCI6ZnVuY3Rpb24obSl7cmV0dXJuIG19fSxcblx0e1widHlwZVwiOlwib3BlcmF0b3JcIiwgXCJyZVwiOlwiXltcXC0rKi8hXVwiLCBcInZhbHVlXCI6ZnVuY3Rpb24obSl7cmV0dXJuIG19fSxcblx0e1widHlwZVwiOlwibmFtZVwiLCBcInJlXCI6XCJeW2EtekEtWl1cIiwgXCJ2YWx1ZVwiOmZ1bmN0aW9uKG0pe3JldHVybiBtfX0sXG5cdHtcInR5cGVcIjpcInNwYWNlXCIsIFwicmVcIjpcIl5cXFxccytcIiwgXCJ2YWx1ZVwiOmZ1bmN0aW9uKG0pe3JldHVybiBtfX0sXG4gICAgXSk7XG4gfVxuXG5HdXBweUFTVC50b19lcWxpc3QgPSBmdW5jdGlvbihhc3Qpe1xuICAgIGNvbXBhcmF0b3JzID0gW1wiPVwiLFwiIT1cIixcIjw9XCIsXCI+PVwiLFwiPFwiLFwiPlwiXTtcbiAgICBpZihhc3RbMV0ubGVuZ3RoID09IDAgfHwgY29tcGFyYXRvcnMuaW5kZXhPZihhc3RbMV1bMF1bMF0pIDwgMCkgcmV0dXJuIFthc3RdO1xuICAgIHJldHVybiBHdXBweUFTVC50b19lcWxpc3QoYXN0WzFdWzBdKS5jb25jYXQoW1thc3RbMF0sW2FzdFsxXVswXVsxXVsxXSxhc3RbMV1bMV1dXV0pO1xufVxuXG5HdXBweUFTVC50b190ZXh0ID0gZnVuY3Rpb24oYXN0KXtcbiAgICB2YXIgZnVuY3Rpb25zID0ge307XG4gICAgZnVuY3Rpb25zW1wiYnJhY2tldFwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBcIihcIithcmdzWzBdK1wiKVwiO307XG4gICAgZnVuY3Rpb25zW1wiPVwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBhcmdzWzBdK1wiID0gXCIrYXJnc1sxXTt9O1xuICAgIGZ1bmN0aW9uc1tcIiE9XCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3NbMF0rXCIgIT0gXCIrYXJnc1sxXTt9O1xuICAgIGZ1bmN0aW9uc1tcIjw9XCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3NbMF0rXCIgPD0gXCIrYXJnc1sxXTt9O1xuICAgIGZ1bmN0aW9uc1tcIj49XCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3NbMF0rXCIgPj0gXCIrYXJnc1sxXTt9O1xuICAgIGZ1bmN0aW9uc1tcIjxcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gYXJnc1swXStcIiA8IFwiK2FyZ3NbMV07fTtcbiAgICBmdW5jdGlvbnNbXCI+XCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3NbMF0rXCIgPiBcIithcmdzWzFdO307XG4gICAgZnVuY3Rpb25zW1wiKlwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBcIihcIithcmdzWzBdK1wiICogXCIrYXJnc1sxXStcIilcIjt9O1xuICAgIGZ1bmN0aW9uc1tcIitcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gXCIoXCIrYXJnc1swXStcIiArIFwiK2FyZ3NbMV0rXCIpXCI7fTtcbiAgICBmdW5jdGlvbnNbXCIvXCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIFwiKFwiK2FyZ3NbMF0rXCIgLyBcIithcmdzWzFdK1wiKVwiO307XG4gICAgZnVuY3Rpb25zW1wiZnJhY3Rpb25cIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gXCIoXCIrYXJnc1swXStcIiAvIFwiK2FyZ3NbMV0rXCIpXCI7fTtcbiAgICBmdW5jdGlvbnNbXCItXCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3MubGVuZ3RoID09IDEgPyBcIi1cIithcmdzWzBdIDogXCIoXCIrYXJnc1swXStcIiAtIFwiK2FyZ3NbMV0rXCIpXCI7fTtcbiAgICBmdW5jdGlvbnNbXCJ2YWxcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gYXJnc1swXStcIlwiO307XG4gICAgZnVuY3Rpb25zW1widmFyXCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGFyZ3NbMF07fTtcbiAgICBmdW5jdGlvbnNbXCJleHBvbmVudGlhbFwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBcIihcIithcmdzWzBdK1wiXlwiK2FyZ3NbMV0rXCIpXCI7fTtcbiAgICBmdW5jdGlvbnNbXCJmYWN0b3JpYWxcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gXCIoXCIrYXJnc1swXStcIikhXCI7fTtcbiAgICBmdW5jdGlvbnNbXCJfZGVmYXVsdFwiXSA9IGZ1bmN0aW9uKG5hbWUsIGFyZ3Mpe3JldHVybiBuYW1lICsgXCIoXCIgKyBhcmdzLmpvaW4oXCIsXCIpICsgXCIpXCI7fTtcbiAgICByZXR1cm4gR3VwcHlBU1QuZXZhbChhc3QsIGZ1bmN0aW9ucyk7XG59XG5cbkd1cHB5QVNULnRvX3htbCA9IGZ1bmN0aW9uKGFzdCwgc3ltYm9scywgc3ltYm9sX3RvX25vZGUpe1xuICAgIHZhciBwcmVwZW5kX3N0ciA9IGZ1bmN0aW9uKGRvYywgc3RyKXtcblx0ZG9jLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkLnRleHRDb250ZW50ID0gc3RyICsgZG9jLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkLnRleHRDb250ZW50O1xuICAgIH1cbiAgICB2YXIgYXBwZW5kX3N0ciA9IGZ1bmN0aW9uKGRvYywgc3RyKXtcblx0ZG9jLmRvY3VtZW50RWxlbWVudC5sYXN0Q2hpbGQudGV4dENvbnRlbnQgKz0gc3RyO1xuICAgIH1cbiAgICB2YXIgYXBwZW5kX2RvYyA9IGZ1bmN0aW9uKGRvYywgZG9jMil7XG5cdHZhciBuID0gZG9jLmRvY3VtZW50RWxlbWVudC5sYXN0Q2hpbGQ7XG5cdHZhciBubiA9IGRvYzIuZG9jdW1lbnRFbGVtZW50LmZpcnN0Q2hpbGRcblx0bi5maXJzdENoaWxkLnRleHRDb250ZW50ICs9IG5uLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG5cdGZvcihubiA9IG5uLm5leHRTaWJsaW5nOyBubjsgbm4gPSBubi5uZXh0U2libGluZyl7XG5cdCAgICBuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5uLmNsb25lTm9kZSh0cnVlKSxudWxsKTsgXG5cdH1cbiAgICB9XG4gICAgdmFyIGVuc3VyZV90ZXh0X25vZGVzID0gZnVuY3Rpb24oYmFzZSl7XG5cdHZhciBsID0gYmFzZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImVcIik7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBsLmxlbmd0aDsgaSsrKXtcblx0ICAgIGlmKCEobFtpXS5maXJzdENoaWxkKSkgbFtpXS5hcHBlbmRDaGlsZChiYXNlLmNyZWF0ZVRleHROb2RlKFwiXCIpKTtcblx0fVxuICAgIH1cbiAgICB2YXIgZ2V0X3N5bWJvbCA9IGZ1bmN0aW9uKG5hbWUsIHN5bWJvbHMpe1xuXHRmb3IodmFyIHMgaW4gc3ltYm9scyl7XG5cdCAgICBpZihzeW1ib2xzW3NdLmF0dHJzLnR5cGUgPT0gbmFtZSkgcmV0dXJuIHN5bWJvbHNbc107XG5cdH1cbiAgICB9XG4gICAgdmFyIGdldF9jb250ZW50X2FycmF5ID0gZnVuY3Rpb24oYXJncyl7XG5cdHZhciBjb250ZW50ID0ge307XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKXtcblx0ICAgIGNvbnRlbnRbaV0gPSBbXTtcblx0ICAgIGlmKGFyZ3NbaV0uZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lID09IFwibFwiKSBjb250ZW50W2ldLnB1c2goYXJnc1tpXS5kb2N1bWVudEVsZW1lbnQpO1xuXHQgICAgZWxzZSBmb3IodmFyIG5uID0gYXJnc1tpXS5kb2N1bWVudEVsZW1lbnQuZmlyc3RDaGlsZDsgbm47IG5uID0gbm4ubmV4dFNpYmxpbmcpIGNvbnRlbnRbaV0ucHVzaChubik7XG5cdH1cblx0cmV0dXJuIGNvbnRlbnQ7XG4gICAgfVxuICAgIHZhciBiaW5vcF9sb3cgPSBmdW5jdGlvbihhcmdzLCBvcCwgcGFyZW50KXtcblx0dmFyIGQgPSBhcmdzWzBdLmNsb25lTm9kZSh0cnVlKTtcblx0YXBwZW5kX3N0cihkLCBvcCk7XG5cdGFwcGVuZF9kb2MoZCwgYXJnc1sxXS5jbG9uZU5vZGUodHJ1ZSkpO1xuXHRpZihwYXJlbnQgJiYgKHBhcmVudFswXSA9PSBcIipcIiB8fCAocGFyZW50WzBdID09IFwiLVwiICYmIHBhcmVudFsxXS5sZW5ndGggPT0gMSkpKVxuXHQgICAgcmV0dXJuIG1ha2Vfc3ltKFwiYnJhY2tldFwiLCBbZF0pO1xuXHRlbHNlXG5cdCAgICByZXR1cm4gZDtcbiAgICB9XG4gICAgdmFyIGJpbm9wX2hpZ2ggPSBmdW5jdGlvbihhcmdzLCBvcCl7XG5cdHZhciBkID0gYXJnc1swXS5jbG9uZU5vZGUodHJ1ZSk7XG5cdGFwcGVuZF9kb2MoZCwgbWFrZV9zeW0ob3AsW10pKTtcblx0YXBwZW5kX2RvYyhkLCBhcmdzWzFdLmNsb25lTm9kZSh0cnVlKSk7XG5cdHJldHVybiBkO1xuICAgIH1cbiAgICB2YXIgbWFrZV9zeW0gPSBmdW5jdGlvbihuYW1lLCBhcmdzKXtcblx0dmFyIHN5bSA9IGdldF9zeW1ib2wobmFtZSwgc3ltYm9scyk7XG5cdGlmKCFzeW0pIHRocm93IFwiVW5yZWNvZ25pc2VkIHN5bWJvbDogXCIrbmFtZTtcblx0dmFyIGJhc2UgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKFwiPGM+PGU+PC9lPjxlPjwvZT48L2M+XCIsIFwidGV4dC94bWxcIik7XG5cdGVuc3VyZV90ZXh0X25vZGVzKGJhc2UpO1xuXHR2YXIgZTAgPSBiYXNlLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkO1xuXHR2YXIgY29udGVudCA9IGdldF9jb250ZW50X2FycmF5KGFyZ3MpO1xuXHR2YXIgZiA9IHN5bWJvbF90b19ub2RlKHN5bSwgY29udGVudCwgYmFzZSlbJ2YnXTtcblx0ZTAucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZixlMC5uZXh0U2libGluZyk7XG5cdGVuc3VyZV90ZXh0X25vZGVzKGJhc2UpO1xuXHRyZXR1cm4gYmFzZTtcbiAgICB9XG4gICAgdmFyIGZ1bmN0aW9ucyA9IHt9O1xuXG4gICAgdmFyIG9wcyA9IFtcIipcIixcIjxcIixcIj5cIixcIj1cIixcIjw9XCIsXCI+PVwiLFwiIT1cIl07XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IG9wcy5sZW5ndGg7IGkrKyl7XG5cdGZ1bmN0aW9uc1tvcHNbaV1dID0gZnVuY3Rpb24obyl7IHJldHVybiBmdW5jdGlvbihhcmdzKXsgcmV0dXJuIGJpbm9wX2hpZ2goYXJncywgbyk7IH19KG9wc1tpXSk7XG4gICAgfVxuICAgIC8vIGZ1bmN0aW9uc1tcIipcIl0gPSBmdW5jdGlvbihhcmdzKXtcbiAgICAvLyBcdHJldHVybiBiaW5vcF9oaWdoKGFyZ3MsIFwiKlwiKTtcbiAgICAvLyB9O1xuICAgIGZ1bmN0aW9uc1tcIi9cIl0gPSBmdW5jdGlvbihhcmdzKXtcblx0cmV0dXJuIG1ha2Vfc3ltKFwiZnJhY1wiLGFyZ3MpO1xuICAgIH07XG4gICAgZnVuY3Rpb25zW1wiK1wiXSA9IGZ1bmN0aW9uKGFyZ3MsIHBhcmVudCl7IHJldHVybiBiaW5vcF9sb3coYXJncywgXCIrXCIsIHBhcmVudCk7IH07XG4gICAgZnVuY3Rpb25zW1wiLVwiXSA9IGZ1bmN0aW9uKGFyZ3MsIHBhcmVudCl7XG5cdGlmKGFyZ3MubGVuZ3RoID09IDEpeyB2YXIgZCA9IGFyZ3NbMF0uY2xvbmVOb2RlKHRydWUpOyBwcmVwZW5kX3N0cihkLCBcIi1cIik7IHJldHVybiBkOyB9XG5cdGVsc2V7IHJldHVybiBiaW5vcF9sb3coYXJncywgXCItXCIsIHBhcmVudCk7fTtcbiAgICB9XG4gICAgZnVuY3Rpb25zW1widmFsXCJdID0gZnVuY3Rpb24oYXJncyl7IHJldHVybiAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKFwiPGM+PGU+XCIgKyBhcmdzWzBdICsgXCI8L2U+PC9jPlwiLCBcInRleHQveG1sXCIpO307XG4gICAgZnVuY3Rpb25zW1widmFyXCJdID0gZnVuY3Rpb24oYXJncyl7IHJldHVybiAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKFwiPGM+PGU+XCIgKyBhcmdzWzBdICsgXCI8L2U+PC9jPlwiLCBcInRleHQveG1sXCIpO307XG4gICAgZnVuY3Rpb25zW1wibGlzdFwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe1xuXHR2YXIgYmFzZSA9IChuZXcgd2luZG93LkRPTVBhcnNlcigpKS5wYXJzZUZyb21TdHJpbmcoXCI8bD48L2w+XCIsIFwidGV4dC94bWxcIik7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKXtcblx0ICAgIGJhc2UuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKGFyZ3NbaV0uZG9jdW1lbnRFbGVtZW50LmNsb25lTm9kZSh0cnVlKSk7XG5cdH1cblx0YmFzZS5kb2N1bWVudEVsZW1lbnQuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoXCJzXCIsU3RyaW5nKGFyZ3MubGVuZ3RoKSlcblx0cmV0dXJuIGJhc2U7XG4gICAgfTtcbiAgICAvLyB2YXIgY29tcGFyYXRvcnMgPSB7XCI8XCI6XCJsZXNzXCIsXCI+XCI6XCJncmVhdGVyXCIsXCI9XCI6XCJlcVwiLFwiIT1cIjpcIm5lcVwiLFwiPj1cIjpcImdlcVwiLFwiPD1cIjpcImxlcVwifTtcbiAgICAvLyBmb3IodmFyIGMgaW4gY29tcGFyYXRvcnMpe1xuICAgIC8vIFx0ZnVuY3Rpb25zW2NdID0gZnVuY3Rpb24oYXJncyl7XG4gICAgLy8gXHQgICAgcmV0dXJuIG1ha2Vfc3ltKGNvbXBhcmF0b3JzW2NdLCBhcmdzKTtcbiAgICAvLyBcdH1cbiAgICAvLyB9XG4gICAgZnVuY3Rpb25zW1wiX2RlZmF1bHRcIl0gPSBmdW5jdGlvbihuYW1lLCBhcmdzKXtcblx0cmV0dXJuIG1ha2Vfc3ltKG5hbWUsIGFyZ3MpO1xuICAgIH1cbiAgICB2YXIgYW5zID0gR3VwcHlBU1QuZXZhbChhc3QsIGZ1bmN0aW9ucyk7XG4gICAgdmFyIG5ld19iYXNlID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhcIjxtPjwvbT5cIiwgXCJ0ZXh0L3htbFwiKTtcbiAgICBmb3Iobm4gPSBhbnMuZG9jdW1lbnRFbGVtZW50LmZpcnN0Q2hpbGQ7IG5uOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0bmV3X2Jhc2UuZG9jdW1lbnRFbGVtZW50Lmluc2VydEJlZm9yZShubi5jbG9uZU5vZGUodHJ1ZSksbnVsbCk7XG4gICAgfVxuICAgIHJldHVybiBuZXdfYmFzZTtcblxufVxuXG5HdXBweUFTVC5nZXRfbm9kZXMgPSBmdW5jdGlvbihhc3QsIG5hbWUpe1xuICAgIGlmKGFzdC5sZW5ndGggPCAyKSByZXR1cm4gW107XG4gICAgdmFyIGFucyA9IFtdO1xuICAgIGlmKGFzdFswXSA9PSBuYW1lKSBhbnMucHVzaChhc3RbMV0pO1xuICAgIGlmKGFzdFswXSA9PSBcInZhclwiIHx8IGFzdFswXSA9PSBcInZhbFwiKSByZXR1cm4gYW5zO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBhc3RbMV0ubGVuZ3RoOyBpKyspIGFucyA9IGFucy5jb25jYXQoR3VwcHlBU1QuZ2V0X25vZGVzKGFzdFsxXVtpXSwgbmFtZSkpO1xuICAgIHJldHVybiBhbnM7XG59XG5cbkd1cHB5QVNULmdldF92YXJzID0gZnVuY3Rpb24oYXN0KXtcbiAgICB2YXIgdmFycyA9IHt9O1xuICAgIHZhciBhbnMgPSBbXTtcbiAgICB2YXIgbCA9IEd1cHB5QVNULmdldF9ub2Rlcyhhc3QsIFwidmFyXCIpO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBsLmxlbmd0aDsgaSsrKSB2YXJzW2xbaV1bMF1dID0gdHJ1ZTtcbiAgICBmb3IodmFyIHggaW4gdmFycykgYW5zLnB1c2goeCk7XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHlBU1QudG9fZnVuY3Rpb24gPSBmdW5jdGlvbihhc3QsIGZ1bmN0aW9ucyl7XG4gICAgZnVuY3Rpb25zID0gZnVuY3Rpb25zIHx8IHt9XG4gICAgZGVmYXVsdHMgPSB7fVxuICAgIGRlZmF1bHRzW1wiKlwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gYXJnc1swXSh2YXJzKSphcmdzWzFdKHZhcnMpfTt9O1xuICAgIGRlZmF1bHRzW1wiK1wiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gYXJnc1swXSh2YXJzKSthcmdzWzFdKHZhcnMpfTt9O1xuICAgIGRlZmF1bHRzW1wiL1wiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gYXJnc1swXSh2YXJzKS9hcmdzWzFdKHZhcnMpfTt9O1xuICAgIGRlZmF1bHRzW1wiLVwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBhcmdzLmxlbmd0aCA9PSAxID8gZnVuY3Rpb24odmFycyl7cmV0dXJuIC1hcmdzWzBdKHZhcnMpfSA6IGZ1bmN0aW9uKHZhcnMpe3JldHVybiBhcmdzWzBdKHZhcnMpLWFyZ3NbMV0odmFycyl9O307XG4gICAgZGVmYXVsdHNbXCJ2YWxcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gZnVuY3Rpb24odmFycyl7IHJldHVybiBhcmdzWzBdOyB9O307XG4gICAgZGVmYXVsdHNbXCJ2YXJcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gZnVuY3Rpb24odmFycyl7IGlmKGFyZ3NbMF0gPT0gXCJwaVwiKSByZXR1cm4gTWF0aC5QSTsgaWYoYXJnc1swXSA9PSBcImVcIikgcmV0dXJuIE1hdGguRTsgcmV0dXJuIHZhcnNbYXJnc1swXV07IH07fTtcbiAgICBkZWZhdWx0c1tcImV4cG9uZW50aWFsXCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGZ1bmN0aW9uKHZhcnMpe3JldHVybiBhcmdzWzBdKHZhcnMpKiphcmdzWzFdKHZhcnMpfTt9O1xuICAgIC8vZGVmYXVsdHNbXCJmcmFjdGlvblwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gYXJnc1swXSh2YXJzKS9hcmdzWzFdKHZhcnMpO307fVxuICAgIGRlZmF1bHRzW1wic3F1YXJlX3Jvb3RcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gZnVuY3Rpb24odmFycyl7cmV0dXJuIE1hdGguc3FydChhcmdzWzBdKHZhcnMpKX07fTtcbiAgICBkZWZhdWx0c1tcInNpblwiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gTWF0aC5zaW4oYXJnc1swXSh2YXJzKSl9O307XG4gICAgZGVmYXVsdHNbXCJjb3NcIl0gPSBmdW5jdGlvbihhcmdzKXtyZXR1cm4gZnVuY3Rpb24odmFycyl7cmV0dXJuIE1hdGguY29zKGFyZ3NbMF0odmFycykpfTt9O1xuICAgIGRlZmF1bHRzW1widGFuXCJdID0gZnVuY3Rpb24oYXJncyl7cmV0dXJuIGZ1bmN0aW9uKHZhcnMpe3JldHVybiBNYXRoLnRhbihhcmdzWzBdKHZhcnMpKX07fTtcbiAgICBkZWZhdWx0c1tcImxvZ1wiXSA9IGZ1bmN0aW9uKGFyZ3Mpe3JldHVybiBmdW5jdGlvbih2YXJzKXtyZXR1cm4gTWF0aC5sb2coYXJnc1swXSh2YXJzKSl9O307XG4gICAgZm9yKHZhciBuIGluIGRlZmF1bHRzKSBpZighZnVuY3Rpb25zW25dKSBmdW5jdGlvbnNbbl0gPSBkZWZhdWx0c1tuXTtcbiAgICByZXR1cm4ge1wiZnVuY3Rpb25cIjpHdXBweUFTVC5ldmFsKGFzdCwgZnVuY3Rpb25zKSxcInZhcnNcIjpHdXBweUFTVC5nZXRfdmFycyhhc3QpfTtcbn1cblxuR3VwcHlBU1QuZXZhbCA9IGZ1bmN0aW9uKGFzdCwgZnVuY3Rpb25zLCBwYXJlbnQpe1xuICAgIGFucyA9IG51bGw7XG4gICAgaWYoIWZ1bmN0aW9uc1tcIl9kZWZhdWx0XCJdKSBmdW5jdGlvbnNbXCJfZGVmYXVsdFwiXSA9IGZ1bmN0aW9uKG5hbWUsIGFyZ3MpeyB0aHJvdyBcIkZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZDogXCIgKyBuYW1lO31cbiAgICBcbiAgICB2YXIgYXJncyA9IFtdXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IGFzdFsxXS5sZW5ndGg7IGkrKyl7XG5cdGlmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhc3RbMV1baV0pID09PSAnW29iamVjdCBBcnJheV0nKXtcblx0ICAgIGFyZ3MucHVzaChHdXBweUFTVC5ldmFsKGFzdFsxXVtpXSwgZnVuY3Rpb25zLCBhc3QpKTtcblx0fVxuXHRlbHNle1xuXHQgICAgYXJncy5wdXNoKGFzdFsxXVtpXSk7XG5cdH1cbiAgICB9XG4gICAgLy9jb25zb2xlLmxvZyhcIkZuXCIsYXN0WzBdLGZ1bmN0aW9uc1thc3RbMF1dKTtcbiAgICBpZihmdW5jdGlvbnNbYXN0WzBdXSkgYW5zID0gZnVuY3Rpb25zW2FzdFswXV0oYXJncywgcGFyZW50KTtcbiAgICBlbHNlIGlmKGZ1bmN0aW9uc1tcIl9kZWZhdWx0XCJdKSBhbnMgPSBmdW5jdGlvbnNbXCJfZGVmYXVsdFwiXShhc3RbMF0sIGFyZ3MsIHBhcmVudCk7XG4gICAgXG4gICAgLy9jb25zb2xlLmxvZyhcIkVWQUxcIixKU09OLnN0cmluZ2lmeShhc3QpLCc9JyxhbnMpO1xuICAgIHJldHVybiBhbnNcbn1cblxuR3VwcHlBU1QucGFyc2VfZSA9IGZ1bmN0aW9uKHRva2Vucyl7XG4gICAgdmFyIHN5bWJvbF90YWJsZSA9IHt9O1xuXG4gICAgdmFyIG9yaWdpbmFsX3N5bWJvbCA9IHtcblx0bnVkOiBmdW5jdGlvbiAoKSB7IHRocm93IEVycm9yKFwiVW5kZWZpbmVkXCIpOyB9LFxuXHRsZWQ6IGZ1bmN0aW9uIChsZWZ0KSB7IHRocm93IEVycm9yKFwiTWlzc2luZyBvcGVyYXRvclwiKTsgfVxuICAgIH07XG5cbiAgICB2YXIgbXVsID0gZnVuY3Rpb24obGVmdCl7IHJldHVybiBbXCIqXCIsIFtsZWZ0LCB0aGlzLm51ZCgpXV07IH07XG4gICAgXG4gICAgdmFyIHN5bWJvbCA9IGZ1bmN0aW9uIChpZCwgYnApIHtcblx0dmFyIHMgPSBzeW1ib2xfdGFibGVbaWRdO1xuXHRicCA9IGJwIHx8IDA7XG5cdGlmIChzKSB7XG4gICAgICAgICAgICBpZiAoYnAgPj0gcy5sYnApIHtcblx0XHRzLmxicCA9IGJwO1xuICAgICAgICAgICAgfVxuXHR9IGVsc2Uge1xuICAgICAgICAgICAgcyA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxfc3ltYm9sKTtcbiAgICAgICAgICAgIHMuaWQgPSBzLnZhbHVlID0gaWQ7XG4gICAgICAgICAgICBzLmxicCA9IGJwO1xuICAgICAgICAgICAgc3ltYm9sX3RhYmxlW2lkXSA9IHM7XG5cdH1cblx0cmV0dXJuIHM7XG4gICAgfTtcblxuICAgIHN5bWJvbChcIihlbmQpXCIpO1xuXG4gICAgcyA9IHN5bWJvbChcIihibGFuaylcIiwgNjApO1xuICAgIHMubnVkID0gZnVuY3Rpb24oKXsgcmV0dXJuIFtcImJsYW5rXCJdO307XG4gICAgXG4gICAgcyA9IHN5bWJvbChcIihmdW5jdGlvbilcIiwgNjApO1xuICAgIHMubGVkID0gbXVsO1xuICAgIC8vcy5udWQgPSBmdW5jdGlvbigpeyByZXR1cm4gW3RoaXMudmFsdWUsIHRoaXMuYXJncyB8fCBbXSwgdGhpcy5rd2FyZ3MgfHwge31dO307XG4gICAgcy5udWQgPSBmdW5jdGlvbigpeyByZXR1cm4gW3RoaXMudmFsdWUsIHRoaXMuYXJncyB8fCBbXV07fTtcbiAgICBcbiAgICBzID0gc3ltYm9sKFwiKGxpdGVyYWwpXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJ2YWxcIiwgW3RoaXMudmFsdWVdXSB9O1xuXG4gICAgcyA9IHN5bWJvbChcIihwYXNzKVwiLCA2MCk7XG4gICAgcy5sZWQgPSBtdWw7XG4gICAgcy5udWQgPSBmdW5jdGlvbigpeyByZXR1cm4gdGhpcy5hcmdzWzBdIH07XG4gICAgXG4gICAgcyA9IHN5bWJvbChcIih2YXIpXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJ2YXJcIiwgW3RoaXMudmFsdWVdXSB9O1xuXG4gICAgdmFyIHRva2VuO1xuICAgIHZhciB0b2tlbl9uciA9IDA7XG5cbiAgICB2YXIgYWR2YW5jZSA9IGZ1bmN0aW9uIChpZCkge1xuXHR2YXIgYSwgbywgdCwgdjtcblx0aWYgKGlkICYmIHRva2VuLmlkICE9PSBpZCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCAnXCIgKyBpZCArIFwiJ1wiKTtcblx0fVxuXHRpZiAodG9rZW5fbnIgPj0gdG9rZW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgdG9rZW4gPSBzeW1ib2xfdGFibGVbXCIoZW5kKVwiXTtcbiAgICAgICAgICAgIHJldHVybjtcblx0fVxuXHR0ID0gdG9rZW5zW3Rva2VuX25yXTtcblx0dG9rZW5fbnIgKz0gMTtcblx0diA9IHQudmFsdWU7XG5cdHZhciBhcmdzID0gbnVsbDtcblx0dmFyIGt3YXJncyA9IG51bGw7XG5cdGEgPSB0LnR5cGU7XG5cdGlmIChhID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVtcIih2YXIpXCJdO1xuXHR9IGVsc2UgaWYgKGEgPT09IFwib3BlcmF0b3JcIikge1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVt2XTtcbiAgICAgICAgICAgIGlmICghbykge1xuXHRcdHRocm93IEV4Y2VwdGlvbihcIlVua25vd24gb3BlcmF0b3IuXCIpO1xuICAgICAgICAgICAgfVxuXHR9IGVsc2UgaWYgKGEgPT09ICBcInBhc3NcIikge1xuICAgICAgICAgICAgYSA9IFwicGFzc1wiO1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVtcIihwYXNzKVwiXTtcblx0ICAgIGFyZ3MgPSB0LmFyZ3M7XG5cdH0gZWxzZSBpZiAoYSA9PT0gIFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIGEgPSBcImxpdGVyYWxcIjtcbiAgICAgICAgICAgIG8gPSBzeW1ib2xfdGFibGVbXCIobGl0ZXJhbClcIl07XG5cdH0gZWxzZSBpZiAoYSA9PT0gIFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgYSA9IFwiZnVuY3Rpb25cIjtcbiAgICAgICAgICAgIG8gPSBzeW1ib2xfdGFibGVbXCIoZnVuY3Rpb24pXCJdO1xuXHQgICAgYXJncyA9IHQuYXJncztcblx0ICAgIGt3YXJncyA9IHQua3dhcmdzO1xuXHR9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIHRva2VuXCIsdCk7XG5cdH1cblx0dG9rZW4gPSBPYmplY3QuY3JlYXRlKG8pO1xuXHR0b2tlbi50eXBlID0gYTtcblx0dG9rZW4udmFsdWUgPSB2O1xuXHRpZihhcmdzKSB0b2tlbi5hcmdzID0gYXJncztcblx0aWYoa3dhcmdzKSB0b2tlbi5rd2FyZ3MgPSBrd2FyZ3M7XG5cdHJldHVybiB0b2tlbjtcbiAgICB9O1xuXG5cbiAgICB2YXIgZXhwcmVzc2lvbiA9IGZ1bmN0aW9uIChyYnApIHtcblx0dmFyIGxlZnQ7XG5cdHZhciB0ID0gdG9rZW47XG5cdGFkdmFuY2UoKTtcblx0bGVmdCA9IHQubnVkKCk7XG5cdHdoaWxlIChyYnAgPCB0b2tlbi5sYnApIHtcbiAgICAgICAgICAgIHQgPSB0b2tlbjtcbiAgICAgICAgICAgIGFkdmFuY2UoKTtcbiAgICAgICAgICAgIGxlZnQgPSB0LmxlZChsZWZ0KTtcblx0fVxuXHRyZXR1cm4gbGVmdDtcbiAgICB9O1xuXG4gICAgdmFyIGluZml4ID0gZnVuY3Rpb24gKGlkLCBicCwgbGVkKSB7XG5cdHZhciBzID0gc3ltYm9sKGlkLCBicCk7XG5cdHMubGVkID0gbGVkIHx8IGZ1bmN0aW9uIChsZWZ0KSB7XG4gICAgICAgICAgICByZXR1cm4gW3RoaXMudmFsdWUsIFtsZWZ0LCBleHByZXNzaW9uKGJwKV1dO1xuXHR9O1xuXHRyZXR1cm4gcztcbiAgICB9XG5cbiAgICBcbiAgICBpbmZpeChcIj1cIiwgNDApO1xuICAgIGluZml4KFwiIT1cIiwgNDApO1xuICAgIGluZml4KFwiPFwiLCA0MCk7XG4gICAgaW5maXgoXCI+XCIsIDQwKTtcbiAgICBpbmZpeChcIjw9XCIsIDQwKTtcbiAgICBpbmZpeChcIj49XCIsIDQwKTtcblxuICAgIGluZml4KFwiK1wiLCA1MCk7XG4gICAgaW5maXgoXCItXCIsIDUwKTtcbiAgICBpbmZpeChcIipcIiwgNjApO1xuICAgIGluZml4KFwiL1wiLCA2MCk7XG4gICAgdmFyIHByZWZpeCA9IGZ1bmN0aW9uIChpZCwgbnVkKSB7XG5cdHZhciBzID0gc3ltYm9sKGlkKTtcblx0cy5udWQgPSBudWQgfHwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFt0aGlzLnZhbHVlLCBbZXhwcmVzc2lvbig3MCldXTtcblx0fTtcblx0cmV0dXJuIHM7XG4gICAgfVxuXG4gICAgcHJlZml4KFwiLVwiKTtcbiAgICBwcmVmaXgoXCIhXCIpO1xuICAgIHByZWZpeChcInR5cGVvZlwiKTtcblxuICAgIGlmKHRva2Vucy5sZW5ndGggPT0gMCkgcmV0dXJuIFtcImJsYW5rXCJdO1xuICAgIFxuICAgIGFkdmFuY2UoKTtcbiAgICBcbiAgICByZXR1cm4gZXhwcmVzc2lvbigxMCk7XG59XG5cblxuXG5HdXBweUFTVC50b2tlbmlzZV90ZXh0ID0gZnVuY3Rpb24ocyl7XG4gICAgcmV0dXJuIEd1cHB5QVNULnRva2VuaXNlKHMsIFtcblx0e1widHlwZVwiOlwibnVtYmVyXCIsIFwicmVcIjpcIl5bMC05Ll0rXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gTnVtYmVyKG0pfX0sXG5cdHtcInR5cGVcIjpcIm9wZXJhdG9yXCIsIFwicmVcIjpcIl4oIT18Pj18PD0pXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gbTt9fSxcblx0e1widHlwZVwiOlwib3BlcmF0b3JcIiwgXCJyZVwiOlwiXltcXC0rKi8sIV4oKT08Pl1cIiwgXCJ2YWx1ZVwiOmZ1bmN0aW9uKG0pe3JldHVybiBtfX0sXG5cdHtcInR5cGVcIjpcIm5hbWVcIiwgXCJyZVwiOlwiXlthLXpBLVpfXStcIiwgXCJ2YWx1ZVwiOmZ1bmN0aW9uKG0pe3JldHVybiBtfX0sXG5cdHtcInR5cGVcIjpcImNvbW1hXCIsIFwicmVcIjpcIl4sXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gbX19LFxuXHR7XCJ0eXBlXCI6XCJzcGFjZVwiLCBcInJlXCI6XCJeXFxcXHMrXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gbX19LFxuICAgIF0pO1xufVxuXG5HdXBweUFTVC5wYXJzZV90ZXh0ID0gZnVuY3Rpb24odG9rZW5zKXtcbiAgICB2YXIgc3ltYm9sX3RhYmxlID0ge307XG5cbiAgICB2YXIgb3JpZ2luYWxfc3ltYm9sID0ge1xuXHRudWQ6IGZ1bmN0aW9uICgpIHsgdGhyb3cgRXJyb3IoXCJVbmRlZmluZWRcIik7IH0sXG5cdGxlZDogZnVuY3Rpb24gKGxlZnQpIHsgdGhyb3cgRXJyb3IoXCJNaXNzaW5nIG9wZXJhdG9yXCIpOyB9XG4gICAgfTtcblxuICAgIHZhciBtdWwgPSBmdW5jdGlvbihsZWZ0KXsgcmV0dXJuIFtcIipcIiwgW2xlZnQsIHRoaXMubnVkKCldXTsgfTtcbiAgICBcbiAgICB2YXIgc3ltYm9sID0gZnVuY3Rpb24gKGlkLCBicCkge1xuXHR2YXIgcyA9IHN5bWJvbF90YWJsZVtpZF07XG5cdGJwID0gYnAgfHwgMDtcblx0aWYgKHMpIHtcbiAgICAgICAgICAgIGlmIChicCA+PSBzLmxicCkge1xuXHRcdHMubGJwID0gYnA7XG4gICAgICAgICAgICB9XG5cdH0gZWxzZSB7XG4gICAgICAgICAgICBzID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbF9zeW1ib2wpO1xuICAgICAgICAgICAgcy5pZCA9IHMudmFsdWUgPSBpZDtcbiAgICAgICAgICAgIHMubGJwID0gYnA7XG4gICAgICAgICAgICBzeW1ib2xfdGFibGVbaWRdID0gcztcblx0fVxuXHRyZXR1cm4gcztcbiAgICB9O1xuXG4gICAgc3ltYm9sKFwiKGVuZClcIik7XG5cbiAgICBzID0gc3ltYm9sKFwiKGJsYW5rKVwiLCA2MCk7XG4gICAgcy5udWQgPSBmdW5jdGlvbigpeyByZXR1cm4gW1wiYmxhbmtcIl07fTtcbiAgICBcbiAgICBzID0gc3ltYm9sKFwiKGxpdGVyYWwpXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJ2YWxcIiwgW3RoaXMudmFsdWVdXSB9O1xuXG4gICAgdmFyIGdldF9hcmdzID0gZnVuY3Rpb24oKXtcblx0dmFyIGFyZ3MgPSBbXTtcblx0YWR2YW5jZSgpXG5cdGlmKHRva2VuLmlkICE9PSBcIilcIil7XG5cdCAgICB3aGlsZSh0cnVlKXtcblx0XHRhcmdzLnB1c2goZXhwcmVzc2lvbigwKSk7XG5cdFx0aWYgKHRva2VuLmlkICE9PSBcIixcIikge1xuXHRcdCAgICBicmVhaztcblx0XHR9XG5cdFx0YWR2YW5jZShcIixcIik7XG5cdCAgICB9XG5cdH1cblx0YWR2YW5jZShcIilcIik7XG5cdHJldHVybiBhcmdzO1xuICAgIH1cbiAgICBcbiAgICBzID0gc3ltYm9sKFwiKHZhcilcIiwgNjApO1xuICAgIHMubGVkID0gbXVsO1xuICAgIHMubnVkID0gZnVuY3Rpb24oKXtcblx0aWYodG9rZW4uaWQgPT0gXCIoXCIpe1xuXHQgICAgcmV0dXJuIFt0aGlzLnZhbHVlLCBnZXRfYXJncygpXTtcblx0fVxuXHRlbHNle1xuXHQgICAgcmV0dXJuIFtcInZhclwiLCBbdGhpcy52YWx1ZV1dXG5cdH1cbiAgICB9O1xuICAgIFxuICAgIHZhciB0b2tlbjtcbiAgICB2YXIgdG9rZW5fbnIgPSAwO1xuXG4gICAgdmFyIGFkdmFuY2UgPSBmdW5jdGlvbiAoaWQpIHtcblx0dmFyIGEsIG8sIHQsIHY7XG5cdGlmIChpZCAmJiB0b2tlbi5pZCAhPT0gaWQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiRXhwZWN0ZWQgJ1wiICsgaWQgKyBcIidcIik7XG5cdH1cblx0aWYgKHRva2VuX25yID49IHRva2Vucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRva2VuID0gc3ltYm9sX3RhYmxlW1wiKGVuZClcIl07XG4gICAgICAgICAgICByZXR1cm47XG5cdH1cblx0dCA9IHRva2Vuc1t0b2tlbl9ucl07XG5cdHRva2VuX25yICs9IDE7XG5cdHYgPSB0LnZhbHVlO1xuXHR2YXIgYXJncyA9IG51bGw7XG5cdHZhciBrd2FyZ3MgPSBudWxsO1xuXHRhID0gdC50eXBlO1xuXHRpZiAoYSA9PT0gXCJuYW1lXCIpIHtcbiAgICAgICAgICAgIG8gPSBzeW1ib2xfdGFibGVbXCIodmFyKVwiXTtcblx0fSBlbHNlIGlmIChhID09PSBcIm9wZXJhdG9yXCIpIHtcbiAgICAgICAgICAgIG8gPSBzeW1ib2xfdGFibGVbdl07XG4gICAgICAgICAgICBpZiAoIW8pIHtcblx0XHR0aHJvdyBFcnJvcihcIlVua25vd24gb3BlcmF0b3IuXCIpO1xuICAgICAgICAgICAgfVxuXHR9IGVsc2UgaWYgKGEgPT09ICBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICBhID0gXCJsaXRlcmFsXCI7XG4gICAgICAgICAgICBvID0gc3ltYm9sX3RhYmxlW1wiKGxpdGVyYWwpXCJdO1xuXHR9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIHRva2VuXCIsdCk7XG5cdH1cblx0dG9rZW4gPSBPYmplY3QuY3JlYXRlKG8pO1xuXHR0b2tlbi50eXBlID0gYTtcblx0dG9rZW4udmFsdWUgPSB2O1xuXHRpZihhcmdzKSB0b2tlbi5hcmdzID0gYXJncztcblx0Ly9jb25zb2xlLmxvZyhcIkFEVkRcIixKU09OLnN0cmluZ2lmeSh0b2tlbikpO1xuXHRyZXR1cm4gdG9rZW47XG4gICAgfTtcblxuXG4gICAgdmFyIGV4cHJlc3Npb24gPSBmdW5jdGlvbiAocmJwKSB7XG5cdHZhciBsZWZ0O1xuXHR2YXIgdCA9IHRva2VuO1xuXHQvL2NvbnNvbGUubG9nKFwiVDFcIixKU09OLnN0cmluZ2lmeSh0b2tlbikpO1xuXHRhZHZhbmNlKCk7XG5cdC8vY29uc29sZS5sb2coXCJUMlwiLEpTT04uc3RyaW5naWZ5KHRva2VuKSk7XG5cdGxlZnQgPSB0Lm51ZCgpO1xuXHR3aGlsZSAocmJwIDwgdG9rZW4ubGJwKSB7XG4gICAgICAgICAgICB0ID0gdG9rZW47XG4gICAgICAgICAgICBhZHZhbmNlKCk7XG5cdCAgICAvL2NvbnNvbGUubG9nKFwiUkJcIixKU09OLnN0cmluZ2lmeSh0b2tlbikpO1xuICAgICAgICAgICAgbGVmdCA9IHQubGVkKGxlZnQpO1xuXHR9XG5cdC8vY29uc29sZS5sb2coXCJQT1dcIiwgcmJwLCB0b2tlbi5pZCwgdG9rZW4ubGJwKTtcblx0cmV0dXJuIGxlZnQ7XG4gICAgfTtcblxuICAgIHZhciBpbmZpeCA9IGZ1bmN0aW9uIChpZCwgYnAsIGxlZCkge1xuXHR2YXIgcyA9IHN5bWJvbChpZCwgYnApO1xuXHRzLmxlZCA9IGxlZCB8fCBmdW5jdGlvbiAobGVmdCkge1xuICAgICAgICAgICAgcmV0dXJuIFt0aGlzLnZhbHVlLCBbbGVmdCwgZXhwcmVzc2lvbihicCldXTtcblx0fTtcblx0cmV0dXJuIHM7XG4gICAgfVxuXG4gICAgaW5maXgoXCI9XCIsIDQwKTtcbiAgICBpbmZpeChcIiE9XCIsIDQwKTtcbiAgICBpbmZpeChcIjxcIiwgNDApO1xuICAgIGluZml4KFwiPlwiLCA0MCk7XG4gICAgaW5maXgoXCI8PVwiLCA0MCk7XG4gICAgaW5maXgoXCI+PVwiLCA0MCk7XG5cbiAgICBpbmZpeChcIitcIiwgNTApO1xuICAgIGluZml4KFwiLVwiLCA1MCk7XG4gICAgaW5maXgoXCIqXCIsIDYwKTtcbiAgICBpbmZpeChcIi9cIiwgNjApO1xuICAgIFxuICAgIGluZml4KFwiIVwiLCA3MCwgZnVuY3Rpb24obGVmdCl7XG5cdHJldHVybiBbXCJmYWN0b3JpYWxcIiwgW2xlZnRdXTtcbiAgICB9KTtcbiAgICBcbiAgICBpbmZpeChcIl5cIiwgNzAsIGZ1bmN0aW9uKGxlZnQpe1xuXHRyZXR1cm4gW1wiZXhwb25lbnRpYWxcIiwgW2xlZnQsIGV4cHJlc3Npb24oNzApXV07XG4gICAgfSk7XG4gICAgXG4gICAgaW5maXgoXCIoXCIsIDgwLCBtdWwpO1xuXG4gICAgc3ltYm9sKFwiKFwiKS5udWQgPSBmdW5jdGlvbigpe1xuXHR2YXIgYW5zID0gZXhwcmVzc2lvbigwKTtcblx0YWR2YW5jZShcIilcIik7XG5cdHJldHVybiBhbnM7XG4gICAgfVxuICAgIHN5bWJvbChcIilcIik7XG4gICAgc3ltYm9sKFwiLFwiKTtcbiAgICBcbiAgICB2YXIgcHJlZml4ID0gZnVuY3Rpb24gKGlkLCBudWQpIHtcblx0dmFyIHMgPSBzeW1ib2woaWQpO1xuXHRzLm51ZCA9IG51ZCB8fCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gW3RoaXMudmFsdWUsIFtleHByZXNzaW9uKDcwKV1dO1xuXHR9O1xuXHRyZXR1cm4gcztcbiAgICB9XG5cbiAgICBwcmVmaXgoXCItXCIpO1xuXG4gICAgaWYodG9rZW5zLmxlbmd0aCA9PSAwKSByZXR1cm4gW1wiYmxhbmtcIl07XG4gICAgXG4gICAgYWR2YW5jZSgpO1xuICAgIFxuICAgIHJldHVybiBleHByZXNzaW9uKDEwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHdXBweUFTVDtcbiIsIk1vdXNldHJhcCA9IHJlcXVpcmUoJ21vdXNldHJhcCcpO1xua2F0ZXggPSByZXF1aXJlKCcuLi9saWIva2F0ZXgva2F0ZXgtbW9kaWZpZWQubWluLmpzJyk7XG5HdXBweVV0aWxzID0gcmVxdWlyZSgnLi9ndXBweV91dGlscy5qcycpO1xuR3VwcHlEb2MgPSByZXF1aXJlKCcuL2d1cHB5X2RvYy5qcycpO1xuR3VwcHlTeW1ib2xzID0gcmVxdWlyZSgnLi9ndXBweV9zeW1ib2xzLmpzJyk7XG5cblN0cmluZy5wcm90b3R5cGUuc3BsaWNlID0gZnVuY3Rpb24oaWR4LCBzKXsgcmV0dXJuICh0aGlzLnNsaWNlKDAsaWR4KSArIHMgKyB0aGlzLnNsaWNlKGlkeCkpOyB9O1xuU3RyaW5nLnByb3RvdHlwZS5zcGxpY2VuID0gZnVuY3Rpb24oaWR4LCBzLCBuKXsgcmV0dXJuICh0aGlzLnNsaWNlKDAsaWR4KSArIHMgKyB0aGlzLnNsaWNlKGlkeCtuKSk7fTtcblN0cmluZy5wcm90b3R5cGUuc2VhcmNoX2F0ID0gZnVuY3Rpb24oaWR4LCBzKXsgcmV0dXJuICh0aGlzLnN1YnN0cmluZyhpZHgtcy5sZW5ndGgsaWR4KSA9PSBzKTsgfTtcblxuLyoqXG4gICBAY2xhc3NcbiAgIEBjbGFzc2Rlc2MgVGhlIGJhY2tlbmQgdG8gdGhlIGVkaXRvci4gIFNob3VsZCBuZXZlciBiZSBjb25zdHJ1Y3RlZCBkaXJlY3RseSBieSB0aGUgdXNlci5cbiAgIEBjb25zdHJ1Y3RvciBcbiAqL1xudmFyIEd1cHB5QmFja2VuZCA9IGZ1bmN0aW9uKGNvbmZpZyl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBjb25maWcgPSBjb25maWcgfHwge307XG4gICAgdmFyIGV2ZW50cyA9IGNvbmZpZ1snZXZlbnRzJ10gfHwge307XG4gICAgdmFyIG9wdGlvbnMgPSBjb25maWdbJ29wdGlvbnMnXSB8fCB7fTtcbiAgICB0aGlzLnBhcmVudCA9IGNvbmZpZ1sncGFyZW50J107XG4gICAgXG4gICAgdGhpcy5ibGFja2xpc3QgPSBbXTtcbiAgICB0aGlzLmF1dG9yZXBsYWNlID0gdHJ1ZTtcbiAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG4gICAgdGhpcy5ldmVudHMgPSB7fTtcbiAgICBcbiAgICB2YXIgZXZ0cyA9IFtcInJlYWR5XCIsIFwiY2hhbmdlXCIsIFwibGVmdF9lbmRcIiwgXCJyaWdodF9lbmRcIiwgXCJkb25lXCIsIFwiY29tcGxldGlvblwiLCBcImRlYnVnXCIsIFwiZXJyb3JcIiwgXCJmb2N1c1wiXTtcbiAgICBcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgZXZ0cy5sZW5ndGg7IGkrKyl7XG5cdHZhciBlID0gZXZ0c1tpXTtcblx0aWYoZSBpbiBldmVudHMpIHRoaXMuZXZlbnRzW2VdID0gZSBpbiBldmVudHMgPyBldmVudHNbZV0gOiBudWxsO1xuICAgIH1cblxuICAgIHZhciBvcHRzID0gW1wiYmxhbmtfY2FyZXRcIiwgXCJlbXB0eV9jb250ZW50XCIsIFwiYmxhY2tsaXN0XCIsIFwiYXV0b3JlcGxhY2VcIiwgXCJjbGlwdHlwZVwiXTtcbiAgICBcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgb3B0cy5sZW5ndGg7IGkrKyl7XG5cdHZhciBwID0gb3B0c1tpXTtcblx0aWYocCBpbiBvcHRpb25zKSB0aGlzW3BdID0gb3B0aW9uc1twXTtcbiAgICB9XG5cbiAgICB0aGlzLnN5bWJvbHMgPSB7fTtcbiAgICB0aGlzLmRvYyA9IG5ldyBHdXBweURvYyhvcHRpb25zW1wieG1sX2NvbnRlbnRcIl0pO1xuICAgIFxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnJvb3QoKS5maXJzdENoaWxkO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuc3BhY2VfY2FyZXQgPSAwO1xuICAgIHRoaXMuc2VsX3N0YXJ0ID0gbnVsbDtcbiAgICB0aGlzLnNlbF9lbmQgPSBudWxsO1xuICAgIHRoaXMudW5kb19kYXRhID0gW107XG4gICAgdGhpcy51bmRvX25vdyA9IC0xO1xuICAgIHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICBpZihHdXBweUJhY2tlbmQucmVhZHkgJiYgIXRoaXMucmVhZHkpe1xuICAgIFx0dGhpcy5yZWFkeSA9IHRydWU7XG5cdHRoaXMuc3ltYm9scyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoR3VwcHlTeW1ib2xzLnN5bWJvbHMpKTtcbiAgICBcdHRoaXMuZmlyZV9ldmVudChcInJlYWR5XCIpO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnJlYWR5ID0gZmFsc2U7XG5HdXBweUJhY2tlbmQuU0VMX05PTkUgPSAwO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQgPSAxO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EID0gMjtcbkd1cHB5QmFja2VuZC5jbGlwYm9hcmQgPSBudWxsO1xuXG4vKiogXG4gICAgR2V0IHRoZSBjb250ZW50IG9mIHRoZSBlZGl0b3JcbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IHQgLSBUaGUgdHlwZSBvZiBjb250ZW50IHRvIHJlbmRlciAoXCJsYXRleFwiLCBcInRleHRcIiwgb3IgXCJ4bWxcIikuXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5nZXRfY29udGVudCA9IGZ1bmN0aW9uKHQscil7XG4gICAgcmV0dXJuIHRoaXMuZG9jLmdldF9jb250ZW50KHQscik7XG59XG5cbi8qKiBcbiAgICBTZXQgdGhlIFhNTCBjb250ZW50IG9mIHRoZSBlZGl0b3JcbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IHhtbF9kYXRhIC0gQW4gWE1MIHN0cmluZyBvZiB0aGUgY29udGVudCB0byBwbGFjZSBpbiB0aGUgZWRpdG9yXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZXRfY29udGVudCA9IGZ1bmN0aW9uKHhtbF9kYXRhKXtcbiAgICB0aGlzLnNldF9kb2MobmV3IEd1cHB5RG9jKHhtbF9kYXRhKSk7XG59XG5cbi8qKiBcbiAgICBTZXQgdGhlIGRvY3VtZW50IG9mIHRoZSBlZGl0b3JcbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtHdXBweURvY30gZG9jIC0gVGhlIEd1cHB5RG9jIHRoYXQgd2lsbCBiZSB0aGUgZWRpdG9yJ3Mgc291cmNlXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZXRfZG9jID0gZnVuY3Rpb24oZG9jKXtcbiAgICB0aGlzLmRvYyA9IGRvYztcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnVuZG9fZGF0YSA9IFtdO1xuICAgIHRoaXMudW5kb19ub3cgPSAtMTtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW1wb3J0X3RleHQgPSBmdW5jdGlvbih0ZXh0KXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdGhpcy5kb2MuaW1wb3J0X3RleHQodGV4dCwgdGhpcy5zeW1ib2xzKTtcbiAgICB0aGlzLnNldF9kb2ModGhpcy5kb2MpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmltcG9ydF9hc3QgPSBmdW5jdGlvbihhc3Qpe1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLmRvYy5pbXBvcnRfYXN0KGFzdCwgdGhpcy5zeW1ib2xzKTtcbiAgICB0aGlzLnNldF9kb2ModGhpcy5kb2MpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmZpcmVfZXZlbnQgPSBmdW5jdGlvbihldmVudCwgYXJncyl7XG4gICAgYXJncyA9IGFyZ3MgfHwge307XG4gICAgYXJncy50YXJnZXQgPSB0aGlzLnBhcmVudCB8fCB0aGlzO1xuICAgIGlmKHRoaXMuZXZlbnRzW2V2ZW50XSAmJiB0aGlzLnJlYWR5ICYmIEd1cHB5QmFja2VuZC5yZWFkeSkgdGhpcy5ldmVudHNbZXZlbnRdKGFyZ3MpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucmVtb3ZlX3N5bWJvbCA9IGZ1bmN0aW9uKG5hbWUpe1xuICAgIGlmKHRoaXMuc3ltYm9sc1tuYW1lXSkgZGVsZXRlIHRoaXMuc3ltYm9sc1tuYW1lXTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmFkZF9zeW1ib2xzID0gZnVuY3Rpb24obmFtZSwgc3ltKXtcbiAgICB2YXIgbmV3X3N5bXMgPSBHdXBweVN5bWJvbHMuYWRkX3N5bWJvbHMobmFtZSwgc3ltKTtcbiAgICBmb3IodmFyIHMgaW4gbmV3X3N5bXMpe1xuXHR0aGlzLnN5bWJvbHNbc10gPSBuZXdfc3ltc1tzXTtcbiAgICB9XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5hZGRfc3ltYm9sX2Z1bmMgPSBmdW5jdGlvbihuYW1lLCBncm91cCl7XG4gICAgdmFyIG5ld19zeW1zID0gR3VwcHlTeW1ib2xzLmFkZF9zeW1ib2xzKFwiX2Z1bmNcIiwgW3tcImdyb3VwXCI6Z3JvdXAsXCJzeW1ib2xzXCI6W25hbWVdfV0pO1xuICAgIGZvcih2YXIgcyBpbiBuZXdfc3ltcylcblx0dGhpcy5zeW1ib2xzW3NdID0gbmV3X3N5bXNbc107XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5hZGRfc3ltYm9sX3JhdyA9IGZ1bmN0aW9uKG5hbWUsIGxhdGV4LCB0ZXh0LCBncm91cCl7XG4gICAgdmFyIHMgPSB7fVxuICAgIHNbbmFtZV0gPSB7XCJsYXRleFwiOmxhdGV4LFwidGV4dFwiOnRleHR9XG4gICAgdmFyIG5ld19zeW1zID0gR3VwcHlTeW1ib2xzLmFkZF9zeW1ib2xzKFwiX3Jhd1wiLCBbe1wiZ3JvdXBcIjpncm91cCxcInN5bWJvbHNcIjpzfV0pO1xuICAgIGZvcih2YXIgcyBpbiBuZXdfc3ltcylcblx0dGhpcy5zeW1ib2xzW3NdID0gbmV3X3N5bXNbc107XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsZWN0X3RvID0gZnVuY3Rpb24obG9jLCBzZWxfY3Vyc29yLCBzZWxfY2FyZXQsIG1vdXNlKXtcbiAgICBpZihsb2MuY3VycmVudCA9PSBzZWxfY3Vyc29yICYmIGxvYy5jYXJldCA9PSBzZWxfY2FyZXQpe1xuXHR0aGlzLmN1cnJlbnQgPSBsb2MuY3VycmVudDtcblx0dGhpcy5jYXJldCA9IGxvYy5jYXJldDtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xuICAgIH1cbiAgICBlbHNlIGlmKGxvYy5wb3MgPT0gXCJsZWZ0XCIpe1xuXHR0aGlzLnNlbF9lbmQgPSB7XCJub2RlXCI6c2VsX2N1cnNvcixcImNhcmV0XCI6c2VsX2NhcmV0fTtcblx0dGhpcy5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XG5cdHRoaXMuY2FyZXQgPSBsb2MuY2FyZXQ7XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCwgbW91c2UpO1xuICAgIH1cbiAgICBlbHNlIGlmKGxvYy5wb3MgPT0gXCJyaWdodFwiKXtcblx0dGhpcy5zZWxfc3RhcnQgPSB7XCJub2RlXCI6c2VsX2N1cnNvcixcImNhcmV0XCI6c2VsX2NhcmV0fTtcblx0dGhpcy5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XG5cdHRoaXMuY2FyZXQgPSBsb2MuY2FyZXQ7XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQsIG1vdXNlKTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2V0X3NlbF9zdGFydCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfc3RhcnQgPSB7XCJub2RlXCI6dGhpcy5jdXJyZW50LCBcImNhcmV0XCI6dGhpcy5jYXJldH07XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2V0X3NlbF9lbmQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2VuZCA9IHtcIm5vZGVcIjp0aGlzLmN1cnJlbnQsIFwiY2FyZXRcIjp0aGlzLmNhcmV0fTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5hZGRfcGF0aHMgPSBmdW5jdGlvbihuLHBhdGgpe1xuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRuLnNldEF0dHJpYnV0ZShcInBhdGhcIixwYXRoKTtcbiAgICB9XG4gICAgZWxzZXtcblx0dmFyIGVzID0gMSwgZnMgPSAxLCBjcyA9IDEsIGxzID0gMTtcblx0Zm9yKHZhciBjID0gbi5maXJzdENoaWxkOyBjICE9IG51bGw7IGMgPSBjLm5leHRTaWJsaW5nKXtcblx0ICAgIGlmKGMubm9kZU5hbWUgPT0gXCJjXCIpeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoK1wiX2NcIitjcyk7IGNzKys7IH1cblx0ICAgIGVsc2UgaWYoYy5ub2RlTmFtZSA9PSBcImZcIil7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGgrXCJfZlwiK2ZzKTsgZnMrKzsgfVxuXHQgICAgZWxzZSBpZihjLm5vZGVOYW1lID09IFwibFwiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9sXCIrbHMpOyBscysrOyB9XG5cdCAgICBlbHNlIGlmKGMubm9kZU5hbWUgPT0gXCJlXCIpeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoK1wiX2VcIitlcyk7IGVzKys7IH1cblx0fVxuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5hZGRfY2xhc3Nlc19jdXJzb3JzID0gZnVuY3Rpb24obixwYXRoKXtcbiAgICBpZihuLm5vZGVOYW1lID09IFwiZVwiKXtcblx0dmFyIHRleHQgPSBuLmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHRhbnMgPSBcIlwiO1xuXHR2YXIgc2VsX2N1cnNvcjtcblx0dmFyIHRleHRfbm9kZSA9IEd1cHB5VXRpbHMuaXNfdGV4dChuKTtcblx0aWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSBzZWxfY3Vyc29yID0gdGhpcy5zZWxfZW5kO1xuXHRpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSBzZWxfY3Vyc29yID0gdGhpcy5zZWxfc3RhcnQ7XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHQgICAgdmFyIHNlbF9jYXJldF90ZXh0ID0gR3VwcHlVdGlscy5pc19zbWFsbChzZWxfY3Vyc29yLm5vZGUpID8gR3VwcHlVdGlscy5TTUFMTF9TRUxfQ0FSRVQgOiBHdXBweVV0aWxzLlNFTF9DQVJFVDtcblx0ICAgIGlmKCF0ZXh0X25vZGUgJiYgdGV4dC5sZW5ndGggPT0gMCAmJiBuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPiAxKXtcblx0XHRzZWxfY2FyZXRfdGV4dCA9IFwiXFxcXGJsdWV7XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzB9e1wiK3NlbF9jYXJldF90ZXh0K1wifX1cIjtcblx0ICAgIH1cblx0ICAgIGVsc2V7XG5cdFx0c2VsX2NhcmV0X3RleHQgPSBcIlxcXFxibHVle1wiK3NlbF9jYXJldF90ZXh0K1wifVwiO1xuXHQgICAgfVxuXHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCkgc2VsX2NhcmV0X3RleHQgPSB0ZXh0X25vZGUgPyBcIltcIiA6IHNlbF9jYXJldF90ZXh0ICsgXCJcXFxcXCIrR3VwcHlVdGlscy5TRUxfQ09MT1IrXCJ7XCI7XG5cdCAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpIHNlbF9jYXJldF90ZXh0ID0gdGV4dF9ub2RlID8gXCJdXCIgOiBcIn1cIiArIHNlbF9jYXJldF90ZXh0O1xuXHR9XG5cdHZhciBjYXJldF90ZXh0ID0gXCJcIjtcblx0dmFyIHRlbXBfY2FyZXRfdGV4dCA9IFwiXCI7XG5cdGlmKHRleHQubGVuZ3RoID09IDApe1xuXHQgICAgaWYodGV4dF9ub2RlKSBjYXJldF90ZXh0ID0gXCJcXFxcX1wiO1xuXHQgICAgZWxzZSBpZihuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPT0gMSl7XG5cdFx0aWYodGhpcy5jdXJyZW50ID09IG4pe1xuXHRcdCAgICB2YXIgYmxhbmtfY2FyZXQgPSB0aGlzLmJsYW5rX2NhcmV0IHx8IChHdXBweVV0aWxzLmlzX3NtYWxsKHRoaXMuY3VycmVudCkgPyBHdXBweVV0aWxzLlNNQUxMX0NBUkVUIDogR3VwcHlVdGlscy5DQVJFVCk7XG5cdFx0ICAgIGFucyA9IFwiXFxcXHJlZHtcXFxceG1sQ2xhc3N7bWFpbl9jdXJzb3IgZ3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtcIitibGFua19jYXJldCtcIn19XCI7XG5cdFx0fVxuXHRcdGVsc2UgaWYodGhpcy50ZW1wX2N1cnNvci5ub2RlID09IG4pXG5cdFx0ICAgIGFucyA9IFwiXFxcXGdyYXl7XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzBcIitcIn17Wz9dfX1cIjtcblx0XHRlbHNlXG5cdFx0ICAgIGFucyA9IFwiXFxcXGJsdWV7XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzBcIitcIn17Wz9dfX1cIjtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYodGhpcy50ZW1wX2N1cnNvci5ub2RlICE9IG4gJiYgdGhpcy5jdXJyZW50ICE9IG4gJiYgKCEoc2VsX2N1cnNvcikgfHwgc2VsX2N1cnNvci5ub2RlICE9IG4pKXtcblx0XHQvLyBUaGVzZSBhcmUgdGhlIGVtcHR5IGUgZWxlbWVudHMgYXQgZWl0aGVyIGVuZCBvZlxuXHRcdC8vIGEgYyBvciBtIG5vZGUsIHN1Y2ggYXMgdGhlIHNwYWNlIGJlZm9yZSBhbmRcblx0XHQvLyBhZnRlciBib3RoIHRoZSBzaW4gYW5kIHheMiBpbiBzaW4oeF4yKVxuXHRcdC8vXG5cdFx0Ly8gSGVyZSwgd2UgYWRkIGluIGEgc21hbGwgZWxlbWVudCBzbyB0aGF0IHdlIGNhblxuXHRcdC8vIHVzZSB0aGUgbW91c2UgdG8gc2VsZWN0IHRoZXNlIGFyZWFzXG5cdFx0YW5zID0gXCJcXFxccGhhbnRvbXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtcXFxcY3Vyc29yWzAuMWV4XXsxZXh9fX1cIjtcblx0ICAgIH1cblx0fVxuXHRmb3IodmFyIGkgPSAwOyBpIDwgdGV4dC5sZW5ndGgrMTsgaSsrKXtcblx0ICAgIGlmKG4gPT0gdGhpcy5jdXJyZW50ICYmIGkgPT0gdGhpcy5jYXJldCAmJiAodGV4dC5sZW5ndGggPiAwIHx8IG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA+IDEpKXtcblx0XHRpZih0ZXh0X25vZGUpe1xuXHRcdCAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpXG5cdFx0XHRjYXJldF90ZXh0ID0gXCJbXCI7XG5cdFx0ICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORClcblx0XHRcdGNhcmV0X3RleHQgPSBcIl1cIjtcblx0XHQgICAgZWxzZVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXFxcXF9cIjtcblx0XHR9XG5cdFx0ZWxzZXtcblx0XHQgICAgY2FyZXRfdGV4dCA9IEd1cHB5VXRpbHMuaXNfc21hbGwodGhpcy5jdXJyZW50KSA/IEd1cHB5VXRpbHMuU01BTExfQ0FSRVQgOiBHdXBweVV0aWxzLkNBUkVUO1xuXHRcdCAgICBpZih0ZXh0Lmxlbmd0aCA9PSAwKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXFxcXHJlZHtcXFxceG1sQ2xhc3N7bWFpbl9jdXJzb3IgZ3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMH17XCIrY2FyZXRfdGV4dCtcIn19XCI7XG5cdFx0ICAgIGVsc2V7XG5cdFx0XHRjYXJldF90ZXh0ID0gXCJcXFxccmVke1xcXFx4bWxDbGFzc3ttYWluX2N1cnNvcn17XCIrY2FyZXRfdGV4dCtcIn19XCJcblx0XHQgICAgfVxuXHRcdCAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpXG5cdFx0XHRjYXJldF90ZXh0ID0gY2FyZXRfdGV4dCArIFwiXFxcXFwiK0d1cHB5VXRpbHMuU0VMX0NPTE9SK1wie1wiO1xuXHRcdCAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpXG5cdFx0XHRjYXJldF90ZXh0ID0gXCJ9XCIgKyBjYXJldF90ZXh0O1xuXHRcdH1cblx0XHRhbnMgKz0gY2FyZXRfdGV4dDtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYobiA9PSB0aGlzLmN1cnJlbnQgJiYgaSA9PSB0aGlzLmNhcmV0ICYmIHRleHRfbm9kZSl7XG5cdFx0YW5zICs9IGNhcmV0X3RleHQ7XG5cdCAgICB9XG5cdCAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweUJhY2tlbmQuU0VMX05PTkUgJiYgc2VsX2N1cnNvci5ub2RlID09IG4gJiYgaSA9PSBzZWxfY3Vyc29yLmNhcmV0KXtcblx0XHRhbnMgKz0gc2VsX2NhcmV0X3RleHQ7XG5cdCAgICB9XG5cdCAgICBlbHNlIGlmKHRoaXMudGVtcF9jdXJzb3Iubm9kZSA9PSBuICYmIGkgPT0gdGhpcy50ZW1wX2N1cnNvci5jYXJldCAmJiAodGV4dC5sZW5ndGggPiAwIHx8IG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA+IDEpKXtcblx0XHRpZih0ZXh0X25vZGUpIFxuXHRcdCAgICB0ZW1wX2NhcmV0X3RleHQgPSBcIi5cIjtcblx0XHRlbHNle1xuXHRcdCAgICB0ZW1wX2NhcmV0X3RleHQgPSBHdXBweVV0aWxzLmlzX3NtYWxsKHRoaXMuY3VycmVudCkgPyBHdXBweVV0aWxzLlRFTVBfU01BTExfQ0FSRVQgOiBHdXBweVV0aWxzLlRFTVBfQ0FSRVQ7XG5cdFx0ICAgIGlmKHRleHQubGVuZ3RoID09IDApe1xuXHRcdFx0dGVtcF9jYXJldF90ZXh0ID0gXCJcXFxcZ3JheXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMH17XCIrdGVtcF9jYXJldF90ZXh0K1wifX1cIjtcblx0XHQgICAgfVxuXHRcdCAgICBlbHNlXG5cdFx0XHR0ZW1wX2NhcmV0X3RleHQgPSBcIlxcXFxncmF5e1wiK3RlbXBfY2FyZXRfdGV4dCtcIn1cIjtcblx0XHR9XG5cdFx0YW5zICs9IHRlbXBfY2FyZXRfdGV4dDtcblx0ICAgIH1cblx0ICAgIGlmKGkgPCB0ZXh0Lmxlbmd0aCkgYW5zICs9IFwiXFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiX1wiK2krXCJ9e1wiK3RleHRbaV0rXCJ9XCI7XG5cdH1cblx0aWYodGV4dF9ub2RlICYmIG4gPT0gdGhpcy5jdXJyZW50KXtcblx0ICAgIGFucyA9IFwiXFxcXHhtbENsYXNze2d1cHB5X3RleHRfY3VycmVudH17e1wiK2FucytcIn19XCI7XG5cdH1cblx0bi5zZXRBdHRyaWJ1dGUoXCJyZW5kZXJcIiwgYW5zKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJwYXRoXCIpO1xuICAgIH1cbiAgICBlbHNle1xuXHRmb3IodmFyIGMgPSBuLmZpcnN0Q2hpbGQ7IGMgIT0gbnVsbDsgYyA9IGMubmV4dFNpYmxpbmcpe1xuXHQgICAgaWYoYy5ub2RlTmFtZSA9PSBcImNcIiB8fCBjLm5vZGVOYW1lID09IFwibFwiIHx8IGMubm9kZU5hbWUgPT0gXCJmXCIgfHwgYy5ub2RlTmFtZSA9PSBcImVcIil7IHRoaXMuYWRkX2NsYXNzZXNfY3Vyc29ycyhjKTsgfVxuXHR9XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJlbW92ZV9jdXJzb3JzX2NsYXNzZXMgPSBmdW5jdGlvbihuKXtcbiAgICBpZihuLm5vZGVOYW1lID09IFwiZVwiKXtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJwYXRoXCIpO1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcInJlbmRlclwiKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJjdXJyZW50XCIpO1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcInRlbXBcIik7XG4gICAgfVxuICAgIGVsc2V7XG5cdGZvcih2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZyl7XG5cdCAgICBpZihjLm5vZGVUeXBlID09IDEpeyB0aGlzLnJlbW92ZV9jdXJzb3JzX2NsYXNzZXMoYyk7IH1cblx0fVxuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kb3duX2Zyb21fZiA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIG5uID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUobm4gIT0gbnVsbCAmJiBubi5ub2RlTmFtZSAhPSAnYycgJiYgbm4ubm9kZU5hbWUgIT0gJ2wnKSBubiA9IG5uLm5leHRTaWJsaW5nO1xuICAgIGlmKG5uICE9IG51bGwpe1xuXHR3aGlsZShubi5ub2RlTmFtZSA9PSAnbCcpIG5uID0gbm4uZmlyc3RDaGlsZDtcblx0dGhpcy5jdXJyZW50ID0gbm4uZmlyc3RDaGlsZDtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZG93bl9mcm9tX2ZfdG9fYmxhbmsgPSBmdW5jdGlvbigpe1xuICAgIHZhciBubiA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkO1xuICAgIHdoaWxlKG5uICE9IG51bGwgJiYgIShubi5ub2RlTmFtZSA9PSAnYycgJiYgbm4uY2hpbGRyZW4ubGVuZ3RoID09IDEgJiYgbm4uZmlyc3RDaGlsZC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9PSBcIlwiKSl7XG5cdG5uID0gbm4ubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIGlmKG5uICE9IG51bGwpe1xuXHQvL1Nhbml0eSBjaGVjazpcblx0XG5cdHdoaWxlKG5uLm5vZGVOYW1lID09ICdsJykgbm4gPSBubi5maXJzdENoaWxkO1xuXHRpZihubi5ub2RlTmFtZSAhPSAnYycgfHwgbm4uZmlyc3RDaGlsZC5ub2RlTmFtZSAhPSAnZScpe1xuXHQgICAgdGhpcy5wcm9ibGVtKCdkZmZ0YicpO1xuXHQgICAgcmV0dXJuO1xuXHR9XG5cdHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5kb3duX2Zyb21fZigpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2YgPSBmdW5jdGlvbih0b19pbnNlcnQpe1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHZhciBwID0gbi5wYXJlbnROb2RlO1xuICAgIHZhciBwcmV2ID0gbi5wcmV2aW91c1NpYmxpbmc7XG4gICAgdmFyIG5leHQgPSBuLm5leHRTaWJsaW5nO1xuICAgIHZhciBtaWRkbGUgPSB0b19pbnNlcnQgfHwgXCJcIjtcbiAgICB2YXIgbmV3X25vZGUgPSB0aGlzLm1ha2VfZShwcmV2LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgKyBtaWRkbGUgKyBuZXh0LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQpO1xuICAgIHRoaXMuY3VycmVudCA9IG5ld19ub2RlO1xuICAgIHRoaXMuY2FyZXQgPSBwcmV2LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgIHAuaW5zZXJ0QmVmb3JlKG5ld19ub2RlLCBwcmV2KTtcbiAgICBwLnJlbW92ZUNoaWxkKHByZXYpO1xuICAgIHAucmVtb3ZlQ2hpbGQobik7XG4gICAgcC5yZW1vdmVDaGlsZChuZXh0KTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zeW1ib2xfdG9fbm9kZSA9IGZ1bmN0aW9uKHN5bV9uYW1lLCBjb250ZW50KXtcbiAgICByZXR1cm4gR3VwcHlTeW1ib2xzLnN5bWJvbF90b19ub2RlKHRoaXMuc3ltYm9sc1tzeW1fbmFtZV0sIGNvbnRlbnQsIHRoaXMuZG9jLmJhc2UpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X3N5bWJvbCA9IGZ1bmN0aW9uKHN5bV9uYW1lKXtcbiAgICB2YXIgcyA9IHRoaXMuc3ltYm9sc1tzeW1fbmFtZV07XG4gICAgaWYocy5hdHRycyAmJiB0aGlzLmlzX2JsYWNrbGlzdGVkKHMuYXR0cnMudHlwZSkpe1xuXHRyZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBub2RlX2xpc3QgPSB7fTtcbiAgICB2YXIgY29udGVudCA9IHt9O1xuICAgIHZhciBsZWZ0X3BpZWNlLHJpZ2h0X3BpZWNlO1xuICAgIHZhciBjdXIgPSAocy5jdXJyZW50KSA/IHMuY3VycmVudC5pbmRleCB8fCAwIDogMDtcbiAgICB2YXIgdG9fcmVtb3ZlID0gW107XG4gICAgdmFyIHRvX3JlcGxhY2UgPSBudWxsO1xuICAgIHZhciByZXBsYWNlX2YgPSBmYWxzZTtcbiAgICBcbiAgICBpZihjdXIgPiAwKXtcblx0Y3VyLS07XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHQgICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuXHQgICAgc2VsX3BhcmVudCA9IHNlbC5pbnZvbHZlZFswXS5wYXJlbnROb2RlO1xuXHQgICAgdG9fcmVtb3ZlID0gc2VsLmludm9sdmVkO1xuXHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHNlbC5yZW1uYW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2Uoc2VsLnJlbW5hbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UodGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIGNvbnRlbnRbY3VyXSA9IHNlbC5ub2RlX2xpc3Q7XG5cdH1cblx0ZWxzZSBpZihzLmN1cnJlbnQgJiYgcy5jdXJyZW50LnR5cGUgPT0gJ3Rva2VuJyl7XG5cdCAgICAvLyBJZiB3ZSdyZSBhdCB0aGUgYmVnaW5uaW5nLCB0aGVuIHRoZSB0b2tlbiBpcyB0aGUgcHJldmlvdXMgZiBub2RlXG5cdCAgICBpZih0aGlzLmNhcmV0ID09IDAgJiYgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0XHRjb250ZW50W2N1cl0gPSBbdGhpcy5tYWtlX2UoXCJcIiksIHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcsIHRoaXMubWFrZV9lKFwiXCIpXTtcblx0XHR0b19yZXBsYWNlID0gdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZztcblx0XHRyZXBsYWNlX2YgPSB0cnVlO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHQvLyBsb29rIGZvciBbMC05Ll0rfFthLXpBLVpdIGltbWVkaWF0ZWx5IHByZWNlZWRpbmcgdGhlIGNhcmV0IGFuZCB1c2UgdGhhdCBhcyB0b2tlblxuXHRcdHZhciBwcmV2ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLHRoaXMuY2FyZXQpO1xuXHRcdHZhciB0b2tlbiA9IHByZXYubWF0Y2goL1swLTkuXSskfFthLXpBLVpdJC8pO1xuXHRcdGlmKHRva2VuICE9IG51bGwgJiYgdG9rZW4ubGVuZ3RoID4gMCl7XG5cdFx0ICAgIHRva2VuID0gdG9rZW5bMF07XG5cdFx0ICAgIGxlZnRfcGllY2UgPSB0aGlzLm1ha2VfZSh0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCx0aGlzLmNhcmV0LXRva2VuLmxlbmd0aCkpO1xuXHRcdCAgICByaWdodF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSh0aGlzLmNhcmV0KSk7XG5cdFx0ICAgIGNvbnRlbnRbY3VyXSA9IFt0aGlzLm1ha2VfZSh0b2tlbildO1xuXHRcdH1cblx0ICAgIH1cblx0fVxuICAgIH1cbiAgICBpZighcmVwbGFjZV9mICYmIChsZWZ0X3BpZWNlID09IG51bGwgfHwgcmlnaHRfcGllY2UgPT0gbnVsbCkpe1xuXHRsZWZ0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5jYXJldCkpO1xuXHRyaWdodF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSh0aGlzLmNhcmV0KSk7XG5cdHRvX3JlbW92ZSA9IFt0aGlzLmN1cnJlbnRdO1xuICAgIH1cblxuICAgIC8vIEJ5IG5vdzpcbiAgICAvLyBcbiAgICAvLyBjb250ZW50IGNvbnRhaW5zIHdoYXRldmVyIHdlIHdhbnQgdG8gcHJlLXBvcHVsYXRlIHRoZSAnY3VycmVudCcgZmllbGQgd2l0aCAoaWYgYW55KVxuICAgIC8vXG4gICAgLy8gcmlnaHRfcGllY2UgY29udGFpbnMgd2hhdGV2ZXIgY29udGVudCB3YXMgaW4gYW4gaW52b2x2ZWQgbm9kZVxuICAgIC8vIHRvIHRoZSByaWdodCBvZiB0aGUgY3Vyc29yIGJ1dCBpcyBub3QgcGFydCBvZiB0aGUgaW5zZXJ0aW9uLlxuICAgIC8vIEFuYWxvZ291c2x5IGZvciBsZWZ0X3BpZWNlXG4gICAgLy9cbiAgICAvLyBUaHVzIGFsbCB3ZSBzaG91bGQgaGF2ZSB0byBkbyBub3cgaXMgc3ltYm9sX3RvX25vZGUoc3ltX3R5cGUsXG4gICAgLy8gY29udGVudCkgYW5kIHRoZW4gYWRkIHRoZSBsZWZ0X3BpZWNlLCByZXN1bHRpbmcgbm9kZSwgYW5kXG4gICAgLy8gcmlnaHRfcGllY2UgaW4gdGhhdCBvcmRlci5cbiAgICBcbiAgICB2YXIgbmV3X2N1cnJlbnQgPSBudWxsO1xuICAgIHZhciBjdXJyZW50X3BhcmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlO1xuICAgIFxuICAgIHZhciBzeW0gPSB0aGlzLnN5bWJvbF90b19ub2RlKHN5bV9uYW1lLGNvbnRlbnQpO1xuICAgIHZhciBmID0gc3ltLmY7XG4gICAgdmFyIG5ld19jdXJyZW50ID0gc3ltLmZpcnN0O1xuXG4gICAgdmFyIG5leHQgPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XG5cbiAgICBpZihyZXBsYWNlX2Ype1xuXHRjdXJyZW50X3BhcmVudC5yZXBsYWNlQ2hpbGQoZix0b19yZXBsYWNlKTtcbiAgICB9XG4gICAgZWxzZXtcblx0aWYodG9fcmVtb3ZlLmxlbmd0aCA9PSAwKSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmN1cnJlbnQpO1xuXHRcblx0Zm9yKHZhciBpID0gMDsgaSA8IHRvX3JlbW92ZS5sZW5ndGg7IGkrKyl7XG5cdCAgICBpZihuZXh0ID09IHRvX3JlbW92ZVtpXSkgbmV4dCA9IG5leHQubmV4dFNpYmxpbmc7XG5cdCAgICBjdXJyZW50X3BhcmVudC5yZW1vdmVDaGlsZCh0b19yZW1vdmVbaV0pO1xuXHR9XG5cdGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShsZWZ0X3BpZWNlLCBuZXh0KTtcblx0Y3VycmVudF9wYXJlbnQuaW5zZXJ0QmVmb3JlKGYsIG5leHQpO1xuXHRjdXJyZW50X3BhcmVudC5pbnNlcnRCZWZvcmUocmlnaHRfcGllY2UsIG5leHQpO1xuICAgIH1cbiAgICBcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLmN1cnJlbnQgPSBmO1xuICAgIGlmKHMuYXR0cnNbJ2NoYXInXSA9PSBcInllc1wiIHx8IChzLmN1cnJlbnQgJiYgcy5hdHRycyAmJiBzLmN1cnJlbnQuaW5kZXggPj0gcy5hcmdzLmxlbmd0aCkpe1xuXHR0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIGVsc2V7XG5cdHRoaXMuZG93bl9mcm9tX2ZfdG9fYmxhbmsoKTtcblx0dGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLnRleHRDb250ZW50Lmxlbmd0aDtcbiAgICB9XG5cbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIHJldHVybiB0cnVlO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9nZXQgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHRyZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFyIGludm9sdmVkID0gW107XG4gICAgdmFyIG5vZGVfbGlzdCA9IFtdO1xuICAgIHZhciByZW1uYW50ID0gbnVsbDtcblxuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUpe1xuXHRyZXR1cm4ge1wibm9kZV9saXN0XCI6W3RoaXMubWFrZV9lKHRoaXMuc2VsX3N0YXJ0Lm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX3N0YXJ0LmNhcmV0LCB0aGlzLnNlbF9lbmQuY2FyZXQpKV0sXG5cdFx0XCJyZW1uYW50XCI6dGhpcy5tYWtlX2UodGhpcy5zZWxfc3RhcnQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfc3RhcnQuY2FyZXQpICsgdGhpcy5zZWxfZW5kLm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX2VuZC5jYXJldCkpLFxuXHRcdFwiaW52b2x2ZWRcIjpbdGhpcy5zZWxfc3RhcnQubm9kZV19O1xuICAgIH1cbiAgICBcbiAgICBub2RlX2xpc3QucHVzaCh0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLnNlbF9zdGFydC5jYXJldCkpKTtcbiAgICBpbnZvbHZlZC5wdXNoKHRoaXMuc2VsX3N0YXJ0Lm5vZGUpO1xuICAgIGludm9sdmVkLnB1c2godGhpcy5zZWxfZW5kLm5vZGUpO1xuICAgIHJlbW5hbnQgPSB0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLCB0aGlzLnNlbF9zdGFydC5jYXJldCkgKyB0aGlzLnNlbF9lbmQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5zZWxfZW5kLmNhcmV0KSk7XG4gICAgdmFyIG4gPSB0aGlzLnNlbF9zdGFydC5ub2RlLm5leHRTaWJsaW5nO1xuICAgIHdoaWxlKG4gIT0gbnVsbCAmJiBuICE9IHRoaXMuc2VsX2VuZC5ub2RlKXtcblx0aW52b2x2ZWQucHVzaChuKTtcblx0bm9kZV9saXN0LnB1c2gobik7XG5cdG4gPSBuLm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICBub2RlX2xpc3QucHVzaCh0aGlzLm1ha2VfZSh0aGlzLnNlbF9lbmQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfZW5kLmNhcmV0KSkpO1xuICAgIHJldHVybiB7XCJub2RlX2xpc3RcIjpub2RlX2xpc3QsXG5cdCAgICBcInJlbW5hbnRcIjpyZW1uYW50LFxuXHQgICAgXCJpbnZvbHZlZFwiOmludm9sdmVkLFxuXHQgICAgXCJjdXJzb3JcIjowfTtcbn1cblxuLy8gR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5wcmludF9zZWxlY3Rpb24gPSBmdW5jdGlvbigpe1xuLy8gICAgIHZhciBzZWwgPSB0aGlzLnNlbF9nZXQoKTtcbi8vICAgICBpZihzZWwgPT0gbnVsbCkgcmV0dXJuIFwiW25vbmVdXCI7XG4vLyAgICAgdmFyIGFucyA9IFwiXCI7XG4vLyAgICAgYW5zICs9IFwibm9kZV9saXN0OiBcXG5cIjtcbi8vICAgICBmb3IodmFyIGkgPSAwOyBpIDwgc2VsLm5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG4vLyBcdHZhciBuID0gc2VsLm5vZGVfbGlzdFtpXTtcbi8vIFx0YW5zICs9IChuZXcgWE1MU2VyaWFsaXplcigpKS5zZXJpYWxpemVUb1N0cmluZyhuKSArIFwiXFxuXCI7XG4vLyAgICAgfVxuLy8gICAgIGFucyArPSBcIlxcbmludm9sdmVkOiBcXG5cIjtcbi8vICAgICBmb3IodmFyIGkgPSAwOyBpIDwgc2VsLmludm9sdmVkLmxlbmd0aDsgaSsrKXtcbi8vIFx0dmFyIG4gPSBzZWwuaW52b2x2ZWRbaV07XG4vLyBcdGFucyArPSAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcobikgKyBcIlxcblwiO1xuLy8gICAgIH1cbi8vIH1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5tYWtlX2UgPSBmdW5jdGlvbih0ZXh0KXtcbiAgICB2YXIgYmFzZSA9IHRoaXMuZG9jLmJhc2U7XG4gICAgdmFyIG5ld19ub2RlID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiZVwiKTtcbiAgICBuZXdfbm9kZS5hcHBlbmRDaGlsZChiYXNlLmNyZWF0ZVRleHROb2RlKHRleHQpKTtcbiAgICByZXR1cm4gbmV3X25vZGU7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5pbnNlcnRfc3RyaW5nID0gZnVuY3Rpb24ocyl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9jbGVhcigpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlKHRoaXMuY2FyZXQscylcbiAgICB0aGlzLmNhcmV0ICs9IHMubGVuZ3RoO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIGlmKHRoaXMuYXV0b3JlcGxhY2UpIHRoaXMuY2hlY2tfZm9yX3N5bWJvbCgpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2NvcHkgPSBmdW5jdGlvbigpe1xuICAgIHZhciBzZWwgPSB0aGlzLnNlbF9nZXQoKTtcbiAgICBpZighc2VsKSByZXR1cm47XG4gICAgR3VwcHlCYWNrZW5kLmNsaXBib2FyZCA9IFtdO1xuICAgIHZhciBjbGlwX3RleHQgPSBcIlwiO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWwubm9kZV9saXN0Lmxlbmd0aDsgaSsrKXtcblx0dmFyIG5vZGUgPSBzZWwubm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKTtcblx0R3VwcHlCYWNrZW5kLmNsaXBib2FyZC5wdXNoKG5vZGUpO1xuXHRpZih0aGlzLmNsaXB0eXBlKSBjbGlwX3RleHQgKz0gdGhpcy5kb2MubWFudWFsX3JlbmRlcih0aGlzLmNsaXB0eXBlLCBub2RlKTtcbiAgICB9XG4gICAgaWYodGhpcy5jbGlwdHlwZSkgdGhpcy5zeXN0ZW1fY29weShjbGlwX3RleHQpO1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc3lzdGVtX2NvcHkgPSBmdW5jdGlvbih0ZXh0KSB7XG4gICAgaWYgKHdpbmRvdy5jbGlwYm9hcmREYXRhICYmIHdpbmRvdy5jbGlwYm9hcmREYXRhLnNldERhdGEpXG4gICAgICAgIHJldHVybiBjbGlwYm9hcmREYXRhLnNldERhdGEoXCJUZXh0XCIsIHRleHQpO1xuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN1cHBvcnRlZCAmJiBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdXBwb3J0ZWQoXCJjb3B5XCIpKSB7XG4gICAgICAgIHZhciB0ZXh0YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgICAgICAgdGV4dGFyZWEudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICB0ZXh0YXJlYS5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcblx0dGV4dGFyZWEuc3R5bGUuYmFja2dyb3VuZCA9IFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXh0YXJlYSk7XG4gICAgICAgIHRleHRhcmVhLnNlbGVjdCgpO1xuICAgICAgICB0cnkgeyByZXR1cm4gZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpOyB9XG5cdGNhdGNoIChleCkgeyByZXR1cm4gZmFsc2U7IH1cbiAgICAgICAgZmluYWxseSB7IGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGV4dGFyZWEpOyB9XG4gICAgfVxufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2N1dCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIG5vZGVfbGlzdCA9IHRoaXMuc2VsX2RlbGV0ZSgpO1xuICAgIGlmKCFub2RlX2xpc3QpIHJldHVybjtcbiAgICBHdXBweUJhY2tlbmQuY2xpcGJvYXJkID0gW107XG4gICAgdmFyIGNsaXBfdGV4dCA9IFwiXCI7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IG5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG5cdHZhciBub2RlID0gbm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKTtcblx0R3VwcHlCYWNrZW5kLmNsaXBib2FyZC5wdXNoKG5vZGUpO1xuXHRpZih0aGlzLmNsaXB0eXBlKSBjbGlwX3RleHQgKz0gdGhpcy5kb2MubWFudWFsX3JlbmRlcih0aGlzLmNsaXB0eXBlLCBub2RlKTtcbiAgICB9XG4gICAgaWYodGhpcy5jbGlwdHlwZSkgdGhpcy5zeXN0ZW1fY29weShjbGlwX3RleHQpO1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X25vZGVzID0gZnVuY3Rpb24obm9kZV9saXN0LCBtb3ZlX2N1cnNvcil7XG4gICAgdmFyIHJlYWxfY2xpcGJvYXJkID0gW107XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IG5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG5cdHJlYWxfY2xpcGJvYXJkLnB1c2gobm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuXG4gICAgaWYocmVhbF9jbGlwYm9hcmQubGVuZ3RoID09IDEpe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCkgKyByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCk7XG5cdGlmKG1vdmVfY3Vyc29yKSB0aGlzLmNhcmV0ICs9IHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZXtcblx0dmFyIG5uID0gdGhpcy5tYWtlX2UocmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlICsgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLmNhcmV0KSk7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCx0aGlzLmNhcmV0KSArIHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5uKVxuXHRlbHNlXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4sIHRoaXMuY3VycmVudC5uZXh0U2libGluZylcblx0Zm9yKHZhciBpID0gMTsgaSA8IHJlYWxfY2xpcGJvYXJkLmxlbmd0aCAtIDE7IGkrKylcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShyZWFsX2NsaXBib2FyZFtpXSwgbm4pO1xuXHRpZihtb3ZlX2N1cnNvcil7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubjtcblx0ICAgIHRoaXMuY2FyZXQgPSByZWFsX2NsaXBib2FyZFtyZWFsX2NsaXBib2FyZC5sZW5ndGgtMV0uZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoXG5cdH1cbiAgICB9XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfcGFzdGUgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2RlbGV0ZSgpO1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYoIShHdXBweUJhY2tlbmQuY2xpcGJvYXJkKSB8fCBHdXBweUJhY2tlbmQuY2xpcGJvYXJkLmxlbmd0aCA9PSAwKSByZXR1cm47XG4gICAgdGhpcy5pbnNlcnRfbm9kZXMoR3VwcHlCYWNrZW5kLmNsaXBib2FyZCwgdHJ1ZSk7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgcmV0dXJuO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2NsZWFyID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7ICAgIFxuICAgIHRoaXMuc2VsX2VuZCA9IG51bGw7XG4gICAgdGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2RlbGV0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuICAgIGlmKCFzZWwpIHJldHVybiBudWxsO1xuICAgIHNlbF9wYXJlbnQgPSBzZWwuaW52b2x2ZWRbMF0ucGFyZW50Tm9kZTtcbiAgICBzZWxfcHJldiA9IHNlbC5pbnZvbHZlZFswXS5wcmV2aW91c1NpYmxpbmc7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5pbnZvbHZlZC5sZW5ndGg7IGkrKyl7XG5cdHZhciBuID0gc2VsLmludm9sdmVkW2ldO1xuXHRzZWxfcGFyZW50LnJlbW92ZUNoaWxkKG4pO1xuICAgIH1cbiAgICBpZihzZWxfcHJldiA9PSBudWxsKXtcblx0aWYoc2VsX3BhcmVudC5maXJzdENoaWxkID09IG51bGwpXG5cdCAgICBzZWxfcGFyZW50LmFwcGVuZENoaWxkKHNlbC5yZW1uYW50KTtcblx0ZWxzZVxuXHQgICAgc2VsX3BhcmVudC5pbnNlcnRCZWZvcmUoc2VsLnJlbW5hbnQsIHNlbF9wYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIGVsc2UgaWYoc2VsX3ByZXYubm9kZU5hbWUgPT0gJ2YnKXtcblx0aWYoc2VsX3ByZXYubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHNlbF9wYXJlbnQuYXBwZW5kQ2hpbGQoc2VsLnJlbW5hbnQpO1xuXHRlbHNlXG5cdCAgICBzZWxfcGFyZW50Lmluc2VydEJlZm9yZShzZWwucmVtbmFudCwgc2VsX3ByZXYubmV4dFNpYmxpbmcpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSBzZWwucmVtbmFudFxuICAgIHRoaXMuY2FyZXQgPSB0aGlzLnNlbF9zdGFydC5jYXJldDtcbiAgICByZXR1cm4gc2VsLm5vZGVfbGlzdDtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9hbGwgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuaG9tZSgpO1xuICAgIHRoaXMuc2V0X3NlbF9zdGFydCgpO1xuICAgIHRoaXMuZW5kKCk7XG4gICAgdGhpcy5zZXRfc2VsX2VuZCgpO1xuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgIT0gdGhpcy5zZWxfZW5kLm5vZGUgfHwgdGhpcy5zZWxfc3RhcnQuY2FyZXQgIT0gdGhpcy5zZWxfZW5kLmNhcmV0KVxuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQ7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfcmlnaHQgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHR0aGlzLnNldF9zZWxfc3RhcnQoKTtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EO1xuICAgIH1cbiAgICBpZih0aGlzLmNhcmV0ID49IEd1cHB5VXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpKXtcblx0dmFyIG5uID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uLm5leHRTaWJsaW5nO1xuXHQgICAgdGhpcy5jYXJldCA9IDA7XG5cdCAgICB0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKTtcblx0fVxuXHRlbHNle1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCk7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCArPSAxO1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKTtcbiAgICB9XG4gICAgaWYodGhpcy5zZWxfc3RhcnQubm9kZSA9PSB0aGlzLnNlbF9lbmQubm9kZSAmJiB0aGlzLnNlbF9zdGFydC5jYXJldCA9PSB0aGlzLnNlbF9lbmQuY2FyZXQpe1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNldF9zZWxfYm91bmRhcnkgPSBmdW5jdGlvbihzc3RhdHVzLCBtb3VzZSl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfTk9ORSB8fCBtb3VzZSkgdGhpcy5zZWxfc3RhdHVzID0gc3N0YXR1cztcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpXG5cdHRoaXMuc2V0X3NlbF9zdGFydCgpO1xuICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORClcblx0dGhpcy5zZXRfc2VsX2VuZCgpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2xlZnQgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHR0aGlzLnNldF9zZWxfZW5kKCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUO1xuICAgIH1cbiAgICBpZih0aGlzLmNhcmV0IDw9IDApe1xuXHR2YXIgbm4gPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uLnByZXZpb3VzU2libGluZztcblx0ICAgIHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKTtcblx0fVxuXHRlbHNle1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0IC09IDE7XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG4gICAgfVxuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUgJiYgdGhpcy5zZWxfc3RhcnQuY2FyZXQgPT0gdGhpcy5zZWxfZW5kLmNhcmV0KXtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X3JpZ2h0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwicmlnaHRcIiwgdHJ1ZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X2xlZnQgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJsZWZ0XCIsIHRydWUpO31cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfcmlnaHQgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJyaWdodFwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9sZWZ0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwibGVmdFwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF91cCA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcInVwXCIsIGZhbHNlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2Rvd24gPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJkb3duXCIsIGZhbHNlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2NvcHlfdXAgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJ1cFwiLCB0cnVlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2NvcHlfZG93biA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcImRvd25cIiwgdHJ1ZSk7fVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF92ZXJ0aWNhbF9tb3ZlID0gZnVuY3Rpb24oZG93bil7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgd2hpbGUobi5wYXJlbnROb2RlICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSAnYycgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJyAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKXtcblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgaWYoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgIHZhciBwb3MgPSAxO1xuICAgIHZhciBjYyA9IG47XG4gICAgd2hpbGUoY2MucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHRwb3MrKztcblx0Y2MgPSBjYy5wcmV2aW91c1NpYmxpbmc7XG4gICAgfVxuICAgIHZhciBuZXdfbCA9IGRvd24gPyBuLnBhcmVudE5vZGUubmV4dFNpYmxpbmcgOiBuLnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nXG4gICAgaWYoIW5ld19sKSByZXR1cm47XG4gICAgdmFyIGlkeCA9IDE7XG4gICAgdmFyIG5uID0gbmV3X2wuZmlyc3RDaGlsZDtcbiAgICB3aGlsZShpZHggPCBwb3Mpe1xuXHRpZHgrKztcblx0bm4gPSBubi5uZXh0U2libGluZztcbiAgICB9XG4gICAgdGhpcy5jdXJyZW50ID0gbm4uZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gZG93biA/IDAgOiB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZCA9IGZ1bmN0aW9uKGRpcmVjdGlvbiwgY29weSl7XG4gICAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xuICAgIHZhciB2ZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PSBcInVwXCIgfHwgZGlyZWN0aW9uID09IFwiZG93blwiO1xuICAgIHZhciBiZWZvcmUgPSBkaXJlY3Rpb24gPT0gXCJ1cFwiIHx8IGRpcmVjdGlvbiA9PSBcImxlZnRcIjtcbiAgICB2YXIgdGhpc19uYW1lID0gdmVydGljYWwgPyBcImxcIiA6IFwiY1wiO1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHdoaWxlKG4ucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gdGhpc19uYW1lICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKXtcblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgaWYoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgIHZhciB0b19pbnNlcnQ7XG4gICAgXG4gICAgLy8gY2hlY2sgaWYgMkQgYW5kIGhvcml6b250YWwgYW5kIGV4dGVuZCBhbGwgdGhlIG90aGVyIHJvd3MgaWYgc28gXG4gICAgaWYoIXZlcnRpY2FsICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlLm5vZGVOYW1lID09IFwibFwiKXtcblx0dG9faW5zZXJ0ID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0dG9faW5zZXJ0LmFwcGVuZENoaWxkKHRoaXMubWFrZV9lKFwiXCIpKTtcblx0dmFyIHBvcyA9IDE7XG5cdHZhciBjYyA9IG47XG5cdHdoaWxlKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0ICAgIHBvcysrO1xuXHQgICAgY2MgPSBjYy5wcmV2aW91c1NpYmxpbmc7XG5cdH1cblx0dmFyIHRvX21vZGlmeSA9IFtdO1xuXHR2YXIgaXRlcmF0b3IgPSB0aGlzLmRvYy54cGF0aF9saXN0KFwiLi9sL2NbcG9zaXRpb24oKT1cIitwb3MrXCJdXCIsIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlKTtcblx0dHJ5eyBmb3IodmFyIG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKTsgbm4gIT0gbnVsbDsgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpKXsgdG9fbW9kaWZ5LnB1c2gobm4pOyB9fVxuXHRjYXRjaChlKSB7IHRoaXMuZmlyZV9ldmVudChcImVycm9yXCIse1wibWVzc2FnZVwiOidYTUwgbW9kaWZpZWQgZHVyaW5nIGl0ZXJhdGlvbj8gJyArIGV9KTsgfVxuXHRmb3IodmFyIGogPSAwOyBqIDwgdG9fbW9kaWZ5Lmxlbmd0aDsgaisrKXtcblx0ICAgIHZhciBubiA9IHRvX21vZGlmeVtqXTtcblx0ICAgIGlmKGNvcHkpIG5uLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5uLmNsb25lTm9kZSh0cnVlKSwgYmVmb3JlID8gbm4gOiBubi5uZXh0U2libGluZyk7XG5cdCAgICBlbHNlIG5uLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRvX2luc2VydC5jbG9uZU5vZGUodHJ1ZSksIGJlZm9yZSA/IG5uIDogbm4ubmV4dFNpYmxpbmcpO1xuXHQgICAgbm4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoXCJzXCIscGFyc2VJbnQobm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKSsxKTtcblx0fVxuXHR0aGlzLmN1cnJlbnQgPSBiZWZvcmUgPyBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQgOiBuLm5leHRTaWJsaW5nLmZpcnN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuXHRyZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmKGNvcHkpe1xuXHR0b19pbnNlcnQgPSBuLmNsb25lTm9kZSh0cnVlKTtcbiAgICB9XG4gICAgZWxzZXtcblx0aWYodmVydGljYWwpe1xuXHQgICAgdG9faW5zZXJ0ID0gYmFzZS5jcmVhdGVFbGVtZW50KFwibFwiKTtcblx0ICAgIHRvX2luc2VydC5zZXRBdHRyaWJ1dGUoXCJzXCIsbi5nZXRBdHRyaWJ1dGUoXCJzXCIpKVxuXHQgICAgZm9yKHZhciBpID0gMDsgaSA8IHBhcnNlSW50KG4uZ2V0QXR0cmlidXRlKFwic1wiKSk7IGkrKyl7XG5cdFx0dmFyIGMgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJjXCIpO1xuXHRcdGMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHRcdHRvX2luc2VydC5hcHBlbmRDaGlsZChjKTtcblx0ICAgIH1cblx0fVxuXHRlbHNle1xuXHQgICAgdG9faW5zZXJ0ID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0ICAgIHRvX2luc2VydC5hcHBlbmRDaGlsZCh0aGlzLm1ha2VfZShcIlwiKSk7XG5cdH1cbiAgICB9XG4gICAgbi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInNcIixwYXJzZUludChuLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwic1wiKSkrMSk7XG4gICAgbi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0b19pbnNlcnQsIGJlZm9yZSA/IG4gOiBuLm5leHRTaWJsaW5nKTtcbiAgICBpZih2ZXJ0aWNhbCkgdGhpcy5jdXJyZW50ID0gdG9faW5zZXJ0LmZpcnN0Q2hpbGQuZmlyc3RDaGlsZDtcbiAgICBlbHNlIHRoaXMuY3VycmVudCA9IHRvX2luc2VydC5maXJzdENoaWxkO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmVfY29sID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09ICdjJyAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJykpe1xuXHRuID0gbi5wYXJlbnROb2RlO1xuICAgIH1cbiAgICBpZighbi5wYXJlbnROb2RlKSByZXR1cm47XG4gICAgXG4gICAgLy8gRG9uJ3QgcmVtb3ZlIGlmIHRoZXJlIGlzIG9ubHkgYSBzaW5nbGUgY29sdW1uOlxuICAgIGlmKG4ucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHR0aGlzLmN1cnJlbnQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgaWYobi5uZXh0U2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gMDtcbiAgICB9XG4gICAgZWxzZSByZXR1cm47XG4gICAgXG4gICAgdmFyIHBvcyA9IDE7XG4gICAgdmFyIGNjID0gbjtcbiAgICBcbiAgICAvLyBGaW5kIHBvc2l0aW9uIG9mIGNvbHVtblxuICAgIHdoaWxlKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0cG9zKys7XG5cdGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICB2YXIgdG9fbW9kaWZ5ID0gW107XG4gICAgdmFyIGl0ZXJhdG9yID0gdGhpcy5kb2MueHBhdGhfbGlzdChcIi4vbC9jW3Bvc2l0aW9uKCk9XCIrcG9zK1wiXVwiLCBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSlcbiAgICB0cnl7IGZvcih2YXIgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpOyBubiAhPSBudWxsOyBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCkpeyB0b19tb2RpZnkucHVzaChubik7IH19XG4gICAgY2F0Y2goZSkgeyB0aGlzLmZpcmVfZXZlbnQoXCJlcnJvclwiLHtcIm1lc3NhZ2VcIjonWE1MIG1vZGlmaWVkIGR1cmluZyBpdGVyYXRpb24/ICcgKyBlfSk7IH1cbiAgICBmb3IodmFyIGogPSAwOyBqIDwgdG9fbW9kaWZ5Lmxlbmd0aDsgaisrKXtcblx0dmFyIG5uID0gdG9fbW9kaWZ5W2pdO1xuXHRubi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInNcIixwYXJzZUludChubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpLTEpO1xuXHRubi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5uKTtcbiAgICB9XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X3JlbW92ZV9yb3cgPSBmdW5jdGlvbigpe1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHdoaWxlKG4ucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2wnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKXtcblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgaWYoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgIC8vIERvbid0IHJlbW92ZSBpZiB0aGVyZSBpcyBvbmx5IGEgc2luZ2xlIHJvdzpcbiAgICBpZihuLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5wcmV2aW91c1NpYmxpbmcuZmlyc3RDaGlsZC5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgaWYobi5uZXh0U2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkLmZpcnN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSAwO1xuICAgIH1cbiAgICBlbHNlIHJldHVybjtcblxuICAgIG4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoXCJzXCIscGFyc2VJbnQobi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpLTEpO1xuICAgIG4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfcmVtb3ZlID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09ICdjJyAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICBpZihuLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSBcImxcIil7XG5cdHRoaXMubGlzdF9yZW1vdmVfY29sKCk7XG5cdHJldHVybjtcbiAgICB9XG4gICAgaWYobi5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ucHJldmlvdXNTaWJsaW5nLmxhc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IG4ucHJldmlvdXNTaWJsaW5nLmxhc3RDaGlsZC5maXJzdENoaWxkLnRleHRDb250ZW50Lmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSBpZihuLm5leHRTaWJsaW5nICE9IG51bGwpe1xuXHR0aGlzLmN1cnJlbnQgPSBuLm5leHRTaWJsaW5nLmZpcnN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSAwO1xuICAgIH1cbiAgICBlbHNlIHJldHVybjtcbiAgICBuLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic1wiLHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKS0xKTtcbiAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yaWdodCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmNhcmV0ID49IEd1cHB5VXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpKXtcblx0dmFyIG5uID0gdGhpcy5kb2MueHBhdGhfbm9kZShcImZvbGxvd2luZzo6ZVsxXVwiLCB0aGlzLmN1cnJlbnQpO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uO1xuXHQgICAgdGhpcy5jYXJldCA9IDA7XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRoaXMuZmlyZV9ldmVudChcInJpZ2h0X2VuZFwiKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0ICs9IDE7XG4gICAgfVxufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc3BhY2ViYXIgPSBmdW5jdGlvbigpe1xuICAgIGlmKEd1cHB5VXRpbHMuaXNfdGV4dCh0aGlzLmN1cnJlbnQpKSB0aGlzLmluc2VydF9zdHJpbmcoXCIgXCIpO1xuICAgIGVsc2UgdGhpcy5zcGFjZV9jYXJldCA9IHRoaXMuY2FyZXQ7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5sZWZ0ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKHRoaXMuY2FyZXQgPD0gMCl7XG5cdHZhciBwbiA9IHRoaXMuZG9jLnhwYXRoX25vZGUoXCJwcmVjZWRpbmc6OmVbMV1cIiwgdGhpcy5jdXJyZW50KTtcblx0aWYocG4gIT0gbnVsbCl7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBwbjtcblx0ICAgIHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuXHR9XG5cdGVsc2V7XG5cdCAgICB0aGlzLmZpcmVfZXZlbnQoXCJsZWZ0X2VuZFwiKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0IC09IDE7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2MgPSBmdW5jdGlvbigpe1xuICAgIHZhciBwb3MgPSAwO1xuICAgIHZhciBjID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XG4gICAgd2hpbGUoYyAmJiBjLm5vZGVOYW1lID09IFwiY1wiKXtcblx0cG9zKys7XG5cdGMgPSBjLnByZXZpb3VzU2libGluZztcbiAgICB9XG4gICAgdmFyIGlkeCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcImRlbGV0ZVwiKTtcbiAgICB2YXIgc3Vydml2b3Jfbm9kZSA9IHRoaXMuZG9jLnhwYXRoX25vZGUoXCIuL2NbcG9zaXRpb24oKT1cIitpZHgrXCJdXCIsIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGUpO1xuICAgIHZhciBzdXJ2aXZvcl9ub2RlcyA9IFtdO1xuICAgIGZvcih2YXIgbiA9IHN1cnZpdm9yX25vZGUuZmlyc3RDaGlsZDsgbiAhPSBudWxsOyBuID0gbi5uZXh0U2libGluZyl7XG5cdHN1cnZpdm9yX25vZGVzLnB1c2gobik7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XG4gICAgdGhpcy5pbnNlcnRfbm9kZXMoc3Vydml2b3Jfbm9kZXMsIHBvcyA+IGlkeCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2Zyb21fZSA9IGZ1bmN0aW9uKCl7XG4gICAgLy8gcmV0dXJuIGZhbHNlIGlmIHdlIGRlbGV0ZWQgc29tZXRoaW5nLCBhbmQgdHJ1ZSBvdGhlcndpc2UuXG4gICAgaWYodGhpcy5jYXJldCA+IDApe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlbih0aGlzLmNhcmV0LTEsXCJcIiwxKTtcblx0dGhpcy5jYXJldC0tO1xuICAgIH1cbiAgICBlbHNle1xuXHQvLyBUaGUgb3JkZXIgb2YgdGhlc2UgaXMgaW1wb3J0YW50XG5cdGlmKHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLmdldEF0dHJpYnV0ZShcImNoYXJcIikgPT0gXCJ5ZXNcIil7XG5cdCAgICAvLyBUaGUgcHJldmlvdXMgbm9kZSBpcyBhbiBmIG5vZGUgYnV0IGlzIHJlYWxseSBqdXN0IGEgY2hhcmFjdGVyLiAgRGVsZXRlIGl0LlxuXHQgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZztcblx0ICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgPT0gJ2YnKXtcblx0ICAgIC8vIFdlJ3JlIGluIGFuIGUgbm9kZSBqdXN0IGFmdGVyIGFuIGYgbm9kZS4gIE1vdmUgYmFjayBpbnRvIHRoZSBmIG5vZGUgKGRlbGV0ZSBpdD8pXG5cdCAgICB0aGlzLmxlZnQoKTtcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5ub2RlTmFtZSA9PSAnYycpe1xuXHQgICAgLy8gV2UncmUgaW4gYSBjIGNoaWxkIG9mIGFuIGYgbm9kZSwgYnV0IG5vdCB0aGUgZmlyc3Qgb25lLiAgR28gdG8gdGhlIHByZXZpb3VzIGNcblx0ICAgIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcImRlbGV0ZVwiKSl7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9jKCk7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHRoaXMubGVmdCgpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0ICAgIH1cblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcgPT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnYycgJiYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyA9PSBudWxsIHx8IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5ub2RlTmFtZSAhPSAnYycpKXtcblx0ICAgIC8vIFdlJ3JlIGluIHRoZSBmaXJzdCBjIGNoaWxkIG9mIGFuIGYgbm9kZSBhbmQgYXQgdGhlIGJlZ2lubmluZy0tZGVsZXRlIHRoZSBmIG5vZGVcblx0ICAgIHZhciBwYXIgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZTtcblx0ICAgIHdoaWxlKHBhci5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJyB8fCBwYXIucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnYycpe1xuXHRcdHBhciA9IHBhci5wYXJlbnROb2RlO1xuXHQgICAgfVxuXHQgICAgaWYocGFyLmhhc0F0dHJpYnV0ZShcImRlbGV0ZVwiKSl7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9jKCk7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHRoaXMuY3VycmVudCA9IHBhci5wYXJlbnROb2RlO1xuXHRcdHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuXHQgICAgfVxuXHR9XG5cdGVsc2V7XG5cdCAgICAvLyBXZSdyZSBhdCB0aGUgYmVnaW5uaW5nIChob3BlZnVsbHkhKSBcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfZm9yd2FyZF9mcm9tX2UgPSBmdW5jdGlvbigpe1xuICAgIC8vIHJldHVybiBmYWxzZSBpZiB3ZSBkZWxldGVkIHNvbWV0aGluZywgYW5kIHRydWUgb3RoZXJ3aXNlLlxuICAgIGlmKHRoaXMuY2FyZXQgPCB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoKXtcblx0dGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNwbGljZW4odGhpcy5jYXJldCxcIlwiLDEpO1xuICAgIH1cbiAgICBlbHNle1xuXHQvL1dlJ3JlIGF0IHRoZSBlbmRcblx0aWYodGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nICE9IG51bGwpe1xuXHQgICAgLy8gVGhlIG5leHQgbm9kZSBpcyBhbiBmIG5vZGUuICBEZWxldGUgaXQuXG5cdCAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XG5cdCAgICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdjJyl7XG5cdCAgICAvLyBXZSdyZSBpbiBhIGMgY2hpbGQgb2YgYW4gZiBub2RlLiAgRG8gbm90aGluZ1xuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHR9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYmFja3NwYWNlID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0dGhpcy5zZWxfZGVsZXRlKCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcblx0dGhpcy5jaGVja3BvaW50KCk7XG4gICAgfVxuICAgIGVsc2UgaWYodGhpcy5kZWxldGVfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfa2V5ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0dGhpcy5zZWxfZGVsZXRlKCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcblx0dGhpcy5jaGVja3BvaW50KCk7XG4gICAgfVxuICAgIGVsc2UgaWYodGhpcy5kZWxldGVfZm9yd2FyZF9mcm9tX2UoKSl7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5iYWNrc2xhc2ggPSBmdW5jdGlvbigpe1xuICAgIGlmKEd1cHB5VXRpbHMuaXNfdGV4dCh0aGlzLmN1cnJlbnQpKSByZXR1cm47XG4gICAgdGhpcy5pbnNlcnRfc3ltYm9sKFwic3ltX25hbWVcIik7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS50YWIgPSBmdW5jdGlvbigpe1xuICAgIGlmKCFHdXBweVV0aWxzLmlzX3N5bWJvbCh0aGlzLmN1cnJlbnQpKXtcblx0dGhpcy5jaGVja19mb3Jfc3ltYm9sKCk7XG5cdHJldHVybjtcbiAgICB9XG4gICAgdmFyIHN5bV9uYW1lID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgdmFyIGNhbmRpZGF0ZXMgPSBbXTtcbiAgICBmb3IodmFyIG4gaW4gdGhpcy5zeW1ib2xzKXtcblx0aWYobi5zdGFydHNXaXRoKHN5bV9uYW1lKSkgY2FuZGlkYXRlcy5wdXNoKG4pO1xuICAgIH1cbiAgICBpZihjYW5kaWRhdGVzLmxlbmd0aCA9PSAxKXtcblx0dGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSBjYW5kaWRhdGVzWzBdO1xuXHR0aGlzLmNhcmV0ID0gY2FuZGlkYXRlc1swXS5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2Uge1xuXHR0aGlzLmZpcmVfZXZlbnQoXCJjb21wbGV0aW9uXCIse1wiY2FuZGlkYXRlc1wiOmNhbmRpZGF0ZXN9KTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucmlnaHRfcGFyZW4gPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuY3VycmVudC5ub2RlTmFtZSA9PSAnZScgJiYgdGhpcy5jYXJldCA8IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGggLSAxKSByZXR1cm47XG4gICAgZWxzZSB0aGlzLnJpZ2h0KCk7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS51cCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJ1cFwiKSl7XG5cdHZhciB0ID0gcGFyc2VJbnQodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwidXBcIikpO1xuXHR2YXIgZiA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG5cdHZhciBuID0gZi5maXJzdENoaWxkO1xuXHR3aGlsZShuICE9IG51bGwgJiYgdCA+IDApe1xuXHQgICAgaWYobi5ub2RlTmFtZSA9PSAnYycpIHQtLTtcblx0ICAgIGlmKHQgPiAwKSBuID0gbi5uZXh0U2libGluZztcblx0fVxuXHR0aGlzLmN1cnJlbnQgPSBuLmxhc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5saXN0X3ZlcnRpY2FsX21vdmUoZmFsc2UpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZG93biA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJkb3duXCIpKXtcblx0dmFyIHQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJkb3duXCIpKTtcblx0dmFyIGYgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuXHR2YXIgbiA9IGYuZmlyc3RDaGlsZDtcblx0d2hpbGUobiAhPSBudWxsICYmIHQgPiAwKXtcblx0ICAgIGlmKG4ubm9kZU5hbWUgPT0gJ2MnKSB0LS07XG5cdCAgICBpZih0ID4gMCkgbiA9IG4ubmV4dFNpYmxpbmc7XG5cdH1cblx0dGhpcy5jdXJyZW50ID0gbi5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHRoaXMubGlzdF92ZXJ0aWNhbF9tb3ZlKHRydWUpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaG9tZSA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2Mucm9vdCgpLmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IDA7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnJvb3QoKS5sYXN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuY2hlY2twb2ludCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xuICAgIHRoaXMuY3VycmVudC5zZXRBdHRyaWJ1dGUoXCJjdXJyZW50XCIsXCJ5ZXNcIik7XG4gICAgdGhpcy5jdXJyZW50LnNldEF0dHJpYnV0ZShcImNhcmV0XCIsdGhpcy5jYXJldC50b1N0cmluZygpKTtcbiAgICB0aGlzLnVuZG9fbm93Kys7XG4gICAgdGhpcy51bmRvX2RhdGFbdGhpcy51bmRvX25vd10gPSBiYXNlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLnVuZG9fZGF0YS5zcGxpY2UodGhpcy51bmRvX25vdysxLCB0aGlzLnVuZG9fZGF0YS5sZW5ndGgpO1xuICAgIHRoaXMuZmlyZV9ldmVudChcImNoYW5nZVwiLHtcIm9sZFwiOnRoaXMudW5kb19kYXRhW3RoaXMudW5kb19ub3ctMV0sXCJuZXdcIjp0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93XX0pO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjdXJyZW50XCIpO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjYXJldFwiKTtcbiAgICBpZih0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC5yZWFkeSkgdGhpcy5wYXJlbnQucmVuZGVyKHRydWUpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJlc3RvcmUgPSBmdW5jdGlvbih0KXtcbiAgICB0aGlzLmRvYy5iYXNlID0gdGhpcy51bmRvX2RhdGFbdF0uY2xvbmVOb2RlKHRydWUpO1xuICAgIHRoaXMuZmluZF9jdXJyZW50KCk7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImN1cnJlbnRcIik7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImNhcmV0XCIpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmZpbmRfY3VycmVudCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2MueHBhdGhfbm9kZShcIi8vKltAY3VycmVudD0neWVzJ11cIik7XG4gICAgdGhpcy5jYXJldCA9IHBhcnNlSW50KHRoaXMuY3VycmVudC5nZXRBdHRyaWJ1dGUoXCJjYXJldFwiKSk7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS51bmRvID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKHRoaXMudW5kb19ub3cgPD0gMCkgcmV0dXJuO1xuICAgIHRoaXMudW5kb19ub3ctLTtcbiAgICB0aGlzLnJlc3RvcmUodGhpcy51bmRvX25vdyk7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yZWRvID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKHRoaXMudW5kb19ub3cgPj0gdGhpcy51bmRvX2RhdGEubGVuZ3RoLTEpIHJldHVybjtcbiAgICB0aGlzLnVuZG9fbm93Kys7XG4gICAgdGhpcy5yZXN0b3JlKHRoaXMudW5kb19ub3cpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZG9uZSA9IGZ1bmN0aW9uKHMpe1xuICAgIGlmKEd1cHB5VXRpbHMuaXNfc3ltYm9sKHRoaXMuY3VycmVudCkpIHRoaXMuY29tcGxldGVfc3ltYm9sKCk7XG4gICAgZWxzZSB0aGlzLmZpcmVfZXZlbnQoXCJkb25lXCIpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmNvbXBsZXRlX3N5bWJvbCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHN5bV9uYW1lID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgaWYoISh0aGlzLnN5bWJvbHNbc3ltX25hbWVdKSkgcmV0dXJuO1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XG4gICAgdGhpcy5pbnNlcnRfc3ltYm9sKHN5bV9uYW1lKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5wcm9ibGVtID0gZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgdGhpcy5maXJlX2V2ZW50KFwiZXJyb3JcIix7XCJtZXNzYWdlXCI6bWVzc2FnZX0pO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmlzX2JsYWNrbGlzdGVkID0gZnVuY3Rpb24oc3ltYl90eXBlKXtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5ibGFja2xpc3QubGVuZ3RoOyBpKyspXG5cdGlmKHN5bWJfdHlwZSA9PSB0aGlzLmJsYWNrbGlzdFtpXSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmNoZWNrX2Zvcl9zeW1ib2wgPSBmdW5jdGlvbigpe1xuICAgIHZhciBpbnN0YW5jZSA9IHRoaXM7XG4gICAgaWYoR3VwcHlVdGlscy5pc190ZXh0KHRoaXMuY3VycmVudCkpIHJldHVybjtcbiAgICBmb3IodmFyIHMgaW4gdGhpcy5zeW1ib2xzKXtcblx0aWYoaW5zdGFuY2UuY3VycmVudC5ub2RlTmFtZSA9PSAnZScgJiYgcy5sZW5ndGggPD0gKGluc3RhbmNlLmNhcmV0IC0gaW5zdGFuY2Uuc3BhY2VfY2FyZXQpICYmICEoR3VwcHlVdGlscy5pc19ibGFuayhpbnN0YW5jZS5jdXJyZW50KSkgJiYgaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zZWFyY2hfYXQoaW5zdGFuY2UuY2FyZXQscykpe1xuXHQgICAgdmFyIHRlbXAgPSBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHQgICAgdmFyIHRlbXBfY2FyZXQgPSBpbnN0YW5jZS5jYXJldDtcblx0ICAgIGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsaW5zdGFuY2UuY2FyZXQtcy5sZW5ndGgpK2luc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoaW5zdGFuY2UuY2FyZXQpO1xuXHQgICAgaW5zdGFuY2UuY2FyZXQgLT0gcy5sZW5ndGg7XG5cdCAgICB2YXIgc3VjY2VzcyA9IGluc3RhbmNlLmluc2VydF9zeW1ib2wocyk7XG5cdCAgICBpZighc3VjY2Vzcyl7XG5cdFx0aW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRlbXA7XG5cdFx0aW5zdGFuY2UuY2FyZXQgPSB0ZW1wX2NhcmV0O1xuXHQgICAgfVxuXHQgICAgYnJlYWs7XG5cdH1cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlCYWNrZW5kO1xuIiwiR3VwcHlBU1QgPSByZXF1aXJlKCcuL2d1cHB5X2FzdC5qcycpO1xuXG4vKipcbiAgIEBjbGFzc1xuICAgQGNsYXNzZGVzYyBBIGNsYXNzIHJlcHJlc2VudGluZyBhIEd1cHB5IGRvY3VtZW50XG4gICBAcGFyYW0ge3N0cmluZ30gW2RvYz08bT48ZT48L2U+PC9tPl0gLSBBbiBYTUwgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZG9jdW1lbnRcbiAgIEBjb25zdHJ1Y3RvciBcbiAqL1xudmFyIEd1cHB5RG9jID0gZnVuY3Rpb24oZG9jKXtcbiAgICBkb2MgPSBkb2MgfHwgXCI8bT48ZT48L2U+PC9tPlwiO1xuICAgIHRoaXMuc2V0X2NvbnRlbnQoZG9jKTtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmlzX3NtYWxsID0gZnVuY3Rpb24obm4pe1xuICAgIHZhciBuID0gbm4ucGFyZW50Tm9kZTtcbiAgICB3aGlsZShuICE9IG51bGwgJiYgbi5ub2RlTmFtZSAhPSAnbScpe1xuXHRpZihuLmdldEF0dHJpYnV0ZShcInNtYWxsXCIpID09IFwieWVzXCIpIHJldHVybiB0cnVlO1xuXHRuID0gbi5wYXJlbnROb2RlXG5cdHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdjJykgbiA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUuZW5zdXJlX3RleHRfbm9kZXMgPSBmdW5jdGlvbigpe1xuICAgIHZhciBsID0gdGhpcy5iYXNlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZVwiKTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgbC5sZW5ndGg7IGkrKyl7XG5cdGlmKCEobFtpXS5maXJzdENoaWxkKSkgbFtpXS5hcHBlbmRDaGlsZCh0aGlzLmJhc2UuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuICAgIH1cbn1cblxuLyoqIFxuICAgIENoZWNrIGlmIGRvY3VtZW50IGlzIGVtcHR5XG4gICAgQG1lbWJlcm9mIEd1cHB5RG9jXG4gICAgQHJldHVybnMge2Jvb2xlYW59XG4qL1xuR3VwcHlEb2MucHJvdG90eXBlLmlzX2JsYW5rID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJmXCIpLmxlbmd0aCA+IDApIHJldHVybiBmYWxzZTtcbiAgICB2YXIgbCA9IHRoaXMuYmFzZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImVcIik7XG4gICAgaWYobC5sZW5ndGggPT0gMSAmJiAoIShsWzBdLmZpcnN0Q2hpbGQpIHx8IGxbMF0uZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9PSBcIlwiKSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5cbi8qKiBcbiAgICBHZXQgdGhlIGRvY3VtZW50IGFzIGEgRE9NIG9iamVjdFxuICAgIEBtZW1iZXJvZiBHdXBweURvY1xuICAgIEByZXR1cm5zIHtFbGVtZW50fVxuKi9cbkd1cHB5RG9jLnByb3RvdHlwZS5yb290ID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gdGhpcy5iYXNlLmRvY3VtZW50RWxlbWVudDtcbn1cblxuLyoqIFxuICAgIEdldCB0aGUgY29udGVudCBvZiB0aGUgZG9jdW1lbnQgYXMgYSBzdHJpbmdcbiAgICBAbWVtYmVyb2YgR3VwcHlEb2NcbiAgICBAcGFyYW0ge3N0cmluZ30gdCAtIFRoZSByZW5kZXJpbmcgbWV0aG9kIHRvIHVzZSAoXCJsYXRleFwiLCBcInRleHRcIiwgXCJhc3RcIiAoZm9yIHN5bnRheCB0cmVlKSwgb3IgXCJ4bWxcIiAoZm9yIGludGVybmFsIFhNTCByZXByZXNlbnRhdGlvbikpXG4gICAgQHJldHVybnMge3N0cmluZ31cbiovXG5HdXBweURvYy5wcm90b3R5cGUuZ2V0X2NvbnRlbnQgPSBmdW5jdGlvbih0LHIpe1xuICAgIGlmKHQgPT0gXCJ4bWxcIikgcmV0dXJuIChuZXcgWE1MU2VyaWFsaXplcigpKS5zZXJpYWxpemVUb1N0cmluZyh0aGlzLmJhc2UpO1xuICAgIGVsc2UgaWYodCA9PSBcImFzdFwiKSByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5zeW50YXhfdHJlZSgpKTtcbiAgICBlbHNlIGlmKHQgPT0gXCJ0ZXh0XCIpIHJldHVybiBHdXBweUFTVC50b190ZXh0KHRoaXMuc3ludGF4X3RyZWUoKSk7XG4gICAgZWxzZSBpZih0ID09IFwiZnVuY3Rpb25cIikgcmV0dXJuIEd1cHB5QVNULnRvX2Z1bmN0aW9uKHRoaXMuc3ludGF4X3RyZWUoKSk7XG4gICAgZWxzZSBpZih0ID09IFwiZXFuc1wiKSByZXR1cm4gR3VwcHlBU1QudG9fZXFsaXN0KHRoaXMuc3ludGF4X3RyZWUoKSk7XG4gICAgZWxzZSByZXR1cm4gdGhpcy5tYW51YWxfcmVuZGVyKHQsdGhpcy5yb290KCkscik7XG59XG5cbkd1cHB5RG9jLnByb3RvdHlwZS5pbXBvcnRfdGV4dCA9IGZ1bmN0aW9uKHRleHQsIHN5bXMsIHMybil7XG4gICAgdmFyIHRva2VucyA9IEd1cHB5QVNULnRva2VuaXNlX3RleHQodGV4dCk7XG4gICAgY29uc29sZS5sb2coXCJUT0tFTlNcIixKU09OLnN0cmluZ2lmeSh0b2tlbnMpKTtcbiAgICB2YXIgYXN0ID0gR3VwcHlBU1QucGFyc2VfdGV4dCh0b2tlbnMpO1xuICAgIGNvbnNvbGUubG9nKFwiQVNUXCIsSlNPTi5zdHJpbmdpZnkoYXN0KSk7XG4gICAgdGhpcy5pbXBvcnRfYXN0KGFzdCwgc3ltcywgczJuKTtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmltcG9ydF9hc3QgPSBmdW5jdGlvbihhc3QsIHN5bXMsIHMybil7XG4gICAgc3ltcyA9IHN5bXMgfHwgR3VwcHlTeW1ib2xzLnN5bWJvbHM7XG4gICAgczJuID0gczJuIHx8IEd1cHB5U3ltYm9scy5zeW1ib2xfdG9fbm9kZTtcbiAgICB2YXIgZG9jID0gR3VwcHlBU1QudG9feG1sKGFzdCwgc3ltcywgczJuKTtcbiAgICB0aGlzLmJhc2UgPSBkb2M7XG4gICAgdGhpcy5lbnN1cmVfdGV4dF9ub2RlcygpO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUuc3ludGF4X3RyZWUgPSBmdW5jdGlvbihuKXtcbiAgICBuID0gbiB8fCB0aGlzLnJvb3QoKVxuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRjb25zb2xlLmxvZyhcIlNob3VsZCBuZXZlciBoYXBwZW5cIik7XG5cdC8vYW5zID0gbi5maXJzdENoaWxkLnRleHRDb250ZW50O1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJmXCIpe1xuXHR2YXIgYW5zID0ge1wiYXJnc1wiOltdLCBcImt3YXJnc1wiOnt9fTtcblx0YW5zWyd2YWx1ZSddID0gbi5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpO1xuXHRhbnNbJ3R5cGUnXSA9IFwiZnVuY3Rpb25cIjtcblx0aWYobi5oYXNBdHRyaWJ1dGUoXCJhc3RfdmFsdWVcIikpIGFuc1sndmFsdWUnXSA9IG4uZ2V0QXR0cmlidXRlKFwiYXN0X3ZhbHVlXCIpO1xuXHRpZihuLmhhc0F0dHJpYnV0ZShcImFzdF90eXBlXCIpKSBhbnNbJ3R5cGUnXSA9IG4uZ2V0QXR0cmlidXRlKFwiYXN0X3R5cGVcIik7XG5cdGVsc2UgaWYobi5nZXRBdHRyaWJ1dGUoXCJjaGFyXCIpID09IFwieWVzXCIpIGFuc1sndHlwZSddID0gXCJuYW1lXCI7XG5cdFxuXHR2YXIgaXRlcmF0b3IgPSB0aGlzLnhwYXRoX2xpc3QoXCIuLypbbmFtZSgpPSdjJyBvciBuYW1lKCk9J2wnXVwiLCBuKVxuXHRmb3IodmFyIG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKTsgbm4gIT0gbnVsbDsgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpKXtcblx0ICAgIC8vaWYobm4uaGFzQXR0cmlidXRlKFwibmFtZVwiKSkgYW5zLmt3YXJnc1tubi5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpXSA9IHRoaXMuc3ludGF4X3RyZWUobm4pXG5cdCAgICAvL2Vsc2UgYW5zLmFyZ3MucHVzaCh0aGlzLnN5bnRheF90cmVlKG5uKSlcblx0ICAgIGFucy5hcmdzLnB1c2godGhpcy5zeW50YXhfdHJlZShubikpXG5cdH1cblx0Ly9jb25zb2xlLmxvZyhcIkZcIixKU09OLnN0cmluZ2lmeShhbnMpKVxuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJsXCIpe1xuXHRhbnMgPSBbXTtcblx0Zm9yKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZyl7XG5cdCAgICBhbnMucHVzaCh0aGlzLnN5bnRheF90cmVlKG5uKSk7XG5cdH1cblx0YW5zID0gW1wibGlzdFwiLGFuc107XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImNcIiB8fCBuLm5vZGVOYW1lID09IFwibVwiKXtcblx0aWYobi5oYXNBdHRyaWJ1dGUoXCJtb2RlXCIpICYmIG4uZ2V0QXR0cmlidXRlKFwibW9kZVwiKSA9PSBcInRleHRcIil7XG5cdCAgICBhbnMgPSBuLmZpcnN0Q2hpbGQuZmlyc3RDaGlsZC50ZXh0Q29udGVudDtcblx0fVxuXHRlbHNle1xuXHQgICAgdmFyIHRva2VucyA9IFtdXG5cdCAgICBmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0XHRpZihubi5ub2RlTmFtZSA9PSBcImVcIil7XG5cdFx0ICAgIHRva2VucyA9IHRva2Vucy5jb25jYXQoR3VwcHlBU1QudG9rZW5pc2VfZShubi5maXJzdENoaWxkLnRleHRDb250ZW50KSk7XG5cdFx0fVxuXHRcdGVsc2UgaWYobm4ubm9kZU5hbWUgPT0gXCJmXCIpe1xuXHRcdCAgICB0b2tlbnMucHVzaCh0aGlzLnN5bnRheF90cmVlKG5uKSk7XG5cdFx0fVxuXHQgICAgfVxuXHQgICAgLy9jb25zb2xlLmxvZyhcIlRPS1wiLHRva2Vucyk7XG5cdCAgICBhbnMgPSBHdXBweUFTVC5wYXJzZV9lKHRva2Vucyk7XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLnhwYXRoX25vZGUgPSBmdW5jdGlvbih4cGF0aCwgbm9kZSl7XG4gICAgbm9kZSA9IG5vZGUgfHwgdGhpcy5yb290KClcbiAgICByZXR1cm4gdGhpcy5iYXNlLmV2YWx1YXRlKHhwYXRoLCBub2RlLCBudWxsLCBYUGF0aFJlc3VsdC5GSVJTVF9PUkRFUkVEX05PREVfVFlQRSwgbnVsbCkuc2luZ2xlTm9kZVZhbHVlO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUueHBhdGhfbGlzdCA9IGZ1bmN0aW9uKHhwYXRoLCBub2RlKXtcbiAgICBub2RlID0gbm9kZSB8fCB0aGlzLnJvb3QoKVxuICAgIHJldHVybiB0aGlzLmJhc2UuZXZhbHVhdGUoeHBhdGgsIG5vZGUsIG51bGwsIFhQYXRoUmVzdWx0Lk9SREVSRURfTk9ERV9JVEVSQVRPUl9UWVBFLCBudWxsKTtcbn1cblxuLyoqIFxuICAgIEdldCB0aGUgbmFtZXMgb2Ygc3ltYm9scyB1c2VkIGluIHRoaXMgZG9jdW1lbnRcbiAgICBAbWVtYmVyb2YgR3VwcHlEb2NcbiAgICBAcGFyYW0ge3N0cmluZ1tdfSBbZ3JvdXBzXSAtIEEgbGlzdCBvZiBncm91cHMgeW91IHdhbnQgc3RyaW5ncyBmb3JcbiAgICBAcmV0dXJucyB7c3RyaW5nW119XG4qL1xuR3VwcHlEb2MucHJvdG90eXBlLmdldF9zeW1ib2xzID0gZnVuY3Rpb24oZ3JvdXBzKXtcbiAgICB2YXIgdHlwZXMgPSB7fTtcbiAgICB2YXIgYW5zID0gW107XG4gICAgdmFyIGl0ZXJhdG9yID0gZ3JvdXBzID8gdGhpcy54cGF0aF9saXN0KFwiLy9mXCIpIDogdGhpcy54cGF0aF9saXN0KFwiLy9mW0Bncm91cD0nXCIrZ3JvdXBzW2ldK1wiJ11cIik7XG4gICAgZm9yKHZhciBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCk7IG5uICE9IG51bGw7IG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKSlcblx0dHlwZXNbbm4uZ2V0QXR0cmlidXRlKFwidHlwZVwiKV0gPSB0cnVlO1xuICAgIGZvcih2YXIgdCBpbiB0eXBlcylcblx0YW5zLnB1c2godCk7XG4gICAgcmV0dXJuIGFucztcbn1cblxuLyoqIFxuICAgIFNldCB0aGUgY29udGVudCBvZiB0aGUgZG9jdW1lbnRcbiAgICBAbWVtYmVyb2YgR3VwcHlEb2NcbiAgICBAcGFyYW0ge3N0cmluZ30geG1sX2RhdGEgLSBBbiBYTUwgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgY29udGVudCBvZiB0aGUgZG9jdW1lbnRcbiovXG5HdXBweURvYy5wcm90b3R5cGUuc2V0X2NvbnRlbnQgPSBmdW5jdGlvbih4bWxfZGF0YSl7XG4gICAgdGhpcy5iYXNlID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyh4bWxfZGF0YSwgXCJ0ZXh0L3htbFwiKTtcbiAgICB0aGlzLmVuc3VyZV90ZXh0X25vZGVzKCk7XG59XG5cbkd1cHB5RG9jLmJyYWNrZXRfeHBhdGggPSBcIihjb3VudCguLyopICE9IDEgYW5kIG5vdCBcXFxuXHRcdCAgICAgICAgICAoIFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQoLi9lKT0yIGFuZCBcXFxuXHRcdFx0ICAgIGNvdW50KC4vZik9MSBhbmQgXFxcblx0XHRcdCAgICBjb3VudCguL2Vbc3RyaW5nLWxlbmd0aCh0ZXh0KCkpPTBdKT0yIGFuZCBcXFxuXHRcdFx0ICAgICggXFxcblx0XHRcdCAgICAgIChcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCguL2YvYyk9MSBhbmRcXFxuXHRcdFx0ICAgICAgICBjb3VudCguL2YvY1tAaXNfYnJhY2tldD0neWVzJ10pPTFcXFxuXHRcdFx0ICAgICAgKVxcXG5cdFx0XHQgICAgICBvclxcXG5cdFx0XHQgICAgICAoXFxcblx0XHRcdCAgICAgICAgZi9AY2hhcj0neWVzJyBhbmQgXFxcblx0XHRcdFx0Y291bnQoLi9lW0BjdXJyZW50PSd5ZXMnXSk9MCBhbmQgXFxcblx0XHRcdFx0Y291bnQoLi9lW0B0ZW1wPSd5ZXMnXSk9MCBcXFxuXHRcdFx0ICAgICAgKVxcXG5cdFx0XHQgICAgKVxcXG5cdFx0XHQgIClcXFxuXHRcdFx0KSAgXFxcblx0XHRcdG9yXFxcblx0XHQgICAgICAgIChcXFxuXHRcdFx0ICBjb3VudCguLyopID0gMSBhbmQgXFxcblx0XHRcdCAgc3RyaW5nLWxlbmd0aCguL2UvdGV4dCgpKSAhPSAxIGFuZCBcXFxuXHRcdFx0ICBudW1iZXIoLi9lL3RleHQoKSkgIT0gLi9lL3RleHQoKSBcXFxuXHRcdFx0KSBcXFxuXHRcdFx0b3IgXFxcblx0XHQgICAgICAgICggXFxcblx0XHRcdCAgY291bnQoLi8qKSA9IDEgYW5kIFxcXG5cdFx0XHQgIC4vZS9AY3VycmVudCA9ICd5ZXMnIFxcXG5cdFx0XHQpIFxcXG5cdFx0XHRvciBcXFxuXHRcdCAgICAgICAgKCBcXFxuXHRcdFx0ICBjb3VudCguLyopID0gMSBhbmQgXFxcblx0XHRcdCAgLi9lL0B0ZW1wID0gJ3llcycgXFxcblx0XHRcdClcIlxuXG5HdXBweURvYy5wcm90b3R5cGUubWFudWFsX3JlbmRlciA9IGZ1bmN0aW9uKHQsbixyKXtcbiAgICB2YXIgYW5zID0gXCJcIjtcbiAgICBpZihuLm5vZGVOYW1lID09IFwiZVwiKXtcblx0aWYodCA9PSBcImxhdGV4XCIgJiYgcil7XG5cdCAgICBhbnMgPSBuLmdldEF0dHJpYnV0ZShcInJlbmRlclwiKTtcblx0fVxuXHRlbHNlIGlmKHQgPT0gXCJ0ZXh0XCIpe1xuXHQgICAgYW5zID0gbi5maXJzdENoaWxkLnRleHRDb250ZW50O1xuXHQgICAgaWYobi5wcmV2aW91c1NpYmxpbmcgJiYgbi5uZXh0U2libGluZyAmJiBhbnMgPT0gXCJcIilcblx0XHRhbnMgPSBcIiAqIFwiO1xuXHQgICAgZWxzZSB7XG5cdFx0YW5zID0gYW5zLnJlcGxhY2UoLyguKShbXmEtekEtWjAtOS5dKSguKS9nLFwiJDEgJDIgJDNcIik7XG5cdFx0YW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aXSkoPz1cXC4pL2csXCIkMSAqIFwiKTtcblx0XHRhbnMgPSBhbnMucmVwbGFjZSgvKFxcLikoPz1bYS16QS1aXSkvZyxcIiQxICogXCIpO1xuXHRcdGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWl0pKD89W2EtekEtWjAtOV0pL2csXCIkMSAqIFwiKTtcblx0XHRhbnMgPSBhbnMucmVwbGFjZSgvKFthLXpBLVowLTldKSg/PVthLXpBLVpdKS9nLFwiJDEgKiBcIik7XG5cdFx0aWYobi5wcmV2aW91c1NpYmxpbmcgJiYgbi5wcmV2aW91c1NpYmxpbmcuZ2V0QXR0cmlidXRlKFwiZ3JvdXBcIikgIT0gXCJvcGVyYXRpb25zXCIpIGFucyA9IGFucy5yZXBsYWNlKC9eKFthLXpBLVowLTldKS9nLFwiICogJDFcIik7XG5cdFx0aWYobi5uZXh0U2libGluZyAmJiBuLm5leHRTaWJsaW5nLmdldEF0dHJpYnV0ZShcImdyb3VwXCIpICE9IFwib3BlcmF0aW9uc1wiKSBhbnMgPSBhbnMucmVwbGFjZSgvKFthLXpBLVowLTldKSQvZyxcIiQxICogXCIpO1xuXHRcdGFucyA9IFwiIFwiK2FucytcIiBcIjtcblx0ICAgIH1cblx0fVxuXHRlbHNle1xuXHQgICAgYW5zID0gbi5maXJzdENoaWxkLnRleHRDb250ZW50O1xuXHR9XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImZcIil7XG5cdHZhciByZWFsX3R5cGUgPSAodCA9PSBcImxhdGV4XCIgJiYgdGhpcy5pc19zbWFsbChuKSkgPyBcInNtYWxsX2xhdGV4XCIgOiB0O1xuXHR2YXIgbm4gPSB0aGlzLnhwYXRoX25vZGUoXCIuL2JbQHA9J1wiK3JlYWxfdHlwZStcIiddXCIsIG4pIHx8IHRoaXMueHBhdGhfbm9kZShcIi4vYltAcD0nXCIrdCtcIiddXCIsIG4pO1xuXHRpZihubikgYW5zID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsbm4scik7XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImJcIil7XG5cdHZhciBjcyA9IFtdXG5cdHZhciBpID0gMTtcblx0dmFyIHBhciA9IG4ucGFyZW50Tm9kZTtcblx0Zm9yKHZhciBubiA9IHBhci5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKVxuXHQgICAgaWYobm4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbm4ubm9kZU5hbWUgPT0gXCJsXCIpIGNzW2krK10gPSB0aGlzLm1hbnVhbF9yZW5kZXIodCxubixyKTtcblx0Zm9yKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZyl7XG5cdCAgICBpZihubi5ub2RlVHlwZSA9PSAzKSBhbnMgKz0gbm4udGV4dENvbnRlbnQ7XG5cdCAgICBlbHNlIGlmKG5uLm5vZGVUeXBlID09IDEpe1xuXHRcdGlmKG5uLmhhc0F0dHJpYnV0ZShcImRcIikpe1xuXHRcdCAgICB2YXIgZGltID0gcGFyc2VJbnQobm4uZ2V0QXR0cmlidXRlKFwiZFwiKSk7XG5cdFx0ICAgIHZhciBqb2luZXIgPSBmdW5jdGlvbihkLGwpe1xuXHRcdFx0aWYoZCA+IDEpIGZvcih2YXIgayA9IDA7IGsgPCBsLmxlbmd0aDsgaysrKSBsW2tdID0gam9pbmVyKGQtMSxsW2tdKTtcblx0XHRcdHJldHVybiBsLmpvaW4obm4uZ2V0QXR0cmlidXRlKCdzZXAnKyhkLTEpKSk7XG5cdFx0ICAgIH1cblx0XHQgICAgYW5zICs9IGpvaW5lcihkaW0sY3NbcGFyc2VJbnQobm4uZ2V0QXR0cmlidXRlKFwicmVmXCIpKV0pO1xuXHRcdH1cblx0XHRlbHNlIGFucyArPSBjc1twYXJzZUludChubi5nZXRBdHRyaWJ1dGUoXCJyZWZcIikpXTtcblx0ICAgIH1cblx0fVxuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJsXCIpe1xuXHRhbnMgPSBbXTtcblx0dmFyIGkgPSAwO1xuXHRmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0ICAgIGFuc1tpKytdID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsbm4scik7XG5cdH1cbiAgICB9XG4gICAgZWxzZSBpZihuLm5vZGVOYW1lID09IFwiY1wiIHx8IG4ubm9kZU5hbWUgPT0gXCJtXCIpe1xuXHRmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKVxuXHQgICAgYW5zICs9IHRoaXMubWFudWFsX3JlbmRlcih0LG5uLHIpO1xuXHRpZih0ID09IFwibGF0ZXhcIiAmJlxuICAgICAgICAgICBuLmdldEF0dHJpYnV0ZShcImJyYWNrZXRcIikgPT0gXCJ5ZXNcIiAmJlxuXHQgICB0aGlzLmJhc2UuZXZhbHVhdGUoR3VwcHlEb2MuYnJhY2tldF94cGF0aCwgbiwgbnVsbCxcblx0XHRcdCBYUGF0aFJlc3VsdC5CT09MRUFOX1RZUEUsIG51bGwpLmJvb2xlYW5WYWx1ZSl7IFxuXHQgICAgYW5zID0gXCJcXFxcbGVmdChcIithbnMrXCJcXFxccmlnaHQpXCI7XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLnBhdGhfdG8gPSBmdW5jdGlvbihuKXtcbiAgICB2YXIgbmFtZSA9IG4ubm9kZU5hbWU7XG4gICAgaWYobmFtZSA9PSBcIm1cIikgcmV0dXJuIFwiZ3VwcHlfbG9jX21cIjtcbiAgICB2YXIgbnMgPSAwO1xuICAgIGZvcih2YXIgbm4gPSBuOyBubiAhPSBudWxsOyBubiA9IG5uLnByZXZpb3VzU2libGluZykgaWYobm4ubm9kZVR5cGUgPT0gMSAmJiBubi5ub2RlTmFtZSA9PSBuYW1lKSBucysrO1xuICAgIHJldHVybiB0aGlzLnBhdGhfdG8obi5wYXJlbnROb2RlKStcIl9cIituYW1lK1wiXCIrbnM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlEb2M7XG4iLCJHdXBweVN5bWJvbHMgPSB7XCJzeW1ib2xzXCI6e30sIFwidGVtcGxhdGVzXCI6e319O1xuXG5HdXBweVN5bWJvbHMuZXZhbF90ZW1wbGF0ZSA9IGZ1bmN0aW9uKHRlbXBsYXRlLCBuYW1lLCBhcmdzKXtcbiAgICBhcmdzWyduYW1lJ10gPSBuYW1lO1xuICAgIGlmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0ZW1wbGF0ZSkgPT0gXCJbb2JqZWN0IFN0cmluZ11cIil7XG5cdHZhciBhbnMgPSB0ZW1wbGF0ZTtcblx0Zm9yKHZhciBuYW1lIGluIGFyZ3Mpe1xuXHQgICAgYW5zID0gYW5zLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFx7XFxcXCRcIituYW1lK1wiXFxcXH1cIiksYXJnc1tuYW1lXSk7XG5cdH1cblx0cmV0dXJuIGFucztcbiAgICB9XG4gICAgZWxzZXtcblx0Zm9yKHZhciB4IGluIHRlbXBsYXRlKSB7XG5cdCAgICB0ZW1wbGF0ZVt4XSA9IEd1cHB5U3ltYm9scy5ldmFsX3RlbXBsYXRlKHRlbXBsYXRlW3hdLCBuYW1lLCBhcmdzKVxuXHR9XG5cdHJldHVybiB0ZW1wbGF0ZTtcbiAgICB9XG59XG5cbkd1cHB5U3ltYm9scy5zeW1ib2xfdG9fbm9kZSA9IGZ1bmN0aW9uKHMsIGNvbnRlbnQsIGJhc2Upe1xuICAgIFxuICAgIC8vIHMgaXMgYSBzeW1ib2xcbiAgICAvL1xuICAgIC8vIGNvbnRlbnQgaXMgYSBsaXN0IG9mIG5vZGVzIHRvIGluc2VydFxuICAgIHZhciBmID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiZlwiKTtcbiAgICBmb3IodmFyIGEgaW4gcy5hdHRycyl7XG5cdGYuc2V0QXR0cmlidXRlKGEsIHMuYXR0cnNbYV0pO1xuICAgIH1cbiAgICBpZihcImFzdFwiIGluIHMpe1xuXHRpZihcInR5cGVcIiBpbiBzLmFzdCkgZi5zZXRBdHRyaWJ1dGUoXCJhc3RfdHlwZVwiLHMuYXN0W1widHlwZVwiXSlcblx0aWYoXCJ2YWx1ZVwiIGluIHMuYXN0KSBmLnNldEF0dHJpYnV0ZShcImFzdF92YWx1ZVwiLHMuYXN0W1widmFsdWVcIl0pXG4gICAgfVxuICAgIC8vaWYoc1snY2hhciddKSBmLnNldEF0dHJpYnV0ZShcImNcIixcInllc1wiKTtcbiAgICBcbiAgICB2YXIgZmlyc3RfcmVmID0gLTE7XG4gICAgdmFyIHJlZnNfY291bnQgPSAwO1xuICAgIHZhciBsaXN0cyA9IHt9XG4gICAgdmFyIGZpcnN0O1xuXG4gICAgLy8gTWFrZSB0aGUgYiBub2RlcyBmb3IgcmVuZGVyaW5nIGVhY2ggb3V0cHV0ICAgIFxuICAgIGZvcih2YXIgdCBpbiBzW1wib3V0cHV0XCJdKXtcblx0dmFyIGIgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJiXCIpO1xuXHRiLnNldEF0dHJpYnV0ZShcInBcIix0KTtcblxuXHR2YXIgb3V0ID0gc1tcIm91dHB1dFwiXVt0XTtcblx0aWYodHlwZW9mIG91dCA9PSAnc3RyaW5nJyl7XG5cdCAgICBvdXQgPSBvdXQuc3BsaXQoLyhcXHtcXCRbMC05XSsoPzpcXHtbXn1dK1xcfSkqXFx9KS9nKTtcblx0ICAgIGZvcih2YXIgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspe1xuXHRcdG0gPSBvdXRbaV0ubWF0Y2goL15cXHtcXCQoWzAtOV0rKSgoPzpcXHtbXn1dK1xcfSkqKVxcfSQvKTtcblx0XHRpZihtKXtcblx0XHQgICAgb3V0W2ldID0geydyZWYnOnBhcnNlSW50KG1bMV0pfTtcblx0XHQgICAgaWYobVsyXS5sZW5ndGggPiAwKXtcblx0XHRcdG1tID0gbVsyXS5tYXRjaCgvXFx7W159XSpcXH0vZyk7XG5cdFx0XHRvdXRbaV1bJ2QnXSA9IG1tLmxlbmd0aDtcblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBtbS5sZW5ndGg7IGorKyl7XG5cdFx0XHQgICAgb3V0W2ldWydzZXAnK2pdID0gbW1bal0uc3Vic3RyaW5nKDEsbW1bal0ubGVuZ3RoLTEpO1xuXHRcdFx0fVxuXHRcdCAgICB9XG5cdFx0fVxuXHQgICAgfVxuXHR9XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspe1xuXHQgICAgaWYodHlwZW9mIG91dFtpXSA9PSAnc3RyaW5nJyB8fCBvdXRbaV0gaW5zdGFuY2VvZiBTdHJpbmcpe1xuXHRcdHZhciBudCA9IGJhc2UuY3JlYXRlVGV4dE5vZGUob3V0W2ldKTtcblx0XHRiLmFwcGVuZENoaWxkKG50KTtcblx0ICAgIH1cblx0ICAgIGVsc2V7XG5cdFx0dmFyIG50ID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiclwiKTtcblx0XHRmb3IodmFyIGF0dHIgaW4gb3V0W2ldKXtcblx0XHQgICAgbnQuc2V0QXR0cmlidXRlKGF0dHIsb3V0W2ldW2F0dHJdKTtcblx0XHR9XG5cdFx0aWYodCA9PSAnbGF0ZXgnKSB7XG5cdFx0ICAgIGlmKGZpcnN0X3JlZiA9PSAtMSkgZmlyc3RfcmVmID0gb3V0W2ldWydyZWYnXTtcblx0XHQgICAgaWYoJ2QnIGluIG91dFtpXSkgbGlzdHNbcmVmc19jb3VudF0gPSBvdXRbaV1bJ2QnXVxuXHRcdCAgICByZWZzX2NvdW50Kys7XG5cdFx0fVxuXHRcdGIuYXBwZW5kQ2hpbGQobnQpO1xuXHQgICAgfVxuXHR9XG5cdGYuYXBwZW5kQ2hpbGQoYik7XG4gICAgfVxuICAgIC8vIE5vdyBtYWtlIHRoZSBjIG5vZGVzIGZvciBzdG9yaW5nIHRoZSBjb250ZW50XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHJlZnNfY291bnQ7IGkrKyl7XG5cdHZhciBuYyA9IGJhc2UuY3JlYXRlRWxlbWVudChcImNcIik7XG5cdGlmKGkgaW4gY29udGVudCl7XG5cdCAgICB2YXIgbm9kZV9saXN0ID0gY29udGVudFtpXTtcblx0ICAgIGZvcih2YXIgc2UgPSAwOyBzZSA8IG5vZGVfbGlzdC5sZW5ndGg7IHNlKyspe1xuXHRcdG5jLmFwcGVuZENoaWxkKG5vZGVfbGlzdFtzZV0uY2xvbmVOb2RlKHRydWUpKTtcblx0ICAgIH1cblx0fVxuXHRlbHNle1xuXHQgICAgdmFyIG5ld19lID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiZVwiKTtcblx0ICAgIG5ld19lLmFwcGVuZENoaWxkKGJhc2UuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuXHQgICAgbmMuYXBwZW5kQ2hpbGQobmV3X2UpO1xuXHR9XG5cdGlmKGkrMSA9PSBmaXJzdF9yZWYpIGZpcnN0ID0gbmMubGFzdENoaWxkO1xuXHRpZihzWydhcmdzJ10pe1xuXHQgICAgZm9yKHZhciBhIGluIChzWydhcmdzJ11baV0gfHwge30pKXtcblx0XHRuYy5zZXRBdHRyaWJ1dGUoYSxzWydhcmdzJ11baV1bYV0pO1xuXHQgICAgfVxuXHR9XG5cdGlmKGkgaW4gbGlzdHMpe1xuXHQgICAgdmFyIHBhciA9IGY7XG5cdCAgICBpZihpIGluIGNvbnRlbnQgJiYgY29udGVudFtpXVswXS5ub2RlTmFtZSA9PSBcImxcIil7XG5cdFx0cGFyLmFwcGVuZENoaWxkKGNvbnRlbnRbaV1bMF0pO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHRmb3IodmFyIGogPSAwOyBqIDwgbGlzdHNbaV07IGorKyl7XG5cdFx0ICAgIHZhciBubCA9IGJhc2UuY3JlYXRlRWxlbWVudChcImxcIik7XG5cdFx0ICAgIG5sLnNldEF0dHJpYnV0ZShcInNcIixcIjFcIik7XG5cdFx0ICAgIHBhci5hcHBlbmRDaGlsZChubCk7XG5cdFx0ICAgIHBhciA9IG5sO1xuXHRcdCAgICBpZihqID09IGxpc3RzW2ldLTEpIG5sLmFwcGVuZENoaWxkKG5jKTtcblx0XHR9XG5cdCAgICB9XG5cdH1cblx0ZWxzZSBmLmFwcGVuZENoaWxkKG5jKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcImZcIjpmLCBcImZpcnN0XCI6Zmlyc3R9O1xufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlTeW1ib2xzO1xuIiwidmFyIEd1cHB5VXRpbHMgPSB7fTtcblxuR3VwcHlVdGlscy5DQVJFVCA9IFwiXFxcXGN1cnNvclstMC4yZXhdezAuN2VtfVwiXG5HdXBweVV0aWxzLlRFTVBfU01BTExfQ0FSRVQgPSBcIlxcXFxjdXJzb3J7MC43ZXh9XCJcbkd1cHB5VXRpbHMuVEVNUF9DQVJFVCA9IFwiXFxcXGN1cnNvclstMC4yZXhdezAuN2VtfVwiXG5HdXBweVV0aWxzLlNNQUxMX0NBUkVUID0gXCJcXFxcY3Vyc29yezAuN2V4fVwiXG5HdXBweVV0aWxzLlNFTF9DQVJFVCA9IFwiXFxcXGN1cnNvclstMC4yZXhdezAuN2VtfVwiXG5HdXBweVV0aWxzLlNNQUxMX1NFTF9DQVJFVCA9IFwiXFxcXGN1cnNvcnswLjdleH1cIlxuR3VwcHlVdGlscy5TRUxfQ09MT1IgPSBcInJlZFwiXG5cbkd1cHB5VXRpbHMuaXNfYmxhbmsgPSBmdW5jdGlvbihuKXtcbiAgICByZXR1cm4gbi5maXJzdENoaWxkID09IG51bGwgfHwgbi5maXJzdENoaWxkLm5vZGVWYWx1ZSA9PSAnJztcbn1cblxuR3VwcHlVdGlscy5nZXRfbGVuZ3RoID0gZnVuY3Rpb24obil7XG4gICAgaWYoR3VwcHlVdGlscy5pc19ibGFuayhuKSB8fCBuLm5vZGVOYW1lID09ICdmJykgcmV0dXJuIDBcbiAgICByZXR1cm4gbi5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG59XG5cbkd1cHB5VXRpbHMucGF0aF90byA9IGZ1bmN0aW9uKG4pe1xuICAgIHZhciBuYW1lID0gbi5ub2RlTmFtZTtcbiAgICBpZihuYW1lID09IFwibVwiKSByZXR1cm4gXCJndXBweV9sb2NfbVwiO1xuICAgIHZhciBucyA9IDA7XG4gICAgZm9yKHZhciBubiA9IG47IG5uICE9IG51bGw7IG5uID0gbm4ucHJldmlvdXNTaWJsaW5nKSBpZihubi5ub2RlVHlwZSA9PSAxICYmIG5uLm5vZGVOYW1lID09IG5hbWUpIG5zKys7XG4gICAgcmV0dXJuIEd1cHB5VXRpbHMucGF0aF90byhuLnBhcmVudE5vZGUpK1wiX1wiK25hbWUrXCJcIitucztcbn1cblxuR3VwcHlVdGlscy5pc190ZXh0ID0gZnVuY3Rpb24obm4pe1xuICAgIHJldHVybiBubi5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcIm1vZGVcIikgJiYgKG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSA9PSBcInRleHRcIiB8fCBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgPT0gXCJzeW1ib2xcIik7XG59XG5cbkd1cHB5VXRpbHMuaXNfc3ltYm9sID0gZnVuY3Rpb24obm4pe1xuICAgIHJldHVybiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgJiYgbm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJtb2RlXCIpID09IFwic3ltYm9sXCI7XG59XG5cbkd1cHB5VXRpbHMuaXNfc21hbGwgPSBmdW5jdGlvbihubil7XG4gICAgdmFyIG4gPSBubi5wYXJlbnROb2RlO1xuICAgIHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdtJyl7XG5cdGlmKG4uZ2V0QXR0cmlidXRlKFwic21hbGxcIikgPT0gXCJ5ZXNcIil7XG5cdCAgICByZXR1cm4gdHJ1ZTtcblx0fVxuXHRuID0gbi5wYXJlbnROb2RlXG5cdHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdjJylcblx0ICAgIG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHdXBweVV0aWxzO1xuIl19
