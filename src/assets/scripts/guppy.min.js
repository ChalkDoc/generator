(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Guppy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function e(t,r,a){function n(l,o){if(!r[l]){if(!t[l]){var u=typeof require=="function"&&require;if(!o&&u)return u(l,!0);if(i)return i(l,!0);var s=new Error("Cannot find module '"+l+"'");throw s.code="MODULE_NOT_FOUND",s}var f=r[l]={exports:{}};t[l][0].call(f.exports,function(e){var r=t[l][1][e];return n(r?r:e)},f,f.exports,e,t,r,a)}return r[l].exports}var i=typeof require=="function"&&require;for(var l=0;l<a.length;l++)n(a[l]);return n}({1:[function(e,t,r){"use strict";var a=e("./src/ParseError");var n=h(a);var i=e("./src/Settings");var l=h(i);var o=e("./src/buildTree");var u=h(o);var s=e("./src/parseTree");var f=h(s);var d=e("./src/utils");var c=h(d);function h(e){return e&&e.__esModule?e:{default:e}}var v=function e(t,r,a){c.default.clearNode(r);var n=new l.default(a);var i=(0,f.default)(t,n);var o=(0,u.default)(i,t,n).toNode();r.appendChild(o)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");v=function e(){throw new n.default("KaTeX doesn't work in quirks mode.")}}}var p=function e(t,r){var a=new l.default(r);var n=(0,f.default)(t,a);return(0,u.default)(n,t,a).toMarkup()};var m=function e(t,r){var a=new l.default(r);return(0,f.default)(t,a)};t.exports={render:v,renderToString:p,__parse:m,ParseError:n.default}},{"./src/ParseError":84,"./src/Settings":87,"./src/buildTree":94,"./src/parseTree":115,"./src/utils":121}],2:[function(e,t,r){t.exports={default:e("core-js/library/fn/array/from"),__esModule:true}},{"core-js/library/fn/array/from":12}],3:[function(e,t,r){t.exports={default:e("core-js/library/fn/get-iterator"),__esModule:true}},{"core-js/library/fn/get-iterator":13}],4:[function(e,t,r){t.exports={default:e("core-js/library/fn/is-iterable"),__esModule:true}},{"core-js/library/fn/is-iterable":14}],5:[function(e,t,r){t.exports={default:e("core-js/library/fn/json/stringify"),__esModule:true}},{"core-js/library/fn/json/stringify":15}],6:[function(e,t,r){t.exports={default:e("core-js/library/fn/object/define-property"),__esModule:true}},{"core-js/library/fn/object/define-property":16}],7:[function(e,t,r){t.exports={default:e("core-js/library/fn/object/freeze"),__esModule:true}},{"core-js/library/fn/object/freeze":17}],8:[function(e,t,r){"use strict";r.__esModule=true;r.default=function(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}},{}],9:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/object/define-property");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}r.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||false;a.configurable=true;if("value"in a)a.writable=true;(0,n.default)(e,a.key,a)}}return function(t,r,a){if(r)e(t.prototype,r);if(a)e(t,a);return t}}()},{"../core-js/object/define-property":6}],10:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/is-iterable");var n=o(a);var i=e("../core-js/get-iterator");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}r.default=function(){function e(e,t){var r=[];var a=true;var n=false;var i=undefined;try{for(var o=(0,l.default)(e),u;!(a=(u=o.next()).done);a=true){r.push(u.value);if(t&&r.length===t)break}}catch(e){n=true;i=e}finally{try{if(!a&&o["return"])o["return"]()}finally{if(n)throw i}}return r}return function(t,r){if(Array.isArray(t)){return t}else if((0,n.default)(Object(t))){return e(t,r)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}()},{"../core-js/get-iterator":3,"../core-js/is-iterable":4}],11:[function(e,t,r){"use strict";r.__esModule=true;var a=e("../core-js/array/from");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}r.default=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++){r[t]=e[t]}return r}else{return(0,n.default)(e)}}},{"../core-js/array/from":2}],12:[function(e,t,r){e("../../modules/es6.string.iterator");e("../../modules/es6.array.from");t.exports=e("../../modules/_core").Array.from},{"../../modules/_core":24,"../../modules/es6.array.from":73,"../../modules/es6.string.iterator":77}],13:[function(e,t,r){e("../modules/web.dom.iterable");e("../modules/es6.string.iterator");t.exports=e("../modules/core.get-iterator")},{"../modules/core.get-iterator":71,"../modules/es6.string.iterator":77,"../modules/web.dom.iterable":78}],14:[function(e,t,r){e("../modules/web.dom.iterable");e("../modules/es6.string.iterator");t.exports=e("../modules/core.is-iterable")},{"../modules/core.is-iterable":72,"../modules/es6.string.iterator":77,"../modules/web.dom.iterable":78}],15:[function(e,t,r){var a=e("../../modules/_core"),n=a.JSON||(a.JSON={stringify:JSON.stringify});t.exports=function e(t){return n.stringify.apply(n,arguments)}},{"../../modules/_core":24}],16:[function(e,t,r){e("../../modules/es6.object.define-property");var a=e("../../modules/_core").Object;t.exports=function e(t,r,n){return a.defineProperty(t,r,n)}},{"../../modules/_core":24,"../../modules/es6.object.define-property":75}],17:[function(e,t,r){e("../../modules/es6.object.freeze");t.exports=e("../../modules/_core").Object.freeze},{"../../modules/_core":24,"../../modules/es6.object.freeze":76}],18:[function(e,t,r){t.exports=function(e){if(typeof e!="function")throw TypeError(e+" is not a function!");return e}},{}],19:[function(e,t,r){t.exports=function(){}},{}],20:[function(e,t,r){var a=e("./_is-object");t.exports=function(e){if(!a(e))throw TypeError(e+" is not an object!");return e}},{"./_is-object":40}],21:[function(e,t,r){var a=e("./_to-iobject"),n=e("./_to-length"),i=e("./_to-index");t.exports=function(e){return function(t,r,l){var o=a(t),u=n(o.length),s=i(l,u),f;if(e&&r!=r)while(u>s){f=o[s++];if(f!=f)return true}else for(;u>s;s++)if(e||s in o){if(o[s]===r)return e||s||0}return!e&&-1}}},{"./_to-index":62,"./_to-iobject":64,"./_to-length":65}],22:[function(e,t,r){var a=e("./_cof"),n=e("./_wks")("toStringTag"),i=a(function(){return arguments}())=="Arguments";var l=function(e,t){try{return e[t]}catch(e){}};t.exports=function(e){var t,r,o;return e===undefined?"Undefined":e===null?"Null":typeof(r=l(t=Object(e),n))=="string"?r:i?a(t):(o=a(t))=="Object"&&typeof t.callee=="function"?"Arguments":o}},{"./_cof":23,"./_wks":69}],23:[function(e,t,r){var a={}.toString;t.exports=function(e){return a.call(e).slice(8,-1)}},{}],24:[function(e,t,r){var a=t.exports={version:"2.4.0"};if(typeof __e=="number")__e=a},{}],25:[function(e,t,r){"use strict";var a=e("./_object-dp"),n=e("./_property-desc");t.exports=function(e,t,r){if(t in e)a.f(e,t,n(0,r));else e[t]=r}},{"./_object-dp":50,"./_property-desc":56}],26:[function(e,t,r){var a=e("./_a-function");t.exports=function(e,t,r){a(e);if(t===undefined)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,a){return e.call(t,r,a)};case 3:return function(r,a,n){return e.call(t,r,a,n)}}return function(){return e.apply(t,arguments)}}},{"./_a-function":18}],27:[function(e,t,r){t.exports=function(e){if(e==undefined)throw TypeError("Can't call method on  "+e);return e}},{}],28:[function(e,t,r){t.exports=!e("./_fails")(function(){return Object.defineProperty({},"a",{get:function(){return 7}}).a!=7})},{"./_fails":32}],29:[function(e,t,r){var a=e("./_is-object"),n=e("./_global").document,i=a(n)&&a(n.createElement);t.exports=function(e){return i?n.createElement(e):{}}},{"./_global":33,"./_is-object":40}],30:[function(e,t,r){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},{}],31:[function(e,t,r){var a=e("./_global"),n=e("./_core"),i=e("./_ctx"),l=e("./_hide"),o="prototype";var u=function(e,t,r){var s=e&u.F,f=e&u.G,d=e&u.S,c=e&u.P,h=e&u.B,v=e&u.W,p=f?n:n[t]||(n[t]={}),m=p[o],g=f?a:d?a[t]:(a[t]||{})[o],b,y,x;if(f)r=t;for(b in r){y=!s&&g&&g[b]!==undefined;if(y&&b in p)continue;x=y?g[b]:r[b];p[b]=f&&typeof g[b]!="function"?r[b]:h&&y?i(x,a):v&&g[b]==x?function(e){var t=function(t,r,a){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,a)}return e.apply(this,arguments)};t[o]=e[o];return t}(x):c&&typeof x=="function"?i(Function.call,x):x;if(c){(p.virtual||(p.virtual={}))[b]=x;if(e&u.R&&m&&!m[b])l(m,b,x)}}};u.F=1;u.G=2;u.S=4;u.P=8;u.B=16;u.W=32;u.U=64;u.R=128;t.exports=u},{"./_core":24,"./_ctx":26,"./_global":33,"./_hide":35}],32:[function(e,t,r){t.exports=function(e){try{return!!e()}catch(e){return true}}},{}],33:[function(e,t,r){var a=t.exports=typeof window!="undefined"&&window.Math==Math?window:typeof self!="undefined"&&self.Math==Math?self:Function("return this")();if(typeof __g=="number")__g=a},{}],34:[function(e,t,r){var a={}.hasOwnProperty;t.exports=function(e,t){return a.call(e,t)}},{}],35:[function(e,t,r){var a=e("./_object-dp"),n=e("./_property-desc");t.exports=e("./_descriptors")?function(e,t,r){return a.f(e,t,n(1,r))}:function(e,t,r){e[t]=r;return e}},{"./_descriptors":28,"./_object-dp":50,"./_property-desc":56}],36:[function(e,t,r){t.exports=e("./_global").document&&document.documentElement},{"./_global":33}],37:[function(e,t,r){t.exports=!e("./_descriptors")&&!e("./_fails")(function(){return Object.defineProperty(e("./_dom-create")("div"),"a",{get:function(){return 7}}).a!=7})},{"./_descriptors":28,"./_dom-create":29,"./_fails":32}],38:[function(e,t,r){var a=e("./_cof");t.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return a(e)=="String"?e.split(""):Object(e)}},{"./_cof":23}],39:[function(e,t,r){var a=e("./_iterators"),n=e("./_wks")("iterator"),i=Array.prototype;t.exports=function(e){return e!==undefined&&(a.Array===e||i[n]===e)}},{"./_iterators":46,"./_wks":69}],40:[function(e,t,r){t.exports=function(e){return typeof e==="object"?e!==null:typeof e==="function"}},{}],41:[function(e,t,r){var a=e("./_an-object");t.exports=function(e,t,r,n){try{return n?t(a(r)[0],r[1]):t(r)}catch(t){var i=e["return"];if(i!==undefined)a(i.call(e));throw t}}},{"./_an-object":20}],42:[function(e,t,r){"use strict";var a=e("./_object-create"),n=e("./_property-desc"),i=e("./_set-to-string-tag"),l={};e("./_hide")(l,e("./_wks")("iterator"),function(){return this});t.exports=function(e,t,r){e.prototype=a(l,{next:n(1,r)});i(e,t+" Iterator")}},{"./_hide":35,"./_object-create":49,"./_property-desc":56,"./_set-to-string-tag":58,"./_wks":69}],43:[function(e,t,r){"use strict";var a=e("./_library"),n=e("./_export"),i=e("./_redefine"),l=e("./_hide"),o=e("./_has"),u=e("./_iterators"),s=e("./_iter-create"),f=e("./_set-to-string-tag"),d=e("./_object-gpo"),c=e("./_wks")("iterator"),h=!([].keys&&"next"in[].keys()),v="@@iterator",p="keys",m="values";var g=function(){return this};t.exports=function(e,t,r,b,y,x,w){s(r,t,b);var k=function(e){if(!h&&e in z)return z[e];switch(e){case p:return function t(){return new r(this,e)};case m:return function t(){return new r(this,e)}}return function t(){return new r(this,e)}};var M=t+" Iterator",_=y==m,S=false,z=e.prototype,T=z[c]||z[v]||y&&z[y],C=T||k(y),A=y?!_?C:k("entries"):undefined,N=t=="Array"?z.entries||T:T,O,j,L;if(N){L=d(N.call(new e));if(L!==Object.prototype){f(L,M,true);if(!a&&!o(L,c))l(L,c,g)}}if(_&&T&&T.name!==m){S=true;C=function e(){return T.call(this)}}if((!a||w)&&(h||S||!z[c])){l(z,c,C)}u[t]=C;u[M]=g;if(y){O={values:_?C:k(m),keys:x?C:k(p),entries:A};if(w)for(j in O){if(!(j in z))i(z,j,O[j])}else n(n.P+n.F*(h||S),t,O)}return O}},{"./_export":31,"./_has":34,"./_hide":35,"./_iter-create":42,"./_iterators":46,"./_library":47,"./_object-gpo":52,"./_redefine":57,"./_set-to-string-tag":58,"./_wks":69}],44:[function(e,t,r){var a=e("./_wks")("iterator"),n=false;try{var i=[7][a]();i["return"]=function(){n=true};Array.from(i,function(){throw 2})}catch(e){}t.exports=function(e,t){if(!t&&!n)return false;var r=false;try{var i=[7],l=i[a]();l.next=function(){return{done:r=true}};i[a]=function(){return l};e(i)}catch(e){}return r}},{"./_wks":69}],45:[function(e,t,r){t.exports=function(e,t){return{value:t,done:!!e}}},{}],46:[function(e,t,r){t.exports={}},{}],47:[function(e,t,r){t.exports=true},{}],48:[function(e,t,r){var a=e("./_uid")("meta"),n=e("./_is-object"),i=e("./_has"),l=e("./_object-dp").f,o=0;var u=Object.isExtensible||function(){return true};var s=!e("./_fails")(function(){return u(Object.preventExtensions({}))});var f=function(e){l(e,a,{value:{i:"O"+ ++o,w:{}}})};var d=function(e,t){if(!n(e))return typeof e=="symbol"?e:(typeof e=="string"?"S":"P")+e;if(!i(e,a)){if(!u(e))return"F";if(!t)return"E";f(e)}return e[a].i};var c=function(e,t){if(!i(e,a)){if(!u(e))return true;if(!t)return false;f(e)}return e[a].w};var h=function(e){if(s&&v.NEED&&u(e)&&!i(e,a))f(e);return e};var v=t.exports={KEY:a,NEED:false,fastKey:d,getWeak:c,onFreeze:h}},{"./_fails":32,"./_has":34,"./_is-object":40,"./_object-dp":50,"./_uid":68}],49:[function(e,t,r){var a=e("./_an-object"),n=e("./_object-dps"),i=e("./_enum-bug-keys"),l=e("./_shared-key")("IE_PROTO"),o=function(){},u="prototype";var s=function(){var t=e("./_dom-create")("iframe"),r=i.length,a="<",n=">",l;t.style.display="none";e("./_html").appendChild(t);t.src="javascript:";l=t.contentWindow.document;l.open();l.write(a+"script"+n+"document.F=Object"+a+"/script"+n);l.close();s=l.F;while(r--)delete s[u][i[r]];return s()};t.exports=Object.create||function e(t,r){var i;if(t!==null){o[u]=a(t);i=new o;o[u]=null;i[l]=t}else i=s();return r===undefined?i:n(i,r)}},{"./_an-object":20,"./_dom-create":29,"./_enum-bug-keys":30,"./_html":36,"./_object-dps":51,"./_shared-key":59}],50:[function(e,t,r){var a=e("./_an-object"),n=e("./_ie8-dom-define"),i=e("./_to-primitive"),l=Object.defineProperty;r.f=e("./_descriptors")?Object.defineProperty:function e(t,r,o){a(t);r=i(r,true);a(o);if(n)try{return l(t,r,o)}catch(e){}if("get"in o||"set"in o)throw TypeError("Accessors not supported!");if("value"in o)t[r]=o.value;return t}},{"./_an-object":20,"./_descriptors":28,"./_ie8-dom-define":37,"./_to-primitive":67}],51:[function(e,t,r){var a=e("./_object-dp"),n=e("./_an-object"),i=e("./_object-keys");t.exports=e("./_descriptors")?Object.defineProperties:function e(t,r){n(t);var l=i(r),o=l.length,u=0,s;while(o>u)a.f(t,s=l[u++],r[s]);return t}},{"./_an-object":20,"./_descriptors":28,"./_object-dp":50,"./_object-keys":54}],52:[function(e,t,r){var a=e("./_has"),n=e("./_to-object"),i=e("./_shared-key")("IE_PROTO"),l=Object.prototype;t.exports=Object.getPrototypeOf||function(e){e=n(e);if(a(e,i))return e[i];if(typeof e.constructor=="function"&&e instanceof e.constructor){return e.constructor.prototype}return e instanceof Object?l:null}},{"./_has":34,"./_shared-key":59,"./_to-object":66}],53:[function(e,t,r){var a=e("./_has"),n=e("./_to-iobject"),i=e("./_array-includes")(false),l=e("./_shared-key")("IE_PROTO");t.exports=function(e,t){var r=n(e),o=0,u=[],s;for(s in r)if(s!=l)a(r,s)&&u.push(s);while(t.length>o)if(a(r,s=t[o++])){~i(u,s)||u.push(s)}return u}},{"./_array-includes":21,"./_has":34,"./_shared-key":59,"./_to-iobject":64}],54:[function(e,t,r){var a=e("./_object-keys-internal"),n=e("./_enum-bug-keys");t.exports=Object.keys||function e(t){return a(t,n)}},{"./_enum-bug-keys":30,"./_object-keys-internal":53}],55:[function(e,t,r){var a=e("./_export"),n=e("./_core"),i=e("./_fails");t.exports=function(e,t){var r=(n.Object||{})[e]||Object[e],l={};l[e]=t(r);a(a.S+a.F*i(function(){r(1)}),"Object",l)}},{"./_core":24,"./_export":31,"./_fails":32}],56:[function(e,t,r){t.exports=function(e,t){return{enumerable:!(e&1),configurable:!(e&2),writable:!(e&4),value:t}}},{}],57:[function(e,t,r){t.exports=e("./_hide")},{"./_hide":35}],58:[function(e,t,r){var a=e("./_object-dp").f,n=e("./_has"),i=e("./_wks")("toStringTag");t.exports=function(e,t,r){if(e&&!n(e=r?e:e.prototype,i))a(e,i,{configurable:true,value:t})}},{"./_has":34,"./_object-dp":50,"./_wks":69}],59:[function(e,t,r){var a=e("./_shared")("keys"),n=e("./_uid");t.exports=function(e){return a[e]||(a[e]=n(e))}},{"./_shared":60,"./_uid":68}],60:[function(e,t,r){var a=e("./_global"),n="__core-js_shared__",i=a[n]||(a[n]={});t.exports=function(e){return i[e]||(i[e]={})}},{"./_global":33}],61:[function(e,t,r){var a=e("./_to-integer"),n=e("./_defined");t.exports=function(e){return function(t,r){var i=String(n(t)),l=a(r),o=i.length,u,s;if(l<0||l>=o)return e?"":undefined;u=i.charCodeAt(l);return u<55296||u>56319||l+1===o||(s=i.charCodeAt(l+1))<56320||s>57343?e?i.charAt(l):u:e?i.slice(l,l+2):(u-55296<<10)+(s-56320)+65536}}},{"./_defined":27,"./_to-integer":63}],62:[function(e,t,r){var a=e("./_to-integer"),n=Math.max,i=Math.min;t.exports=function(e,t){e=a(e);return e<0?n(e+t,0):i(e,t)}},{"./_to-integer":63}],63:[function(e,t,r){var a=Math.ceil,n=Math.floor;t.exports=function(e){return isNaN(e=+e)?0:(e>0?n:a)(e)}},{}],64:[function(e,t,r){var a=e("./_iobject"),n=e("./_defined");t.exports=function(e){return a(n(e))}},{"./_defined":27,"./_iobject":38}],65:[function(e,t,r){var a=e("./_to-integer"),n=Math.min;t.exports=function(e){return e>0?n(a(e),9007199254740991):0}},{"./_to-integer":63}],66:[function(e,t,r){var a=e("./_defined");t.exports=function(e){return Object(a(e))}},{"./_defined":27}],67:[function(e,t,r){var a=e("./_is-object");t.exports=function(e,t){if(!a(e))return e;var r,n;if(t&&typeof(r=e.toString)=="function"&&!a(n=r.call(e)))return n;if(typeof(r=e.valueOf)=="function"&&!a(n=r.call(e)))return n;if(!t&&typeof(r=e.toString)=="function"&&!a(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")}},{"./_is-object":40}],68:[function(e,t,r){var a=0,n=Math.random();t.exports=function(e){return"Symbol(".concat(e===undefined?"":e,")_",(++a+n).toString(36))}},{}],69:[function(e,t,r){var a=e("./_shared")("wks"),n=e("./_uid"),i=e("./_global").Symbol,l=typeof i=="function";var o=t.exports=function(e){return a[e]||(a[e]=l&&i[e]||(l?i:n)("Symbol."+e))};o.store=a},{"./_global":33,"./_shared":60,"./_uid":68}],70:[function(e,t,r){var a=e("./_classof"),n=e("./_wks")("iterator"),i=e("./_iterators");t.exports=e("./_core").getIteratorMethod=function(e){if(e!=undefined)return e[n]||e["@@iterator"]||i[a(e)]}},{"./_classof":22,"./_core":24,"./_iterators":46,"./_wks":69}],71:[function(e,t,r){var a=e("./_an-object"),n=e("./core.get-iterator-method");t.exports=e("./_core").getIterator=function(e){var t=n(e);if(typeof t!="function")throw TypeError(e+" is not iterable!");return a(t.call(e))}},{"./_an-object":20,"./_core":24,"./core.get-iterator-method":70}],72:[function(e,t,r){var a=e("./_classof"),n=e("./_wks")("iterator"),i=e("./_iterators");t.exports=e("./_core").isIterable=function(e){var t=Object(e);return t[n]!==undefined||"@@iterator"in t||i.hasOwnProperty(a(t))}},{"./_classof":22,"./_core":24,"./_iterators":46,"./_wks":69}],73:[function(e,t,r){"use strict";var a=e("./_ctx"),n=e("./_export"),i=e("./_to-object"),l=e("./_iter-call"),o=e("./_is-array-iter"),u=e("./_to-length"),s=e("./_create-property"),f=e("./core.get-iterator-method");n(n.S+n.F*!e("./_iter-detect")(function(e){Array.from(e)}),"Array",{from:function e(t){var r=i(t),n=typeof this=="function"?this:Array,d=arguments.length,c=d>1?arguments[1]:undefined,h=c!==undefined,v=0,p=f(r),m,g,b,y;if(h)c=a(c,d>2?arguments[2]:undefined,2);if(p!=undefined&&!(n==Array&&o(p))){for(y=p.call(r),g=new n;!(b=y.next()).done;v++){s(g,v,h?l(y,c,[b.value,v],true):b.value)}}else{m=u(r.length);for(g=new n(m);m>v;v++){s(g,v,h?c(r[v],v):r[v])}}g.length=v;return g}})},{"./_create-property":25,"./_ctx":26,"./_export":31,"./_is-array-iter":39,"./_iter-call":41,"./_iter-detect":44,"./_to-length":65,"./_to-object":66,"./core.get-iterator-method":70}],74:[function(e,t,r){"use strict";var a=e("./_add-to-unscopables"),n=e("./_iter-step"),i=e("./_iterators"),l=e("./_to-iobject");t.exports=e("./_iter-define")(Array,"Array",function(e,t){this._t=l(e);this._i=0;this._k=t},function(){var e=this._t,t=this._k,r=this._i++;if(!e||r>=e.length){this._t=undefined;return n(1)}if(t=="keys")return n(0,r);if(t=="values")return n(0,e[r]);return n(0,[r,e[r]])},"values");i.Arguments=i.Array;a("keys");a("values");a("entries")},{"./_add-to-unscopables":19,"./_iter-define":43,"./_iter-step":45,"./_iterators":46,"./_to-iobject":64}],75:[function(e,t,r){var a=e("./_export");a(a.S+a.F*!e("./_descriptors"),"Object",{defineProperty:e("./_object-dp").f})},{"./_descriptors":28,"./_export":31,"./_object-dp":50}],76:[function(e,t,r){var a=e("./_is-object"),n=e("./_meta").onFreeze;e("./_object-sap")("freeze",function(e){return function t(r){return e&&a(r)?e(n(r)):r}})},{"./_is-object":40,"./_meta":48,"./_object-sap":55}],77:[function(e,t,r){"use strict";var a=e("./_string-at")(true);e("./_iter-define")(String,"String",function(e){this._t=String(e);this._i=0},function(){var e=this._t,t=this._i,r;if(t>=e.length)return{value:undefined,done:true};r=a(e,t);this._i+=r.length;return{value:r,done:false}})},{"./_iter-define":43,"./_string-at":61}],78:[function(e,t,r){e("./es6.array.iterator");var a=e("./_global"),n=e("./_hide"),i=e("./_iterators"),l=e("./_wks")("toStringTag");for(var o=["NodeList","DOMTokenList","MediaList","StyleSheetList","CSSRuleList"],u=0;u<5;u++){var s=o[u],f=a[s],d=f&&f.prototype;if(d&&!d[l])n(d,l,s);i[s]=i.Array}},{"./_global":33,"./_hide":35,"./_iterators":46,"./_wks":69,"./es6.array.iterator":74}],79:[function(e,t,r){function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function n(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var n=a(e);n.lastIndex=r;var i=n.exec(t);if(i[i.length-1]==null){i.length=i.length-1;return i}else{return null}}t.exports=n},{}],80:[function(e,t,r){"use strict";var a=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty;var i=Object.prototype.propertyIsEnumerable;function l(e){if(e===null||e===undefined){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(e)}function o(){try{if(!Object.assign){return false}var e=new String("abc");e[5]="de";if(Object.getOwnPropertyNames(e)[0]==="5"){return false}var t={};for(var r=0;r<10;r++){t["_"+String.fromCharCode(r)]=r}var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(a.join("")!=="0123456789"){return false}var n={};"abcdefghijklmnopqrst".split("").forEach(function(e){n[e]=e});if(Object.keys(Object.assign({},n)).join("")!=="abcdefghijklmnopqrst"){return false}return true}catch(e){return false}}t.exports=o()?Object.assign:function(e,t){var r;var o=l(e);var u;for(var s=1;s<arguments.length;s++){r=Object(arguments[s]);for(var f in r){if(n.call(r,f)){o[f]=r[f]}}if(a){u=a(r);for(var d=0;d<u.length;d++){if(i.call(r,u[d])){o[u[d]]=r[u[d]]}}}}return o}},{}],81:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.controlWordRegex=undefined;var a=e("babel-runtime/helpers/classCallCheck");var n=v(a);var i=e("babel-runtime/helpers/createClass");var l=v(i);var o=e("match-at");var u=v(o);var s=e("./ParseError");var f=v(s);var d=e("./SourceLocation");var c=v(d);var h=e("./Token");function v(e){return e&&e.__esModule?e:{default:e}}var p="%[^\n]*[\n]";var m="\\\\[a-zA-Z@]+";var g="\\\\[^\ud800-\udfff]";var b=new RegExp("([ \r\n\t]+)|"+("("+p+"|")+"[!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\verb\\*([^]).*?\\3"+"|\\\\verb([^*a-zA-Z]).*?\\4"+("|"+m)+("|"+g)+")");var y=r.controlWordRegex=new RegExp("^"+m);var x=new RegExp("^"+p);var w=function(){function e(t){(0,n.default)(this,e);this.input=t;this.pos=0}(0,l.default)(e,[{key:"lex",value:function e(){var t=this.input;var r=this.pos;if(r===t.length){return new h.Token("EOF",new c.default(this,r,r))}var a=(0,u.default)(b,t,r);if(a===null){throw new f.default("Unexpected character: '"+t[r]+"'",new h.Token(t[r],new c.default(this,r,r+1)))}var n=a[2]||" ";var i=this.pos;this.pos+=a[0].length;var l=this.pos;if(x.test(n)){return this.lex()}else{return new h.Token(n,new c.default(this,i,l))}}}]);return e}();r.default=w},{"./ParseError":84,"./SourceLocation":88,"./Token":90,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"match-at":79}],82:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/toConsumableArray");var n=b(a);var i=e("babel-runtime/helpers/classCallCheck");var l=b(i);var o=e("babel-runtime/helpers/createClass");var u=b(o);var s=e("./Lexer");var f=b(s);var d=e("./Token");var c=e("./macros");var h=b(c);var v=e("./ParseError");var p=b(v);var m=e("object-assign");var g=b(m);function b(e){return e&&e.__esModule?e:{default:e}}var y=function(){function e(t,r){(0,l.default)(this,e);this.lexer=new f.default(t);this.macros=(0,g.default)({},h.default,r);this.stack=[]}(0,u.default)(e,[{key:"future",value:function e(){if(this.stack.length===0){this.pushToken(this.lexer.lex())}return this.stack[this.stack.length-1]}},{key:"popToken",value:function e(){this.future();return this.stack.pop()}},{key:"consumeSpaces",value:function e(){for(;;){var t=this.future();if(t.text===" "){this.stack.pop()}else{break}}}},{key:"expandOnce",value:function e(){var t;var r=this.popToken();var a=r.text;var i=a.charAt(0)==="\\";if(i&&s.controlWordRegex.test(a)){this.consumeSpaces()}if(!(i&&this.macros.hasOwnProperty(a))){this.pushToken(r);return r}var l=this._getExpansion(a),o=l.tokens,u=l.numArgs;var f=o;if(u){var d=[];for(var c=0;c<u;++c){this.consumeSpaces();var h=this.popToken();if(h.text==="{"){var v=[];var m=1;while(m!==0){var g=this.popToken();v.push(g);if(g.text==="{"){++m}else if(g.text==="}"){--m}else if(g.text==="EOF"){throw new p.default("End of input in macro argument",h)}}v.pop();v.reverse();d[c]=v}else if(h.text==="EOF"){throw new p.default("End of input expecting macro argument",r)}else{d[c]=[h]}}f=f.slice();for(var b=f.length-1;b>=0;--b){var y=f[b];if(y.text==="#"){if(b===0){throw new p.default("Incomplete placeholder at end of macro body",y)}y=f[--b];if(y.text==="#"){f.splice(b+1,1)}else if(/^[1-9]$/.test(y.text)){var x;(x=f).splice.apply(x,[b,2].concat((0,n.default)(d[+y.text-1])))}else{throw new p.default("Not a valid argument number",y)}}}}(t=this.stack).push.apply(t,(0,n.default)(f));return f}},{key:"expandAfterFuture",value:function e(){this.expandOnce();return this.future()}},{key:"expandNextToken",value:function e(){for(;;){var t=this.expandOnce();if(t instanceof d.Token){if(t.text==="\\relax"){this.stack.pop()}else{return this.stack.pop()}}}throw new Error}},{key:"_getExpansion",value:function e(t){var r=this.macros[t];var a=typeof r==="function"?r(this):r;if(typeof a==="string"){var n=0;if(a.indexOf("#")!==-1){var i=a.replace(/##/g,"");while(i.indexOf("#"+(n+1))!==-1){++n}}var l=new f.default(a);var o=[];var u=l.lex();while(u.text!=="EOF"){o.push(u);u=l.lex()}o.reverse();var s={tokens:o,numArgs:n};if(typeof r!=="function"){this.macros[t]=s}return s}return a}},{key:"pushToken",value:function e(t){this.stack.push(t)}}]);return e}();r.default=y},{"./Lexer":81,"./ParseError":84,"./Token":90,"./macros":113,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"babel-runtime/helpers/toConsumableArray":11,"object-assign":80}],83:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=s(a);var i=e("babel-runtime/helpers/createClass");var l=s(i);var o=e("./fontMetrics");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var d=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];var c=function e(t,r){return r.size<2?t:f[t-1][r.size-1]};var h=function(){function e(t){(0,n.default)(this,e);this.style=t.style;this.color=t.color;this.size=t.size||e.BASESIZE;this.textSize=t.textSize||this.size;this.phantom=!!t.phantom;this.font=t.font;this.sizeMultiplier=d[this.size-1];this.maxSize=t.maxSize;this._fontMetrics=undefined}(0,l.default)(e,[{key:"extend",value:function t(r){var a={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,maxSize:this.maxSize};for(var n in r){if(r.hasOwnProperty(n)){a[n]=r[n]}}return new e(a)}},{key:"havingStyle",value:function e(t){if(this.style===t){return this}else{return this.extend({style:t,size:c(this.textSize,t)})}}},{key:"havingCrampedStyle",value:function e(){return this.havingStyle(this.style.cramp())}},{key:"havingSize",value:function e(t){if(this.size===t&&this.textSize===t){return this}else{return this.extend({style:this.style.text(),size:t,textSize:t})}}},{key:"havingBaseStyle",value:function t(r){r=r||this.style.text();var a=c(e.BASESIZE,r);if(this.size===a&&this.textSize===e.BASESIZE&&this.style===r){return this}else{return this.extend({style:r,size:a})}}},{key:"withColor",value:function e(t){return this.extend({color:t})}},{key:"withPhantom",value:function e(){return this.extend({phantom:true})}},{key:"withFont",value:function e(t){return this.extend({font:t||this.font})}},{key:"sizingClasses",value:function e(t){if(t.size!==this.size){return["sizing","reset-size"+t.size,"size"+this.size]}else{return[]}}},{key:"baseSizingClasses",value:function t(){if(this.size!==e.BASESIZE){return["sizing","reset-size"+this.size,"size"+e.BASESIZE]}else{return[]}}},{key:"fontMetrics",value:function e(){if(!this._fontMetrics){this._fontMetrics=u.default.getFontMetrics(this.size)}return this._fontMetrics}},{key:"getColor",value:function t(){if(this.phantom){return"transparent"}else if(this.color!=null&&e.colorMap.hasOwnProperty(this.color)){return e.colorMap[this.color]}else{return this.color}}}]);return e}();h.BASESIZE=6;h.colorMap={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};r.default=h},{"./fontMetrics":101,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],84:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=u(a);var i=e("./ParseNode");var l=u(i);var o=e("./Token");function u(e){return e&&e.__esModule?e:{default:e}}var s=function e(t,r){(0,n.default)(this,e);var a="KaTeX parse error: "+t;var i=void 0;var l=r&&r.loc;if(l&&l.start<=l.end){var o=l.lexer.input;i=l.start;var u=l.end;if(i===o.length){
a+=" at end of input: "}else{a+=" at position "+(i+1)+": "}var s=o.slice(i,u).replace(/[^]/g,"$&\u0332");var f=void 0;if(i>15){f="\u2026"+o.slice(i-15,i)}else{f=o.slice(0,i)}var d=void 0;if(u+15<o.length){d=o.slice(u,u+15)+"\u2026"}else{d=o.slice(u)}a+=f+s+d}var c=new Error(a);c.name="ParseError";c.__proto__=e.prototype;c.position=i;return c};s.prototype.__proto__=Error.prototype;r.default=s},{"./ParseNode":85,"./Token":90,"babel-runtime/helpers/classCallCheck":8}],85:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=u(a);var i=e("./Token");var l=e("./SourceLocation");var o=u(l);function u(e){return e&&e.__esModule?e:{default:e}}var s=function e(t,r,a,i,l){(0,n.default)(this,e);this.type=t;this.value=r;this.mode=a;this.loc=o.default.range(i,l)};r.default=s},{"./SourceLocation":88,"./Token":90,"babel-runtime/helpers/classCallCheck":8}],86:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=M(a);var i=e("babel-runtime/helpers/createClass");var l=M(i);var o=e("./functions");var u=M(o);var s=e("./environments");var f=M(s);var d=e("./MacroExpander");var c=M(d);var h=e("./symbols");var v=M(h);var p=e("./utils");var m=M(p);var g=e("./units");var b=e("./unicodeRegexes");var y=e("./ParseNode");var x=M(y);var w=e("./ParseError");var k=M(w);function M(e){return e&&e.__esModule?e:{default:e}}function _(e,t){return{type:"arg",result:e,token:t}}function S(e){return{type:"fn",result:e.text,token:e}}function z(e){return{type:"$",result:"$",token:e}}function T(e){if(e.type==="$"){throw new k.default("Unexpected $",e.token)}return e}var C=function(){function e(t,r){(0,n.default)(this,e);this.gullet=new c.default(t,r.macros);if(r.colorIsTextColor){this.gullet.macros["\\color"]="\\textcolor"}this.settings=r;this.leftrightDepth=0}(0,l.default)(e,[{key:"expect",value:function e(t,r){if(this.nextToken.text!==t){throw new k.default("Expected '"+t+"', got '"+this.nextToken.text+"'",this.nextToken)}if(r!==false){this.consume()}}},{key:"consume",value:function e(){this.nextToken=this.gullet.expandNextToken()}},{key:"switchMode",value:function e(t){this.mode=t}},{key:"parse",value:function e(){this.mode="math";this.consume();var e=this.parseInput();return e}},{key:"parseInput",value:function e(){var t=this.parseExpression(false);this.expect("EOF",false);return t}},{key:"parseExpression",value:function t(r,a){var n=[];while(true){if(this.mode==="math"){this.consumeSpaces()}var i=this.nextToken;if(e.endOfExpression.indexOf(i.text)!==-1){break}if(a&&i.text===a){break}if(r&&u.default[i.text]&&u.default[i.text].infix){break}var l=this.parseAtom(a);if(!l){if(!this.settings.throwOnError&&i.text[0]==="\\"){var o=this.handleUnsupportedCmd();n.push(o);continue}break}n.push(l)}return this.handleInfixNodes(n)}},{key:"handleInfixNodes",value:function e(t){var r=-1;var a=void 0;for(var n=0;n<t.length;n++){var i=t[n];if(i.type==="infix"){if(r!==-1){throw new k.default("only one infix operator per group",i.value.token)}r=n;a=i.value.replaceWith}}if(r!==-1){var l=void 0;var o=void 0;var u=t.slice(0,r);var s=t.slice(r+1);if(u.length===1&&u[0].type==="ordgroup"){l=u[0]}else{l=new x.default("ordgroup",u,this.mode)}if(s.length===1&&s[0].type==="ordgroup"){o=s[0]}else{o=new x.default("ordgroup",s,this.mode)}var f=this.callFunction(a,[l,o],[]);return[new x.default(f.type,f,this.mode)]}else{return t}}},{key:"handleSupSubscript",value:function t(r){var a=this.nextToken;var n=a.text;this.consume();this.consumeSpaces();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new k.default("Expected group after '"+n+"'",a)}}var l=T(i);if(l.type==="fn"){var o=u.default[i.result].greediness;if(o>e.SUPSUB_GREEDINESS){return this.parseGivenFunction(i)}else{throw new k.default("Got function '"+i.result+"' with no arguments "+"as "+r,a)}}else{return i.result}}},{key:"handleUnsupportedCmd",value:function e(){var t=this.nextToken.text;var r=[];for(var a=0;a<t.length;a++){r.push(new x.default("textord",t[a],"text"))}var n=new x.default("text",{body:r,type:"text"},this.mode);var i=new x.default("color",{color:this.settings.errorColor,value:[n],type:"color"},this.mode);this.consume();return i}},{key:"parseAtom",value:function e(t){var r=this.parseImplicitGroup(t);if(this.mode==="text"){return r}var a=void 0;var n=void 0;while(true){this.consumeSpaces();var i=this.nextToken;if(i.text==="\\limits"||i.text==="\\nolimits"){if(!r||r.type!=="op"){throw new k.default("Limit controls must follow a math operator",i)}else{var l=i.text==="\\limits";r.value.limits=l;r.value.alwaysHandleSupSub=true}this.consume()}else if(i.text==="^"){if(a){throw new k.default("Double superscript",i)}a=this.handleSupSubscript("superscript")}else if(i.text==="_"){if(n){throw new k.default("Double subscript",i)}n=this.handleSupSubscript("subscript")}else if(i.text==="'"){if(a){throw new k.default("Double superscript",i)}var o=new x.default("textord","\\prime",this.mode);var u=[o];this.consume();while(this.nextToken.text==="'"){u.push(o);this.consume()}if(this.nextToken.text==="^"){u.push(this.handleSupSubscript("superscript"))}a=new x.default("ordgroup",u,this.mode)}else{break}}if(a||n){return new x.default("supsub",{base:r,sup:a,sub:n},this.mode)}else{return r}}},{key:"parseImplicitGroup",value:function t(r){var a=this.parseSymbol();if(a==null){return this.parseFunction()}var n=a.result;if(n==="\\left"){var i=this.parseGivenFunction(a);++this.leftrightDepth;var l=this.parseExpression(false);--this.leftrightDepth;this.expect("\\right",false);var o=this.parseFunction();return new x.default("leftright",{body:l,left:i.value.value,right:o.value.value},this.mode)}else if(n==="\\begin"){var u=this.parseGivenFunction(a);var s=u.value.name;if(!f.default.has(s)){throw new k.default("No such environment: "+s,u.value.nameGroup)}var d=f.default.get(s);var c=this.parseArguments("\\begin{"+s+"}",d),h=c.args,v=c.optArgs;var p={mode:this.mode,envName:s,parser:this};var g=d.handler(p,h,v);this.expect("\\end",false);var b=this.nextToken;var y=this.parseFunction();if(y.value.name!==s){throw new k.default("Mismatch: \\begin{"+s+"} matched "+"by \\end{"+y.value.name+"}",b)}g.position=y.position;return g}else if(m.default.contains(e.sizeFuncs,n)){this.consumeSpaces();var w=this.parseExpression(false,r);return new x.default("sizing",{size:m.default.indexOf(e.sizeFuncs,n)+1,value:w},this.mode)}else if(m.default.contains(e.styleFuncs,n)){this.consumeSpaces();var M=this.parseExpression(true,r);return new x.default("styling",{style:n.slice(1,n.length-5),value:M},this.mode)}else if(n in e.oldFontFuncs){var _=e.oldFontFuncs[n];this.consumeSpaces();var S=this.parseExpression(true,r);if(_.slice(0,4)==="text"){return new x.default("text",{style:_,body:new x.default("ordgroup",S,this.mode)},this.mode)}else{return new x.default("font",{font:_,body:new x.default("ordgroup",S,this.mode)},this.mode)}}else if(n==="\\color"){var z=this.parseColorGroup(false);if(!z){throw new k.default("\\color not followed by color")}var T=this.parseExpression(true,r);return new x.default("color",{type:"color",color:z.result.value,value:T},this.mode)}else if(n==="$"){if(this.mode==="math"){throw new k.default("$ within math mode")}this.consume();var C=this.mode;this.switchMode("math");var A=this.parseExpression(false,"$");this.expect("$",true);this.switchMode(C);return new x.default("styling",{style:"text",value:A},"math")}else{return this.parseGivenFunction(a)}}},{key:"parseFunction",value:function e(){var t=this.parseGroup();return t?this.parseGivenFunction(t):null}},{key:"parseGivenFunction",value:function e(t){t=T(t);if(t.type==="fn"){var r=t.result;var a=u.default[r];if(this.mode==="text"&&!a.allowedInText){throw new k.default("Can't use function '"+r+"' in text mode",t.token)}else if(this.mode==="math"&&a.allowedInMath===false){throw new k.default("Can't use function '"+r+"' in math mode",t.token)}var n=this.parseArguments(r,a),i=n.args,l=n.optArgs;var o=t.token;var s=this.callFunction(r,i,l,o);return new x.default(s.type,s,this.mode)}else{return t.result}}},{key:"callFunction",value:function e(t,r,a,n){var i={funcName:t,parser:this,token:n};return u.default[t].handler(i,r,a)}},{key:"parseArguments",value:function e(t,r){var a=r.numArgs+r.numOptionalArgs;if(a===0){return{args:[],optArgs:[]}}var n=r.greediness;var i=[];var l=[];for(var o=0;o<a;o++){var s=r.argTypes&&r.argTypes[o];var f=o<r.numOptionalArgs;if(o>0&&!f){this.consumeSpaces()}if(o===0&&!f&&this.mode==="math"){this.consumeSpaces()}var d=this.nextToken;var c=s?this.parseGroupOfType(s,f):this.parseGroup(f);if(!c){if(f){l.push(null);continue}if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){c=_(this.handleUnsupportedCmd(),d)}else{throw new k.default("Expected group after '"+t+"'",d)}}var h=void 0;c=T(c);if(c.type==="fn"){var v=u.default[c.result].greediness;if(v>n){h=this.parseGivenFunction(c)}else{throw new k.default("Got function '"+c.result+"' as "+"argument to '"+t+"'",d)}}else{h=c.result}(f?l:i).push(h)}return{args:i,optArgs:l}}},{key:"parseGroupOfType",value:function e(t,r){var a=this.mode;if(t==="original"){t=a}if(t==="color"){return this.parseColorGroup(r)}if(t==="size"){return this.parseSizeGroup(r)}if(t==="string"){var n=this.parseStringGroup("string",r);return new _(n.text,false)}this.switchMode(t);var i=this.parseGroup(r);this.switchMode(a);return i}},{key:"consumeSpaces",value:function e(){while(this.nextToken.text===" "){this.consume()}}},{key:"parseStringGroup",value:function e(t,r){if(r&&this.nextToken.text!=="["){return null}var a=this.mode;this.mode="text";this.expect(r?"[":"{");var n="";var i=this.nextToken;var l=i;while(this.nextToken.text!==(r?"]":"}")){if(this.nextToken.text==="EOF"){throw new k.default("Unexpected end of input in "+t,i.range(this.nextToken,n))}l=this.nextToken;n+=l.text;this.consume()}this.mode=a;this.expect(r?"]":"}");return i.range(l,n)}},{key:"parseRegexGroup",value:function e(t,r){var a=this.mode;this.mode="text";var n=this.nextToken;var i=n;var l="";while(this.nextToken.text!=="EOF"&&t.test(l+this.nextToken.text)){i=this.nextToken;l+=i.text;this.consume()}if(l===""){throw new k.default("Invalid "+r+": '"+n.text+"'",n)}this.mode=a;return n.range(i,l)}},{key:"parseColorGroup",value:function e(t){var r=this.parseStringGroup("color",t);if(!r){return null}var a=/^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(r.text);if(!a){throw new k.default("Invalid color: '"+r.text+"'",r)}return _(new x.default("color",a[0],this.mode),r)}},{key:"parseSizeGroup",value:function e(t){var r=void 0;if(!t&&this.nextToken.text!=="{"){r=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{r=this.parseStringGroup("size",t)}if(!r){return null}var a=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(r.text);if(!a){throw new k.default("Invalid size: '"+r.text+"'",r)}var n={number:+(a[1]+a[2]),unit:a[3]};if(!(0,g.validUnit)(n)){throw new k.default("Invalid unit: '"+n.unit+"'",r)}return _(new x.default("size",n,this.mode),r)}},{key:"parseGroup",value:function e(t){var r=this.nextToken;if(this.nextToken.text===(t?"[":"{")){this.consume();var a=this.parseExpression(false,t?"]":"}");var n=this.nextToken;this.expect(t?"]":"}");if(this.mode==="text"){this.formLigatures(a)}return _(new x.default("ordgroup",a,this.mode,r,n),r.range(n,r.text))}else{return t?null:this.parseSymbol()}}},{key:"formLigatures",value:function e(t){var r=t.length-1;for(var a=0;a<r;++a){var n=t[a];var i=n.value;if(i==="-"&&t[a+1].value==="-"){if(a+1<r&&t[a+2].value==="-"){t.splice(a,3,new x.default("textord","---","text",n,t[a+2]));r-=2}else{t.splice(a,2,new x.default("textord","--","text",n,t[a+1]));r-=1}}if((i==="'"||i==="`")&&t[a+1].value===i){t.splice(a,2,new x.default("textord",i+i,"text",n,t[a+1]));r-=1}}}},{key:"parseSymbol",value:function e(){var t=this.nextToken;if(u.default[t.text]){this.consume();return S(t)}else if(v.default[this.mode][t.text]){this.consume();return _(new x.default(v.default[this.mode][t.text].group,t.text,this.mode,t),t)}else if(this.mode==="text"&&b.cjkRegex.test(t.text)){this.consume();return _(new x.default("textord",t.text,this.mode,t),t)}else if(t.text==="$"){return z(t)}else if(/^\\verb[^a-zA-Z]/.test(t.text)){this.consume();var r=t.text.slice(5);var a=r.charAt(0)==="*";if(a){r=r.slice(1)}if(r.length<2||r.charAt(0)!==r.slice(-1)){throw new k.default("\\verb assertion failed --\n                    please report what input caused this bug")}r=r.slice(1,-1);return _(new x.default("verb",{body:r,star:a},"text"),t)}else{return null}}}]);return e}();C.endOfExpression=["}","\\end","\\right","&","\\\\","\\cr"];C.SUPSUB_GREEDINESS=1;C.sizeFuncs=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];C.styleFuncs=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];C.oldFontFuncs={"\\rm":"mathrm","\\sf":"mathsf","\\tt":"mathtt","\\bf":"mathbf","\\it":"mathit"};r.default=C},{"./MacroExpander":82,"./ParseError":84,"./ParseNode":85,"./environments":99,"./functions":103,"./symbols":118,"./unicodeRegexes":119,"./units":120,"./utils":121,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],87:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=o(a);var i=e("./utils");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u=function e(t){(0,n.default)(this,e);t=t||{};this.displayMode=l.default.deflt(t.displayMode,false);this.throwOnError=l.default.deflt(t.throwOnError,true);this.errorColor=l.default.deflt(t.errorColor,"#cc0000");this.macros=t.macros||{};this.colorIsTextColor=l.default.deflt(t.colorIsTextColor,false);this.maxSize=Math.max(0,l.default.deflt(t.maxSize,Infinity))};r.default=u},{"./utils":121,"babel-runtime/helpers/classCallCheck":8}],88:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/core-js/object/freeze");var n=s(a);var i=e("babel-runtime/helpers/classCallCheck");var l=s(i);var o=e("babel-runtime/helpers/createClass");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=function(){function e(t,r,a){(0,l.default)(this,e);this.lexer=t;this.start=r;this.end=a;(0,n.default)(this)}(0,u.default)(e,null,[{key:"range",value:function t(r,a){if(!a){return r&&r.loc}else if(!r||!r.loc||!a.loc||r.loc.lexer!==a.loc.lexer){return null}else{return new e(r.loc.lexer,r.loc.start,a.loc.end)}}}]);return e}();r.default=f},{"babel-runtime/core-js/object/freeze":7,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],89:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/classCallCheck");var n=o(a);var i=e("babel-runtime/helpers/createClass");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,r,a){(0,n.default)(this,e);this.id=t;this.size=r;this.cramped=a}(0,l.default)(e,[{key:"sup",value:function e(){return g[b[this.id]]}},{key:"sub",value:function e(){return g[y[this.id]]}},{key:"fracNum",value:function e(){return g[x[this.id]]}},{key:"fracDen",value:function e(){return g[w[this.id]]}},{key:"cramp",value:function e(){return g[k[this.id]]}},{key:"text",value:function e(){return g[M[this.id]]}},{key:"isTight",value:function e(){return this.size>=2}}]);return e}();var s=0;var f=1;var d=2;var c=3;var h=4;var v=5;var p=6;var m=7;var g=[new u(s,0,false),new u(f,0,true),new u(d,1,false),new u(c,1,true),new u(h,2,false),new u(v,2,true),new u(p,3,false),new u(m,3,true)];var b=[h,v,h,v,p,m,p,m];var y=[v,v,v,v,m,m,m,m];var x=[d,c,h,v,p,m,p,m];var w=[c,c,v,v,m,m,m,m];var k=[f,f,c,c,v,v,m,m];var M=[s,f,d,c,d,c,d,c];r.default={DISPLAY:g[s],TEXT:g[d],SCRIPT:g[h],SCRIPTSCRIPT:g[p]}},{"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],90:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.Token=undefined;var a=e("babel-runtime/helpers/classCallCheck");var n=s(a);var i=e("babel-runtime/helpers/createClass");var l=s(i);var o=e("./SourceLocation");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=r.Token=function(){function e(t,r){(0,n.default)(this,e);this.text=t;this.loc=r}(0,l.default)(e,[{key:"range",value:function t(r,a){return new e(a,u.default.range(this,r))}}]);return e}()},{"./SourceLocation":88,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],91:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./domTree");var n=d(a);var i=e("./fontMetrics");var l=d(i);var o=e("./symbols");var u=d(o);var s=e("./utils");var f=d(s);function d(e){return e&&e.__esModule?e:{default:e}}var c=["\\imath","\\jmath","\\pounds"];var h=function e(t,r,a){if(u.default[a][t]&&u.default[a][t].replace){t=u.default[a][t].replace}return{value:t,metrics:l.default.getCharacterMetrics(t,r)}};var v=function e(t,r,a,i,l){var o=h(t,r,a);var u=o.metrics;t=o.value;var s=void 0;if(u){var f=u.italic;if(a==="text"){f=0}s=new n.default.symbolNode(t,u.height,u.depth,f,u.skew,l)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+t+"' in style '"+r+"'");s=new n.default.symbolNode(t,0,0,0,0,l)}if(i){s.maxFontSize=i.sizeMultiplier;if(i.style.isTight()){s.classes.push("mtight")}if(i.getColor()){s.style.color=i.getColor()}}return s};var p=function e(t,r,a,n){if(t==="\\"||u.default[r][t].font==="main"){return v(t,"Main-Regular",r,a,n)}else{return v(t,"AMS-Regular",r,a,n.concat(["amsrm"]))}};var m=function e(t,r,a,n,i){if(i==="mathord"){var l=g(t,r,a,n);return v(t,l.fontName,r,a,n.concat([l.fontClass]))}else if(i==="textord"){var o=u.default[r][t]&&u.default[r][t].font;if(o==="ams"){return v(t,"AMS-Regular",r,a,n.concat(["amsrm"]))}else{return v(t,"Main-Regular",r,a,n.concat(["mathrm"]))}}else{throw new Error("unexpected type: "+i+" in mathDefault")}};var g=function e(t,r,a,n){if(/[0-9]/.test(t.charAt(0))||f.default.contains(c,t)){return{fontName:"Main-Italic",fontClass:"mainit"}}else{return{fontName:"Math-Italic",fontClass:"mathit"}}};var b=function e(t,r,a){var n=t.mode;var i=t.value;var l=["mord"];var o=r.font;if(o){var u=void 0;if(o==="mathit"||f.default.contains(c,i)){u=g(i,n,r,l)}else{u=T[o]}if(h(i,u.fontName,n).metrics){return v(i,u.fontName,n,r,l.concat([u.fontClass||o]))}else{return m(i,n,r,l,a)}}else{return m(i,n,r,l,a)}};var y=function e(t){for(var r=0;r<t.length-1;r++){if(t[r].tryCombine(t[r+1])){t.splice(r+1,1);r--}}return t};var x=function e(t){var r=0;var a=0;var n=0;if(t.children){for(var i=0;i<t.children.length;i++){if(t.children[i].height>r){r=t.children[i].height}if(t.children[i].depth>a){a=t.children[i].depth}if(t.children[i].maxFontSize>n){n=t.children[i].maxFontSize}}}t.height=r;t.depth=a;t.maxFontSize=n};var w=function e(t,r,a){var i=new n.default.span(t,r,a);x(i);return i};var k=function e(t,r){t.children=r.concat(t.children);x(t)};var M=function e(t,r){var a=new n.default.documentFragment(t,r);x(a);return a};var _=function e(t,r){var a=t.positionType,i=t.positionData,l=t.children;var o=void 0;var u=void 0;var s=void 0;if(a==="individualShift"){var f=l;l=[f[0]];o=-f[0].shift-f[0].elem.depth;u=o;for(s=1;s<f.length;s++){var d=-f[s].shift-u-f[s].elem.depth;var c=d-(f[s-1].elem.height+f[s-1].elem.depth);u=u+d;l.push({type:"kern",size:c});l.push(f[s])}}else if(a==="top"){var h=i;for(s=0;s<l.length;s++){if(l[s].type==="kern"){h-=l[s].size}else{h-=l[s].elem.height+l[s].elem.depth}}o=h}else if(a==="bottom"){o=-i}else if(a==="shift"){o=-l[0].elem.depth-i}else if(a==="firstBaseline"){o=-l[0].elem.depth}else{o=0}var v=0;for(s=0;s<l.length;s++){if(l[s].type==="elem"){var p=l[s].elem;v=Math.max(v,p.maxFontSize,p.height)}}v+=2;var m=w(["pstrut"],[]);m.style.height=v+"em";var g=[];var b=o;var y=o;u=o;for(s=0;s<l.length;s++){if(l[s].type==="kern"){u+=l[s].size}else{var x=l[s].elem;var k=w([],[m,x]);k.style.top=-v-u-x.depth+"em";if(l[s].marginLeft){k.style.marginLeft=l[s].marginLeft}if(l[s].marginRight){k.style.marginRight=l[s].marginRight}g.push(k);u+=x.height+x.depth}b=Math.min(b,u);y=Math.max(y,u)}var M=w(["vlist"],g);M.style.height=y+"em";var _=void 0;if(b<0){var S=w(["vlist"],[]);S.style.height=-b+"em";var z=w(["vlist-s"],[new n.default.symbolNode("\u200b")]);_=[w(["vlist-r"],[M,z]),w(["vlist-r"],[S])]}else{_=[w(["vlist-r"],[M])]}var T=w(["vlist-t"],_);if(_.length===2){T.classes.push("vlist-t2")}T.height=y;T.depth=-b;return T};var S=function e(t,r){var a=t.value.body;if(t.value.star){a=a.replace(/ /g,"\u2423")}else{a=a.replace(/ /g,"\xa0")}return a};var z={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var T={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};r.default={fontMap:T,makeSymbol:v,mathsym:p,makeSpan:w,makeFragment:M,makeVList:_,makeOrd:b,makeVerb:S,tryCombineChars:y,prependChildren:k,spacingFunctions:z}},{"./domTree":98,"./fontMetrics":101,"./symbols":118,"./utils":121}],92:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.buildGroup=r.makeLineSpan=r.groupTypes=r.makeNullDelimiter=r.buildExpression=r.spliceSpaces=undefined;var a=e("babel-runtime/core-js/json/stringify");var n=x(a);r.default=B;var i=e("./ParseError");var l=x(i);var o=e("./Style");var u=x(o);var s=e("./buildCommon");var f=x(s);var d=e("./delimiter");var c=x(d);var h=e("./domTree");var v=x(h);var p=e("./units");var m=e("./utils");var g=x(m);var b=e("./stretchy");var y=x(b);function x(e){return e&&e.__esModule?e:{default:e}}var w=f.default.makeSpan;var k=function e(t){return t instanceof v.default.span&&t.classes[0]==="mspace"};var M=function e(t){return t&&t.classes[0]==="mbin"};var _=function e(t,r){if(t){return g.default.contains(["mbin","mopen","mrel","mop","mpunct"],t.classes[0])}else{return r}};var S=function e(t,r){if(t){return g.default.contains(["mrel","mclose","mpunct"],t.classes[0])}else{return r}};var z=r.spliceSpaces=function e(t,r){var a=r;while(a<t.length&&k(t[a])){a++}if(a===r){return null}else{return t.splice(r,a-r)}};var T=r.buildExpression=function e(t,r,a){var n=[];for(var i=0;i<t.length;i++){var l=t[i];var o=P(l,r);if(o instanceof v.default.documentFragment){Array.prototype.push.apply(n,o.children)}else{n.push(o)}}for(var u=0;u<n.length;u++){var s=z(n,u);if(s){if(u<n.length){if(n[u]instanceof v.default.symbolNode){n[u]=w([].concat(n[u].classes),[n[u]])}f.default.prependChildren(n[u],s)}else{Array.prototype.push.apply(n,s);break}}}for(var d=0;d<n.length;d++){var c=1;var h=1;while(n[d-c]&&n[d-c].classes[0]==="cursor"){c++}while(n[d+h]&&n[d+h].classes[0]==="cursor"){h++}if(M(n[d])&&(_(n[d-c],a)||S(n[d+h],a))){n[d].classes[0]="mord"}}for(var p=0;p<n.length;p++){if(n[p].value==="\u0338"&&p+1<n.length){var m=n.slice(p,p+2);m[0].classes=["mainrm"];m[0].style.position="absolute";m[0].style.right="0";var g=n[p+1].classes;var b=w(g,m);if(g.indexOf("mord")!==-1){b.style.paddingLeft="0.277771em"}b.style.position="relative";n.splice(p,2,b)}}return n};var C=function e(t){if(t instanceof v.default.documentFragment){if(t.children.length){return e(t.children[t.children.length-1])}}else{if(g.default.contains(["mord","mop","mbin","mrel","mopen","mclose","mpunct","minner"],t.classes[0])){return t.classes[0]}}return null};var A=function e(t,r){if(!t.value.base){return false}else{var a=t.value.base;if(a.type==="op"){return a.value.limits&&(r.style.size===u.default.DISPLAY.size||a.value.alwaysHandleSupSub)}else if(a.type==="accent"){return O(a.value.base)}else if(a.type==="horizBrace"){var n=t.value.sub?false:true;return n===a.value.isOver}else{return null}}};var N=function e(t){if(!t){return false}else if(t.type==="ordgroup"){if(t.value.length===1){return e(t.value[0])}else{return t}}else if(t.type==="color"){if(t.value.value.length===1){return e(t.value.value[0])}else{return t}}else if(t.type==="font"){return e(t.value.body)}else{return t}};var O=function e(t){var r=N(t);return r.type==="mathord"||r.type==="textord"||r.type==="bin"||r.type==="rel"||r.type==="inner"||r.type==="open"||r.type==="close"||r.type==="punct"};var j=r.makeNullDelimiter=function e(t,r){var a=["nulldelimiter"].concat(t.baseSizingClasses());return w(r.concat(a))};var L=r.groupTypes={};L.mathord=function(e,t){return f.default.makeOrd(e,t,"mathord")};L.textord=function(e,t){return f.default.makeOrd(e,t,"textord")};L.bin=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mbin"])};L.rel=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mrel"])};L.open=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mopen"])};L.close=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mclose"])};L.inner=function(e,t){return f.default.mathsym(e.value,e.mode,t,["minner"])};L.punct=function(e,t){return f.default.mathsym(e.value,e.mode,t,["mpunct"])};L.ordgroup=function(e,t){return w(["mord"],T(e.value,t,true),t)};L.text=function(e,t){var r=t.withFont(e.value.font);var a=T(e.value.body,r,true);f.default.tryCombineChars(a);return w(["mord","text"],a,r)};L.xmlClass=function(e,t,r){var a=T(e.value.value,t,r);return new f.default.makeFragment(a,[e.value.cl])};L.color=function(e,t){var r=T(e.value.value,t.withColor(e.value.color),false);return new f.default.makeFragment(r)};L.supsub=function(e,t){if(A(e,t)){return L[e.value.base.type](e,t)}var r=P(e.value.base,t);var a=void 0;var n=void 0;var i=t.fontMetrics();var l=void 0;var o=0;var s=0;if(e.value.sup){l=t.havingStyle(t.style.sup());a=P(e.value.sup,l,t);if(!O(e.value.base)){o=r.height-l.fontMetrics().supDrop*l.sizeMultiplier/t.sizeMultiplier}}if(e.value.sub){l=t.havingStyle(t.style.sub());n=P(e.value.sub,l,t);if(!O(e.value.base)){s=r.depth+l.fontMetrics().subDrop*l.sizeMultiplier/t.sizeMultiplier}}var d=void 0;if(t.style===u.default.DISPLAY){d=i.sup1}else if(t.style.cramped){d=i.sup3}else{d=i.sup2}var c=t.sizeMultiplier;var h=.5/i.ptPerEm/c+"em";var p=void 0;if(!e.value.sup){s=Math.max(s,i.sub1,n.height-.8*i.xHeight);var m=[{type:"elem",elem:n,marginRight:h}];if(r instanceof v.default.symbolNode){m[0].marginLeft=-r.italic+"em"}p=f.default.makeVList({positionType:"shift",positionData:s,children:m},t)}else if(!e.value.sub){o=Math.max(o,d,a.depth+.25*i.xHeight);p=f.default.makeVList({positionType:"shift",positionData:-o,children:[{type:"elem",elem:a,marginRight:h}]},t)}else{o=Math.max(o,d,a.depth+.25*i.xHeight);s=Math.max(s,i.sub2);var g=i.defaultRuleThickness;if(o-a.depth-(n.height-s)<4*g){s=4*g-(o-a.depth)+n.height;var b=.8*i.xHeight-(o-a.depth);if(b>0){o+=b;s-=b}}var y=[{type:"elem",elem:n,shift:s,marginRight:h},{type:"elem",elem:a,shift:-o,marginRight:h}];if(r instanceof v.default.symbolNode){y[0].marginLeft=-r.italic+"em"}p=f.default.makeVList({positionType:"individualShift",children:y},t)}var x=C(r)||"mord";return w([x],[r,w(["msupsub"],[p])],t)};L.spacing=function(e,t){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){if(e.mode==="text"){return f.default.makeOrd(e,t,"textord")}else{return w(["mspace"],[f.default.mathsym(e.value,e.mode,t)],t)}}else{return w(["mspace",f.default.spacingFunctions[e.value].className],[],t)}};var E=r.makeLineSpan=function e(t,r,a){var n=w([t],[],r);n.height=a||r.fontMetrics().defaultRuleThickness;n.style.borderBottomWidth=n.height+"em";n.maxFontSize=1;return n};L.overline=function(e,t){var r=P(e.value.body,t.havingCrampedStyle());var a=E("overline-line",t);var n=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*a.height},{type:"elem",elem:a},{type:"kern",size:a.height}]},t);return w(["mord","overline"],[n],t)};L.underline=function(e,t){var r=P(e.value.body,t);var a=E("underline-line",t);var n=f.default.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:a.height},{type:"elem",elem:a},{type:"kern",size:3*a.height},{type:"elem",elem:r}]},t);return w(["mord","underline"],[n],t)};L.sqrt=function(e,t){var r=P(e.value.body,t.havingCrampedStyle());if(r.height===0){r.height=t.fontMetrics().xHeight}if(r instanceof v.default.documentFragment){r=w([],[r],t)}var a=t.fontMetrics();var n=a.defaultRuleThickness;var i=n;if(t.style.id<u.default.TEXT.id){i=t.fontMetrics().xHeight}var l=n+i/4;var o=(r.height+r.depth+l+n)*t.sizeMultiplier;var s=c.default.customSizedDelim("\\surd",o,false,t,e.mode);var d=t.fontMetrics().sqrtRuleThickness*s.sizeMultiplier;var h=s.height-d;if(h>r.height+r.depth+l){l=(l+h-r.height-r.depth)/2}var p=s.height-r.height-l-d;r.style.paddingLeft=s.advanceWidth+"em";var m=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:-(r.height+p)},{type:"elem",elem:s},{type:"kern",size:d}]},t);m.children[0].children[0].classes.push("svg-align");if(!e.value.index){return w(["mord","sqrt"],[m],t)}else{var g=t.havingStyle(u.default.SCRIPTSCRIPT);var b=P(e.value.index,g,t);var y=.6*(m.height-m.depth);var x=f.default.makeVList({positionType:"shift",positionData:-y,children:[{type:"elem",elem:b}]},t);var k=w(["root"],[x]);return w(["mord","sqrt"],[k,m],t)}};function q(e,t,r){var a=T(e,t,false);var n=t.sizeMultiplier/r.sizeMultiplier;for(var i=0;i<a.length;i++){var l=g.default.indexOf(a[i].classes,"sizing");if(l<0){Array.prototype.push.apply(a[i].classes,t.sizingClasses(r))}else if(a[i].classes[l+1]==="reset-size"+t.size){a[i].classes[l+1]="reset-size"+r.size}a[i].height*=n;a[i].depth*=n}return f.default.makeFragment(a)}L.sizing=function(e,t){var r=t.havingSize(e.value.size);return q(e.value.value,r,t)};L.styling=function(e,t){var r={display:u.default.DISPLAY,text:u.default.TEXT,script:u.default.SCRIPT,scriptscript:u.default.SCRIPTSCRIPT};var a=r[e.value.style];var n=t.havingStyle(a);return q(e.value.value,n,t)};L.font=function(e,t){var r=e.value.font;return P(e.value.body,t.withFont(r))};L.verb=function(e,t){var r=f.default.makeVerb(e,t);var a=[];var n=t.havingStyle(t.style.text());for(var i=0;i<r.length;i++){if(r[i]==="\xa0"){var l=w(["mord","rule"],[],n);l.style.marginLeft="0.525em";a.push(l)}else{a.push(f.default.makeSymbol(r[i],"Typewriter-Regular",e.mode,n,["mathtt"]))}}f.default.tryCombineChars(a);return w(["mord","text"].concat(n.sizingClasses(t)),a,n)};L.cursor=function(e,t,r){var a=w(["cursor"],[],t);var n=0;var i=(0,p.calculateSize)(e.value.height,t);if(e.value.shift){n=(0,p.calculateSize)(e.value.shift,t)}n/=t.sizeMultiplier;i/=t.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=n+"em";a.style.height=i+"em";a.width=1;a.height=i+n;a.depth=-n;e.value.previous=r;return a};L.rule=function(e,t,r){var a=w(["mord","rule"],[],t);var n=0;if(e.value.shift){n=(0,p.calculateSize)(e.value.shift,t)}var i=(0,p.calculateSize)(e.value.width,t);var l=(0,p.calculateSize)(e.value.height,t);a.style.borderRightWidth=i+"em";a.style.borderTopWidth=l+"em";a.style.bottom=n+"em";a.width=i;a.height=l+n;a.depth=-n;a.maxFontSize=l*1.125*t.sizeMultiplier;return a};L.kern=function(e,t){var r=w(["mord","rule"],[],t);if(e.value.dimension){var a=(0,p.calculateSize)(e.value.dimension,t);r.style.marginLeft=a+"em"}return r};L.accent=function(e,t){var r=e.value.base;var a=void 0;if(e.type==="supsub"){var n=e;e=n.value.base;r=e.value.base;n.value.base=r;a=P(n,t);
}var i=P(r,t.havingCrampedStyle());var l=e.value.isShifty&&O(r);var o=0;if(l){var u=N(r);var s=P(u,t.havingCrampedStyle());o=s.skew}var d=Math.min(i.height,t.fontMetrics().xHeight);var c=void 0;if(!e.value.isStretchy){var h=f.default.makeSymbol(e.value.label,"Main-Regular",e.mode,t);h.italic=0;var v=null;if(e.value.label==="\\vec"){v="accent-vec"}else if(e.value.label==="\\H"){v="accent-hungarian"}c=w([],[h]);c=w(["accent-body",v],[c]);c.style.marginLeft=2*o+"em";c=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"kern",size:-d},{type:"elem",elem:c}]},t)}else{c=y.default.svgSpan(e,t);c=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"elem",elem:c}]},t);var p=c.children[0].children[0].children[1];p.classes.push("svg-align");if(o>0){p.style.width="calc(100% - "+2*o+"em)";p.style.marginLeft=2*o+"em"}}var m=w(["mord","accent"],[c],t);if(a){a.children[0]=m;a.height=Math.max(m.height,a.height);a.classes[0]="mord";return a}else{return m}};L.horizBrace=function(e,t){var r=t.style;var a=e.type==="supsub";var n=void 0;var i=void 0;if(a){if(e.value.sup){i=t.havingStyle(r.sup());n=P(e.value.sup,i,t)}else{i=t.havingStyle(r.sub());n=P(e.value.sub,i,t)}e=e.value.base}var l=P(e.value.base,t.havingBaseStyle(u.default.DISPLAY));var o=y.default.svgSpan(e,t);var s=void 0;if(e.value.isOver){s=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:l},{type:"kern",size:.1},{type:"elem",elem:o}]},t);s.children[0].children[0].children[1].classes.push("svg-align")}else{s=f.default.makeVList({positionType:"bottom",positionData:l.depth+.1+o.height,children:[{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:l}]},t);s.children[0].children[0].children[0].classes.push("svg-align")}if(a){var d=w(["mord",e.value.isOver?"mover":"munder"],[s],t);if(e.value.isOver){s=f.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:d},{type:"kern",size:.2},{type:"elem",elem:n}]},t)}else{s=f.default.makeVList({positionType:"bottom",positionData:d.depth+.2+n.height,children:[{type:"elem",elem:n},{type:"kern",size:.2},{type:"elem",elem:d}]},t)}}return w(["mord",e.value.isOver?"mover":"munder"],[s],t)};L.accentUnder=function(e,t){var r=P(e.value.base,t);var a=y.default.svgSpan(e,t);var n=/tilde/.test(e.value.label)?.12:0;var i=f.default.makeVList({positionType:"bottom",positionData:a.height+n,children:[{type:"elem",elem:a},{type:"kern",size:n},{type:"elem",elem:r}]},t);i.children[0].children[0].children[0].classes.push("svg-align");return w(["mord","accentunder"],[i],t)};L.enclose=function(e,t){var r=P(e.value.body,t);var a=e.value.label.substr(1);var n=t.sizeMultiplier;var i=void 0;var l=0;var o=/color/.test(a);if(a==="sout"){i=w(["stretchy","sout"]);i.height=t.fontMetrics().defaultRuleThickness/n;l=-.5*t.fontMetrics().xHeight}else{r.classes.push(/cancel/.test(a)?"cancel-pad":"boxpad");var u=0;if(/box/.test(a)){u=a==="colorbox"?.3:.34}else{u=O(e.value.body)?.2:0}i=y.default.encloseSpan(r,a,u,t);l=r.depth+u;if(o){i.style.backgroundColor=e.value.backgroundColor.value;if(a==="fcolorbox"){i.style.borderColor=e.value.borderColor.value}}}var s=void 0;if(o){s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:l},{type:"elem",elem:r,shift:0}]},t)}else{s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:0},{type:"elem",elem:i,shift:l}]},t)}if(/cancel/.test(a)){s.children[0].children[0].children[1].classes.push("svg-align");return w(["mord","cancel-lap"],[s],t)}else{return w(["mord"],[s],t)}};L.xArrow=function(e,t){var r=t.style;var a=t.havingStyle(r.sup());var n=P(e.value.body,a,t);n.classes.push("x-arrow-pad");var i=void 0;if(e.value.below){a=t.havingStyle(r.sub());i=P(e.value.below,a,t);i.classes.push("x-arrow-pad")}var l=y.default.svgSpan(e,t);var o=-t.fontMetrics().axisHeight+.5*l.height;var u=-t.fontMetrics().axisHeight-.5*l.height-.111;var s=void 0;if(e.value.below){var d=-t.fontMetrics().axisHeight+i.height+.5*l.height+.111;s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:n,shift:u},{type:"elem",elem:l,shift:o},{type:"elem",elem:i,shift:d}]},t)}else{s=f.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:n,shift:u},{type:"elem",elem:l,shift:o}]},t)}s.children[0].children[0].children[1].classes.push("svg-align");return w(["mrel","x-arrow"],[s],t)};L.mclass=function(e,t){var r=T(e.value.value,t,true);return w([e.value.mclass],r,t)};L.raisebox=function(e,t){var r=L.sizing({value:{value:[{type:"text",value:{body:e.value.value,font:"mathrm"}}],size:6}},t);var a=(0,p.calculateSize)(e.value.dy.value,t);return f.default.makeVList({positionType:"shift",positionData:-a,children:[{type:"elem",elem:r}]},t)};var P=r.buildGroup=function e(t,r,a){if(!t){return w()}if(L[t.type]){var n=L[t.type](t,r);if(a&&r.size!==a.size){n=w(r.sizingClasses(a),[n],r);var i=r.sizeMultiplier/a.sizeMultiplier;n.height*=i;n.depth*=i}return n}else{throw new l.default("Got group of unknown type: '"+t.type+"'")}};function B(e,t){e=JSON.parse((0,n.default)(e));var r=T(e,t,true);var a=w(["base"],r,t);var i=w(["strut"]);var l=w(["strut","bottom"]);i.style.height=a.height+"em";l.style.height=a.height+a.depth+"em";l.style.verticalAlign=-a.depth+"em";var o=w(["katex-html"],[i,l,a]);o.setAttribute("aria-hidden","true");return o}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./delimiter":97,"./domTree":98,"./stretchy":116,"./units":120,"./utils":121,"babel-runtime/core-js/json/stringify":5}],93:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.buildGroup=r.buildExpression=r.groupTypes=r.makeText=undefined;r.default=z;var a=e("./buildCommon");var n=y(a);var i=e("./fontMetrics");var l=y(i);var o=e("./mathMLTree");var u=y(o);var s=e("./ParseError");var f=y(s);var d=e("./Style");var c=y(d);var h=e("./symbols");var v=y(h);var p=e("./utils");var m=y(p);var g=e("./stretchy");var b=y(g);function y(e){return e&&e.__esModule?e:{default:e}}var x=r.makeText=function e(t,r){if(v.default[r][t]&&v.default[r][t].replace){t=v.default[r][t].replace}return new u.default.TextNode(t)};var w=function e(t,r){var a=r.font;if(!a){return null}var i=t.mode;if(a==="mathit"){return"italic"}var o=t.value;if(m.default.contains(["\\imath","\\jmath"],o)){return null}if(v.default[i][o]&&v.default[i][o].replace){o=v.default[i][o].replace}var u=n.default.fontMap[a].fontName;if(l.default.getCharacterMetrics(o,u)){return n.default.fontMap[r.font].variant}return null};var k=r.groupTypes={};var M={mi:"italic",mn:"normal",mtext:"normal"};k.mathord=function(e,t){var r=new u.default.MathNode("mi",[x(e.value,e.mode)]);var a=w(e,t)||"italic";if(a!==M[r.type]){r.setAttribute("mathvariant",a)}return r};k.textord=function(e,t){var r=x(e.value,e.mode);var a=w(e,t)||"normal";var n=void 0;if(e.mode==="text"){n=new u.default.MathNode("mtext",[r])}else if(/[0-9]/.test(e.value)){n=new u.default.MathNode("mn",[r])}else if(e.value==="\\prime"){n=new u.default.MathNode("mo",[r])}else{n=new u.default.MathNode("mi",[r])}if(a!==M[n.type]){n.setAttribute("mathvariant",a)}return n};k.bin=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.rel=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.open=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.close=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.inner=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);return t};k.punct=function(e){var t=new u.default.MathNode("mo",[x(e.value,e.mode)]);t.setAttribute("separator","true");return t};k.ordgroup=function(e,t){var r=_(e.value,t);var a=new u.default.MathNode("mrow",r);return a};k.text=function(e,t){var r=e.value.body;var a=[];var n=null;for(var i=0;i<r.length;i++){var l=S(r[i],t);if(l.type==="mtext"&&n!=null){Array.prototype.push.apply(n.children,l.children)}else{a.push(l);if(l.type==="mtext"){n=l}}}if(a.length===1){return a[0]}else{return new u.default.MathNode("mrow",a)}};k.color=function(e,t){var r=_(e.value.value,t);var a=new u.default.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};k.xmlClass=function(e,t){var r=_(e.value.value,t);var a=new u.default.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};k.supsub=function(e,t){var r=false;var a=void 0;var n=void 0;if(e.value.base){if(e.value.base.value.type==="horizBrace"){n=e.value.sup?true:false;if(n===e.value.base.value.isOver){r=true;a=e.value.base.value.isOver}}}var i=true;var l=[S(e.value.base,t,i)];if(e.value.sub){l.push(S(e.value.sub,t,i))}if(e.value.sup){l.push(S(e.value.sup,t,i))}var o=void 0;if(r){o=a?"mover":"munder"}else if(!e.value.sub){o="msup"}else if(!e.value.sup){o="msub"}else{var s=e.value.base;if(s&&s.value.limits&&t.style===c.default.DISPLAY){o="munderover"}else{o="msubsup"}}var f=new u.default.MathNode(o,l);return f};k.sqrt=function(e,t){var r=void 0;if(e.value.index){r=new u.default.MathNode("mroot",[S(e.value.body,t),S(e.value.index,t)])}else{r=new u.default.MathNode("msqrt",[S(e.value.body,t)])}return r};k.accent=function(e,t){var r=void 0;if(e.value.isStretchy){r=b.default.mathMLnode(e.value.label)}else{r=new u.default.MathNode("mo",[x(e.value.label,e.mode)])}var a=new u.default.MathNode("mover",[S(e.value.base,t),r]);a.setAttribute("accent","true");return a};k.spacing=function(e){var t=void 0;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new u.default.MathNode("mtext",[new u.default.TextNode("\xa0")])}else{t=new u.default.MathNode("mspace");t.setAttribute("width",n.default.spacingFunctions[e.value].size)}return t};k.cursor=function(e){var t=new u.default.MathNode("mtext",[new u.default.TextNode("|")]);return t};k.font=function(e,t){var r=e.value.font;return S(e.value.body,t.withFont(r))};k.styling=function(e,t){var r={display:c.default.DISPLAY,text:c.default.TEXT,script:c.default.SCRIPT,scriptscript:c.default.SCRIPTSCRIPT};var a=r[e.value.style];var n=t.havingStyle(a);var i=_(e.value.value,n);var l=new u.default.MathNode("mstyle",i);var o={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var s=o[e.value.style];l.setAttribute("scriptlevel",s[0]);l.setAttribute("displaystyle",s[1]);return l};k.sizing=function(e,t){var r=t.havingSize(e.value.size);var a=_(e.value.value,r);var n=new u.default.MathNode("mstyle",a);n.setAttribute("mathsize",r.sizeMultiplier+"em");return n};k.verb=function(e,t){var r=new u.default.TextNode(n.default.makeVerb(e,t));var a=new u.default.MathNode("mtext",[r]);a.setAttribute("mathvariant",n.default.fontMap["mathtt"].variant);return a};k.overline=function(e,t){var r=new u.default.MathNode("mo",[new u.default.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new u.default.MathNode("mover",[S(e.value.body,t),r]);a.setAttribute("accent","true");return a};k.underline=function(e,t){var r=new u.default.MathNode("mo",[new u.default.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new u.default.MathNode("munder",[S(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};k.accentUnder=function(e,t){var r=b.default.mathMLnode(e.value.label);var a=new u.default.MathNode("munder",[S(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};k.enclose=function(e,t){var r=new u.default.MathNode("menclose",[S(e.value.body,t)]);switch(e.value.label){case"\\cancel":r.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":r.setAttribute("notation","downdiagonalstrike");break;case"\\sout":r.setAttribute("notation","horizontalstrike");break;case"\\fbox":r.setAttribute("notation","box");break;case"\\colorbox":r.setAttribute("mathbackground",e.value.backgroundColor.value);break;case"\\fcolorbox":r.setAttribute("mathbackground",e.value.backgroundColor.value);r.setAttribute("notation","box");break;default:r.setAttribute("notation","updiagonalstrike downdiagonalstrike")}return r};k.horizBrace=function(e,t){var r=b.default.mathMLnode(e.value.label);return new u.default.MathNode(e.value.isOver?"mover":"munder",[S(e.value.base,t),r])};k.xArrow=function(e,t){var r=b.default.mathMLnode(e.value.label);var a=void 0;var n=void 0;if(e.value.body){var i=S(e.value.body,t);if(e.value.below){n=S(e.value.below,t);a=new u.default.MathNode("munderover",[r,n,i])}else{a=new u.default.MathNode("mover",[r,i])}}else if(e.value.below){n=S(e.value.below,t);a=new u.default.MathNode("munder",[r,n])}else{a=new u.default.MathNode("mover",[r])}return a};k.rule=function(e){var t=new u.default.MathNode("mrow");return t};k.kern=function(e){var t=new u.default.MathNode("mrow");return t};k.mclass=function(e,t){var r=_(e.value.value,t);return new u.default.MathNode("mstyle",r)};k.raisebox=function(e,t){var r=new u.default.MathNode("mpadded",[S(e.value.body,t)]);var a=e.value.dy.value.number+e.value.dy.value.unit;r.setAttribute("voffset",a);return r};var _=r.buildExpression=function e(t,r){var a=[];for(var n=0;n<t.length;n++){var i=t[n];a.push(S(i,r))}return a};var S=r.buildGroup=function e(t,r){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!t){return new u.default.MathNode("mrow")}if(k[t.type]){var n=k[t.type](t,r);if(a){if(n.type==="mrow"&&n.children.length===1){return n.children[0]}}return n}else{throw new f.default("Got group of unknown type: '"+t.type+"'")}};function z(e,t,r){var a=_(e,r);var i=new u.default.MathNode("mrow",a);var l=new u.default.MathNode("annotation",[new u.default.TextNode(t)]);l.setAttribute("encoding","application/x-tex");var o=new u.default.MathNode("semantics",[i,l]);var s=new u.default.MathNode("math",[o]);return n.default.makeSpan(["katex-mathml"],[s])}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./fontMetrics":101,"./mathMLTree":114,"./stretchy":116,"./symbols":118,"./utils":121}],94:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./buildHTML");var n=p(a);var i=e("./buildMathML");var l=p(i);var o=e("./buildCommon");var u=p(o);var s=e("./Options");var f=p(s);var d=e("./Settings");var c=p(d);var h=e("./Style");var v=p(h);function p(e){return e&&e.__esModule?e:{default:e}}var m=function e(t,r,a){a=a||new c.default({});var i=v.default.TEXT;if(a.displayMode){i=v.default.DISPLAY}var o=new f.default({style:i,maxSize:a.maxSize});var s=(0,l.default)(t,r,o);var d=(0,n.default)(t,o);var h=u.default.makeSpan(["katex"],[s,d]);if(a.displayMode){return u.default.makeSpan(["katex-display"],[h])}else{return h}};r.default=m},{"./Options":83,"./Settings":87,"./Style":89,"./buildCommon":91,"./buildHTML":92,"./buildMathML":93}],95:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r._environments=undefined;r.default=d;var a=e("./buildHTML");var n=e("./buildMathML");var i=e("./Options");var l=s(i);var o=e("./ParseNode");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}var f=r._environments={};function d(e){var t=e.type,r=e.names,i=e.props,l=e.handler,o=e.htmlBuilder,u=e.mathmlBuilder;var s={numArgs:i.numArgs||0,greediness:1,allowedInText:false,numOptionalArgs:0,handler:l};for(var d=0;d<r.length;++d){f[r[d]]=s}if(o){a.groupTypes[t]=o}if(u){n.groupTypes[t]=u}}},{"./Options":83,"./ParseNode":85,"./buildHTML":92,"./buildMathML":93}],96:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.ordargument=r._functions=undefined;r.default=l;var a=e("./buildHTML");var n=e("./buildMathML");var i=r._functions={};function l(e){var t=e.type,r=e.names,l=e.props,o=e.handler,u=e.htmlBuilder,s=e.mathmlBuilder;var f={numArgs:l.numArgs,argTypes:l.argTypes,greediness:l.greediness===undefined?1:l.greediness,allowedInText:!!l.allowedInText,allowedInMath:l.allowedInMath===undefined?true:l.allowedInMath,numOptionalArgs:l.numOptionalArgs||0,infix:!!l.infix,handler:o};for(var d=0;d<r.length;++d){i[r[d]]=f}if(t){if(u){a.groupTypes[t]=u}if(s){n.groupTypes[t]=s}}}var o=r.ordargument=function e(t){if(t.type==="ordgroup"){return t.value}else{return[t]}}},{"./buildHTML":92,"./buildMathML":93}],97:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./ParseError");var n=g(a);var i=e("./Style");var l=g(i);var o=e("./domTree");var u=g(o);var s=e("./buildCommon");var f=g(s);var d=e("./fontMetrics");var c=g(d);var h=e("./symbols");var v=g(h);var p=e("./utils");var m=g(p);function g(e){return e&&e.__esModule?e:{default:e}}var b=function e(t,r){if(v.default.math[t]&&v.default.math[t].replace){return c.default.getCharacterMetrics(v.default.math[t].replace,r)}else{return c.default.getCharacterMetrics(t,r)}};var y=function e(t,r,a,n){var i=a.havingBaseStyle(r);var l=f.default.makeSpan((n||[]).concat(i.sizingClasses(a)),[t],a);l.delimSizeMultiplier=i.sizeMultiplier/a.sizeMultiplier;l.height*=l.delimSizeMultiplier;l.depth*=l.delimSizeMultiplier;l.maxFontSize=i.sizeMultiplier;return l};var x=function e(t,r,a){var n=r.havingBaseStyle(a);var i=(1-r.sizeMultiplier/n.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=i+"em";t.height-=i;t.depth+=i};var w=function e(t,r,a,n,i,l){var o=f.default.makeSymbol(t,"Main-Regular",i,n);var u=y(o,r,n,l);if(a){x(u,n,r)}return u};var k=function e(t,r,a,n){return f.default.makeSymbol(t,"Size"+r+"-Regular",a,n)};var M=function e(t,r,a,n,i,o){var u=k(t,r,i,n);var s=y(f.default.makeSpan(["delimsizing","size"+r],[u],n),l.default.TEXT,n,o);if(a){x(s,n,l.default.TEXT)}return s};var _=function e(t,r,a){var n=void 0;if(r==="Size1-Regular"){n="delim-size1"}else if(r==="Size4-Regular"){n="delim-size4"}var i=f.default.makeSpan(["delimsizinginner",n],[f.default.makeSpan([],[f.default.makeSymbol(t,r,a)])]);return{type:"elem",elem:i}};var S=function e(t,r,a,n,i,o){var u=void 0;var s=void 0;var d=void 0;var c=void 0;u=d=c=t;s=null;var h="Size1-Regular";if(t==="\\uparrow"){d=c="\u23d0"}else if(t==="\\Uparrow"){d=c="\u2016"}else if(t==="\\downarrow"){u=d="\u23d0"}else if(t==="\\Downarrow"){u=d="\u2016"}else if(t==="\\updownarrow"){u="\\uparrow";d="\u23d0";c="\\downarrow"}else if(t==="\\Updownarrow"){u="\\Uparrow";d="\u2016";c="\\Downarrow"}else if(t==="["||t==="\\lbrack"){u="\u23a1";d="\u23a2";c="\u23a3";h="Size4-Regular"}else if(t==="]"||t==="\\rbrack"){u="\u23a4";d="\u23a5";c="\u23a6";h="Size4-Regular"}else if(t==="\\lfloor"){d=u="\u23a2";c="\u23a3";h="Size4-Regular"}else if(t==="\\lceil"){u="\u23a1";d=c="\u23a2";h="Size4-Regular"}else if(t==="\\rfloor"){d=u="\u23a5";c="\u23a6";h="Size4-Regular"}else if(t==="\\rceil"){u="\u23a4";d=c="\u23a5";h="Size4-Regular"}else if(t==="("){u="\u239b";d="\u239c";c="\u239d";h="Size4-Regular"}else if(t===")"){u="\u239e";d="\u239f";c="\u23a0";h="Size4-Regular"}else if(t==="\\{"||t==="\\lbrace"){u="\u23a7";s="\u23a8";c="\u23a9";d="\u23aa";h="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){u="\u23ab";s="\u23ac";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\lgroup"){u="\u23a7";c="\u23a9";d="\u23aa";h="Size4-Regular"}else if(t==="\\rgroup"){u="\u23ab";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\lmoustache"){u="\u23a7";c="\u23ad";d="\u23aa";h="Size4-Regular"}else if(t==="\\rmoustache"){u="\u23ab";c="\u23a9";d="\u23aa";h="Size4-Regular"}var v=b(u,h);var p=v.height+v.depth;var m=b(d,h);var g=m.height+m.depth;var x=b(c,h);var w=x.height+x.depth;var k=0;var M=1;if(s!==null){var S=b(s,h);k=S.height+S.depth;M=2}var z=p+w+k;var T=Math.ceil((r-z)/(M*g));var C=z+T*M*g;var A=n.fontMetrics().axisHeight;if(a){A*=n.sizeMultiplier}var N=C/2-A;var O=[];O.push(_(c,h,i));if(s===null){for(var j=0;j<T;j++){O.push(_(d,h,i))}}else{for(var L=0;L<T;L++){O.push(_(d,h,i))}O.push(_(s,h,i));for(var E=0;E<T;E++){O.push(_(d,h,i))}}O.push(_(u,h,i));var q=n.havingBaseStyle(l.default.TEXT);var P=f.default.makeVList({positionType:"bottom",positionData:N,children:O},q);return y(f.default.makeSpan(["delimsizing","mult"],[P],q),l.default.TEXT,n,o)};var z=function e(t,r,a,n){var i=void 0;if(t==="sqrtTall"){var l=a-54;i="M702 0H400000v40H742v"+l+"l-4 4-4 4c-.667.667\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 0H400000v40H742z"}var o=new u.default.pathNode(t,i);var s=[["width","400em"],["height",r+"em"]];s.push(["viewBox","0 0 400000 "+a]);s.push(["preserveAspectRatio","xMinYMin slice"]);var d=new u.default.svgNode([o],s);return f.default.makeSpan(["hide-tail"],[d],n)};var T=function e(t,r,a){var n=void 0;var i=a.sizeMultiplier;var l=void 0;var o=void 0;if(r.type==="small"){o=1e3;var u=a.havingBaseStyle(r.style);i=u.sizeMultiplier/a.sizeMultiplier;l=1*i;n=z("sqrtMain",l,o,a);n.style.minWidth="0.853em";n.advanceWidth=.833*i}else if(r.type==="large"){o=1e3*O[r.size];l=O[r.size]/i;n=z("sqrtSize"+r.size,l,o,a);n.style.minWidth="1.02em";n.advanceWidth=1/i}else{l=t/i;o=Math.floor(1e3*t);n=z("sqrtTall",l,o,a);n.style.minWidth="0.742em";n.advanceWidth=1.056/i}n.height=l;n.style.height=l+"em";n.sizeMultiplier=i;return n};var C=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var A=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var N=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var O=[0,1.2,1.8,2.4,3];var j=function e(t,r,a,i,l){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}if(m.default.contains(C,t)||m.default.contains(N,t)){return M(t,r,false,a,i,l)}else if(m.default.contains(A,t)){return S(t,O[r],false,a,i,l)}else{throw new n.default("Illegal delimiter: '"+t+"'")}};var L=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var E=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"stack"}];var q=[{type:"small",style:l.default.SCRIPTSCRIPT},{type:"small",style:l.default.SCRIPT},{type:"small",style:l.default.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var P=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}};var B=function e(t,r,a,n){var i=Math.min(2,3-n.style.size);for(var l=i;l<a.length;l++){if(a[l].type==="stack"){break}var o=b(t,P(a[l]));var u=o.height+o.depth;if(a[l].type==="small"){var s=n.havingBaseStyle(a[l].style);u*=s.sizeMultiplier}if(u>r){return a[l]}}return a[a.length-1]};var R=function e(t,r,a,n,i,l){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}var o=void 0;if(m.default.contains(N,t)){o=L}else if(m.default.contains(C,t)){o=q}else{o=E}var u=B(t,r,o,n);if(t==="\\surd"){return T(r,u,n)}else{if(u.type==="small"){return w(t,u.style,a,n,i,l)}else if(u.type==="large"){return M(t,u.size,a,n,i,l)}else if(u.type==="stack"){return S(t,r,a,n,i,l)}}};var D=function e(t,r,a,n,i,l){var o=n.fontMetrics().axisHeight*n.sizeMultiplier;var u=901;var s=5/n.fontMetrics().ptPerEm;var f=Math.max(r-o,a+o);var d=Math.max(f/500*u,2*f-s);return R(t,d,true,n,i,l)};r.default={sizedDelim:j,customSizedDelim:R,leftRightDelim:D}},{"./ParseError":84,"./Style":89,"./buildCommon":91,"./domTree":98,"./fontMetrics":101,"./symbols":118,"./utils":121}],98:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/slicedToArray");var n=v(a);var i=e("babel-runtime/helpers/classCallCheck");var l=v(i);var o=e("babel-runtime/helpers/createClass");var u=v(o);var s=e("./unicodeRegexes");var f=e("./utils");var d=v(f);var c=e("./svgGeometry");var h=v(c);function v(e){return e&&e.__esModule?e:{default:e}}var p=function e(t){t=t.slice();for(var r=t.length-1;r>=0;r--){if(!t[r]){t.splice(r,1)}}return t.join(" ")};var m=function(){function e(t,r,a){(0,l.default)(this,e);this.classes=t||[];this.children=r||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(a){if(a.style.isTight()){this.classes.push("mtight")}if(a.getColor()){this.style.color=a.getColor()}}}(0,u.default)(e,[{key:"setAttribute",value:function e(t,r){this.attributes[t]=r}},{key:"tryCombine",value:function e(t){return false}},{key:"toNode",value:function e(){var t=document.createElement("span");t.className=p(this.classes);for(var r in this.style){if(Object.prototype.hasOwnProperty.call(this.style,r)){t.style[r]=this.style[r]}}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){t.setAttribute(a,this.attributes[a])}}for(var n=0;n<this.children.length;n++){t.appendChild(this.children[n].toNode())}return t}},{key:"toMarkup",value:function e(){var t="<span";if(this.classes.length){t+=' class="';t+=d.default.escape(p(this.classes));t+='"'}var r="";for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=d.default.hyphenate(a)+":"+this.style[a]+";"}}if(r){t+=' style="'+d.default.escape(r)+'"'}for(var n in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,n)){t+=" "+n+'="';t+=d.default.escape(this.attributes[n]);t+='"'}}t+=">";for(var i=0;i<this.children.length;i++){t+=this.children[i].toMarkup()}t+="</span>";return t}}]);return e}();var g=function(){function e(t,r){(0,l.default)(this,e);this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;if(r){for(var a=0;a<this.children.length;a++){for(var n=0;n<r.length;n++){this.children[a].classes.push(r[n])}}}this.classes=r||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t=document.createDocumentFragment();for(var r=0;r<this.children.length;r++){t.appendChild(this.children[r].toNode())}return t}},{key:"toMarkup",value:function e(){var t="";for(var r=0;r<this.children.length;r++){t+=this.children[r].toMarkup()}return t}}]);return e}();var b={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};var y=function(){function e(t,r,a,n,i,o,u){(0,l.default)(this,e);this.value=t||"";this.height=r||0;this.depth=a||0;this.italic=n||0;this.skew=i||0;this.classes=o||[];this.style=u||{};this.maxFontSize=0;if(s.cjkRegex.test(t)){if(s.hangulRegex.test(t)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=b[this.value]}}(0,u.default)(e,[{key:"tryCombine",value:function t(r){if(!r||!(r instanceof e)||this.italic>0||p(this.classes)!==p(r.classes)||this.skew!==r.skew||this.maxFontSize!==r.maxFontSize){return false}for(var a in this.style){if(this.style.hasOwnProperty(a)&&this.style[a]!==r.style[a]){return false}}for(var n in r.style){if(r.style.hasOwnProperty(n)&&this.style[n]!==r.style[n]){return false}}this.value+=r.value;this.height=Math.max(this.height,r.height);this.depth=Math.max(this.depth,r.depth);this.italic=r.italic;return true}},{key:"toNode",value:function e(){var t=document.createTextNode(this.value);var r=null;if(this.italic>0){r=document.createElement("span");r.style.marginRight=this.italic+"em"}if(this.classes.length>0){r=r||document.createElement("span");r.className=p(this.classes)}for(var a in this.style){if(this.style.hasOwnProperty(a)){r=r||document.createElement("span");r.style[a]=this.style[a]}}if(r){r.appendChild(t);return r}else{return t}}},{key:"toMarkup",value:function e(){var t=false;var r="<span";if(this.classes.length){t=true;r+=' class="';r+=d.default.escape(p(this.classes));r+='"'}var a="";if(this.italic>0){a+="margin-right:"+this.italic+"em;"}for(var n in this.style){if(this.style.hasOwnProperty(n)){a+=d.default.hyphenate(n)+":"+this.style[n]+";"}}if(a){t=true;r+=' style="'+d.default.escape(a)+'"'}var i=d.default.escape(this.value);if(t){r+=">";r+=i;r+="</span>";return r}else{return i}}}]);return e}();var x=function(){function e(t,r){(0,l.default)(this,e);this.children=t||[];this.attributes=r||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"svg");for(var a=0;a<this.attributes.length;a++){var i=(0,n.default)(this.attributes[a],2),l=i[0],o=i[1];r.setAttribute(l,o)}for(var u=0;u<this.children.length;u++){r.appendChild(this.children[u].toNode())}return r}},{key:"toMarkup",value:function e(){var t="<svg";for(var r=0;r<this.attributes.length;r++){var a=(0,n.default)(this.attributes[r],2),i=a[0],l=a[1];t+=" "+i+"='"+l+"'"}t+=">";for(var o=0;o<this.children.length;o++){t+=this.children[o].toMarkup()}t+="</svg>";return t}}]);return e}();var w=function(){function e(t,r){(0,l.default)(this,e);this.pathName=t;this.alternate=r}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"path");if(this.pathName!=="sqrtTall"){r.setAttribute("d",h.default.path[this.pathName])}else{r.setAttribute("d",this.alternate)}return r}},{key:"toMarkup",value:function e(){if(this.pathName!=="sqrtTall"){return"<path d='"+h.default.path[this.pathName]+"'/>"}else{return"<path d='"+this.alternate+"'/>"}}}]);return e}();var k=function(){function e(t){(0,l.default)(this,e);this.attributes=t||[]}(0,u.default)(e,[{key:"toNode",value:function e(){var t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"line");for(var a=0;a<this.attributes.length;a++){var i=(0,n.default)(this.attributes[a],2),l=i[0],o=i[1];r.setAttribute(l,o)}return r}},{key:"toMarkup",value:function e(){var t="<line";for(var r=0;r<this.attributes.length;r++){var a=(0,n.default)(this.attributes[r],2),i=a[0],l=a[1];t+=" "+i+"='"+l+"'"}t+="/>";return t}}]);return e}();r.default={span:m,documentFragment:g,symbolNode:y,svgNode:x,pathNode:w,lineNode:k}},{"./svgGeometry":117,"./unicodeRegexes":119,"./utils":121,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9,"babel-runtime/helpers/slicedToArray":10}],99:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./defineEnvironment");e("./environments/array.js");var n={has:function e(t){return a._environments.hasOwnProperty(t)},get:function e(t){return a._environments[t]}};r.default=n},{"./defineEnvironment":95,"./environments/array.js":100}],100:[function(e,t,r){"use strict";var a=e("../buildCommon");var n=w(a);var i=e("../defineEnvironment");var l=w(i);var o=e("../mathMLTree");var u=w(o);var s=e("../ParseError");var f=w(s);var d=e("../ParseNode");var c=w(d);var h=e("../units");var v=e("../utils");var p=w(v);var m=e("../buildHTML");var g=x(m);var b=e("../buildMathML");var y=x(b);function x(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function w(e){return e&&e.__esModule?e:{default:e}}function k(e,t,r){var a=[];var n=[a];var i=[];while(true){var l=e.parseExpression(false,null);l=new c.default("ordgroup",l,e.mode);if(r){l=new c.default("styling",{style:r,value:[l]},e.mode)}a.push(l);var o=e.nextToken.text;if(o==="&"){e.consume()}else if(o==="\\end"){var u=n[n.length-1];if(n.length>1&&u.length===1&&u[0].value.value[0].value.length===0){n.pop()}break}else if(o==="\\\\"||o==="\\cr"){var s=e.parseFunction();i.push(s.value.size);a=[];n.push(a)}else{throw new f.default("Expected & or \\\\ or \\end",e.nextToken)}}t.body=n;t.rowGaps=i;return new c.default(t.type,t,e.mode)}function M(e){if(e.substr(0,1)==="d"){return"display"}else{return"text"}}var _=function e(t,r){var a=void 0;var i=void 0;var l=t.value.body.length;var o=0;var u=new Array(l);var s=1/r.fontMetrics().ptPerEm;var d=5*s;var c=12*s;var v=3*s;var m=p.default.deflt(t.value.arraystretch,1);var b=m*c;var y=.7*b;var x=.3*b;var w=0;for(a=0;a<t.value.body.length;++a){var k=t.value.body[a];var M=y;var _=x;if(o<k.length){o=k.length}var S=new Array(k.length);for(i=0;i<k.length;++i){
var z=g.buildGroup(k[i],r);if(_<z.depth){_=z.depth}if(M<z.height){M=z.height}S[i]=z}var T=0;if(t.value.rowGaps[a]){T=(0,h.calculateSize)(t.value.rowGaps[a].value,r);if(T>0){T+=x;if(_<T){_=T}T=0}}if(t.value.addJot){_+=v}S.height=M;S.depth=_;w+=M;S.pos=w;w+=_+T;u[a]=S}var C=w/2+r.fontMetrics().axisHeight;var A=t.value.cols||[];var N=[];var O=void 0;var j=void 0;for(i=0,j=0;i<o||j<A.length;++i,++j){var L=A[j]||{};var E=true;while(L.type==="separator"){if(!E){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=r.fontMetrics().doubleRuleSep+"em";N.push(O)}if(L.separator==="|"){var q=n.default.makeSpan(["vertical-separator"],[]);q.style.height=w+"em";q.style.verticalAlign=-(w-C)+"em";N.push(q)}else{throw new f.default("Invalid separator type: "+L.separator)}j++;L=A[j]||{};E=false}if(i>=o){continue}var P=void 0;if(i>0||t.value.hskipBeforeAndAfter){P=p.default.deflt(L.pregap,d);if(P!==0){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=P+"em";N.push(O)}}var B=[];for(a=0;a<l;++a){var R=u[a];var D=R[i];if(!D){continue}var F=R.pos-C;D.depth=R.depth;D.height=R.height;B.push({type:"elem",elem:D,shift:F})}B=n.default.makeVList({positionType:"individualShift",children:B},r);B=n.default.makeSpan(["col-align-"+(L.align||"c")],[B]);N.push(B);if(i<o-1||t.value.hskipBeforeAndAfter){P=p.default.deflt(L.postgap,d);if(P!==0){O=n.default.makeSpan(["arraycolsep"],[]);O.style.width=P+"em";N.push(O)}}}u=n.default.makeSpan(["mtable"],N);return n.default.makeSpan(["mord"],[u],r)};var S=function e(t,r){return new u.default.MathNode("mtable",t.value.body.map(function(e){return new u.default.MathNode("mtr",e.map(function(e){return new u.default.MathNode("mtd",[y.buildGroup(e,r)])}))}))};var z=function e(t,r){var a={type:"array",cols:[],addJot:true};a=k(t.parser,a,"display");var n=void 0;var i=0;var l=new c.default("ordgroup",[],t.mode);if(r[0]&&r[0].value){var o="";for(var u=0;u<r[0].value.length;u++){o+=r[0].value[u].value}n=Number(o);i=n*2}var s=!i;a.value.body.forEach(function(e){for(var t=1;t<e.length;t+=2){var r=e[t].value.value[0];r.value.unshift(l)}if(!s){var a=e.length/2;if(n<a){throw new f.default("Too many math in a row: "+("expected "+n+", but got "+a),e)}}else if(i<e.length){i=e.length}});for(var d=0;d<i;++d){var h="r";var v=0;if(d%2===1){h="l"}else if(d>0&&s){v=1}a.value.cols[d]={type:"align",align:h,pregap:v,postgap:0}}return a};(0,l.default)({type:"array",names:["array","darray"],props:{numArgs:1},handler:function e(t,r){var a=r[0];a=a.value.map?a.value:[a];var n=a.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new f.default("Unknown column alignment: "+e.value,e)});var i={type:"array",cols:n,hskipBeforeAndAfter:true};i=k(t.parser,i,M(t.envName));return i},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],props:{numArgs:0},handler:function e(t){var r={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[t.envName];var a={type:"array",hskipBeforeAndAfter:false};a=k(t.parser,a,M(t.envName));if(r){a=new c.default("leftright",{body:[a],left:r[0],right:r[1]},t.mode)}return a},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["cases","dcases"],props:{numArgs:0},handler:function e(t){var r={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};r=k(t.parser,r,M(t.envName));r=new c.default("leftright",{body:[r],left:"\\{",right:"."},t.mode);return r},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["aligned"],props:{numArgs:0},handler:z,htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["gathered"],props:{numArgs:0},handler:function e(t){var r={type:"array",cols:[{type:"align",align:"c"}],addJot:true};r=k(t.parser,r,"display");return r},htmlBuilder:_,mathmlBuilder:S});(0,l.default)({type:"array",names:["alignedat"],props:{numArgs:1},handler:z,htmlBuilder:_,mathmlBuilder:S})},{"../ParseError":84,"../ParseNode":85,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineEnvironment":95,"../mathMLTree":114,"../units":120,"../utils":121}],101:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./unicodeRegexes");var n=e("./fontMetricsData");var i=l(n);function l(e){return e&&e.__esModule?e:{default:e}}var o={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2]};var u={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var s=function e(t,r){var n=t.charCodeAt(0);if(t[0]in u){n=u[t[0]].charCodeAt(0)}else if(a.cjkRegex.test(t[0])){n="M".charCodeAt(0)}var l=i.default[r][""+n];if(l){return{depth:l[0],height:l[1],italic:l[2],skew:l[3],width:l[4]}}};var f={};var d=function e(t){var r=void 0;if(t>=5){r=0}else if(t>=3){r=1}else{r=2}if(!f[r]){var a=f[r]={cssEmPerMu:o.quad[r]/18};for(var n in o){if(o.hasOwnProperty(n)){a[n]=o[n][r]}}}return f[r]};r.default={getFontMetrics:d,getCharacterMetrics:s}},{"./fontMetricsData":102,"./unicodeRegexes":119}],102:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],
961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8216:[0,.61111,0,0],8217:[0,.61111,0,0],8242:[0,.61111,0,0],9251:[.11111,.21944,0,0]}};r.default=a},{}],103:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./utils");var n=d(a);var i=e("./ParseError");var l=d(i);var o=e("./ParseNode");var u=d(o);var s=e("./defineFunction");var f=d(s);e("./functions/katex");e("./functions/phantom");e("./functions/mod");e("./functions/op");e("./functions/operatorname");e("./functions/genfrac");e("./functions/lap");e("./functions/smash");e("./functions/delimsizing");function d(e){return e&&e.__esModule?e:{default:e}}var c=s._functions;r.default=c;var h=function e(t,r,a){(0,f.default)({names:t,props:r,handler:a})};h(["\\sqrt"],{numArgs:1,numOptionalArgs:1},function(e,t,r){var a=r[0];var n=t[0];return{type:"sqrt",body:n,index:a}});var v={"\\text":undefined,"\\textrm":"mathrm","\\textsf":"mathsf","\\texttt":"mathtt","\\textnormal":"mathrm","\\textbf":"mathbf","\\textit":"textit"};h(["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit"],{numArgs:1,argTypes:["text"],greediness:2,allowedInText:true},function(e,t){var r=t[0];return{type:"text",body:(0,s.ordargument)(r),font:v[e.funcName]}});h(["\\xmlClass"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var n=void 0;if(a.type==="ordgroup"){n=a.value}else{n=[a]}return{type:"xmlClass",cl:r,value:n}});h(["\\textcolor"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];return{type:"color",color:r.value,value:(0,s.ordargument)(a)}});h(["\\color"],{numArgs:1,allowedInText:true,greediness:3,argTypes:["color"]},null);h(["\\colorbox"],{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","text"]},function(e,t){var r=t[0];var a=t[1];return{type:"enclose",label:e.funcName,backgroundColor:r,body:a}});h(["\\fcolorbox"],{numArgs:3,allowedInText:true,greediness:3,argTypes:["color","color","text"]},function(e,t){var r=t[0];var a=t[1];var n=t[2];return{type:"enclose",label:e.funcName,backgroundColor:a,borderColor:r,body:n}});h(["\\overline"],{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});h(["\\underline"],{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});h(["\\rule"],{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t,r){var a=r[0];var n=t[0];var i=t[1];return{type:"rule",shift:a&&a.value,width:n.value,height:i.value}});h(["\\cursor"],{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t,r){var a=r[0];var n=t[0];return{type:"cursor",shift:a&&a.value,height:n.value}});h(["\\kern","\\mkern"],{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});h(["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],{numArgs:1},function(e,t){var r=t[0];return{type:"mclass",mclass:"m"+e.funcName.substr(5),value:(0,s.ordargument)(r)}});h(["\\stackrel"],{numArgs:2},function(e,t){var r=t[0];var a=t[1];var n=new u.default("op",{type:"op",limits:true,alwaysHandleSupSub:true,symbol:false,value:(0,s.ordargument)(a)},a.mode);var i=new u.default("supsub",{base:n,sup:r,sub:null},r.mode);return{type:"mclass",mclass:"mrel",value:[i]}});var p={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};h(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];return{type:"color",color:"katex-"+e.funcName.slice(1),value:(0,s.ordargument)(r)}});h(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});h(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});h(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});h(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],{numArgs:0},null);h(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],{numArgs:0},null);h(["\\rm","\\sf","\\tt","\\bf","\\it"],{numArgs:0},null);h(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in p){a=p[a]}return{type:"font",font:a.slice(1),body:r}});h(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],{numArgs:1},function(e,t){var r=t[0];var a=!n.default.contains(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],e.funcName);var i=!a||n.default.contains(["\\widehat","\\widetilde"],e.funcName);return{type:"accent",label:e.funcName,isStretchy:a,isShifty:i,base:r}});h(["\\'","\\`","\\^","\\~","\\=","\\u","\\.",'\\"',"\\r","\\H","\\v"],{numArgs:1,allowedInText:true,allowedInMath:false},function(e,t){var r=t[0];return{type:"accent",label:e.funcName,isStretchy:false,isShifty:true,base:r}});h(["\\overbrace","\\underbrace"],{numArgs:1},function(e,t){var r=t[0];return{type:"horizBrace",label:e.funcName,isOver:/^\\over/.test(e.funcName),base:r}});h(["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\undertilde"],{numArgs:1},function(e,t){var r=t[0];return{type:"accentUnder",label:e.funcName,base:r}});h(["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xLongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xLongequal","\\xtofrom"],{numArgs:1,numOptionalArgs:1},function(e,t,r){var a=r[0];var n=t[0];return{type:"xArrow",label:e.funcName,body:n,below:a}});h(["\\cancel","\\bcancel","\\xcancel","\\sout","\\fbox"],{numArgs:1},function(e,t){var r=t[0];return{type:"enclose",label:e.funcName,body:r}});h(["\\over","\\choose","\\atop"],{numArgs:0,infix:true},function(e){var t=void 0;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});h(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t,r){var a=r[0];return{type:"cr",size:a}});h(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new l.default("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}});h(["\\raisebox"],{numArgs:2,argTypes:["size","text"],allowedInText:true},function(e,t){var r=t[0];var a=t[1];return{type:"raisebox",dy:r,body:a,value:(0,s.ordargument)(a)}});h(["\\verb"],{numArgs:0,allowedInText:true},function(e){throw new l.default("\\verb ended by end of line instead of matching delimiter")})},{"./ParseError":84,"./ParseNode":85,"./defineFunction":96,"./functions/delimsizing":104,"./functions/genfrac":105,"./functions/katex":106,"./functions/lap":107,"./functions/mod":108,"./functions/op":109,"./functions/operatorname":110,"./functions/phantom":111,"./functions/smash":112,"./utils":121}],104:[function(e,t,r){"use strict";var a=e("../buildCommon");var n=x(a);var i=e("../defineFunction");var l=x(i);var o=e("../delimiter");var u=x(o);var s=e("../mathMLTree");var f=x(s);var d=e("../ParseError");var c=x(d);var h=e("../utils");var v=x(h);var p=e("../buildHTML");var m=y(p);var g=e("../buildMathML");var b=y(g);function y(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function x(e){return e&&e.__esModule?e:{default:e}}var w={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var k=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function M(e,t){if(v.default.contains(k,e.value)){return e}else{throw new c.default("Invalid delimiter: '"+e.value+"' after '"+t.funcName+"'",e)}}(0,l.default)({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);return{type:"delimsizing",size:w[t.funcName].size,mclass:w[t.funcName].mclass,value:a.value}},htmlBuilder:function e(t,r){var a=t.value.value;if(a==="."){return n.default.makeSpan([t.value.mclass])}return u.default.sizedDelim(a,t.value.size,r,t.mode,[t.value.mclass])},mathmlBuilder:function e(t){var r=[];if(t.value.value!=="."){r.push(b.makeText(t.value.value,t.mode))}var a=new f.default.MathNode("mo",r);if(t.value.mclass==="mopen"||t.value.mclass==="mclose"){a.setAttribute("fence","true")}else{a.setAttribute("fence","false")}return a}});(0,l.default)({type:"leftright",names:["\\left","\\right"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);return{type:"leftright",value:a.value}},htmlBuilder:function e(t,r){var a=m.buildExpression(t.value.body,r,true);var i=0;var l=0;var o=false;for(var s=0;s<a.length;s++){if(a[s].isMiddle){o=true}else{i=Math.max(a[s].height,i);l=Math.max(a[s].depth,l)}}i*=r.sizeMultiplier;l*=r.sizeMultiplier;var f=void 0;if(t.value.left==="."){f=m.makeNullDelimiter(r,["mopen"])}else{f=u.default.leftRightDelim(t.value.left,i,l,r,t.mode,["mopen"])}a.unshift(f);if(o){for(var d=1;d<a.length;d++){var c=a[d];if(c.isMiddle){a[d]=u.default.leftRightDelim(c.isMiddle.value,i,l,c.isMiddle.options,t.mode,[]);var h=m.spliceSpaces(c.children,0);if(h){n.default.prependChildren(a[d],h)}}}}var v=void 0;if(t.value.right==="."){v=m.makeNullDelimiter(r,["mclose"])}else{v=u.default.leftRightDelim(t.value.right,i,l,r,t.mode,["mclose"])}a.push(v);return n.default.makeSpan(["minner"],a,r)},mathmlBuilder:function e(t,r){var a=b.buildExpression(t.value.body,r);if(t.value.left!=="."){var n=new f.default.MathNode("mo",[b.makeText(t.value.left,t.mode)]);n.setAttribute("fence","true");a.unshift(n)}if(t.value.right!=="."){var i=new f.default.MathNode("mo",[b.makeText(t.value.right,t.mode)]);i.setAttribute("fence","true");a.push(i)}var l=new f.default.MathNode("mrow",a);return l}});(0,l.default)({type:"middle",names:["\\middle"],props:{numArgs:1},handler:function e(t,r){var a=M(r[0],t);if(!t.parser.leftrightDepth){throw new c.default("\\middle without preceding \\left",a)}return{type:"middle",value:a.value}},htmlBuilder:function e(t,r){var a=void 0;if(t.value.value==="."){a=m.makeNullDelimiter(r,[])}else{a=u.default.sizedDelim(t.value.value,1,r,t.mode,[]);a.isMiddle={value:t.value.value,options:r}}return a},mathmlBuilder:function e(t,r){var a=new f.default.MathNode("mo",[b.makeText(t.value.middle,t.mode)]);a.setAttribute("fence","true");return a}})},{"../ParseError":84,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../delimiter":97,"../mathMLTree":114,"../utils":121}],105:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=b(a);var i=e("../buildCommon");var l=b(i);var o=e("../delimiter");var u=b(o);var s=e("../mathMLTree");var f=b(s);var d=e("../Style");var c=b(d);var h=e("../buildHTML");var v=g(h);var p=e("../buildMathML");var m=g(p);function g(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function b(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac"],props:{numArgs:2,greediness:2},handler:function e(t,r){var a=r[0];var n=r[1];var i=void 0;var l=null;var o=null;var u="auto";switch(t.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;l="(";o=")";break;default:throw new Error("Unrecognized genfrac command")}switch(t.funcName){case"\\dfrac":case"\\dbinom":u="display";break;case"\\tfrac":case"\\tbinom":u="text";break}return{type:"genfrac",numer:a,denom:n,hasBarLine:i,leftDelim:l,rightDelim:o,size:u}},htmlBuilder:function e(t,r){var a=r.style;if(t.value.size==="display"){a=c.default.DISPLAY}else if(t.value.size==="text"){a=c.default.TEXT}var n=a.fracNum();var i=a.fracDen();var o=void 0;o=r.havingStyle(n);var s=v.buildGroup(t.value.numer,o,r);o=r.havingStyle(i);var f=v.buildGroup(t.value.denom,o,r);var d=void 0;var h=void 0;var p=void 0;if(t.value.hasBarLine){d=v.makeLineSpan("frac-line",r);h=d.height;p=d.height}else{d=null;h=0;p=r.fontMetrics().defaultRuleThickness}var m=void 0;var g=void 0;var b=void 0;if(a.size===c.default.DISPLAY.size){m=r.fontMetrics().num1;if(h>0){g=3*p}else{g=7*p}b=r.fontMetrics().denom1}else{if(h>0){m=r.fontMetrics().num2;g=p}else{m=r.fontMetrics().num3;g=3*p}b=r.fontMetrics().denom2}var y=void 0;if(h===0){var x=m-s.depth-(f.height-b);if(x<g){m+=.5*(g-x);b+=.5*(g-x)}y=l.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:f,shift:b},{type:"elem",elem:s,shift:-m}]},r)}else{var w=r.fontMetrics().axisHeight;if(m-s.depth-(w+.5*h)<g){m+=g-(m-s.depth-(w+.5*h))}if(w-.5*h-(f.height-b)<g){b+=g-(w-.5*h-(f.height-b))}var k=-(w-.5*h);y=l.default.makeVList({positionType:"individualShift",children:[{type:"elem",elem:f,shift:b},{type:"elem",elem:d,shift:k},{type:"elem",elem:s,shift:-m}]},r)}o=r.havingStyle(a);y.height*=o.sizeMultiplier/r.sizeMultiplier;y.depth*=o.sizeMultiplier/r.sizeMultiplier;var M=void 0;if(a.size===c.default.DISPLAY.size){M=r.fontMetrics().delim1}else{M=r.fontMetrics().delim2}var _=void 0;var S=void 0;if(t.value.leftDelim==null){_=v.makeNullDelimiter(r,["mopen"])}else{_=u.default.customSizedDelim(t.value.leftDelim,M,true,r.havingStyle(a),t.mode,["mopen"])}if(t.value.rightDelim==null){S=v.makeNullDelimiter(r,["mclose"])}else{S=u.default.customSizedDelim(t.value.rightDelim,M,true,r.havingStyle(a),t.mode,["mclose"])}return l.default.makeSpan(["mord"].concat(o.sizingClasses(r)),[_,l.default.makeSpan(["mfrac"],[y]),S],r)},mathmlBuilder:function e(t,r){var a=new f.default.MathNode("mfrac",[m.buildGroup(t.value.numer,r),m.buildGroup(t.value.denom,r)]);if(!t.value.hasBarLine){a.setAttribute("linethickness","0px")}if(t.value.leftDelim!=null||t.value.rightDelim!=null){var n=[];if(t.value.leftDelim!=null){var i=new f.default.MathNode("mo",[new f.default.TextNode(t.value.leftDelim)]);i.setAttribute("fence","true");n.push(i)}n.push(a);if(t.value.rightDelim!=null){var l=new f.default.MathNode("mo",[new f.default.TextNode(t.value.rightDelim)]);l.setAttribute("fence","true");n.push(l)}var o=new f.default.MathNode("mrow",n);return o}return a}})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../delimiter":97,"../mathMLTree":114}],106:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=s(a);var i=e("../buildCommon");var l=s(i);var o=e("../mathMLTree");var u=s(o);function s(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"katex",names:["\\KaTeX"],props:{numArgs:0,allowedInText:true},handler:function e(t,r){return{type:"katex"}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["k"],[l.default.mathsym("K",t.mode)],r);var n=l.default.makeSpan(["a"],[l.default.mathsym("A",t.mode)],r);n.height=(n.height+.2)*.75;n.depth=(n.height-.2)*.75;var i=l.default.makeSpan(["t"],[l.default.mathsym("T",t.mode)],r);var o=l.default.makeSpan(["e"],[l.default.mathsym("E",t.mode)],r);o.height=o.height-.2155;o.depth=o.depth+.2155;var u=l.default.makeSpan(["x"],[l.default.mathsym("X",t.mode)],r);return l.default.makeSpan(["mord","katex-logo"],[a,n,i,o,u],r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mtext",[new u.default.TextNode("KaTeX")]);return a}})},{"../buildCommon":91,"../defineFunction":96,"../mathMLTree":114}],107:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{
numArgs:1,allowedInText:true},handler:function e(t,r){var a=r[0];return{type:"lap",alignment:t.funcName.slice(5),body:a}},htmlBuilder:function e(t,r){var a=void 0;if(t.value.alignment==="clap"){a=l.default.makeSpan([],[f.buildGroup(t.value.body,r)]);a=l.default.makeSpan(["inner"],[a],r)}else{a=l.default.makeSpan(["inner"],[f.buildGroup(t.value.body,r)])}var n=l.default.makeSpan(["fix"],[]);return l.default.makeSpan(["mord",t.value.alignment],[a,n],r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mpadded",[c.buildGroup(t.value.body,r)]);if(t.value.alignment!=="rlap"){var n=t.value.alignment==="llap"?"-1":"-0.5";a.setAttribute("lspace",n+"width")}a.setAttribute("width","0px");return a}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],108:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=m(a);var i=e("../buildCommon");var l=m(i);var o=e("../mathMLTree");var u=m(o);var s=e("../Style");var f=m(s);var d=e("../buildHTML");var c=p(d);var h=e("../buildMathML");var v=p(h);function p(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function m(e){return e&&e.__esModule?e:{default:e}}var g=function e(t,r){var a=[];if(t.value.modType==="bmod"){if(!r.style.isTight()){a.push(l.default.makeSpan(["mspace","negativemediumspace"],[],r))}a.push(l.default.makeSpan(["mspace","thickspace"],[],r))}else if(r.style.size===f.default.DISPLAY.size){a.push(l.default.makeSpan(["mspace","quad"],[],r))}else if(t.value.modType==="mod"){a.push(l.default.makeSpan(["mspace","twelvemuspace"],[],r))}else{a.push(l.default.makeSpan(["mspace","eightmuspace"],[],r))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(l.default.mathsym("(",t.mode))}if(t.value.modType!=="pod"){var n=[l.default.mathsym("m",t.mode),l.default.mathsym("o",t.mode),l.default.mathsym("d",t.mode)];if(t.value.modType==="bmod"){a.push(l.default.makeSpan(["mbin"],n,r));a.push(l.default.makeSpan(["mspace","thickspace"],[],r));if(!r.style.isTight()){a.push(l.default.makeSpan(["mspace","negativemediumspace"],[],r))}}else{Array.prototype.push.apply(a,n);a.push(l.default.makeSpan(["mspace","sixmuspace"],[],r))}}if(t.value.value){Array.prototype.push.apply(a,c.buildExpression(t.value.value,r,false))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(l.default.mathsym(")",t.mode))}return l.default.makeFragment(a)};var b=function e(t,r){var a=[];if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(new u.default.MathNode("mo",[v.makeText("(",t.mode)]))}if(t.value.modType!=="pod"){a.push(new u.default.MathNode("mo",[v.makeText("mod",t.mode)]))}if(t.value.value){var n=new u.default.MathNode("mspace");n.setAttribute("width","0.333333em");a.push(n);a=a.concat(v.buildExpression(t.value.value,r))}if(t.value.modType==="pod"||t.value.modType==="pmod"){a.push(new u.default.MathNode("mo",[v.makeText(")",t.mode)]))}return new u.default.MathNode("mo",a)};(0,n.default)({type:"mod",names:["\\bmod"],props:{numArgs:0},handler:function e(t,r){return{type:"mod",modType:"bmod",value:null}},htmlBuilder:g,mathmlBuilder:b});(0,n.default)({type:"mod",names:["\\pod","\\pmod","\\mod"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"mod",modType:t.funcName.substr(1),value:(0,a.ordargument)(n)}},htmlBuilder:g,mathmlBuilder:b})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],109:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=x(a);var i=e("../buildCommon");var l=x(i);var o=e("../domTree");var u=x(o);var s=e("../mathMLTree");var f=x(s);var d=e("../utils");var c=x(d);var h=e("../Style");var v=x(h);var p=e("../buildHTML");var m=y(p);var g=e("../buildMathML");var b=y(g);function y(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function x(e){return e&&e.__esModule?e:{default:e}}var w=function e(t,r){var a=void 0;var n=void 0;var i=false;if(t.type==="supsub"){a=t.value.sup;n=t.value.sub;t=t.value.base;i=true}var o=r.style;var s=["\\smallint"];var f=false;if(o.size===v.default.DISPLAY.size&&t.value.symbol&&!c.default.contains(s,t.value.body)){f=true}var d=void 0;if(t.value.symbol){var h=f?"Size2-Regular":"Size1-Regular";d=l.default.makeSymbol(t.value.body,h,"math",r,["mop","op-symbol",f?"large-op":"small-op"])}else if(t.value.value){var p=m.buildExpression(t.value.value,r,true);if(p.length===1&&p[0]instanceof u.default.symbolNode){d=p[0];d.classes[0]="mop"}else{d=l.default.makeSpan(["mop"],p,r)}}else{var g=[];for(var b=1;b<t.value.body.length;b++){g.push(l.default.mathsym(t.value.body[b],t.mode))}d=l.default.makeSpan(["mop"],g,r)}var y=0;var x=0;if(d instanceof u.default.symbolNode){y=(d.height-d.depth)/2-r.fontMetrics().axisHeight;x=d.italic}if(i){d=l.default.makeSpan([],[d]);var w=void 0;var k=void 0;var M={height:0,depth:0};var _=void 0;var S=void 0;if(a){S=r.havingStyle(o.sup());w=m.buildGroup(a,S,r);k=Math.max(r.fontMetrics().bigOpSpacing1,r.fontMetrics().bigOpSpacing3-w.depth)}if(n){S=r.havingStyle(o.sub());M=m.buildGroup(n,S,r);_=Math.max(r.fontMetrics().bigOpSpacing2,r.fontMetrics().bigOpSpacing4-M.height)}var z=void 0;var T=void 0;var C=void 0;if(!a){T=d.height-y;z=l.default.makeVList({positionType:"top",positionData:T,children:[{type:"kern",size:r.fontMetrics().bigOpSpacing5},{type:"elem",elem:M,marginLeft:-x+"em"},{type:"kern",size:_},{type:"elem",elem:d}]},r)}else if(!n){C=d.depth+y;z=l.default.makeVList({positionType:"bottom",positionData:C,children:[{type:"elem",elem:d},{type:"kern",size:k},{type:"elem",elem:w,marginLeft:x+"em"},{type:"kern",size:r.fontMetrics().bigOpSpacing5}]},r)}else if(!a&&!n){return d}else{C=r.fontMetrics().bigOpSpacing5+M.height+M.depth+_+d.depth+y;z=l.default.makeVList({positionType:"bottom",positionData:C,children:[{type:"kern",size:r.fontMetrics().bigOpSpacing5},{type:"elem",elem:M,marginLeft:-x+"em"},{type:"kern",size:_},{type:"elem",elem:d},{type:"kern",size:k},{type:"elem",elem:w,marginLeft:x+"em"},{type:"kern",size:r.fontMetrics().bigOpSpacing5}]},r)}return l.default.makeSpan(["mop","op-limits"],[z],r)}else{if(y){d.style.position="relative";d.style.top=y+"em"}return d}};var k=function e(t,r){var a=void 0;if(t.value.symbol){a=new f.default.MathNode("mo",[b.makeText(t.value.body,t.mode)])}else if(t.value.value){a=new f.default.MathNode("mo",b.buildExpression(t.value.value,r))}else{a=new f.default.MathNode("mi",[new f.default.TextNode(t.value.body.slice(1))])}return a};(0,n.default)({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],props:{numArgs:0},handler:function e(t,r){return{type:"op",limits:true,symbol:true,body:t.funcName}},htmlBuilder:w,mathmlBuilder:k});(0,n.default)({type:"op",names:["\\mathop"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"op",limits:false,symbol:false,value:(0,a.ordargument)(n)}},htmlBuilder:w,mathmlBuilder:k})},{"../Style":89,"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../domTree":98,"../mathMLTree":114,"../utils":121}],110:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=m(a);var i=e("../buildCommon");var l=m(i);var o=e("../mathMLTree");var u=m(o);var s=e("../domTree");var f=m(s);var d=e("../buildHTML");var c=p(d);var h=e("../buildMathML");var v=p(h);function p(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function m(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"operatorname",names:["\\operatorname"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"operatorname",value:(0,a.ordargument)(n)}},htmlBuilder:function e(t,r){var a=[];if(t.value.value.length>0){var n="";var i="";var o=c.buildExpression(t.value.value,r,true);for(var u=0;u<o.length;u++){n=o[u].value;n=n.replace(/\u2212/,"-");n=n.replace(/\u2217/,"*");i=/[\u0391-\u03D7]/.test(n)?"math":"text";a.push(l.default.mathsym(n,i))}}return l.default.makeSpan(["mop"],a,r)},mathmlBuilder:function e(t,r){var a=[];if(t.value.value.length>0){var n=v.buildExpression(t.value.value,r);var i="";for(var l=0;l<n.length;l++){i+=n[l].children[0].text}i=i.replace(/\u2212/g,"-");i=i.replace(/\u2217/g,"*");a=[new u.default.TextNode(i)]}var o=new u.default.MathNode("mi",a);o.setAttribute("mathvariant","normal");var s=new u.default.MathNode("mo",[v.makeText("&ApplyFunction;","text")]);return new f.default.documentFragment([o,s])}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../domTree":98,"../mathMLTree":114}],111:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"phantom",names:["\\phantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"phantom",value:(0,a.ordargument)(n)}},htmlBuilder:function e(t,r){var a=f.buildExpression(t.value.value,r.withPhantom(),false);return new l.default.makeFragment(a)},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);return new u.default.MathNode("mphantom",a)}});(0,n.default)({type:"hphantom",names:["\\hphantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"hphantom",value:(0,a.ordargument)(n),body:n}},htmlBuilder:function e(t,r){var a=l.default.makeSpan([],[f.buildGroup(t.value.body,r.withPhantom())]);a.height=0;a.depth=0;if(a.children){for(var n=0;n<a.children.length;n++){a.children[n].height=0;a.children[n].depth=0}}a=l.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:a}]},r);return a},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);var n=new u.default.MathNode("mphantom",a);n.setAttribute("height","0px");return n}});(0,n.default)({type:"vphantom",names:["\\vphantom"],props:{numArgs:1},handler:function e(t,r){var n=r[0];return{type:"vphantom",value:(0,a.ordargument)(n),body:n}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["inner"],[f.buildGroup(t.value.body,r.withPhantom())]);var n=l.default.makeSpan(["fix"],[]);return l.default.makeSpan(["mord","rlap"],[a,n],r)},mathmlBuilder:function e(t,r){var a=c.buildExpression(t.value.value,r);var n=new u.default.MathNode("mphantom",a);n.setAttribute("width","0px");return n}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],112:[function(e,t,r){"use strict";var a=e("../defineFunction");var n=v(a);var i=e("../buildCommon");var l=v(i);var o=e("../mathMLTree");var u=v(o);var s=e("../buildHTML");var f=h(s);var d=e("../buildMathML");var c=h(d);function h(e){if(e&&e.__esModule){return e}else{var t={};if(e!=null){for(var r in e){if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}}t.default=e;return t}}function v(e){return e&&e.__esModule?e:{default:e}}(0,n.default)({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:true},handler:function e(t,r,a){var n=false;var i=false;var l=a[0];if(l){var o="";for(var u=0;u<l.value.length;++u){o=l.value[u].value;if(o==="t"){n=true}else if(o==="b"){i=true}else{n=false;i=false;break}}}else{n=true;i=true}var s=r[0];return{type:"smash",body:s,smashHeight:n,smashDepth:i}},htmlBuilder:function e(t,r){var a=l.default.makeSpan(["mord"],[f.buildGroup(t.value.body,r)]);if(!t.value.smashHeight&&!t.value.smashDepth){return a}if(t.value.smashHeight){a.height=0;if(a.children){for(var n=0;n<a.children.length;n++){a.children[n].height=0}}}if(t.value.smashDepth){a.depth=0;if(a.children){for(var i=0;i<a.children.length;i++){a.children[i].depth=0}}}return l.default.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:a}]},r)},mathmlBuilder:function e(t,r){var a=new u.default.MathNode("mpadded",[c.buildGroup(t.value.body,r)]);if(t.value.smashHeight){a.setAttribute("height","0px")}if(t.value.smashDepth){a.setAttribute("depth","0px")}return a}})},{"../buildCommon":91,"../buildHTML":92,"../buildMathML":93,"../defineFunction":96,"../mathMLTree":114}],113:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./symbols");var n=u(a);var i=e("./utils");var l=u(i);var o=e("./Token");function u(e){return e&&e.__esModule?e:{default:e}}var s={};r.default=s;function f(e,t){s[e]=t}f("\\bgroup","{");f("\\egroup","}");f("\\begingroup","{");f("\\endgroup","}");f("\\mkern","\\kern");f("\\llap","\\mathllap{\\textrm{#1}}");f("\\rlap","\\mathrlap{\\textrm{#1}}");f("\\clap","\\mathclap{\\textrm{#1}}");f("\\overset","\\mathop{#2}\\limits^{#1}");f("\\underset","\\mathop{#2}\\limits_{#1}");f("\\boxed","\\fbox{\\displaystyle{#1}}");f("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;");f("\\implies","\\DOTSB\\;\\Longrightarrow\\;");f("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var d={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\implies":"\\dotsb","\\impliedby":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\iff":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\bmod":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};f("\\dots",function(e){var t="\\dotso";var r=e.expandAfterFuture().text;if(r in d){t=d[r]}else if(r.substr(0,4)==="\\not"){t="\\dotsb"}else if(r in n.default.math){if(l.default.contains(["bin","rel"],n.default.math[r].group)){t="\\dotsb"}}return t});var c={")":true,"]":true,"\\rbrack":true,"\\}":true,"\\rbrace":true,"\\rangle":true,"\\rceil":true,"\\rfloor":true,"\\rgroup":true,"\\rmoustache":true,"\\right":true,"\\bigr":true,"\\biggr":true,"\\Bigr":true,"\\Biggr":true,$:true,";":true,".":true,",":true};f("\\dotso",function(e){var t=e.future().text;if(t in c){return"\\ldots\\,"}else{return"\\ldots"}});f("\\dotsc",function(e){var t=e.future().text;if(t in c&&t!==","){return"\\ldots\\,"}else{return"\\ldots"}});f("\\cdots",function(e){var t=e.future().text;if(t in c){return"\\@cdots\\,"}else{return"\\@cdots"}});f("\\dotsb","\\cdots");f("\\dotsm","\\cdots");f("\\dotsi","\\!\\cdots");f("\\dotsx","\\ldots\\,");f("\\DOTSI","\\relax");f("\\DOTSB","\\relax");f("\\DOTSX","\\relax");f("\\thinspace","\\,");f("\\medspace","\\:");f("\\thickspace","\\;");f("\\hspace","\\kern{#1}");f("\\ordinarycolon",":");f("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");f("\\dblcolon","\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon");f("\\coloneqq","\\vcentcolon\\mathrel{\\mkern-1.2mu}=");f("\\Coloneqq","\\dblcolon\\mathrel{\\mkern-1.2mu}=");f("\\coloneq","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");f("\\Coloneq","\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");f("\\eqqcolon","=\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\Eqqcolon","=\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\Eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\colonapprox","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx");f("\\Colonapprox","\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx");f("\\colonsim","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim");f("\\Colonsim","\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim");f("\\ratio","\\vcentcolon");f("\\coloncolon","\\dblcolon");f("\\colonequals","\\coloneqq");f("\\coloncolonequals","\\Coloneqq");f("\\equalscolon","\\eqqcolon");f("\\equalscoloncolon","\\Eqqcolon");f("\\colonminus","\\coloneq");f("\\coloncolonminus","\\Coloneq");f("\\minuscolon","\\eqcolon");f("\\minuscoloncolon","\\Eqcolon");f("\\coloncolonapprox","\\Colonapprox");f("\\coloncolonsim","\\Colonsim");f("\\simcolon","\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\simcoloncolon","\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");f("\\approxcolon","\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");f("\\approxcoloncolon","\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon")},{"./Token":90,"./symbols":118,"./utils":121}],114:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/core-js/get-iterator");var n=d(a);var i=e("babel-runtime/helpers/classCallCheck");var l=d(i);var o=e("babel-runtime/helpers/createClass");var u=d(o);var s=e("./utils");var f=d(s);function d(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,r){(0,l.default)(this,e);this.type=t;this.attributes={};this.children=r||[]}(0,u.default)(e,[{key:"setAttribute",value:function e(t,r){this.attributes[t]=r}},{key:"toNode",value:function e(){var t=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t.setAttribute(r,this.attributes[r])}}var a=true;var i=false;var l=undefined;try{for(var o=(0,n.default)(this.children),u;!(a=(u=o.next()).done);a=true){var s=u.value;t.appendChild(s.toNode())}}catch(e){i=true;l=e}finally{try{if(!a&&o.return){o.return()}}finally{if(i){throw l}}}return t}},{key:"toMarkup",value:function e(){var t="<"+this.type;for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t+=" "+r+'="';t+=f.default.escape(this.attributes[r]);t+='"'}}t+=">";for(var a=0;a<this.children.length;a++){t+=this.children[a].toMarkup()}t+="</"+this.type+">";return t}}]);return e}();var h=function(){function e(t){(0,l.default)(this,e);this.text=t}(0,u.default)(e,[{key:"toNode",value:function e(){return document.createTextNode(this.text)}},{key:"toMarkup",value:function e(){return f.default.escape(this.text)}}]);return e}();r.default={MathNode:c,TextNode:h}},{"./utils":121,"babel-runtime/core-js/get-iterator":3,"babel-runtime/helpers/classCallCheck":8,"babel-runtime/helpers/createClass":9}],115:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("./Parser");var n=i(a);function i(e){return e&&e.__esModule?e:{default:e}}var l=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var a=new n.default(t,r);return a.parse()};r.default=l},{"./Parser":86}],116:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=e("babel-runtime/helpers/slicedToArray");var n=h(a);var i=e("./domTree");var l=h(i);var o=e("./buildCommon");var u=h(o);var s=e("./mathMLTree");var f=h(s);var d=e("./utils");var c=h(d);function h(e){return e&&e.__esModule?e:{default:e}}var v={widehat:"^",widetilde:"~",undertilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23b5",overbrace:"\u23de",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xLongequal:"=",xtofrom:"\u21c4"};var p=function e(t){var r=new f.default.MathNode("mo",[new f.default.TextNode(v[t.substr(1)])]);r.setAttribute("stretchy","true");return r};var m={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xLongequal:[["longequal"],.888,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528]};var g=function e(t){if(t.type==="ordgroup"){return t.value.length}else{return 1}};var b=function e(t,r){var a=t.value.label.substr(1);var i=[];var o=void 0;var s=4e5;var f=0;var d=0;var h=void 0;var v=void 0;var p=void 0;var b=void 0;var y=void 0;if(c.default.contains(["widehat","widetilde","undertilde"],a)){var x=g(t.value.base);var w=void 0;if(x>5){w=a==="widehat"?420:312;s=a==="widehat"?2364:2340;o=a==="widehat"?.42:.34;p=(a==="widehat"?"widehat":"tilde")+"4"}else{var k=[1,1,2,2,3,3][x];if(a==="widehat"){s=[0,1062,2364,2364,2364][k];w=[0,239,300,360,420][k];o=[0,.24,.3,.3,.36,.42][k];p="widehat"+k}else{s=[0,600,1033,2339,2340][k];w=[0,260,286,306,312][k];o=[0,.26,.286,.3,.306,.34][k];p="tilde"+k}}h=new l.default.pathNode(p);i.push(["width","100%"]);i.push(["height",o+"em"]);i.push(["viewBox","0 0 "+s+" "+w]);i.push(["preserveAspectRatio","none"]);b=new l.default.svgNode([h],i);y=u.default.makeSpan([],[b],r)}else{var M=void 0;var _=void 0;var S=[];var z=(0,n.default)(m[a],4);v=z[0];d=z[1];f=z[2];_=z[3];var T=v.length;if(1>T||T>3){throw new Error("Correct katexImagesData or update code below to support\n                "+T+" children.")}o=f/1e3;for(var C=0;C<T;C++){h=new l.default.pathNode(v[C]);i=[["width","400em"],["height",o+"em"]];i.push(["viewBox","0 0 "+s+" "+f]);if(T===2){M=["halfarrow-left","halfarrow-right"][C];_=["xMinYMin","xMaxYMin"][C]}else if(T===3){M=["brace-left","brace-center","brace-right"][C];_=["xMinYMin","xMidYMin","xMaxYMin"][C]}i.push(["preserveAspectRatio",_+" slice"]);b=new l.default.svgNode([h],i);if(T===1){S.push(u.default.makeSpan(["hide-tail"],[b],r))}else{var A=u.default.makeSpan([M],[b],r);A.style.height=o+"em";S.push(A)}}y=T===1?S[0]:u.default.makeSpan(["stretchy"],S,r)}y.height=o;y.style.height=o+"em";if(d>0){y.style.minWidth=d+"em"}return y};var y=function e(t,r,a,n){var i=void 0;var o=t.height+t.depth+2*a;if(/(fbox)|(color)/.test(r)){i=u.default.makeSpan(["stretchy",r],[],n);if(r==="fbox"&&n.color){i.style.borderColor=n.getColor()}}else{var s=[["x1","0"]];var f=[];if(r!=="cancel"){s.push(["y1","0"]);s.push(["x2","100%"]);s.push(["y2","100%"]);s.push(["stroke-width","0.046em"]);f.push(new l.default.lineNode(s))}if(r==="xcancel"){s=[["x1","0"]]}if(r!=="bcancel"){s.push(["y1","100%"]);s.push(["x2","100%"]);s.push(["y2","0"]);s.push(["stroke-width","0.046em"]);f.push(new l.default.lineNode(s))}s=[["width","100%"],["height",o+"em"]];var d=new l.default.svgNode(f,s);i=u.default.makeSpan([],[d],n)}i.height=o;i.style.height=o+"em";return i};r.default={encloseSpan:y,mathMLnode:p,svgSpan:b}},{"./buildCommon":91,"./domTree":98,"./mathMLTree":114,"./utils":121,"babel-runtime/helpers/slicedToArray":10}],117:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={sqrtMain:"M95 622c-2.667 0-7.167-2.667-13.5\n-8S72 604 72 600c0-2 .333-3.333 1-4 1.333-2.667 23.833-20.667 67.5-54s\n65.833-50.333 66.5-51c1.333-1.333 3-2 5-2 4.667 0 8.667 3.333 12 10l173\n378c.667 0 35.333-71 104-213s137.5-285 206.5-429S812 17.333 812 14c5.333\n-9.333 12-14 20-14h399166v40H845.272L620 507 385 993c-2.667 4.667-9 7-19\n7-6 0-10-1-12-3L160 575l-65 47zM834 0h399166v40H845z",sqrtSize1:"M263 601c.667 0 18 39.667 52 119s68.167\n 158.667 102.5 238 51.833 119.333 52.5 120C810 373.333 980.667 17.667 982 11\nc4.667-7.333 11-11 19-11h398999v40H1012.333L741 607c-38.667 80.667-84 175-136\n 283s-89.167 185.333-111.5 232-33.833 70.333-34.5 71c-4.667 4.667-12.333 7-23\n 7l-12-1-109-253c-72.667-168-109.333-252-110-252-10.667 8-22 16.667-34 26-22\n 17.333-33.333 26-34 26l-26-26 76-59 76-60zM1001 0h398999v40H1012z",sqrtSize2:"M1001 0h398999v40H1013.084S929.667 308 749\n 880s-277 876.333-289 913c-4.667 4.667-12.667 7-24 7h-12c-1.333-3.333-3.667\n-11.667-7-25-35.333-125.333-106.667-373.333-214-744-10 12-21 25-33 39l-32 39\nc-6-5.333-15-14-27-26l25-30c26.667-32.667 52-63 76-91l52-60 208 722c56-175.333\n 126.333-397.333 211-666s153.833-488.167 207.5-658.5C944.167 129.167 975 32.667\n 983 10c4-6.667 10-10 18-10zm0 0h398999v40H1013z",sqrtSize3:"M424 2398c-1.333-.667-38.5-172-111.5-514 S202.667 1370.667 202\n 1370c0-2-10.667 14.333-32 49-4.667 7.333-9.833 15.667-15.5 25s-9.833 16-12.5\n 20l-5 7c-4-3.333-8.333-7.667-13-13l-13-13 76-122 77-121 209 968c0-2 84.667\n-361.667 254-1079C896.333 373.667 981.667 13.333 983 10c4-6.667 10-10 18-10\nh398999v40H1014.622S927.332 418.667 742 1206c-185.333 787.333-279.333 1182.333\n-282 1185-2 6-10 9-24 9-8 0-12-.667-12-2zM1001 0h398999v40H1014z",sqrtSize4:"M473 2713C812.333 913.667 982.333 13 983 11c3.333-7.333 9.333\n-11 18-11h399110v40H1017.698S927.168 518 741.5 1506C555.833 2494 462 2989 460\n 2991c-2 6-10 9-24 9-8 0-12-.667-12-2s-5.333-32-16-92c-50.667-293.333-119.667\n-693.333-207-1200 0-1.333-5.333 8.667-16 30l-32 64-16 33-26-26 76-153 77-151\nc.667.667 35.667 202 105 604 67.333 400.667 102 602.667 104 606z\nM1001 0h398999v40H1017z",doubleleftarrow:"M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",doublerightarrow:"M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",leftarrow:"M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",leftbrace:"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",leftbraceunder:"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",leftgroup:"M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",leftgroupunder:"M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",leftharpoon:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",leftharpoonplus:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",leftharpoondown:"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",leftharpoondownplus:"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",lefthook:"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",leftlinesegment:"M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",leftmapsto:"M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",leftToFrom:"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",longequal:"M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",midbrace:"M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",midbraceunder:"M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
rightarrow:"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",rightbrace:"M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",rightbraceunder:"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",rightgroup:"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",rightgroupunder:"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",rightharpoon:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",rightharpoonplus:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",rightharpoondown:"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",rightharpoondownplus:"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",righthook:"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",rightlinesegment:"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",rightToFrom:"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",twoheadleftarrow:"M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",twoheadrightarrow:"M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",tilde1:"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",tilde2:"M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",tilde3:"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",tilde4:"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",widehat1:"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",widehat2:"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat3:"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat4:"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z"};r.default={path:a}},{}],118:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a={math:{},text:{}};r.default=a;function n(e,t,r,n,i,l){a[e][i]={font:t,group:r,replace:n};if(l&&n){a[e][n]=a[e][i]}}var i="math";var l="text";var o="main";var u="ams";var s="accent";var f="bin";var d="close";var c="inner";var h="mathord";var v="op";var p="open";var m="punct";var g="rel";var b="spacing";var y="textord";n(i,o,g,"\u2261","\\equiv",true);n(i,o,g,"\u227a","\\prec",true);n(i,o,g,"\u227b","\\succ",true);n(i,o,g,"\u223c","\\sim",true);n(i,o,g,"\u22a5","\\perp");n(i,o,g,"\u2aaf","\\preceq",true);n(i,o,g,"\u2ab0","\\succeq",true);n(i,o,g,"\u2243","\\simeq",true);n(i,o,g,"\u2223","\\mid");n(i,o,g,"\u226a","\\ll");n(i,o,g,"\u226b","\\gg",true);n(i,o,g,"\u224d","\\asymp",true);n(i,o,g,"\u2225","\\parallel");n(i,o,g,"\u22c8","\\bowtie",true);n(i,o,g,"\u2323","\\smile",true);n(i,o,g,"\u2291","\\sqsubseteq",true);n(i,o,g,"\u2292","\\sqsupseteq",true);n(i,o,g,"\u2250","\\doteq",true);n(i,o,g,"\u2322","\\frown",true);n(i,o,g,"\u220b","\\ni",true);n(i,o,g,"\u221d","\\propto",true);n(i,o,g,"\u22a2","\\vdash",true);n(i,o,g,"\u22a3","\\dashv",true);n(i,o,g,"\u220b","\\owns");n(i,o,m,".","\\ldotp");n(i,o,m,"\u22c5","\\cdotp");n(i,o,y,"#","\\#");n(l,o,y,"#","\\#");n(i,o,y,"&","\\&");n(l,o,y,"&","\\&");n(i,o,y,"\u2135","\\aleph");n(i,o,y,"\u2200","\\forall");n(i,o,y,"\u210f","\\hbar");n(i,o,y,"\u2203","\\exists");n(i,o,y,"\u2207","\\nabla");n(i,o,y,"\u266d","\\flat");n(i,o,y,"\u2113","\\ell");n(i,o,y,"\u266e","\\natural");n(i,o,y,"\u2663","\\clubsuit");n(i,o,y,"\u2118","\\wp");n(i,o,y,"\u266f","\\sharp");n(i,o,y,"\u2662","\\diamondsuit");n(i,o,y,"\u211c","\\Re");n(i,o,y,"\u2661","\\heartsuit");n(i,o,y,"\u2111","\\Im");n(i,o,y,"\u2660","\\spadesuit");n(i,o,y,"\u2020","\\dag");n(l,o,y,"\u2020","\\dag");n(l,o,y,"\u2020","\\textdagger");n(i,o,y,"\u2021","\\ddag");n(l,o,y,"\u2021","\\ddag");n(l,o,y,"\u2020","\\textdaggerdbl");n(i,o,d,"\u23b1","\\rmoustache");n(i,o,p,"\u23b0","\\lmoustache");n(i,o,d,"\u27ef","\\rgroup");n(i,o,p,"\u27ee","\\lgroup");n(i,o,f,"\u2213","\\mp");n(i,o,f,"\u2296","\\ominus");n(i,o,f,"\u228e","\\uplus");n(i,o,f,"\u2293","\\sqcap");n(i,o,f,"\u2217","\\ast");n(i,o,f,"\u2294","\\sqcup");n(i,o,f,"\u25ef","\\bigcirc");n(i,o,f,"\u2219","\\bullet");n(i,o,f,"\u2021","\\ddagger");n(i,o,f,"\u2240","\\wr");n(i,o,f,"\u2a3f","\\amalg");n(i,o,f,"&","\\And");n(i,o,g,"\u27f5","\\longleftarrow");n(i,o,g,"\u21d0","\\Leftarrow");n(i,o,g,"\u27f8","\\Longleftarrow");n(i,o,g,"\u27f6","\\longrightarrow");n(i,o,g,"\u21d2","\\Rightarrow");n(i,o,g,"\u27f9","\\Longrightarrow");n(i,o,g,"\u2194","\\leftrightarrow");n(i,o,g,"\u27f7","\\longleftrightarrow");n(i,o,g,"\u21d4","\\Leftrightarrow");n(i,o,g,"\u27fa","\\Longleftrightarrow");n(i,o,g,"\u21a6","\\mapsto");n(i,o,g,"\u27fc","\\longmapsto");n(i,o,g,"\u2197","\\nearrow");n(i,o,g,"\u21a9","\\hookleftarrow");n(i,o,g,"\u21aa","\\hookrightarrow");n(i,o,g,"\u2198","\\searrow");n(i,o,g,"\u21bc","\\leftharpoonup");n(i,o,g,"\u21c0","\\rightharpoonup");n(i,o,g,"\u2199","\\swarrow");n(i,o,g,"\u21bd","\\leftharpoondown");n(i,o,g,"\u21c1","\\rightharpoondown");n(i,o,g,"\u2196","\\nwarrow");n(i,o,g,"\u21cc","\\rightleftharpoons");n(i,u,g,"\u226e","\\nless");n(i,u,g,"\ue010","\\nleqslant");n(i,u,g,"\ue011","\\nleqq");n(i,u,g,"\u2a87","\\lneq");n(i,u,g,"\u2268","\\lneqq");n(i,u,g,"\ue00c","\\lvertneqq");n(i,u,g,"\u22e6","\\lnsim");n(i,u,g,"\u2a89","\\lnapprox");n(i,u,g,"\u2280","\\nprec");n(i,u,g,"\u22e0","\\npreceq");n(i,u,g,"\u22e8","\\precnsim");n(i,u,g,"\u2ab9","\\precnapprox");n(i,u,g,"\u2241","\\nsim");n(i,u,g,"\ue006","\\nshortmid");n(i,u,g,"\u2224","\\nmid");n(i,u,g,"\u22ac","\\nvdash");n(i,u,g,"\u22ad","\\nvDash");n(i,u,g,"\u22ea","\\ntriangleleft");n(i,u,g,"\u22ec","\\ntrianglelefteq");n(i,u,g,"\u228a","\\subsetneq");n(i,u,g,"\ue01a","\\varsubsetneq");n(i,u,g,"\u2acb","\\subsetneqq");n(i,u,g,"\ue017","\\varsubsetneqq");n(i,u,g,"\u226f","\\ngtr");n(i,u,g,"\ue00f","\\ngeqslant");n(i,u,g,"\ue00e","\\ngeqq");n(i,u,g,"\u2a88","\\gneq");n(i,u,g,"\u2269","\\gneqq");n(i,u,g,"\ue00d","\\gvertneqq");n(i,u,g,"\u22e7","\\gnsim");n(i,u,g,"\u2a8a","\\gnapprox");n(i,u,g,"\u2281","\\nsucc");n(i,u,g,"\u22e1","\\nsucceq");n(i,u,g,"\u22e9","\\succnsim");n(i,u,g,"\u2aba","\\succnapprox");n(i,u,g,"\u2246","\\ncong");n(i,u,g,"\ue007","\\nshortparallel");n(i,u,g,"\u2226","\\nparallel");n(i,u,g,"\u22af","\\nVDash");n(i,u,g,"\u22eb","\\ntriangleright");n(i,u,g,"\u22ed","\\ntrianglerighteq");n(i,u,g,"\ue018","\\nsupseteqq");n(i,u,g,"\u228b","\\supsetneq");n(i,u,g,"\ue01b","\\varsupsetneq");n(i,u,g,"\u2acc","\\supsetneqq");n(i,u,g,"\ue019","\\varsupsetneqq");n(i,u,g,"\u22ae","\\nVdash");n(i,u,g,"\u2ab5","\\precneqq");n(i,u,g,"\u2ab6","\\succneqq");n(i,u,g,"\ue016","\\nsubseteqq");n(i,u,f,"\u22b4","\\unlhd");n(i,u,f,"\u22b5","\\unrhd");n(i,u,g,"\u219a","\\nleftarrow");n(i,u,g,"\u219b","\\nrightarrow");n(i,u,g,"\u21cd","\\nLeftarrow");n(i,u,g,"\u21cf","\\nRightarrow");n(i,u,g,"\u21ae","\\nleftrightarrow");n(i,u,g,"\u21ce","\\nLeftrightarrow");n(i,u,g,"\u25b3","\\vartriangle");n(i,u,y,"\u210f","\\hslash");n(i,u,y,"\u25bd","\\triangledown");n(i,u,y,"\u25ca","\\lozenge");n(i,u,y,"\u24c8","\\circledS");n(i,u,y,"\xae","\\circledR");n(l,u,y,"\xae","\\circledR");n(i,u,y,"\u2221","\\measuredangle");n(i,u,y,"\u2204","\\nexists");n(i,u,y,"\u2127","\\mho");n(i,u,y,"\u2132","\\Finv");n(i,u,y,"\u2141","\\Game");n(i,u,y,"k","\\Bbbk");n(i,u,y,"\u2035","\\backprime");n(i,u,y,"\u25b2","\\blacktriangle");n(i,u,y,"\u25bc","\\blacktriangledown");n(i,u,y,"\u25a0","\\blacksquare");n(i,u,y,"\u29eb","\\blacklozenge");n(i,u,y,"\u2605","\\bigstar");n(i,u,y,"\u2222","\\sphericalangle");n(i,u,y,"\u2201","\\complement");n(i,u,y,"\xf0","\\eth");n(i,u,y,"\u2571","\\diagup");n(i,u,y,"\u2572","\\diagdown");n(i,u,y,"\u25a1","\\square");n(i,u,y,"\u25a1","\\Box");n(i,u,y,"\u25ca","\\Diamond");n(i,u,y,"\xa5","\\yen");n(i,u,y,"\u2713","\\checkmark");n(l,u,y,"\u2713","\\checkmark");n(i,u,y,"\u2136","\\beth");n(i,u,y,"\u2138","\\daleth");n(i,u,y,"\u2137","\\gimel");n(i,u,y,"\u03dd","\\digamma");n(i,u,y,"\u03f0","\\varkappa");n(i,u,p,"\u250c","\\ulcorner");n(i,u,d,"\u2510","\\urcorner");n(i,u,p,"\u2514","\\llcorner");n(i,u,d,"\u2518","\\lrcorner");n(i,u,g,"\u2266","\\leqq",true);n(i,u,g,"\u2a7d","\\leqslant");n(i,u,g,"\u2a95","\\eqslantless",true);n(i,u,g,"\u2272","\\lesssim");n(i,u,g,"\u2a85","\\lessapprox");n(i,u,g,"\u224a","\\approxeq",true);n(i,u,f,"\u22d6","\\lessdot");n(i,u,g,"\u22d8","\\lll");n(i,u,g,"\u2276","\\lessgtr");n(i,u,g,"\u22da","\\lesseqgtr");n(i,u,g,"\u2a8b","\\lesseqqgtr");n(i,u,g,"\u2251","\\doteqdot");n(i,u,g,"\u2253","\\risingdotseq",true);n(i,u,g,"\u2252","\\fallingdotseq",true);n(i,u,g,"\u223d","\\backsim",true);n(i,u,g,"\u22cd","\\backsimeq",true);n(i,u,g,"\u2ac5","\\subseteqq",true);n(i,u,g,"\u22d0","\\Subset",true);n(i,u,g,"\u228f","\\sqsubset",true);n(i,u,g,"\u227c","\\preccurlyeq",true);n(i,u,g,"\u22de","\\curlyeqprec",true);n(i,u,g,"\u227e","\\precsim",true);n(i,u,g,"\u2ab7","\\precapprox",true);n(i,u,g,"\u22b2","\\vartriangleleft");n(i,u,g,"\u22b4","\\trianglelefteq");n(i,u,g,"\u22a8","\\vDash");n(i,u,g,"\u22aa","\\Vvdash",true);n(i,u,g,"\u2323","\\smallsmile");n(i,u,g,"\u2322","\\smallfrown");n(i,u,g,"\u224f","\\bumpeq",true);n(i,u,g,"\u224e","\\Bumpeq",true);n(i,u,g,"\u2267","\\geqq",true);n(i,u,g,"\u2a7e","\\geqslant",true);n(i,u,g,"\u2a96","\\eqslantgtr",true);n(i,u,g,"\u2273","\\gtrsim",true);n(i,u,g,"\u2a86","\\gtrapprox",true);n(i,u,f,"\u22d7","\\gtrdot");n(i,u,g,"\u22d9","\\ggg",true);n(i,u,g,"\u2277","\\gtrless",true);n(i,u,g,"\u22db","\\gtreqless",true);n(i,u,g,"\u2a8c","\\gtreqqless",true);n(i,u,g,"\u2256","\\eqcirc",true);n(i,u,g,"\u2257","\\circeq",true);n(i,u,g,"\u225c","\\triangleq",true);n(i,u,g,"\u223c","\\thicksim");n(i,u,g,"\u2248","\\thickapprox");n(i,u,g,"\u2ac6","\\supseteqq",true);n(i,u,g,"\u22d1","\\Supset",true);n(i,u,g,"\u2290","\\sqsupset",true);n(i,u,g,"\u227d","\\succcurlyeq",true);n(i,u,g,"\u22df","\\curlyeqsucc",true);n(i,u,g,"\u227f","\\succsim",true);n(i,u,g,"\u2ab8","\\succapprox",true);n(i,u,g,"\u22b3","\\vartriangleright");n(i,u,g,"\u22b5","\\trianglerighteq");n(i,u,g,"\u22a9","\\Vdash",true);n(i,u,g,"\u2223","\\shortmid");n(i,u,g,"\u2225","\\shortparallel");n(i,u,g,"\u226c","\\between",true);n(i,u,g,"\u22d4","\\pitchfork",true);n(i,u,g,"\u221d","\\varpropto");n(i,u,g,"\u25c0","\\blacktriangleleft");n(i,u,g,"\u2234","\\therefore");n(i,u,g,"\u220d","\\backepsilon");n(i,u,g,"\u25b6","\\blacktriangleright");n(i,u,g,"\u2235","\\because");n(i,u,g,"\u22d8","\\llless");n(i,u,g,"\u22d9","\\gggtr");n(i,u,f,"\u22b2","\\lhd");n(i,u,f,"\u22b3","\\rhd");n(i,u,g,"\u2242","\\eqsim",true);n(i,o,g,"\u22c8","\\Join");n(i,u,g,"\u2251","\\Doteq",true);n(i,u,f,"\u2214","\\dotplus");n(i,u,f,"\u2216","\\smallsetminus");n(i,u,f,"\u22d2","\\Cap");n(i,u,f,"\u22d3","\\Cup");n(i,u,f,"\u2a5e","\\doublebarwedge");n(i,u,f,"\u229f","\\boxminus");n(i,u,f,"\u229e","\\boxplus");n(i,u,f,"\u22c7","\\divideontimes");n(i,u,f,"\u22c9","\\ltimes");n(i,u,f,"\u22ca","\\rtimes");n(i,u,f,"\u22cb","\\leftthreetimes");n(i,u,f,"\u22cc","\\rightthreetimes");n(i,u,f,"\u22cf","\\curlywedge");n(i,u,f,"\u22ce","\\curlyvee");n(i,u,f,"\u229d","\\circleddash");n(i,u,f,"\u229b","\\circledast");n(i,u,f,"\u22c5","\\centerdot");n(i,u,f,"\u22ba","\\intercal");n(i,u,f,"\u22d2","\\doublecap");n(i,u,f,"\u22d3","\\doublecup");n(i,u,f,"\u22a0","\\boxtimes");n(i,u,g,"\u21e2","\\dashrightarrow");n(i,u,g,"\u21e0","\\dashleftarrow");n(i,u,g,"\u21c7","\\leftleftarrows");n(i,u,g,"\u21c6","\\leftrightarrows");n(i,u,g,"\u21da","\\Lleftarrow");n(i,u,g,"\u219e","\\twoheadleftarrow");n(i,u,g,"\u21a2","\\leftarrowtail");n(i,u,g,"\u21ab","\\looparrowleft");n(i,u,g,"\u21cb","\\leftrightharpoons");n(i,u,g,"\u21b6","\\curvearrowleft");n(i,u,g,"\u21ba","\\circlearrowleft");n(i,u,g,"\u21b0","\\Lsh");n(i,u,g,"\u21c8","\\upuparrows");n(i,u,g,"\u21bf","\\upharpoonleft");n(i,u,g,"\u21c3","\\downharpoonleft");n(i,u,g,"\u22b8","\\multimap",true);n(i,u,g,"\u21ad","\\leftrightsquigarrow");n(i,u,g,"\u21c9","\\rightrightarrows");n(i,u,g,"\u21c4","\\rightleftarrows");n(i,u,g,"\u21a0","\\twoheadrightarrow");n(i,u,g,"\u21a3","\\rightarrowtail");n(i,u,g,"\u21ac","\\looparrowright");n(i,u,g,"\u21b7","\\curvearrowright");n(i,u,g,"\u21bb","\\circlearrowright");n(i,u,g,"\u21b1","\\Rsh");n(i,u,g,"\u21ca","\\downdownarrows");n(i,u,g,"\u21be","\\upharpoonright");n(i,u,g,"\u21c2","\\downharpoonright");n(i,u,g,"\u21dd","\\rightsquigarrow");n(i,u,g,"\u21dd","\\leadsto");n(i,u,g,"\u21db","\\Rrightarrow");n(i,u,g,"\u21be","\\restriction");n(i,o,y,"\u2018","`");n(i,o,y,"$","\\$");n(l,o,y,"$","\\$");n(l,o,y,"$","\\textdollar");n(i,o,y,"%","\\%");n(l,o,y,"%","\\%");n(i,o,y,"_","\\_");n(l,o,y,"_","\\_");n(l,o,y,"_","\\textunderscore");n(i,o,y,"\u2220","\\angle");n(i,o,y,"\u221e","\\infty");n(i,o,y,"\u2032","\\prime");n(i,o,y,"\u25b3","\\triangle");n(i,o,y,"\u0393","\\Gamma",true);n(i,o,y,"\u0394","\\Delta",true);n(i,o,y,"\u0398","\\Theta",true);n(i,o,y,"\u039b","\\Lambda",true);n(i,o,y,"\u039e","\\Xi",true);n(i,o,y,"\u03a0","\\Pi",true);n(i,o,y,"\u03a3","\\Sigma",true);n(i,o,y,"\u03a5","\\Upsilon",true);n(i,o,y,"\u03a6","\\Phi",true);n(i,o,y,"\u03a8","\\Psi",true);n(i,o,y,"\u03a9","\\Omega",true);n(i,o,y,"\xac","\\neg");n(i,o,y,"\xac","\\lnot");n(i,o,y,"\u22a4","\\top");n(i,o,y,"\u22a5","\\bot");n(i,o,y,"\u2205","\\emptyset");n(i,u,y,"\u2205","\\varnothing");n(i,o,h,"\u03b1","\\alpha",true);n(i,o,h,"\u03b2","\\beta",true);n(i,o,h,"\u03b3","\\gamma",true);n(i,o,h,"\u03b4","\\delta",true);n(i,o,h,"\u03f5","\\epsilon",true);n(i,o,h,"\u03b6","\\zeta",true);n(i,o,h,"\u03b7","\\eta",true);n(i,o,h,"\u03b8","\\theta",true);n(i,o,h,"\u03b9","\\iota",true);n(i,o,h,"\u03ba","\\kappa",true);n(i,o,h,"\u03bb","\\lambda",true);n(i,o,h,"\u03bc","\\mu",true);n(i,o,h,"\u03bd","\\nu",true);n(i,o,h,"\u03be","\\xi",true);n(i,o,h,"\u03bf","\\omicron",true);n(i,o,h,"\u03c0","\\pi",true);n(i,o,h,"\u03c1","\\rho",true);n(i,o,h,"\u03c3","\\sigma",true);n(i,o,h,"\u03c4","\\tau",true);n(i,o,h,"\u03c5","\\upsilon",true);n(i,o,h,"\u03d5","\\phi",true);n(i,o,h,"\u03c7","\\chi",true);n(i,o,h,"\u03c8","\\psi",true);n(i,o,h,"\u03c9","\\omega",true);n(i,o,h,"\u03b5","\\varepsilon",true);n(i,o,h,"\u03d1","\\vartheta",true);n(i,o,h,"\u03d6","\\varpi",true);n(i,o,h,"\u03f1","\\varrho",true);n(i,o,h,"\u03c2","\\varsigma",true);n(i,o,h,"\u03c6","\\varphi",true);n(i,o,f,"\u2217","*");n(i,o,f,"+","+");n(i,o,f,"\u2212","-");n(i,o,f,"\u22c5","\\cdot");n(i,o,f,"\u2218","\\circ");n(i,o,f,"\xf7","\\div");n(i,o,f,"\xb1","\\pm");n(i,o,f,"\xd7","\\times");n(i,o,f,"\u2229","\\cap");n(i,o,f,"\u222a","\\cup");n(i,o,f,"\u2216","\\setminus");n(i,o,f,"\u2227","\\land");n(i,o,f,"\u2228","\\lor");n(i,o,f,"\u2227","\\wedge");n(i,o,f,"\u2228","\\vee");n(i,o,y,"\u221a","\\surd");n(i,o,p,"(","(");n(i,o,p,"[","[");n(i,o,p,"\u27e8","\\langle");n(i,o,p,"\u2223","\\lvert");n(i,o,p,"\u2225","\\lVert");n(i,o,d,")",")");n(i,o,d,"]","]");n(i,o,d,"?","?");n(i,o,d,"!","!");n(i,o,d,"\u27e9","\\rangle");n(i,o,d,"\u2223","\\rvert");n(i,o,d,"\u2225","\\rVert");n(i,o,g,"=","=");n(i,o,g,"<","<");n(i,o,g,">",">");n(i,o,g,":",":");n(i,o,g,"\u2248","\\approx",true);n(i,o,g,"\u2245","\\cong",true);n(i,o,g,"\u2265","\\ge");n(i,o,g,"\u2265","\\geq",true);n(i,o,g,"\u2190","\\gets");n(i,o,g,">","\\gt");n(i,o,g,"\u2208","\\in",true);n(i,o,g,"\u2209","\\notin");n(i,o,g,"\u0338","\\not");n(i,o,g,"\u2282","\\subset",true);n(i,o,g,"\u2283","\\supset",true);n(i,o,g,"\u2286","\\subseteq",true);n(i,o,g,"\u2287","\\supseteq",true);n(i,u,g,"\u2288","\\nsubseteq");n(i,u,g,"\u2289","\\nsupseteq");n(i,o,g,"\u22a8","\\models");n(i,o,g,"\u2190","\\leftarrow");n(i,o,g,"\u2264","\\le");n(i,o,g,"\u2264","\\leq",true);n(i,o,g,"<","\\lt");n(i,o,g,"\u2260","\\ne");n(i,o,g,"\u2260","\\neq");n(i,o,g,"\u2192","\\rightarrow");n(i,o,g,"\u2192","\\to");n(i,u,g,"\u2271","\\ngeq");n(i,u,g,"\u2270","\\nleq");n(i,o,b,null,"\\!");n(i,o,b,"\xa0","\\ ");n(i,o,b,"\xa0","~");n(i,o,b,null,"\\,");n(i,o,b,null,"\\:");n(i,o,b,null,"\\;");n(i,o,b,null,"\\enspace");n(i,o,b,null,"\\qquad");n(i,o,b,null,"\\quad");n(i,o,b,"\xa0","\\space");n(i,o,m,",",",");n(i,o,m,";",";");n(i,o,m,":","\\colon");n(i,u,f,"\u22bc","\\barwedge");n(i,u,f,"\u22bb","\\veebar");n(i,o,f,"\u2299","\\odot");n(i,o,f,"\u2295","\\oplus");n(i,o,f,"\u2297","\\otimes");n(i,o,y,"\u2202","\\partial");n(i,o,f,"\u2298","\\oslash");n(i,u,f,"\u229a","\\circledcirc");n(i,u,f,"\u22a1","\\boxdot");n(i,o,f,"\u25b3","\\bigtriangleup");n(i,o,f,"\u25bd","\\bigtriangledown");n(i,o,f,"\u2020","\\dagger");n(i,o,f,"\u22c4","\\diamond");n(i,o,f,"\u22c6","\\star");n(i,o,f,"\u25c3","\\triangleleft");n(i,o,f,"\u25b9","\\triangleright");n(i,o,p,"{","\\{");n(l,o,y,"{","\\{");n(l,o,y,"{","\\textbraceleft");n(i,o,d,"}","\\}");n(l,o,y,"}","\\}");n(l,o,y,"}","\\textbraceright");n(i,o,p,"{","\\lbrace");n(i,o,d,"}","\\rbrace");n(i,o,p,"[","\\lbrack");n(i,o,d,"]","\\rbrack");n(l,o,y,"<","\\textless");n(l,o,y,">","\\textgreater");n(i,o,p,"\u230a","\\lfloor");n(i,o,d,"\u230b","\\rfloor");n(i,o,p,"\u2308","\\lceil");n(i,o,d,"\u2309","\\rceil");n(i,o,y,"\\","\\backslash");n(i,o,y,"\u2223","|");n(i,o,y,"\u2223","\\vert");n(l,o,y,"|","\\textbar");n(i,o,y,"\u2225","\\|");n(i,o,y,"\u2225","\\Vert");n(l,o,y,"\u2225","\\textbardbl");n(i,o,g,"\u2191","\\uparrow");n(i,o,g,"\u21d1","\\Uparrow");n(i,o,g,"\u2193","\\downarrow");n(i,o,g,"\u21d3","\\Downarrow");n(i,o,g,"\u2195","\\updownarrow");n(i,o,g,"\u21d5","\\Updownarrow");n(i,o,v,"\u2210","\\coprod");n(i,o,v,"\u22c1","\\bigvee");n(i,o,v,"\u22c0","\\bigwedge");n(i,o,v,"\u2a04","\\biguplus");n(i,o,v,"\u22c2","\\bigcap");n(i,o,v,"\u22c3","\\bigcup");n(i,o,v,"\u222b","\\int");n(i,o,v,"\u222b","\\intop");n(i,o,v,"\u222c","\\iint");n(i,o,v,"\u222d","\\iiint");n(i,o,v,"\u220f","\\prod");n(i,o,v,"\u2211","\\sum");n(i,o,v,"\u2a02","\\bigotimes");n(i,o,v,"\u2a01","\\bigoplus");n(i,o,v,"\u2a00","\\bigodot");n(i,o,v,"\u222e","\\oint");n(i,o,v,"\u2a06","\\bigsqcup");n(i,o,v,"\u222b","\\smallint");n(l,o,c,"\u2026","\\textellipsis");n(i,o,c,"\u2026","\\mathellipsis");n(l,o,c,"\u2026","\\ldots",true);n(i,o,c,"\u2026","\\ldots",true);n(i,o,c,"\u22ef","\\@cdots",true);n(i,o,c,"\u22f1","\\ddots",true);n(i,o,y,"\u22ee","\\vdots",true);n(i,o,s,"\xb4","\\acute");n(i,o,s,"`","\\grave");n(i,o,s,"\xa8","\\ddot");n(i,o,s,"~","\\tilde");n(i,o,s,"\xaf","\\bar");n(i,o,s,"\u02d8","\\breve");n(i,o,s,"\u02c7","\\check");n(i,o,s,"^","\\hat");n(i,o,s,"\u20d7","\\vec");n(i,o,s,"\u02d9","\\dot");n(i,o,h,"\u0131","\\imath");n(i,o,h,"\u0237","\\jmath");n(l,o,s,"\u02ca","\\'");n(l,o,s,"\u02cb","\\`");n(l,o,s,"\u02c6","\\^");n(l,o,s,"\u02dc","\\~");n(l,o,s,"\u02c9","\\=");n(l,o,s,"\u02d8","\\u");n(l,o,s,"\u02d9","\\.");n(l,o,s,"\u02da","\\r");n(l,o,s,"\u02c7","\\v");n(l,o,s,"\xa8",'\\"');n(l,o,s,"\u030b","\\H");n(l,o,y,"\u2013","--");n(l,o,y,"\u2013","\\textendash");n(l,o,y,"\u2014","---");n(l,o,y,"\u2014","\\textemdash");n(l,o,y,"\u2018","`");n(l,o,y,"\u2018","\\textquoteleft");n(l,o,y,"\u2019","'");n(l,o,y,"\u2019","\\textquoteright");n(l,o,y,"\u201c","``");n(l,o,y,"\u201c","\\textquotedblleft");n(l,o,y,"\u201d","''");n(l,o,y,"\u201d","\\textquotedblright");n(i,o,y,"\xb0","\\degree");n(l,o,y,"\xb0","\\degree");n(i,o,h,"\xa3","\\pounds");n(i,o,h,"\xa3","\\mathsterling");n(l,o,h,"\xa3","\\pounds");n(l,o,h,"\xa3","\\textsterling");n(i,u,y,"\u2720","\\maltese");n(l,u,y,"\u2720","\\maltese");n(l,o,b,"\xa0","\\ ");n(l,o,b,"\xa0"," ");n(l,o,b,"\xa0","~");var x='0123456789/@."';for(var w=0;w<x.length;w++){var k=x.charAt(w);n(i,o,y,k,k)}var M='0123456789!@*()-=+[]<>|";:?/.,';for(var _=0;_<M.length;_++){var S=M.charAt(_);n(l,o,y,S,S)}var z="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var T=0;T<z.length;T++){var C=z.charAt(T);n(i,o,h,C,C);n(l,o,y,C,C)}for(var A=192;A<=214;A++){var N=String.fromCharCode(A);n(i,o,h,N,N);n(l,o,y,N,N)}for(var O=216;O<=246;O++){var j=String.fromCharCode(O);n(i,o,h,j,j);n(l,o,y,j,j)}for(var L=248;L<=255;L++){var E=String.fromCharCode(L);n(i,o,h,E,E);n(l,o,y,E,E)}for(var q=1040;q<=1103;q++){var P=String.fromCharCode(q);n(l,o,y,P,P)}n(l,o,y,"\u2013","\u2013");n(l,o,y,"\u2014","\u2014");n(l,o,y,"\u2018","\u2018");n(l,o,y,"\u2019","\u2019");n(l,o,y,"\u201c","\u201c");n(l,o,y,"\u201d","\u201d")},{}],119:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=r.hangulRegex=/[\uAC00-\uD7AF]/;var n=r.cjkRegex=/[\u3000-\u30FF\u4E00-\u9FAF\uAC00-\uD7AF\uFF00-\uFF60]/},{}],120:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.calculateSize=r.validUnit=undefined;var a=e("./ParseError");var n=o(a);var i=e("./Options");var l=o(i);function o(e){return e&&e.__esModule?e:{default:e}}var u={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:803/800,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:803/800};var s={ex:true,em:true,mu:true};var f=r.validUnit=function e(t){if(typeof t!=="string"){t=t.unit}return t in u||t in s||t==="ex"};var d=r.calculateSize=function e(t,r){var a=void 0;if(t.unit in u){a=u[t.unit]/r.fontMetrics().ptPerEm/r.sizeMultiplier}else if(t.unit==="mu"){a=r.fontMetrics().cssEmPerMu}else{var i=void 0;if(r.style.isTight()){i=r.havingStyle(r.style.text())}else{i=r}if(t.unit==="ex"){a=i.fontMetrics().xHeight}else if(t.unit==="em"){a=i.fontMetrics().quad}else{throw new n.default("Invalid unit: '"+t.unit+"'")}if(i!==r){a*=i.sizeMultiplier/r.sizeMultiplier}}return Math.min(t.number*a,r.maxSize)}},{"./Options":83,"./ParseError":84}],121:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=Array.prototype.indexOf;var n=function e(t,r){if(t==null){return-1}if(a&&t.indexOf===a){return t.indexOf(r)}var n=t.length;for(var i=0;i<n;i++){if(t[i]===r){return i}}return-1};var i=function e(t,r){return n(t,r)!==-1};var l=function e(t,r){return t===undefined?r:t};var o=/([A-Z])/g;var u=function e(t){return t.replace(o,"-$1").toLowerCase()};var s={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var f=/[&><"']/g;function d(e){return String(e).replace(f,function(e){return s[e]})}var c=void 0;if(typeof document!=="undefined"){var h=document.createElement("span");if("textContent"in h){c=function e(t,r){t.textContent=r}}else{c=function e(t,r){t.innerText=r}}}function v(e){c(e,"")}r.default={contains:i,deflt:l,escape:d,hyphenate:u,indexOf:n,setTextContent:c,clearNode:v}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2016 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.0
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {
        _MAP[i + 96] = i;
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}],3:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyBackend = require('./guppy_backend.js');
GuppyUtils = require('./guppy_utils.js');
GuppySymbols = require('./guppy_symbols.js');
GuppySettings = require('./guppy_settings.js');

/**
   @class
   @classdesc An instance of Guppy
   @param {string} guppy_div - The string ID of the element that should be converted to an editor
   @param {Object} [config] - The configuration options for this instance
   @param {Object} [config.events] - A dictionary of events
   @param {function} [config.events.ready] - Called when the instance is ready to render things.
   @param {function} [config.events.change] - Called when the editor's content changes.  Argument will be a dictionary with keys `old` and `new` containing the old and new documents, respectively.
   @param {function} [config.events.left_end] - Called when the cursor is at the left-most point and a command is received to move the cursor to the left (e.g., via the left arrow key).  Argument will be null.
   @param {function} [config.events.left_end] - Called when the cursor is at the right-most point and a command is received to move the cursor to the right (e.g., via the right arrow key).  Argument will be null.
   @param {function} [config.events.done] - Called when the enter key is pressed in the editor.
   @param {function} [config.events.completion] - Called when the editor outputs tab completion
      options.  Argument is a dictionary with the key `candidates`, a
      list of the options for tab-completion.
   @param {function} [config.events.debug] - Called when the editor outputs some debug information.
      Argument is a dictionary with the key `message`.
   @param {function} [config.events.error] - Called when the editor receives an error.  Argument is
      a dictionary with the key `message`.
   @param {function} [config.events.focus] - Called when the editor is focused or unfocused.
      Argument will have a single key `focused` which will be `true`
      or `false` according to whether the editor is newly focused or
      newly unfocused (respectively).
   @param {Object} [config.options] - A dictionary of options
   @param {string} [config.options.xml_content=<m><e/></m>] - An XML
      string with which to initialise the editor's state.
   @param {boolean} [config.options.autoreplace=true] - Determines
      whether or not to autoreplace typed text with the corresponding
      symbols when possible.
   @param {string} [config.options.blank=""] - A LaTeX string that
      specifies what the caret should look like when in a blank spot.
   @param {string} [config.options.empty_content=\color{red}{[?]}] - A
      LaTeX string that will be displayed when the editor is both
      inactive and contains no content.
   @param {string[]} [config.options.blacklist=[]] - A list of string
      symbol names, corresponding to symbols that should not be
      allowed in this instance of the editor.
   @param {string} [config.options.cliptype] - A string, either
      "text" or "latex".  If this option is present, when text is
      placed onto the editor clipboard, the contents of the editor
      will be rendered into either plain text or LaTeX (depending on
      the value of this option) and an attempt will be made to copy
      the result to the system clipboard.
   @constructor
 */
var Guppy = function(guppy_div, config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {}
    var options = config['options'] || {};

    if(typeof guppy_div === 'string' || guppy_div instanceof String){
	guppy_div = document.getElementById(guppy_div);
    }

    // Set the id on the div if it is not currently set.
    if(!(guppy_div.id)){
	var i = Guppy.max_uid || 0;
	while(document.getElementById("guppy_uid_"+i)) i++;
	Guppy.max_uid = i;
	guppy_div.id = "guppy_uid_"+i;
    }
    var i = Guppy.max_tabIndex || 0;
    guppy_div.tabIndex = i;
    Guppy.max_tabIndex = i+1;

    this.buttons_div = document.createElement("div");
    if(GuppySettings.osk) this.buttons_div.appendChild(Guppy.make_button("icons/keyboard.png", function(e) { GuppySettings.osk.attach(self); }));
    // this.buttons_div.appendChild(Guppy.make_button("icons/settings.png", function(e){ GuppySettings.toggle("settings", self); }));
    // this.buttons_div.appendChild(Guppy.make_button("icons/symbols.png", function(e){ GuppySettings.toggle("symbols", self); }));
    // this.buttons_div.appendChild(Guppy.make_button("icons/help.png", function(e){ GuppySettings.toggle("controls", self); }));
    this.buttons_div.style = "position:absolute;bottom:0;right:0;padding:0 3px 3px 0;display:none;";

    guppy_div.addEventListener("mouseenter",function(e){self.buttons_div.style.display = "block";}, false);
    guppy_div.addEventListener("mouseleave",function(e){self.buttons_div.style.display = "none";}, false);
    this.editor_active = true;
    this.empty_content = options['empty_content'] || "\\red{[?]}"
    this.editor = guppy_div;
    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;

    this.events = {};

    Guppy.instances[guppy_div.id] = this;

    config['parent'] = self;

    /**   @member {GuppyBackend} */
    this.backend = new GuppyBackend(config);
    this.temp_cursor = {"node":null,"caret":0}
    this.editor.addEventListener("keydown",Guppy.key_down, false);
    this.editor.addEventListener("keyup",Guppy.key_up, false);
    this.editor.addEventListener("focus", function(e) { Guppy.kb.alt_down = false; if(self.activate) self.activate();}, false);
    if(Guppy.ready && !this.ready){
    	this.ready = true;
    	this.backend.fire_event("ready");
	this.render(true);
    }
    this.deactivate();
    this.recompute_locations_paths();
}

Guppy.instances = {};
Guppy.ready = false;

Guppy.active_guppy = null;

Guppy.make_button = function(url, cb){
    var b = document.createElement("img");
    b.setAttribute("class","guppy-button");
    b.style="cursor:pointer;height:24px;width:24px;padding:3px;opacity:0.5;";
    b.setAttribute("src", url);
    if(cb){
	b.onclick = function(e){
	    cb(e);
	    if(e.cancelBubble!=null) e.cancelBubble = true;
	    if(e.stopPropagation) e.stopPropagation();
	    e.preventDefault();
	    return false;
	};
	b.onmouseenter = function(e){
	    b.style.opacity = "1";
	};
	b.onmouseleave = function(e){
	    b.style.opacity = "0.5";
	};
    }
    return b;
}

Guppy.add_symbols = function(symbols){
    for(var s in symbols){
	var new_syms = GuppySymbols.add_symbols(s,symbols[s], GuppySymbols.symbols);
	for(var s in new_syms)
	    GuppySymbols.symbols[s] = new_syms[s];
    }
    for(var i in Guppy.instances){
	for(var s in symbols){
	    Guppy.instances[i].backend.symbols[s] = JSON.parse(JSON.stringify(symbols[s]));
	}
    }
}

Guppy.set_global_symbols = function(symbols){
    GuppySymbols.symbols = {};
    Guppy.add_symbols(symbols);
}

Guppy.reset_global_symbols = function(){
    for(var i in Guppy.instances){
	Guppy.instances[i].backend.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    }
}

/**
    Initialise the symbols for all instances of the editor
    @memberof Guppy
    @param {string[]} symbols - A list of URLs for symbol JSON files to request
*/
Guppy.init_symbols = function(symbols){
    var all_ready = function(){
	GuppySettings.init(GuppySymbols.symbols);
	Guppy.register_keyboard_handlers();
	for(var i in Guppy.instances){
	    Guppy.instances[i].ready = true;
	    Guppy.instances[i].render(true);
	    Guppy.instances[i].backend.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
	}
	GuppyBackend.ready = true;
	for(var i in Guppy.instances){
	    Guppy.instances[i].backend.ready = true;
	    Guppy.instances[i].backend.fire_event("ready");
	    Guppy.instances[i].events["ready"] = null;
	}
    }
    if(!(Array.isArray(symbols))){
	symbols = [symbols];
    }
    var calls = [];
    for(var i = 0; i < symbols.length; i++){
	var x = function outer(j){
	    return function(callback){
		var req = new XMLHttpRequest();
		req.onload = function(){
		    var syms = JSON.parse(this.responseText);
		    var templates = syms["_templates"];
		    if(templates){
			for(var t in templates){
			    GuppySymbols.templates[t] = templates[t];
			}
			for(var i = 0; i < templates.length; i++){
			    var t = templates[i].template;
			    for(var v in templates[i].values){
				if(Object.prototype.toString.call(templates[i].values) == "[object Array]"){
				    var name = templates[i].values[v];
				    var args = {}
				}
				else{
				    var name = v;
				    var args = templates[i].values[v];
				}
				var sym = GuppySymbols.eval_template(JSON.parse(JSON.stringify(t)), name, args);
				GuppySymbols.symbols[name] = sym;
			    }
			}
			delete syms["_templates"];
		    }
		    for(var s in syms){
			GuppySymbols.symbols[s] = syms[s];
		    }
		    callback();
		};
		req.open("get", symbols[j], true);
		req.send();
	    }
	}(i);
	calls.push(x);
    }
    calls.push(all_ready);
    var j = 0;
    var cb = function(){
	j += 1;
	if(j < calls.length) calls[j](cb);
    }
    if(calls.length > 0) calls[0](cb);
}

Guppy.prototype.is_changed = function(){
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(this.bounding_box)
	ans = this.bounding_box.top != rect.top || this.bounding_box.bottom != rect.bottom || this.bounding_box.right != rect.right || this.bounding_box.left != rect.left;
    else
	ans = true;
    this.bounding_box = rect;
    return ans;
}

Guppy.prototype.recompute_locations_paths = function(){
    ans = [];
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    ans.push({'path':'all',
	      'top':rect.top,
	      'bottom':rect.bottom,
	      'left':rect.left,
	      'right':rect.right});
    var elts = this.editor.getElementsByClassName("guppy_elt");
    for(var i = 0; i < elts.length; i++){
	var elt = elts[i];
	if(elt.nodeName == "mstyle") continue;
	var rect = elt.getBoundingClientRect();
	if(rect.top == 0 && rect.bottom == 0 && rect.left == 0 && rect.right == 0) continue;
	var cl = elt.classList;
	for(var j = 0; j < cl.length; j++){
	    if(cl[j].indexOf("guppy_loc") == 0){
		ans.push({'path':cl[j],
			  'top':rect.top,
			  'bottom':rect.bottom,
			  'left':rect.left,
			  'right':rect.right,
			  'mid_x':(rect.left+rect.right)/2,
			  'mid_y':(rect.bottom+rect.top)/2,
			  'blank':(' '+elt.className+' ').indexOf(' guppy_blank ') >= 0});
		break;
	    }
	}
    }
    this.boxes = ans;
}

Guppy.get_loc = function(x,y,current_node,current_caret){
    var g = Guppy.active_guppy;
    var min_dist = -1;
    var mid_dist = 0;
    var pos = "";
    var opt = null;
    var cur = null;
    var car = null;
    // check if we go to first or last element
    var bb = g.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(current_node){
	var current_path = GuppyUtils.path_to(current_node);
	var current_pos = parseInt(current_path.substring(current_path.lastIndexOf("e")+1));
    }

    var boxes = g.boxes;
    if(!boxes) return;
    if(current_node){
	current_path = current_path.replace(/e[0-9]+$/,"e");
	var boxes2 = [];
	for(var i = 0; i < boxes.length; i++){
	    if(boxes[i].path == "all") continue;
	    var loc = boxes[i].path.substring(0,boxes[i].path.lastIndexOf("_"));
	    loc = loc.replace(/e[0-9]+$/,"e");
	    if(loc == current_path){
		boxes2.push(boxes[i]);
	    }
	}
	boxes = boxes2;
    }
    if(!boxes) return;
    for(var i = 0; i < boxes.length; i++){
	var box = boxes[i];
	if(box.path == "all"){
	    if(!opt) opt = {'path':'guppy_loc_m_e1_0'};
	    continue;
	}
	var xdist = Math.max(box.left - x, x - box.right, 0)
	var ydist = Math.max(box.top - y, y - box.bottom, 0)
	var dist = Math.sqrt(xdist*xdist + ydist*ydist);
	if(min_dist == -1 || dist < min_dist){
	    min_dist = dist;
	    mid_dist = x - box.mid_x;
	    opt = box;
	}
    }
    var loc = opt.path.substring("guppy_loc".length);
    loc = loc.replace(/_/g,"/");
    loc = loc.replace(/([0-9]+)(?=.*?\/)/g,"[$1]");
    cur = g.backend.doc.xpath_node(loc.substring(0,loc.lastIndexOf("/")), g.backend.doc.root());
    car = parseInt(loc.substring(loc.lastIndexOf("/")+1));
    // Check if we want the cursor before or after the element
    if(mid_dist > 0 && !(opt.blank)){
	car++;
    }
    ans = {"current":cur,"caret":car,"pos":pos};
    if(current_node && opt){
	var opt_pos = parseInt(opt.path.substring(opt.path.lastIndexOf("e")+1,opt.path.lastIndexOf("_")));
	if(opt_pos < current_pos) pos = "left";
	else if(opt_pos > current_pos) pos = "right";
	else if(car < current_caret) pos = "left";
	else if(car > current_caret) pos = "right";
	if(pos) ans['pos'] = pos;
	else ans['pos'] = "none";
    }
    return ans;
}

Guppy.mouse_up = function(e){
    Guppy.kb.is_mouse_down = false;
    var g = Guppy.active_guppy;
    if(g) g.render(true);
}

Guppy.mouse_down = function(e){
    if(e.target.getAttribute("class") == "guppy-button") return;
    var n = e.target;
    Guppy.kb.is_mouse_down = true;
    if(e.target == document.getElementById("toggle_ref")) toggle_div("help_card");
    else while(n != null){
	if(n.id in Guppy.instances){
	    e.preventDefault();
	    var prev_active = Guppy.active_guppy;
	    for(var i in Guppy.instances){
		if(i != n.id) Guppy.instances[i].deactivate();
		Guppy.active_guppy = Guppy.instances[n.id];
		Guppy.active_guppy.activate();
	    }
	    var g = Guppy.active_guppy;
	    var b = Guppy.active_guppy.backend;
	    g.space_caret = 0;
	    if(prev_active == g){
		if(e.shiftKey){
		    g.select_to(e.clientX, e.clientY, true);
		}
		else {
		    var loc = Guppy.get_loc(e.clientX,e.clientY);
		    if(!loc) return;
		    b.current = loc.current;
		    b.caret = loc.caret;
		    b.sel_status = GuppyBackend.SEL_NONE;
		}
		g.render(true);
	    }
	    return;
	}
	if(n.classList && n.classList.contains("guppy_osk")){
	    return;
	}
	n = n.parentNode;
    }
    Guppy.active_guppy = null;
    for(var i in Guppy.instances){
	Guppy.instances[i].deactivate();
    }
}

Guppy.mouse_move = function(e){
    var g = Guppy.active_guppy;
    if(!g) return;
    if(!Guppy.kb.is_mouse_down){
	var bb = g.editor;
	var rect = bb.getBoundingClientRect();
	if((e.clientX < rect.left || e.clientX > rect.right) || (e.clientY > rect.bottom || e.clientY < rect.top)){
	    g.temp_cursor = {"node":null,"caret":0};
	}
	else{
	    var loc = Guppy.get_loc(e.clientX,e.clientY);
	    if(!loc) return;
	    g.temp_cursor = {"node":loc.current,"caret":loc.caret};
	}
	g.render(g.is_changed());
    }
    else{
	g.select_to(e.clientX,e.clientY, true);
	g.render(g.is_changed());
    }
}

Guppy.prototype.select_to = function(x, y, mouse){
    var sel_caret = this.backend.caret;
    var sel_cursor = this.backend.current;
    if(this.backend.sel_status == GuppyBackend.SEL_CURSOR_AT_START){
	sel_cursor = this.backend.sel_end.node;
	sel_caret = this.backend.sel_end.caret;
    }
    else if(this.backend.sel_status == GuppyBackend.SEL_CURSOR_AT_END){
	sel_cursor = this.backend.sel_start.node;
	sel_caret = this.backend.sel_start.caret;
    }
    var loc = Guppy.get_loc(x,y,sel_cursor,sel_caret);
    if(!loc) return;
    this.backend.select_to(loc, sel_cursor, sel_caret, mouse);
}


window.addEventListener("mousedown",Guppy.mouse_down, false);
window.addEventListener("mouseup",Guppy.mouse_up, false);
window.addEventListener("mousemove",Guppy.mouse_move, false);

Guppy.prototype.render_node = function(t){
    // All the interesting work is done by transform.  This function just adds in the cursor and selection-start cursor
    var output = "";
    if(t == "render"){
	var root = this.backend.doc.root();
	this.backend.add_paths(root,"m");
	this.backend.temp_cursor = this.temp_cursor;
	this.backend.add_classes_cursors(root);
	this.backend.current.setAttribute("current","yes");
	if(this.temp_cursor.node) this.temp_cursor.node.setAttribute("temp","yes");
	output = this.backend.get_content("latex",true);
	this.backend.remove_cursors_classes(root);
	output = output.replace(new RegExp('&amp;','g'), '&');
	return output;
    }
    else{
	output = this.backend.get_content(t);
    }
    return output
}

/**
    Render the document
    @memberof Guppy
    @param {boolean} [updated=false] - Whether there have been visible
    changes to the document (i.e. that affect the positions of
    elements)
*/
Guppy.prototype.render = function(updated){
    if(!this.editor_active && this.backend.doc.is_blank()){
	katex.render(this.empty_content,this.editor);
	this.editor.appendChild(this.buttons_div);
	return;
    }
    var tex = this.render_node("render");
    katex.render(tex,this.editor);
    this.editor.appendChild(this.buttons_div);
    if(updated){
	this.recompute_locations_paths();
    }
}

/**
    Focus this instance of the editor
    @memberof Guppy
*/
Guppy.prototype.activate = function(){
    Guppy.active_guppy = this;
    this.editor_active = true;
    this.editor.className = this.editor.className.replace(new RegExp('(\\s|^)guppy_inactive(\\s|$)'),' guppy_active ');
    this.editor.focus();
    if(this.ready){
	this.render(true);
	this.backend.fire_event("focus",{"focused":true});
    }
}


/**
    Unfocus this instance of the editor
    @memberof Guppy
*/
Guppy.prototype.deactivate = function(){
    this.editor_active = false;
    var r1 = new RegExp('(?:\\s|^)guppy_active(?:\\s|$)');
    var r2 = new RegExp('(?:\\s|^)guppy_inactive(?:\\s|$)');
    if(this.editor.className.match(r1)){
	this.editor.className = this.editor.className.replace(r1,' guppy_inactive ');
    }
    else if(!this.editor.className.match(r2)){
	this.editor.className += ' guppy_inactive ';
    }
    Guppy.kb.shift_down = false;
    Guppy.kb.ctrl_down = false;
    Guppy.kb.alt_down = false;
    if(this.ready){
	this.render();
	this.backend.fire_event("focus",{"focused":false});
    }
}


// Keyboard stuff

Guppy.kb = {};

Guppy.kb.is_mouse_down = false;

/* keyboard behaviour definitions */

// keys aside from 0-9,a-z,A-Z
Guppy.kb.k_chars = {
    "+":"+",
    "-":"-",
    "*":"*",
    ".":".",
    "shift+/":"/",
    "shift+=":"+",
};
Guppy.kb.k_syms = {
    "/":"slash",
    "^":"exp",
    "*":"*",
    "(":"paren",
    "=":"equal",
    "<":"less",
    ">":"greater",
    "_":"sub",
    "|":"abs",
    "!":"factorial",
    "shift+up":"exp",
    "shift+down":"sub"
};
Guppy.kb.k_text = {
    "/":"/",
    "*":"*",
    "(":"(",
    ")":")",
    "<":"<",
    ">":">",
    "_":"_",
    "|":"|",
    "!":"!",
    ",":",",
    ".":".",
    ";":";",
    "=":"="
};
Guppy.kb.k_controls = {
    "up":"up",
    "down":"down",
    "right":"right",
    "left":"left",
    "alt+k":"up",
    "alt+j":"down",
    "alt+l":"right",
    "alt+h":"left",
    "space":"spacebar",
    "home":"home",
    "end":"end",
    "backspace":"backspace",
    "del":"delete_key",
    "mod+a":"sel_all",
    "mod+c":"sel_copy",
    "mod+x":"sel_cut",
    "mod+v":"sel_paste",
    "mod+z":"undo",
    "mod+y":"redo",
    "enter":"done",
    "mod+shift+right":"list_extend_copy_right",
    "mod+shift+left":"list_extend_copy_left",
    ",":"list_extend_right",
    ";":"list_extend_down",
    "mod+right":"list_extend_right",
    "mod+left":"list_extend_left",
    "mod+up":"list_extend_up",
    "mod+down":"list_extend_down",
    "mod+shift+up":"list_extend_copy_up",
    "mod+shift+down":"list_extend_copy_down",
    "mod+backspace":"list_remove",
    "mod+shift+backspace":"list_remove_row",
    "shift+left":"sel_left",
    "shift+right":"sel_right",
    ")":"right_paren",
    "\\":"backslash",
    "tab":"tab"
};

// letters

for(var i = 65; i <= 90; i++){
    Guppy.kb.k_chars[String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toLowerCase();
    Guppy.kb.k_chars['shift+'+String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toUpperCase();
}

// numbers

for(var i = 48; i <= 57; i++)
    Guppy.kb.k_chars[String.fromCharCode(i)] = String.fromCharCode(i);

Guppy.register_keyboard_handlers = function(){
    Mousetrap.addKeycodes({173: '-'}); // Firefox's special minus (needed for _ = sub binding)
    var self = this;
    for(var i in Guppy.kb.k_chars)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.backend.insert_string(Guppy.kb.k_chars[i]);
	    Guppy.active_guppy.render(true);
	    return false;
	}}(i));
    for(var i in Guppy.kb.k_syms)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.backend.space_caret = 0;
	    if(GuppyUtils.is_text(Guppy.active_guppy.backend.current)){
		if(Guppy.kb.k_text[i]) Guppy.active_guppy.backend.insert_string(Guppy.kb.k_text[i]);
	    }
	    else{
		Guppy.active_guppy.backend.insert_symbol(Guppy.kb.k_syms[i]);
	    }
	    Guppy.active_guppy.render(true);
	    return false;
	}}(i));
    for(var i in Guppy.kb.k_controls)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.backend.space_caret = 0;
	    Guppy.active_guppy.backend[Guppy.kb.k_controls[i]]();
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.render(["up","down","right","left","home","end","sel_left","sel_right"].indexOf(i) < 0);
	    Guppy.active_guppy.render(false);
	    return false;
	}}(i));
}

module.exports = Guppy;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_backend.js":5,"./guppy_settings.js":7,"./guppy_symbols.js":8,"./guppy_utils.js":9,"mousetrap":2}],4:[function(require,module,exports){
GuppyAST = {};

GuppyAST.tokenise = function(s, tokens){
   var ans = [];
    while(s.length > 0){
	var ok = false;
	for(var i = 0; i < tokens.length; i++){
	    var t = tokens[i];
	    re = RegExp(t.re);
	    var m = re.exec(s);
	    if(m){
		m = m[0];
		s = s.substring(m.length);
		ok = true;
		if(t.type != "space") ans.push({"type":t.type, "value": t.value(m)})
		break;
	    }
	}
	if(!ok){
	    console.log("Tokenising error");
	    return [];
	}
    }
    return ans;
}

GuppyAST.tokenise_e = function(s){
    return GuppyAST.tokenise(s, [
	{"type":"number", "re":"^[0-9.]+", "value":function(m){
	    if(isNaN(Number(m))) throw Exception("Invalid number: "+m);
	    return Number(m);
	}},
	{"type":"operator", "re":"^(<=|>=|!=|>|<|=)", "value":function(m){return m}},
	{"type":"operator", "re":"^[\-+*/!]", "value":function(m){return m}},
	{"type":"name", "re":"^[a-zA-Z]", "value":function(m){return m}},
	{"type":"space", "re":"^\\s+", "value":function(m){return m}},
    ]);
 }

GuppyAST.to_eqlist = function(ast){
    comparators = ["=","!=","<=",">=","<",">"];
    if(ast[1].length == 0 || comparators.indexOf(ast[1][0][0]) < 0) return [ast];
    return GuppyAST.to_eqlist(ast[1][0]).concat([[ast[0],[ast[1][0][1][1],ast[1][1]]]]);
}

GuppyAST.to_text = function(ast){
    var functions = {};
    functions["bracket"] = function(args){return "("+args[0]+")";};
    functions["="] = function(args){return args[0]+" = "+args[1];};
    functions["!="] = function(args){return args[0]+" != "+args[1];};
    functions["<="] = function(args){return args[0]+" <= "+args[1];};
    functions[">="] = function(args){return args[0]+" >= "+args[1];};
    functions["<"] = function(args){return args[0]+" < "+args[1];};
    functions[">"] = function(args){return args[0]+" > "+args[1];};
    functions["*"] = function(args){return "("+args[0]+" * "+args[1]+")";};
    functions["+"] = function(args){return "("+args[0]+" + "+args[1]+")";};
    functions["/"] = function(args){return "("+args[0]+" / "+args[1]+")";};
    functions["fraction"] = function(args){return "("+args[0]+" / "+args[1]+")";};
    functions["-"] = function(args){return args.length == 1 ? "-"+args[0] : "("+args[0]+" - "+args[1]+")";};
    functions["val"] = function(args){return args[0]+"";};
    functions["var"] = function(args){return args[0];};
    functions["exponential"] = function(args){return "("+args[0]+"^"+args[1]+")";};
    functions["factorial"] = function(args){return "("+args[0]+")!";};
    functions["_default"] = function(name, args){return name + "(" + args.join(",") + ")";};
    return GuppyAST.eval(ast, functions);
}

GuppyAST.to_xml = function(ast, symbols, symbol_to_node){
    var prepend_str = function(doc, str){
	doc.documentElement.firstChild.textContent = str + doc.documentElement.firstChild.textContent;
    }
    var append_str = function(doc, str){
	doc.documentElement.lastChild.textContent += str;
    }
    var append_doc = function(doc, doc2){
	var n = doc.documentElement.lastChild;
	var nn = doc2.documentElement.firstChild
	n.firstChild.textContent += nn.firstChild.textContent;
	for(nn = nn.nextSibling; nn; nn = nn.nextSibling){
	    n.parentNode.insertBefore(nn.cloneNode(true),null);
	}
    }
    var ensure_text_nodes = function(base){
	var l = base.getElementsByTagName("e");
	for(var i = 0; i < l.length; i++){
	    if(!(l[i].firstChild)) l[i].appendChild(base.createTextNode(""));
	}
    }
    var get_symbol = function(name, symbols){
	for(var s in symbols){
	    if(symbols[s].attrs.type == name) return symbols[s];
	}
    }
    var get_content_array = function(args){
	var content = {};
	for(var i = 0; i < args.length; i++){
	    content[i] = [];
	    if(args[i].documentElement.nodeName == "l") content[i].push(args[i].documentElement);
	    else for(var nn = args[i].documentElement.firstChild; nn; nn = nn.nextSibling) content[i].push(nn);
	}
	return content;
    }
    var binop_low = function(args, op, parent){
	var d = args[0].cloneNode(true);
	append_str(d, op);
	append_doc(d, args[1].cloneNode(true));
	if(parent && (parent[0] == "*" || (parent[0] == "-" && parent[1].length == 1)))
	    return make_sym("bracket", [d]);
	else
	    return d;
    }
    var binop_high = function(args, op){
	var d = args[0].cloneNode(true);
	append_doc(d, make_sym(op,[]));
	append_doc(d, args[1].cloneNode(true));
	return d;
    }
    var make_sym = function(name, args){
	var sym = get_symbol(name, symbols);
	if(!sym) throw "Unrecognised symbol: "+name;
	var base = (new window.DOMParser()).parseFromString("<c><e></e><e></e></c>", "text/xml");
	ensure_text_nodes(base);
	var e0 = base.documentElement.firstChild;
	var content = get_content_array(args);
	var f = symbol_to_node(sym, content, base)['f'];
	e0.parentNode.insertBefore(f,e0.nextSibling);
	ensure_text_nodes(base);
	return base;
    }
    var functions = {};

    var ops = ["*","<",">","=","<=",">=","!="];
    for(var i = 0; i < ops.length; i++){
	functions[ops[i]] = function(o){ return function(args){ return binop_high(args, o); }}(ops[i]);
    }
    // functions["*"] = function(args){
    // 	return binop_high(args, "*");
    // };
    functions["/"] = function(args){
	return make_sym("frac",args);
    };
    functions["+"] = function(args, parent){ return binop_low(args, "+", parent); };
    functions["-"] = function(args, parent){
	if(args.length == 1){ var d = args[0].cloneNode(true); prepend_str(d, "-"); return d; }
	else{ return binop_low(args, "-", parent);};
    }
    functions["val"] = function(args){ return (new window.DOMParser()).parseFromString("<c><e>" + args[0] + "</e></c>", "text/xml");};
    functions["var"] = function(args){ return (new window.DOMParser()).parseFromString("<c><e>" + args[0] + "</e></c>", "text/xml");};
    functions["list"] = function(args){
	var base = (new window.DOMParser()).parseFromString("<l></l>", "text/xml");
	for(var i = 0; i < args.length; i++){
	    base.documentElement.appendChild(args[i].documentElement.cloneNode(true));
	}
	base.documentElement.firstChild.setAttribute("s",String(args.length))
	return base;
    };
    // var comparators = {"<":"less",">":"greater","=":"eq","!=":"neq",">=":"geq","<=":"leq"};
    // for(var c in comparators){
    // 	functions[c] = function(args){
    // 	    return make_sym(comparators[c], args);
    // 	}
    // }
    functions["_default"] = function(name, args){
	return make_sym(name, args);
    }
    var ans = GuppyAST.eval(ast, functions);
    var new_base = (new window.DOMParser()).parseFromString("<m></m>", "text/xml");
    for(nn = ans.documentElement.firstChild; nn; nn = nn.nextSibling){
	new_base.documentElement.insertBefore(nn.cloneNode(true),null);
    }
    return new_base;

}

GuppyAST.get_nodes = function(ast, name){
    if(ast.length < 2) return [];
    var ans = [];
    if(ast[0] == name) ans.push(ast[1]);
    if(ast[0] == "var" || ast[0] == "val") return ans;
    for(var i = 0; i < ast[1].length; i++) ans = ans.concat(GuppyAST.get_nodes(ast[1][i], name));
    return ans;
}

GuppyAST.get_vars = function(ast){
    var vars = {};
    var ans = [];
    var l = GuppyAST.get_nodes(ast, "var");
    for(var i = 0; i < l.length; i++) vars[l[i][0]] = true;
    for(var x in vars) ans.push(x);
    return ans;
}

GuppyAST.to_function = function(ast, functions){
    functions = functions || {}
    defaults = {}
    defaults["*"] = function(args){return function(vars){return args[0](vars)*args[1](vars)};};
    defaults["+"] = function(args){return function(vars){return args[0](vars)+args[1](vars)};};
    defaults["/"] = function(args){return function(vars){return args[0](vars)/args[1](vars)};};
    defaults["-"] = function(args){return args.length == 1 ? function(vars){return -args[0](vars)} : function(vars){return args[0](vars)-args[1](vars)};};
    defaults["val"] = function(args){return function(vars){ return args[0]; };};
    defaults["var"] = function(args){return function(vars){ if(args[0] == "pi") return Math.PI; if(args[0] == "e") return Math.E; return vars[args[0]]; };};
    defaults["exponential"] = function(args){return function(vars){return args[0](vars)**args[1](vars)};};
    //defaults["fraction"] = function(args){return function(vars){return args[0](vars)/args[1](vars);};}
    defaults["square_root"] = function(args){return function(vars){return Math.sqrt(args[0](vars))};};
    defaults["sin"] = function(args){return function(vars){return Math.sin(args[0](vars))};};
    defaults["cos"] = function(args){return function(vars){return Math.cos(args[0](vars))};};
    defaults["tan"] = function(args){return function(vars){return Math.tan(args[0](vars))};};
    defaults["log"] = function(args){return function(vars){return Math.log(args[0](vars))};};
    for(var n in defaults) if(!functions[n]) functions[n] = defaults[n];
    return {"function":GuppyAST.eval(ast, functions),"vars":GuppyAST.get_vars(ast)};
}

GuppyAST.eval = function(ast, functions, parent){
    ans = null;
    if(!functions["_default"]) functions["_default"] = function(name, args){ throw "Function not implemented: " + name;}

    var args = []
    for(var i = 0; i < ast[1].length; i++){
	if(Object.prototype.toString.call(ast[1][i]) === '[object Array]'){
	    args.push(GuppyAST.eval(ast[1][i], functions, ast));
	}
	else{
	    args.push(ast[1][i]);
	}
    }
    //console.log("Fn",ast[0],functions[ast[0]]);
    if(functions[ast[0]]) ans = functions[ast[0]](args, parent);
    else if(functions["_default"]) ans = functions["_default"](ast[0], args, parent);

    //console.log("EVAL",JSON.stringify(ast),'=',ans);
    return ans
}

GuppyAST.parse_e = function(tokens){
    var symbol_table = {};

    var original_symbol = {
	nud: function () { throw Error("Undefined"); },
	led: function (left) { throw Error("Missing operator"); }
    };

    var mul = function(left){ return ["*", [left, this.nud()]]; };

    var symbol = function (id, bp) {
	var s = symbol_table[id];
	bp = bp || 0;
	if (s) {
            if (bp >= s.lbp) {
		s.lbp = bp;
            }
	} else {
            s = Object.create(original_symbol);
            s.id = s.value = id;
            s.lbp = bp;
            symbol_table[id] = s;
	}
	return s;
    };

    symbol("(end)");

    s = symbol("(blank)", 60);
    s.nud = function(){ return ["blank"];};

    s = symbol("(function)", 60);
    s.led = mul;
    //s.nud = function(){ return [this.value, this.args || [], this.kwargs || {}];};
    s.nud = function(){ return [this.value, this.args || []];};

    s = symbol("(literal)", 60);
    s.led = mul;
    s.nud = function(){ return ["val", [this.value]] };

    s = symbol("(pass)", 60);
    s.led = mul;
    s.nud = function(){ return this.args[0] };

    s = symbol("(var)", 60);
    s.led = mul;
    s.nud = function(){ return ["var", [this.value]] };

    var token;
    var token_nr = 0;

    var advance = function (id) {
	var a, o, t, v;
	if (id && token.id !== id) {
            throw Error("Expected '" + id + "'");
	}
	if (token_nr >= tokens.length) {
            token = symbol_table["(end)"];
            return;
	}
	t = tokens[token_nr];
	token_nr += 1;
	v = t.value;
	var args = null;
	var kwargs = null;
	a = t.type;
	if (a === "name") {
            o = symbol_table["(var)"];
	} else if (a === "operator") {
            o = symbol_table[v];
            if (!o) {
		throw Exception("Unknown operator.");
            }
	} else if (a ===  "pass") {
            a = "pass";
            o = symbol_table["(pass)"];
	    args = t.args;
	} else if (a ===  "number") {
            a = "literal";
            o = symbol_table["(literal)"];
	} else if (a ===  "function") {
            a = "function";
            o = symbol_table["(function)"];
	    args = t.args;
	    kwargs = t.kwargs;
	} else {
            throw Error("Unexpected token",t);
	}
	token = Object.create(o);
	token.type = a;
	token.value = v;
	if(args) token.args = args;
	if(kwargs) token.kwargs = kwargs;
	return token;
    };


    var expression = function (rbp) {
	var left;
	var t = token;
	advance();
	left = t.nud();
	while (rbp < token.lbp) {
            t = token;
            advance();
            left = t.led(left);
	}
	return left;
    };

    var infix = function (id, bp, led) {
	var s = symbol(id, bp);
	s.led = led || function (left) {
            return [this.value, [left, expression(bp)]];
	};
	return s;
    }


    infix("=", 40);
    infix("!=", 40);
    infix("<", 40);
    infix(">", 40);
    infix("<=", 40);
    infix(">=", 40);

    infix("+", 50);
    infix("-", 50);
    infix("*", 60);
    infix("/", 60);
    var prefix = function (id, nud) {
	var s = symbol(id);
	s.nud = nud || function () {
            return [this.value, [expression(70)]];
	};
	return s;
    }

    prefix("-");
    prefix("!");
    prefix("typeof");

    if(tokens.length == 0) return ["blank"];

    advance();

    return expression(10);
}



GuppyAST.tokenise_text = function(s){
    return GuppyAST.tokenise(s, [
	{"type":"number", "re":"^[0-9.]+", "value":function(m){return Number(m)}},
	{"type":"operator", "re":"^(!=|>=|<=)", "value":function(m){return m;}},
	{"type":"operator", "re":"^[\-+*/,!^()=<>]", "value":function(m){return m}},
	{"type":"name", "re":"^[a-zA-Z_]+", "value":function(m){return m}},
	{"type":"comma", "re":"^,", "value":function(m){return m}},
	{"type":"space", "re":"^\\s+", "value":function(m){return m}},
    ]);
}

GuppyAST.parse_text = function(tokens){
    var symbol_table = {};

    var original_symbol = {
	nud: function () { throw Error("Undefined"); },
	led: function (left) { throw Error("Missing operator"); }
    };

    var mul = function(left){ return ["*", [left, this.nud()]]; };

    var symbol = function (id, bp) {
	var s = symbol_table[id];
	bp = bp || 0;
	if (s) {
            if (bp >= s.lbp) {
		s.lbp = bp;
            }
	} else {
            s = Object.create(original_symbol);
            s.id = s.value = id;
            s.lbp = bp;
            symbol_table[id] = s;
	}
	return s;
    };

    symbol("(end)");

    s = symbol("(blank)", 60);
    s.nud = function(){ return ["blank"];};

    s = symbol("(literal)", 60);
    s.led = mul;
    s.nud = function(){ return ["val", [this.value]] };

    var get_args = function(){
	var args = [];
	advance()
	if(token.id !== ")"){
	    while(true){
		args.push(expression(0));
		if (token.id !== ",") {
		    break;
		}
		advance(",");
	    }
	}
	advance(")");
	return args;
    }

    s = symbol("(var)", 60);
    s.led = mul;
    s.nud = function(){
	if(token.id == "("){
	    return [this.value, get_args()];
	}
	else{
	    return ["var", [this.value]]
	}
    };

    var token;
    var token_nr = 0;

    var advance = function (id) {
	var a, o, t, v;
	if (id && token.id !== id) {
            throw Error("Expected '" + id + "'");
	}
	if (token_nr >= tokens.length) {
            token = symbol_table["(end)"];
            return;
	}
	t = tokens[token_nr];
	token_nr += 1;
	v = t.value;
	var args = null;
	var kwargs = null;
	a = t.type;
	if (a === "name") {
            o = symbol_table["(var)"];
	} else if (a === "operator") {
            o = symbol_table[v];
            if (!o) {
		throw Error("Unknown operator.");
            }
	} else if (a ===  "number") {
            a = "literal";
            o = symbol_table["(literal)"];
	} else {
            throw Error("Unexpected token",t);
	}
	token = Object.create(o);
	token.type = a;
	token.value = v;
	if(args) token.args = args;
	//console.log("ADVD",JSON.stringify(token));
	return token;
    };


    var expression = function (rbp) {
	var left;
	var t = token;
	//console.log("T1",JSON.stringify(token));
	advance();
	//console.log("T2",JSON.stringify(token));
	left = t.nud();
	while (rbp < token.lbp) {
            t = token;
            advance();
	    //console.log("RB",JSON.stringify(token));
            left = t.led(left);
	}
	//console.log("POW", rbp, token.id, token.lbp);
	return left;
    };

    var infix = function (id, bp, led) {
	var s = symbol(id, bp);
	s.led = led || function (left) {
            return [this.value, [left, expression(bp)]];
	};
	return s;
    }

    infix("=", 40);
    infix("!=", 40);
    infix("<", 40);
    infix(">", 40);
    infix("<=", 40);
    infix(">=", 40);

    infix("+", 50);
    infix("-", 50);
    infix("*", 60);
    infix("/", 60);

    infix("!", 70, function(left){
	return ["factorial", [left]];
    });

    infix("^", 70, function(left){
	return ["exponential", [left, expression(70)]];
    });

    infix("(", 80, mul);

    symbol("(").nud = function(){
	var ans = expression(0);
	advance(")");
	return ans;
    }
    symbol(")");
    symbol(",");

    var prefix = function (id, nud) {
	var s = symbol(id);
	s.nud = nud || function () {
            return [this.value, [expression(70)]];
	};
	return s;
    }

    prefix("-");

    if(tokens.length == 0) return ["blank"];

    advance();

    return expression(10);
}

module.exports = GuppyAST;

},{}],5:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyUtils = require('./guppy_utils.js');
GuppyDoc = require('./guppy_doc.js');
GuppySymbols = require('./guppy_symbols.js');

String.prototype.splice = function(idx, s){ return (this.slice(0,idx) + s + this.slice(idx)); };
String.prototype.splicen = function(idx, s, n){ return (this.slice(0,idx) + s + this.slice(idx+n));};
String.prototype.search_at = function(idx, s){ return (this.substring(idx-s.length,idx) == s); };

/**
   @class
   @classdesc The backend to the editor.  Should never be constructed directly by the user.
   @constructor
 */
var GuppyBackend = function(config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {};
    var options = config['options'] || {};
    this.parent = config['parent'];

    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;
    this.events = {};

    var evts = ["ready", "change", "left_end", "right_end", "done", "completion", "debug", "error", "focus"];

    for(var i = 0; i < evts.length; i++){
	var e = evts[i];
	if(e in events) this.events[e] = e in events ? events[e] : null;
    }

    var opts = ["blank_caret", "empty_content", "blacklist", "autoreplace", "cliptype"];

    for(var i = 0; i < opts.length; i++){
	var p = opts[i];
	if(p in options) this[p] = options[p];
    }

    this.symbols = {};
    this.doc = new GuppyDoc(options["xml_content"]);

    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.space_caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
    if(GuppyBackend.ready && !this.ready){
    	this.ready = true;
	this.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    	this.fire_event("ready");
    }
}

GuppyBackend.ready = false;
GuppyBackend.SEL_NONE = 0;
GuppyBackend.SEL_CURSOR_AT_START = 1;
GuppyBackend.SEL_CURSOR_AT_END = 2;
GuppyBackend.clipboard = null;

/**
    Get the content of the editor
    @memberof GuppyBackend
    @param {string} t - The type of content to render ("latex", "text", or "xml").
*/
GuppyBackend.prototype.get_content = function(t,r){
    return this.doc.get_content(t,r);
}

/**
    Set the XML content of the editor
    @memberof GuppyBackend
    @param {string} xml_data - An XML string of the content to place in the editor
*/
GuppyBackend.prototype.set_content = function(xml_data){
    this.set_doc(new GuppyDoc(xml_data));
}

/**
    Set the document of the editor
    @memberof GuppyBackend
    @param {GuppyDoc} doc - The GuppyDoc that will be the editor's source
*/
GuppyBackend.prototype.set_doc = function(doc){
    this.doc = doc;
    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
}

GuppyBackend.prototype.import_text = function(text){
    var self = this;
    this.doc.import_text(text, this.symbols);
    this.set_doc(this.doc);
}

GuppyBackend.prototype.import_ast = function(ast){
    var self = this;
    this.doc.import_ast(ast, this.symbols);
    this.set_doc(this.doc);
}

GuppyBackend.prototype.fire_event = function(event, args){
    args = args || {};
    args.target = this.parent || this;
    if(this.events[event] && this.ready && GuppyBackend.ready) this.events[event](args);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.remove_symbol = function(name){
    if(this.symbols[name]) delete this.symbols[name];
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbols = function(name, sym){
    var new_syms = GuppySymbols.add_symbols(name, sym);
    for(var s in new_syms){
	this.symbols[s] = new_syms[s];
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_func = function(name, group){
    var new_syms = GuppySymbols.add_symbols("_func", [{"group":group,"symbols":[name]}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_raw = function(name, latex, text, group){
    var s = {}
    s[name] = {"latex":latex,"text":text}
    var new_syms = GuppySymbols.add_symbols("_raw", [{"group":group,"symbols":s}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

GuppyBackend.prototype.select_to = function(loc, sel_cursor, sel_caret, mouse){
    if(loc.current == sel_cursor && loc.caret == sel_caret){
	this.current = loc.current;
	this.caret = loc.caret;
	this.sel_status = GuppyBackend.SEL_NONE;
    }
    else if(loc.pos == "left"){
	this.sel_end = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START, mouse);
    }
    else if(loc.pos == "right"){
	this.sel_start = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END, mouse);
    }
}

GuppyBackend.prototype.set_sel_start = function(){
    this.sel_start = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.set_sel_end = function(){
    this.sel_end = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.add_paths = function(n,path){
    if(n.nodeName == "e"){
	n.setAttribute("path",path);
    }
    else{
	var es = 1, fs = 1, cs = 1, ls = 1;
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c"){ this.add_paths(c, path+"_c"+cs); cs++; }
	    else if(c.nodeName == "f"){ this.add_paths(c, path+"_f"+fs); fs++; }
	    else if(c.nodeName == "l"){ this.add_paths(c, path+"_l"+ls); ls++; }
	    else if(c.nodeName == "e"){ this.add_paths(c, path+"_e"+es); es++; }
	}
    }
}

GuppyBackend.prototype.add_classes_cursors = function(n,path){
    if(n.nodeName == "e"){
	var text = n.firstChild.nodeValue;
	ans = "";
	var sel_cursor;
	var text_node = GuppyUtils.is_text(n);
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel_caret_text = GuppyUtils.is_small(sel_cursor.node) ? GuppyUtils.SMALL_SEL_CARET : GuppyUtils.SEL_CARET;
	    if(!text_node && text.length == 0 && n.parentNode.childElementCount > 1){
		sel_caret_text = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+sel_caret_text+"}}";
	    }
	    else{
		sel_caret_text = "\\blue{"+sel_caret_text+"}";
	    }
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_caret_text = text_node ? "[" : sel_caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_caret_text = text_node ? "]" : "}" + sel_caret_text;
	}
	var caret_text = "";
	var temp_caret_text = "";
	if(text.length == 0){
	    if(text_node) caret_text = "\\_";
	    else if(n.parentNode.childElementCount == 1){
		if(this.current == n){
		    var blank_caret = this.blank_caret || (GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET);
		    ans = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{"+blank_caret+"}}";
		}
		else if(this.temp_cursor.node == n)
		    ans = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
		else
		    ans = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
	    }
	    else if(this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)){
		// These are the empty e elements at either end of
		// a c or m node, such as the space before and
		// after both the sin and x^2 in sin(x^2)
		//
		// Here, we add in a small element so that we can
		// use the mouse to select these areas
		ans = "\\phantom{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{\\cursor[0.1ex]{1ex}}}";
	    }
	}
	for(var i = 0; i < text.length+1; i++){
	    if(n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node){
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = "[";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "]";
		    else
			caret_text = "\\_";
		}
		else{
		    caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET;
		    if(text.length == 0)
			caret_text = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+caret_text+"}}";
		    else{
			caret_text = "\\red{\\xmlClass{main_cursor}{"+caret_text+"}}"
		    }
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "}" + caret_text;
		}
		ans += caret_text;
	    }
	    else if(n == this.current && i == this.caret && text_node){
		ans += caret_text;
	    }
	    else if(this.sel_status != GuppyBackend.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret){
		ans += sel_caret_text;
	    }
	    else if(this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node)
		    temp_caret_text = ".";
		else{
		    temp_caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.TEMP_SMALL_CARET : GuppyUtils.TEMP_CARET;
		    if(text.length == 0){
			temp_caret_text = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+temp_caret_text+"}}";
		    }
		    else
			temp_caret_text = "\\gray{"+temp_caret_text+"}";
		}
		ans += temp_caret_text;
	    }
	    if(i < text.length) ans += "\\xmlClass{guppy_elt guppy_loc_"+n.getAttribute("path")+"_"+i+"}{"+text[i]+"}";
	}
	if(text_node && n == this.current){
	    ans = "\\xmlClass{guppy_text_current}{{"+ans+"}}";
	}
	n.setAttribute("render", ans);
	n.removeAttribute("path");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c" || c.nodeName == "l" || c.nodeName == "f" || c.nodeName == "e"){ this.add_classes_cursors(c); }
	}
    }
}

GuppyBackend.prototype.remove_cursors_classes = function(n){
    if(n.nodeName == "e"){
	n.removeAttribute("path");
	n.removeAttribute("render");
	n.removeAttribute("current");
	n.removeAttribute("temp");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeType == 1){ this.remove_cursors_classes(c); }
	}
    }
}

GuppyBackend.prototype.down_from_f = function(){
    var nn = this.current.firstChild;
    while(nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
    if(nn != null){
	while(nn.nodeName == 'l') nn = nn.firstChild;
	this.current = nn.firstChild;
    }
}

GuppyBackend.prototype.down_from_f_to_blank = function(){
    var nn = this.current.firstChild;
    while(nn != null && !(nn.nodeName == 'c' && nn.children.length == 1 && nn.firstChild.firstChild.nodeValue == "")){
	nn = nn.nextSibling;
    }
    if(nn != null){
	//Sanity check:

	while(nn.nodeName == 'l') nn = nn.firstChild;
	if(nn.nodeName != 'c' || nn.firstChild.nodeName != 'e'){
	    this.problem('dfftb');
	    return;
	}
	this.current = nn.firstChild;
    }
    else this.down_from_f();
}

GuppyBackend.prototype.delete_from_f = function(to_insert){
    var n = this.current;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var middle = to_insert || "";
    var new_node = this.make_e(prev.firstChild.textContent + middle + next.firstChild.textContent);
    this.current = new_node;
    this.caret = prev.firstChild.textContent.length;
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
}

GuppyBackend.prototype.symbol_to_node = function(sym_name, content){
    return GuppySymbols.symbol_to_node(this.symbols[sym_name], content, this.doc.base);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_symbol = function(sym_name){
    var s = this.symbols[sym_name];
    if(s.attrs && this.is_blacklisted(s.attrs.type)){
	return false;
    }
    var node_list = {};
    var content = {};
    var left_piece,right_piece;
    var cur = (s.current) ? s.current.index || 0 : 0;
    var to_remove = [];
    var to_replace = null;
    var replace_f = false;

    if(cur > 0){
	cur--;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel = this.sel_get();
	    sel_parent = sel.involved[0].parentNode;
	    to_remove = sel.involved;
	    left_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(0,this.sel_start.caret));
	    right_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(this.sel_start.caret));
	    content[cur] = sel.node_list;
	}
	else if(s.current && s.current.type == 'token'){
	    // If we're at the beginning, then the token is the previous f node
	    if(this.caret == 0 && this.current.previousSibling != null){
		content[cur] = [this.make_e(""), this.current.previousSibling, this.make_e("")];
		to_replace = this.current.previousSibling;
		replace_f = true;
	    }
	    else{
		// look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
		var prev = this.current.firstChild.nodeValue.substring(0,this.caret);
		var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
		if(token != null && token.length > 0){
		    token = token[0];
		    left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret-token.length));
		    right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
		    content[cur] = [this.make_e(token)];
		}
	    }
	}
    }
    if(!replace_f && (left_piece == null || right_piece == null)){
	left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret));
	right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
	to_remove = [this.current];
    }

    // By now:
    //
    // content contains whatever we want to pre-populate the 'current' field with (if any)
    //
    // right_piece contains whatever content was in an involved node
    // to the right of the cursor but is not part of the insertion.
    // Analogously for left_piece
    //
    // Thus all we should have to do now is symbol_to_node(sym_type,
    // content) and then add the left_piece, resulting node, and
    // right_piece in that order.

    var new_current = null;
    var current_parent = this.current.parentNode;

    var sym = this.symbol_to_node(sym_name,content);
    var f = sym.f;
    var new_current = sym.first;

    var next = this.current.nextSibling;

    if(replace_f){
	current_parent.replaceChild(f,to_replace);
    }
    else{
	if(to_remove.length == 0) this.current.parentNode.removeChild(this.current);

	for(var i = 0; i < to_remove.length; i++){
	    if(next == to_remove[i]) next = next.nextSibling;
	    current_parent.removeChild(to_remove[i]);
	}
	current_parent.insertBefore(left_piece, next);
	current_parent.insertBefore(f, next);
	current_parent.insertBefore(right_piece, next);
    }

    this.caret = 0;
    this.current = f;
    if(s.attrs['char'] == "yes" || (s.current && s.attrs && s.current.index >= s.args.length)){
	this.current = this.current.nextSibling;
    }
    else{
	this.down_from_f_to_blank();
	this.caret = this.current.firstChild.textContent.length;
    }

    this.sel_clear();
    this.checkpoint();
    return true;
}

GuppyBackend.prototype.sel_get = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	return null;
    }
    var involved = [];
    var node_list = [];
    var remnant = null;

    if(this.sel_start.node == this.sel_end.node){
	return {"node_list":[this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret, this.sel_end.caret))],
		"remnant":this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret)),
		"involved":[this.sel_start.node]};
    }

    node_list.push(this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret)));
    involved.push(this.sel_start.node);
    involved.push(this.sel_end.node);
    remnant = this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret));
    var n = this.sel_start.node.nextSibling;
    while(n != null && n != this.sel_end.node){
	involved.push(n);
	node_list.push(n);
	n = n.nextSibling;
    }
    node_list.push(this.make_e(this.sel_end.node.firstChild.nodeValue.substring(0, this.sel_end.caret)));
    return {"node_list":node_list,
	    "remnant":remnant,
	    "involved":involved,
	    "cursor":0};
}

// GuppyBackend.prototype.print_selection = function(){
//     var sel = this.sel_get();
//     if(sel == null) return "[none]";
//     var ans = "";
//     ans += "node_list: \n";
//     for(var i = 0; i < sel.node_list.length; i++){
// 	var n = sel.node_list[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
//     ans += "\ninvolved: \n";
//     for(var i = 0; i < sel.involved.length; i++){
// 	var n = sel.involved[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
// }

GuppyBackend.prototype.make_e = function(text){
    var base = this.doc.base;
    var new_node = base.createElement("e");
    new_node.appendChild(base.createTextNode(text));
    return new_node;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_string = function(s){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_clear();
    }
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret,s)
    this.caret += s.length;
    this.checkpoint();
    if(this.autoreplace) this.check_for_symbol();
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_copy = function(){
    var sel = this.sel_get();
    if(!sel) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < sel.node_list.length; i++){
	var node = sel.node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
}

GuppyBackend.prototype.system_copy = function(text) {
    if (window.clipboardData && window.clipboardData.setData)
        return clipboardData.setData("Text", text);
    else if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
        var textarea = document.createElement("textarea");
        textarea.textContent = text;
        textarea.style.position = "fixed";
	textarea.style.background = "transparent";
        document.body.appendChild(textarea);
        textarea.select();
        try { return document.execCommand("copy"); }
	catch (ex) { return false; }
        finally { document.body.removeChild(textarea); }
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_cut = function(){
    var node_list = this.sel_delete();
    if(!node_list) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < node_list.length; i++){
	var node = node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
    this.checkpoint();
}

GuppyBackend.prototype.insert_nodes = function(node_list, move_cursor){
    var real_clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	real_clipboard.push(node_list[i].cloneNode(true));
    }

    if(real_clipboard.length == 1){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	if(move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	if(move_cursor){
	    this.current = nn;
	    this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
	}
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_paste = function(){
    this.sel_delete();
    this.sel_clear();
    if(!(GuppyBackend.clipboard) || GuppyBackend.clipboard.length == 0) return;
    this.insert_nodes(GuppyBackend.clipboard, true);
    this.checkpoint();
    return;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_clear = function(){
    this.sel_start = null;
    this.sel_end = null;
    this.sel_status = GuppyBackend.SEL_NONE;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_delete = function(){
    var sel = this.sel_get();
    if(!sel) return null;
    sel_parent = sel.involved[0].parentNode;
    sel_prev = sel.involved[0].previousSibling;
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	sel_parent.removeChild(n);
    }
    if(sel_prev == null){
	if(sel_parent.firstChild == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_parent.firstChild);
    }
    else if(sel_prev.nodeName == 'f'){
	if(sel_prev.nextSibling == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling);
    }
    this.current = sel.remnant
    this.caret = this.sel_start.caret;
    return sel.node_list;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_all = function(){
    this.home();
    this.set_sel_start();
    this.end();
    this.set_sel_end();
    if(this.sel_start.node != this.sel_end.node || this.sel_start.caret != this.sel_end.caret)
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_right = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_start();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
    }
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.current.nextSibling;
	if(nn != null){
	    this.current = nn.nextSibling;
	    this.caret = 0;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
    }
    else{
	this.caret += 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.set_sel_boundary = function(sstatus, mouse){
    if(this.sel_status == GuppyBackend.SEL_NONE || mouse) this.sel_status = sstatus;
    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
	this.set_sel_start();
    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
	this.set_sel_end();
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_left = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_end();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_START;
    }
    if(this.caret <= 0){
	var nn = this.current.previousSibling;
	if(nn != null){
	    this.current = nn.previousSibling;
	    this.caret = this.current.firstChild.nodeValue.length;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
    }
    else{
	this.caret -= 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.list_extend_copy_right = function(){this.list_extend("right", true);}
GuppyBackend.prototype.list_extend_copy_left = function(){this.list_extend("left", true);}
GuppyBackend.prototype.list_extend_right = function(){this.list_extend("right", false);}
GuppyBackend.prototype.list_extend_left = function(){this.list_extend("left", false);}
GuppyBackend.prototype.list_extend_up = function(){this.list_extend("up", false);}
GuppyBackend.prototype.list_extend_down = function(){this.list_extend("down", false);}
GuppyBackend.prototype.list_extend_copy_up = function(){this.list_extend("up", true);}
GuppyBackend.prototype.list_extend_copy_down = function(){this.list_extend("down", true);}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_vertical_move = function(down){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var pos = 1;
    var cc = n;
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var new_l = down ? n.parentNode.nextSibling : n.parentNode.previousSibling
    if(!new_l) return;
    var idx = 1;
    var nn = new_l.firstChild;
    while(idx < pos){
	idx++;
	nn = nn.nextSibling;
    }
    this.current = nn.firstChild;
    this.caret = down ? 0 : this.current.firstChild.textContent.length;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_extend = function(direction, copy){
    var base = this.doc.base;
    var vertical = direction == "up" || direction == "down";
    var before = direction == "up" || direction == "left";
    var this_name = vertical ? "l" : "c";
    var n = this.current;
    while(n.parentNode && !(n.nodeName == this_name && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var to_insert;

    // check if 2D and horizontal and extend all the other rows if so
    if(!vertical && n.parentNode.parentNode.nodeName == "l"){
	to_insert = base.createElement("c");
	to_insert.appendChild(this.make_e(""));
	var pos = 1;
	var cc = n;
	while(cc.previousSibling != null){
	    pos++;
	    cc = cc.previousSibling;
	}
	var to_modify = [];
	var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode);
	try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
	catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
	for(var j = 0; j < to_modify.length; j++){
	    var nn = to_modify[j];
	    if(copy) nn.parentNode.insertBefore(nn.cloneNode(true), before ? nn : nn.nextSibling);
	    else nn.parentNode.insertBefore(to_insert.cloneNode(true), before ? nn : nn.nextSibling);
	    nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))+1);
	}
	this.current = before ? n.previousSibling.lastChild : n.nextSibling.firstChild;
	this.caret = this.current.firstChild.textContent.length;
	this.checkpoint();
	return;
    }

    if(copy){
	to_insert = n.cloneNode(true);
    }
    else{
	if(vertical){
	    to_insert = base.createElement("l");
	    to_insert.setAttribute("s",n.getAttribute("s"))
	    for(var i = 0; i < parseInt(n.getAttribute("s")); i++){
		var c = base.createElement("c");
		c.appendChild(this.make_e(""));
		to_insert.appendChild(c);
	    }
	}
	else{
	    to_insert = base.createElement("c");
	    to_insert.appendChild(this.make_e(""));
	}
    }
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))+1);
    n.parentNode.insertBefore(to_insert, before ? n : n.nextSibling);
    if(vertical) this.current = to_insert.firstChild.firstChild;
    else this.current = to_insert.firstChild;
    this.caret = 0;
    this.checkpoint();
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_col = function(){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;

    // Don't remove if there is only a single column:
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;

    var pos = 1;
    var cc = n;

    // Find position of column
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var to_modify = [];
    var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode)
    try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
    catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
    for(var j = 0; j < to_modify.length; j++){
	var nn = to_modify[j];
	nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))-1);
	nn.parentNode.removeChild(nn);
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_row = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'l' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    // Don't remove if there is only a single row:
    if(n.previousSibling != null){
	this.current = n.previousSibling.firstChild.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild.firstChild;
	this.caret = 0;
    }
    else return;

    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    if(n.parentNode.parentNode && n.parentNode.parentNode.nodeName == "l"){
	this.list_remove_col();
	return;
    }
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.right = function(){
    this.sel_clear();
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.doc.xpath_node("following::e[1]", this.current);
	if(nn != null){
	    this.current = nn;
	    this.caret = 0;
	}
	else{
	    this.fire_event("right_end");
	}
    }
    else{
	this.caret += 1;
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.spacebar = function(){
    if(GuppyUtils.is_text(this.current)) this.insert_string(" ");
    else this.space_caret = this.caret;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.left = function(){
    this.sel_clear();
    if(this.caret <= 0){
	var pn = this.doc.xpath_node("preceding::e[1]", this.current);
	if(pn != null){
	    this.current = pn;
	    this.caret = this.current.firstChild.nodeValue.length;
	}
	else{
	    this.fire_event("left_end");
	}
    }
    else{
	this.caret -= 1;
    }
}

GuppyBackend.prototype.delete_from_c = function(){
    var pos = 0;
    var c = this.current.parentNode;
    while(c && c.nodeName == "c"){
	pos++;
	c = c.previousSibling;
    }
    var idx = this.current.parentNode.getAttribute("delete");
    var survivor_node = this.doc.xpath_node("./c[position()="+idx+"]", this.current.parentNode.parentNode);
    var survivor_nodes = [];
    for(var n = survivor_node.firstChild; n != null; n = n.nextSibling){
	survivor_nodes.push(n);
    }
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_nodes(survivor_nodes, pos > idx);
}

GuppyBackend.prototype.delete_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret > 0){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret-1,"",1);
	this.caret--;
    }
    else{
	// The order of these is important
	if(this.current.previousSibling != null && this.current.previousSibling.getAttribute("char") == "yes"){
	    // The previous node is an f node but is really just a character.  Delete it.
	    this.current = this.current.previousSibling;
	    this.delete_from_f();
	}
	else if(this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f'){
	    // We're in an e node just after an f node.  Move back into the f node (delete it?)
	    this.left();
	    return false;
	}
	else if(this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c'){
	    // We're in a c child of an f node, but not the first one.  Go to the previous c
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.left();
		return false;
	    }
	}
	else if(this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')){
	    // We're in the first c child of an f node and at the beginning--delete the f node
	    var par = this.current.parentNode;
	    while(par.parentNode.nodeName == 'l' || par.parentNode.nodeName == 'c'){
		par = par.parentNode;
	    }
	    if(par.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.current = par.parentNode;
		this.delete_from_f();
	    }
	}
	else{
	    // We're at the beginning (hopefully!)
	    return false;
	}
    }
    return true;
}

GuppyBackend.prototype.delete_forward_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret < this.current.firstChild.nodeValue.length){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret,"",1);
    }
    else{
	//We're at the end
	if(this.current.nextSibling != null){
	    // The next node is an f node.  Delete it.
	    this.current = this.current.nextSibling;
	    this.delete_from_f();
	}
	else if(this.current.parentNode.nodeName == 'c'){
	    // We're in a c child of an f node.  Do nothing
	    return false;
	}
    }
    return true;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.backspace = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_from_e()){
	this.checkpoint();
    }
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.delete_key = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_forward_from_e()){
	this.checkpoint();
    }
}

GuppyBackend.prototype.backslash = function(){
    if(GuppyUtils.is_text(this.current)) return;
    this.insert_symbol("sym_name");
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.tab = function(){
    if(!GuppyUtils.is_symbol(this.current)){
	this.check_for_symbol();
	return;
    }
    var sym_name = this.current.firstChild.textContent;
    var candidates = [];
    for(var n in this.symbols){
	if(n.startsWith(sym_name)) candidates.push(n);
    }
    if(candidates.length == 1){
	this.current.firstChild.textContent = candidates[0];
	this.caret = candidates[0].length;
    }
    else {
	this.fire_event("completion",{"candidates":candidates});
    }
}

GuppyBackend.prototype.right_paren = function(){
    if(this.current.nodeName == 'e' && this.caret < this.current.firstChild.nodeValue.length - 1) return;
    else this.right();
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.up = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("up")){
	var t = parseInt(this.current.parentNode.getAttribute("up"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(false);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.down = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("down")){
	var t = parseInt(this.current.parentNode.getAttribute("down"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(true);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.home = function(){
    this.current = this.doc.root().firstChild;
    this.caret = 0;
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.end = function(){
    this.current = this.doc.root().lastChild;
    this.caret = this.current.firstChild.nodeValue.length;
}

GuppyBackend.prototype.checkpoint = function(){
    var base = this.doc.base;
    this.current.setAttribute("current","yes");
    this.current.setAttribute("caret",this.caret.toString());
    this.undo_now++;
    this.undo_data[this.undo_now] = base.cloneNode(true);
    this.undo_data.splice(this.undo_now+1, this.undo_data.length);
    this.fire_event("change",{"old":this.undo_data[this.undo_now-1],"new":this.undo_data[this.undo_now]});
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
    if(this.parent && this.parent.ready) this.parent.render(true);
}

GuppyBackend.prototype.restore = function(t){
    this.doc.base = this.undo_data[t].cloneNode(true);
    this.find_current();
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

GuppyBackend.prototype.find_current = function(){
    this.current = this.doc.xpath_node("//*[@current='yes']");
    this.caret = parseInt(this.current.getAttribute("caret"));
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.undo = function(){
    this.sel_clear();
    if(this.undo_now <= 0) return;
    this.undo_now--;
    this.restore(this.undo_now);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.redo = function(){
    this.sel_clear();
    if(this.undo_now >= this.undo_data.length-1) return;
    this.undo_now++;
    this.restore(this.undo_now);
}

/**
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.done = function(s){
    if(GuppyUtils.is_symbol(this.current)) this.complete_symbol();
    else this.fire_event("done");
}

GuppyBackend.prototype.complete_symbol = function(){
    var sym_name = this.current.firstChild.textContent;
    if(!(this.symbols[sym_name])) return;
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_symbol(sym_name);
}

GuppyBackend.prototype.problem = function(message){
    this.fire_event("error",{"message":message});
}

GuppyBackend.prototype.is_blacklisted = function(symb_type){
    for(var i = 0; i < this.blacklist.length; i++)
	if(symb_type == this.blacklist[i]) return true;
    return false;
}

GuppyBackend.prototype.check_for_symbol = function(){
    var instance = this;
    if(GuppyUtils.is_text(this.current)) return;
    for(var s in this.symbols){
	if(instance.current.nodeName == 'e' && s.length <= (instance.caret - instance.space_caret) && !(GuppyUtils.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret,s)){
	    var temp = instance.current.firstChild.nodeValue;
	    var temp_caret = instance.caret;
	    instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0,instance.caret-s.length)+instance.current.firstChild.nodeValue.slice(instance.caret);
	    instance.caret -= s.length;
	    var success = instance.insert_symbol(s);
	    if(!success){
		instance.current.firstChild.nodeValue = temp;
		instance.caret = temp_caret;
	    }
	    break;
	}
    }
}

module.exports = GuppyBackend;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_doc.js":6,"./guppy_symbols.js":8,"./guppy_utils.js":9,"mousetrap":2}],6:[function(require,module,exports){
GuppyAST = require('./guppy_ast.js');

/**
   @class
   @classdesc A class representing a Guppy document
   @param {string} [doc=<m><e></e></m>] - An XML string representing the document
   @constructor
 */
var GuppyDoc = function(doc){
    doc = doc || "<m><e></e></m>";
    this.set_content(doc);
}

GuppyDoc.prototype.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes") return true;
	n = n.parentNode
	while(n != null && n.nodeName != 'c') n = n.parentNode;
    }
    return false;
}

GuppyDoc.prototype.ensure_text_nodes = function(){
    var l = this.base.getElementsByTagName("e");
    for(var i = 0; i < l.length; i++){
	if(!(l[i].firstChild)) l[i].appendChild(this.base.createTextNode(""));
    }
}

/**
    Check if document is empty
    @memberof GuppyDoc
    @returns {boolean}
*/
GuppyDoc.prototype.is_blank = function(){
    if(this.base.getElementsByTagName("f").length > 0) return false;
    var l = this.base.getElementsByTagName("e");
    if(l.length == 1 && (!(l[0].firstChild) || l[0].firstChild.textContent == "")) return true;
    return false;
}


/**
    Get the document as a DOM object
    @memberof GuppyDoc
    @returns {Element}
*/
GuppyDoc.prototype.root = function(){
    return this.base.documentElement;
}

/**
    Get the content of the document as a string
    @memberof GuppyDoc
    @param {string} t - The rendering method to use ("latex", "text", "ast" (for syntax tree), or "xml" (for internal XML representation))
    @returns {string}
*/
GuppyDoc.prototype.get_content = function(t,r){
    if(t == "xml") return (new XMLSerializer()).serializeToString(this.base);
    else if(t == "ast") return JSON.stringify(this.syntax_tree());
    else if(t == "text") return GuppyAST.to_text(this.syntax_tree());
    else if(t == "function") return GuppyAST.to_function(this.syntax_tree());
    else if(t == "eqns") return GuppyAST.to_eqlist(this.syntax_tree());
    else return this.manual_render(t,this.root(),r);
}

GuppyDoc.prototype.import_text = function(text, syms, s2n){
    var tokens = GuppyAST.tokenise_text(text);
    console.log("TOKENS",JSON.stringify(tokens));
    var ast = GuppyAST.parse_text(tokens);
    console.log("AST",JSON.stringify(ast));
    this.import_ast(ast, syms, s2n);
}

GuppyDoc.prototype.import_ast = function(ast, syms, s2n){
    syms = syms || GuppySymbols.symbols;
    s2n = s2n || GuppySymbols.symbol_to_node;
    var doc = GuppyAST.to_xml(ast, syms, s2n);
    this.base = doc;
    this.ensure_text_nodes();
}

GuppyDoc.prototype.syntax_tree = function(n){
    n = n || this.root()
    if(n.nodeName == "e"){
	console.log("Should never happen");
	//ans = n.firstChild.textContent;
    }
    else if(n.nodeName == "f"){
	var ans = {"args":[], "kwargs":{}};
	ans['value'] = n.getAttribute("type");
	ans['type'] = "function";
	if(n.hasAttribute("ast_value")) ans['value'] = n.getAttribute("ast_value");
	if(n.hasAttribute("ast_type")) ans['type'] = n.getAttribute("ast_type");
	else if(n.getAttribute("char") == "yes") ans['type'] = "name";

	var iterator = this.xpath_list("./*[name()='c' or name()='l']", n)
	for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){
	    //if(nn.hasAttribute("name")) ans.kwargs[nn.getAttribute("name")] = this.syntax_tree(nn)
	    //else ans.args.push(this.syntax_tree(nn))
	    ans.args.push(this.syntax_tree(nn))
	}
	//console.log("F",JSON.stringify(ans))
    }
    else if(n.nodeName == "l"){
	ans = [];
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans.push(this.syntax_tree(nn));
	}
	ans = ["list",ans];
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	if(n.hasAttribute("mode") && n.getAttribute("mode") == "text"){
	    ans = n.firstChild.firstChild.textContent;
	}
	else{
	    var tokens = []
	    for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
		if(nn.nodeName == "e"){
		    tokens = tokens.concat(GuppyAST.tokenise_e(nn.firstChild.textContent));
		}
		else if(nn.nodeName == "f"){
		    tokens.push(this.syntax_tree(nn));
		}
	    }
	    //console.log("TOK",tokens);
	    ans = GuppyAST.parse_e(tokens);
	}
    }
    return ans;
}

GuppyDoc.prototype.xpath_node = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

GuppyDoc.prototype.xpath_list = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
}

/**
    Get the names of symbols used in this document
    @memberof GuppyDoc
    @param {string[]} [groups] - A list of groups you want strings for
    @returns {string[]}
*/
GuppyDoc.prototype.get_symbols = function(groups){
    var types = {};
    var ans = [];
    var iterator = groups ? this.xpath_list("//f") : this.xpath_list("//f[@group='"+groups[i]+"']");
    for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext())
	types[nn.getAttribute("type")] = true;
    for(var t in types)
	ans.push(t);
    return ans;
}

/**
    Set the content of the document
    @memberof GuppyDoc
    @param {string} xml_data - An XML string representing the content of the document
*/
GuppyDoc.prototype.set_content = function(xml_data){
    this.base = (new window.DOMParser()).parseFromString(xml_data, "text/xml");
    this.ensure_text_nodes();
}

GuppyDoc.bracket_xpath = "(count(./*) != 1 and not \
		          ( \
                            count(./e)=2 and \
			    count(./f)=1 and \
			    count(./e[string-length(text())=0])=2 and \
			    ( \
			      (\
                                count(./f/c)=1 and\
			        count(./f/c[@is_bracket='yes'])=1\
			      )\
			      or\
			      (\
			        f/@char='yes' and \
				count(./e[@current='yes'])=0 and \
				count(./e[@temp='yes'])=0 \
			      )\
			    )\
			  )\
			)  \
			or\
		        (\
			  count(./*) = 1 and \
			  string-length(./e/text()) != 1 and \
			  number(./e/text()) != ./e/text() \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@current = 'yes' \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@temp = 'yes' \
			)"

GuppyDoc.prototype.manual_render = function(t,n,r){
    var ans = "";
    if(n.nodeName == "e"){
	if(t == "latex" && r){
	    ans = n.getAttribute("render");
	}
	else if(t == "text"){
	    ans = n.firstChild.textContent;
	    if(n.previousSibling && n.nextSibling && ans == "")
		ans = " * ";
	    else {
		ans = ans.replace(/(.)([^a-zA-Z0-9.])(.)/g,"$1 $2 $3");
		ans = ans.replace(/([a-zA-Z])(?=\.)/g,"$1 * ");
		ans = ans.replace(/(\.)(?=[a-zA-Z])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z])(?=[a-zA-Z0-9])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z0-9])(?=[a-zA-Z])/g,"$1 * ");
		if(n.previousSibling && n.previousSibling.getAttribute("group") != "operations") ans = ans.replace(/^([a-zA-Z0-9])/g," * $1");
		if(n.nextSibling && n.nextSibling.getAttribute("group") != "operations") ans = ans.replace(/([a-zA-Z0-9])$/g,"$1 * ");
		ans = " "+ans+" ";
	    }
	}
	else{
	    ans = n.firstChild.textContent;
	}
    }
    else if(n.nodeName == "f"){
	var real_type = (t == "latex" && this.is_small(n)) ? "small_latex" : t;
	var nn = this.xpath_node("./b[@p='"+real_type+"']", n) || this.xpath_node("./b[@p='"+t+"']", n);
	if(nn) ans = this.manual_render(t,nn,r);
    }
    else if(n.nodeName == "b"){
	var cs = []
	var i = 1;
	var par = n.parentNode;
	for(var nn = par.firstChild; nn != null; nn = nn.nextSibling)
	    if(nn.nodeName == "c" || nn.nodeName == "l") cs[i++] = this.manual_render(t,nn,r);
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeType == 3) ans += nn.textContent;
	    else if(nn.nodeType == 1){
		if(nn.hasAttribute("d")){
		    var dim = parseInt(nn.getAttribute("d"));
		    var joiner = function(d,l){
			if(d > 1) for(var k = 0; k < l.length; k++) l[k] = joiner(d-1,l[k]);
			return l.join(nn.getAttribute('sep'+(d-1)));
		    }
		    ans += joiner(dim,cs[parseInt(nn.getAttribute("ref"))]);
		}
		else ans += cs[parseInt(nn.getAttribute("ref"))];
	    }
	}
    }
    else if(n.nodeName == "l"){
	ans = [];
	var i = 0;
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans[i++] = this.manual_render(t,nn,r);
	}
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling)
	    ans += this.manual_render(t,nn,r);
	if(t == "latex" &&
           n.getAttribute("bracket") == "yes" &&
	   this.base.evaluate(GuppyDoc.bracket_xpath, n, null,
			 XPathResult.BOOLEAN_TYPE, null).booleanValue){
	    ans = "\\left("+ans+"\\right)";
	}
    }
    return ans;
}

GuppyDoc.prototype.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return this.path_to(n.parentNode)+"_"+name+""+ns;
}

module.exports = GuppyDoc;

},{"./guppy_ast.js":4}],7:[function(require,module,exports){
GuppySymbols = require('./guppy_symbols.js');


GuppySettings = {}
GuppySettings.controls = document.createElement("div");
GuppySettings.controls.setAttribute("class","guppy_help");
GuppySettings.controls.style = "padding:10px;border:1px solid black; background-color: #fff;position:absolute;top:0;left:0;display:none;";
GuppySettings.controls.innerHTML = `<p>Start typing the name of a mathematical function to automatically insert it.  </p><p>(For example, "sqrt" for root, "mat" for matrix, or "defi" for definite integral.)</p>
<style>div.guppy_help td{ vertical-align:top;padding: 2px;}</style>
<h3>Controls</h3><table id="guppy_help_table"><tr><td><b>Press...</b></td><td><b>...to do</b></td></tr></table>`;

GuppySettings.symbols = document.createElement("div");
GuppySettings.symbols.setAttribute("class","guppy_help");
GuppySettings.symbols.style = "padding:10px;border:1px solid black; background-color: #fff;position:absolute;top:0;left:0;display:none;";
GuppySettings.symbols.innerHTML = `<p>Start typing the name of a mathematical function to automatically insert it.  </p><p>(For example, "sqrt" for root, "mat" for matrix, or "defi" for definite integral.)</p>
<style>div.guppy_help td{ vertical-align:top;padding: 2px;}</style>
<h3>Symbols</h3><table id="guppy_syms_table"><tr><td><b>Type...</b></td><td><b>...to get</b></td></tr></table>`;

GuppySettings.settings = document.createElement("div");
GuppySettings.settings.setAttribute("class","guppy_help");
GuppySettings.settings.style = "padding:10px;border:1px solid black; background-color: #fff;position:absolute;top:0;left:0;display:none;";
GuppySettings.settings.innerHTML = `<p>Global settings: </p>
<style>div.guppy_help td{ vertical-align:top;padding: 2px;}</style>
<h3>Settings</h3><table id="guppy_settings_table"><tr><td><b>Type...</b></td><td><b>...to get</b></td></tr></table>`;

GuppySettings.div_names = ["controls","symbols","settings"];

var make_row = function(table_id, c1, c2){
    var row = document.createElement("tr");
    row.innerHTML = `<td><font face="monospace">`+c1+`</font></td><td>`+c2+`</td>`;
    document.getElementById(table_id).appendChild(row);
    return row;
}

var make_x = function(elt){
    var x = document.createElement("div");
    x.innerHTML = `<font size="6pt">&times;</font>`;
    x.style = "cursor:pointer;position:absolute;top:0;right:0;padding-right:5px;line-height:1;";
    x.onclick = function(e){ elt.style.display = "none"; }
    elt.appendChild(x);
}

GuppySettings.hide_all = function(){
    for(var i = 0; i < GuppySettings.div_names.length; i++)
	GuppySettings[GuppySettings.div_names[i]].style.display = "none";
}

GuppySettings.toggle = function(card, g){
    if(GuppySettings.div_names.indexOf(card) >= 0){
	if(GuppySettings[card].style.display == "none"){
	    GuppySettings.hide_all();
	    var r = g.editor.getBoundingClientRect();
	    GuppySettings[card].style.top = (r.bottom+document.documentElement.scrollTop) + "px";
	    GuppySettings[card].style.left = (r.left+document.documentElement.scrollLeft) + "px";
	    GuppySettings[card].style.display = "block";
	}
	else{
	    GuppySettings.hide_all();
	}
    }
}

GuppySettings.init = function(symbols){
    for(var i = 0; i < GuppySettings.div_names.length; i++){
	make_x(GuppySettings[GuppySettings.div_names[i]]);
	document.body.appendChild(GuppySettings[GuppySettings.div_names[i]])
    }

    make_row("guppy_help_table","left/right arrows","Move cursor");
    make_row("guppy_help_table","shift+left/right arrows","Select region")
    make_row("guppy_help_table","ctrl+a","Select all");
    make_row("guppy_help_table","ctrl+x/c/v","Cut/copy/paste");
    make_row("guppy_help_table","ctrl+z/y","Undo/redo");
    make_row("guppy_help_table","ctrl+left/right","Add entry to list or column to matrix");
    make_row("guppy_help_table","shift+ctrl+left/right","Add copy of current entry/column to to list/matrix");
    make_row("guppy_help_table","ctrl+up/down","Add row to matrix");
    make_row("guppy_help_table","shift+ctrl+up/down","Add copy of current row to matrix");
    make_row("guppy_help_table","ctrl+backspace","Delete current entry in list or column in matrix");
    make_row("guppy_help_table","ctrl+shift+backspace","Delete current row in matrix");

    for(var s in symbols){
	var latex = symbols[s].output.latex.replace(/\{\$[0-9]+(\{[^}]+\})*\}/g, "\\blue{[?]}");
	var row = make_row("guppy_syms_table",s," ");
	katex.render(latex, row.lastChild);
    }
}

module.exports = GuppySettings;

},{"./guppy_symbols.js":8}],8:[function(require,module,exports){
GuppySymbols = {"symbols":{}, "templates":{}};

GuppySymbols.eval_template = function(template, name, args){
    args['name'] = name;
    if(Object.prototype.toString.call(template) == "[object String]"){
	var ans = template;
	for(var name in args){
	    ans = ans.replace(new RegExp("\\{\\$"+name+"\\}"),args[name]);
	}
	return ans;
    }
    else{
	for(var x in template) {
	    template[x] = GuppySymbols.eval_template(template[x], name, args)
	}
	return template;
    }
}

GuppySymbols.symbol_to_node = function(s, content, base){

    // s is a symbol
    //
    // content is a list of nodes to insert
    var f = base.createElement("f");
    for(var a in s.attrs){
	f.setAttribute(a, s.attrs[a]);
    }
    if("ast" in s){
	if("type" in s.ast) f.setAttribute("ast_type",s.ast["type"])
	if("value" in s.ast) f.setAttribute("ast_value",s.ast["value"])
    }
    //if(s['char']) f.setAttribute("c","yes");

    var first_ref = -1;
    var refs_count = 0;
    var lists = {}
    var first;

    // Make the b nodes for rendering each output
    for(var t in s["output"]){
	var b = base.createElement("b");
	b.setAttribute("p",t);

	var out = s["output"][t];
	if(typeof out == 'string'){
	    out = out.split(/(\{\$[0-9]+(?:\{[^}]+\})*\})/g);
	    for(var i = 0; i < out.length; i++){
		m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]+\})*)\}$/);
		if(m){
		    out[i] = {'ref':parseInt(m[1])};
		    if(m[2].length > 0){
			mm = m[2].match(/\{[^}]*\}/g);
			out[i]['d'] = mm.length;
			for(var j = 0; j < mm.length; j++){
			    out[i]['sep'+j] = mm[j].substring(1,mm[j].length-1);
			}
		    }
		}
	    }
	}
	for(var i = 0; i < out.length; i++){
	    if(typeof out[i] == 'string' || out[i] instanceof String){
		var nt = base.createTextNode(out[i]);
		b.appendChild(nt);
	    }
	    else{
		var nt = base.createElement("r");
		for(var attr in out[i]){
		    nt.setAttribute(attr,out[i][attr]);
		}
		if(t == 'latex') {
		    if(first_ref == -1) first_ref = out[i]['ref'];
		    if('d' in out[i]) lists[refs_count] = out[i]['d']
		    refs_count++;
		}
		b.appendChild(nt);
	    }
	}
	f.appendChild(b);
    }
    // Now make the c nodes for storing the content
    for(var i = 0; i < refs_count; i++){
	var nc = base.createElement("c");
	if(i in content){
	    var node_list = content[i];
	    for(var se = 0; se < node_list.length; se++){
		nc.appendChild(node_list[se].cloneNode(true));
	    }
	}
	else{
	    var new_e = base.createElement("e");
	    new_e.appendChild(base.createTextNode(""));
	    nc.appendChild(new_e);
	}
	if(i+1 == first_ref) first = nc.lastChild;
	if(s['args']){
	    for(var a in (s['args'][i] || {})){
		nc.setAttribute(a,s['args'][i][a]);
	    }
	}
	if(i in lists){
	    var par = f;
	    if(i in content && content[i][0].nodeName == "l"){
		par.appendChild(content[i][0]);
	    }
	    else{
		for(var j = 0; j < lists[i]; j++){
		    var nl = base.createElement("l");
		    nl.setAttribute("s","1");
		    par.appendChild(nl);
		    par = nl;
		    if(j == lists[i]-1) nl.appendChild(nc);
		}
	    }
	}
	else f.appendChild(nc);
    }
    return {"f":f, "first":first};
}


module.exports = GuppySymbols;

},{}],9:[function(require,module,exports){
var GuppyUtils = {};

GuppyUtils.CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.TEMP_SMALL_CARET = "\\cursor{0.7ex}"
GuppyUtils.TEMP_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_CARET = "\\cursor{0.7ex}"
GuppyUtils.SEL_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_SEL_CARET = "\\cursor{0.7ex}"
GuppyUtils.SEL_COLOR = "red"

GuppyUtils.is_blank = function(n){
    return n.firstChild == null || n.firstChild.nodeValue == '';
}

GuppyUtils.get_length = function(n){
    if(GuppyUtils.is_blank(n) || n.nodeName == 'f') return 0
    return n.firstChild.nodeValue.length;
}

GuppyUtils.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return GuppyUtils.path_to(n.parentNode)+"_"+name+""+ns;
}

GuppyUtils.is_text = function(nn){
    return nn.parentNode.hasAttribute("mode") && (nn.parentNode.getAttribute("mode") == "text" || nn.parentNode.getAttribute("mode") == "symbol");
}

GuppyUtils.is_symbol = function(nn){
    return nn.parentNode.getAttribute("mode") && nn.parentNode.getAttribute("mode") == "symbol";
}

GuppyUtils.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes"){
	    return true;
	}
	n = n.parentNode
	while(n != null && n.nodeName != 'c')
	    n = n.parentNode;
    }
    return false;
}

module.exports = GuppyUtils;

},{}]},{},[3])(3)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
